// Created by Microsoft (R) C/C++ Compiler Version 14.00.24215.1 (6cc3f1eb).
//
// c:\femcon2017\femcon\debug\femap.tli
//
// Wrapper implementations for type library C:\Program Files\Siemens\FEMAPv114\femap.tlb
// compiler-generated file created 11/20/17 at 12:46:29 - DO NOT EDIT!


//
// dispinterface IRead wrapper method implementations
//

#pragma implementation_key(1)
inline _bstr_t femap::IRead::Field ( int fieldID ) {
    BSTR _result = 0;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_BSTR, (void*)&_result, 
        L"\x0003", fieldID);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2)
inline int femap::IRead::IntField ( int fieldID, int defValue ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", fieldID, defValue);
    return _result;
}

#pragma implementation_key(3)
inline double femap::IRead::RealField ( int fieldID, double defValue ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003\x0005", fieldID, defValue);
    return _result;
}

#pragma implementation_key(4)
inline VARIANT_BOOL femap::IRead::BoolField ( int fieldID, VARIANT_BOOL defValue ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003\x000b", fieldID, defValue);
    return _result;
}

#pragma implementation_key(5)
inline enum femap::zReturnCode femap::IRead::Open ( _bstr_t filename, int maxLineLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)filename, maxLineLength);
    return _result;
}

#pragma implementation_key(6)
inline enum femap::zReturnCode femap::IRead::Close ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7)
inline enum femap::zReturnCode femap::IRead::Read ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8)
inline enum femap::zReturnCode femap::IRead::Skipped ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9)
inline enum femap::zReturnCode femap::IRead::AtEOF ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(10)
inline int femap::IRead::Position ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(11)
inline enum femap::zReturnCode femap::IRead::Jump ( int jumpto ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", jumpto);
    return _result;
}

#pragma implementation_key(12)
inline enum femap::zReturnCode femap::IRead::ShowStatus ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(13)
inline enum femap::zReturnCode femap::IRead::SetNoBlankLines ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(14)
inline enum femap::zReturnCode femap::IRead::SetNoShortLines ( VARIANT_BOOL on, int minLineLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", on, minLineLength);
    return _result;
}

#pragma implementation_key(15)
inline enum femap::zReturnCode femap::IRead::SetTrimSpace ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(16)
inline enum femap::zReturnCode femap::IRead::SetTrimEndSpace ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(17)
inline enum femap::zReturnCode femap::IRead::SetTrimFront ( VARIANT_BOOL on, int numChar ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", on, numChar);
    return _result;
}

#pragma implementation_key(18)
inline enum femap::zReturnCode femap::IRead::SetUppercase ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(19)
inline enum femap::zReturnCode femap::IRead::SetSkip ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(20)
inline enum femap::zReturnCode femap::IRead::SetSearch ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(21)
inline enum femap::zReturnCode femap::IRead::SetSearchString ( _bstr_t s, _bstr_t sor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)s, (BSTR)sor);
    return _result;
}

#pragma implementation_key(22)
inline enum femap::zReturnCode femap::IRead::SetFormFeed ( VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on);
    return _result;
}

#pragma implementation_key(23)
inline enum femap::zReturnCode femap::IRead::SetSkipAfterSearch ( int lines ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", lines);
    return _result;
}

#pragma implementation_key(24)
inline enum femap::zReturnCode femap::IRead::SetTabSize ( int tabsize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", tabsize);
    return _result;
}

#pragma implementation_key(25)
inline enum femap::zReturnCode femap::IRead::LineInit ( int maxLineLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", maxLineLength);
    return _result;
}

#pragma implementation_key(26)
inline enum femap::zReturnCode femap::IRead::Reparse ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(27)
inline enum femap::zReturnCode femap::IRead::FixedFormat ( int numField, const _variant_t & width ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", numField, &width);
    return _result;
}

#pragma implementation_key(28)
inline enum femap::zReturnCode femap::IRead::SetFreeFormat ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(29)
inline enum femap::zReturnCode femap::IRead::SetFixedFormat ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(30)
inline enum femap::zReturnCode femap::IRead::SetAutoFormat ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(31)
inline enum femap::zReturnCode femap::IRead::JumpToEnd ( int jumpto ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", jumpto);
    return _result;
}

#pragma implementation_key(32)
inline enum femap::zReturnCode femap::IRead::Size ( __int64 * nSize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nSize);
    return _result;
}

#pragma implementation_key(33)
inline enum femap::zReturnCode femap::IRead::TimeCreated ( __int64 * nTime ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nTime);
    return _result;
}

#pragma implementation_key(34)
inline enum femap::zReturnCode femap::IRead::TimeWritten ( __int64 * nTime ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nTime);
    return _result;
}

#pragma implementation_key(35)
inline enum femap::zReturnCode femap::IRead::TimeAccessed ( __int64 * nTime ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nTime);
    return _result;
}

#pragma implementation_key(36)
inline enum femap::zReturnCode femap::IRead::ClearSearch ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(37)
inline _bstr_t femap::IRead::GetLine ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(38)
inline void femap::IRead::PutLine ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(39)
inline VARIANT_BOOL femap::IRead::GetTruncated ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(40)
inline void femap::IRead::PutTruncated ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(41)
inline VARIANT_BOOL femap::IRead::GetShared ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(42)
inline void femap::IRead::PutShared ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(43)
inline VARIANT_BOOL femap::IRead::GetExclusive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(44)
inline void femap::IRead::PutExclusive ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(45)
inline VARIANT_BOOL femap::IRead::GetSharedDelete ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(46)
inline void femap::IRead::PutSharedDelete ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

//
// dispinterface ISet wrapper method implementations
//

#pragma implementation_key(47)
inline enum femap::zReturnCode femap::ISet::SetDeveloperID ( int DeveloperID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5208, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", DeveloperID);
    return _result;
}

#pragma implementation_key(48)
inline enum femap::zReturnCode femap::ISet::GetSavedSet ( int nSavedID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5209, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSavedID, bClear);
    return _result;
}

#pragma implementation_key(49)
inline enum femap::zReturnCode femap::ISet::GetAllSavedSets ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x520a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(50)
inline enum femap::zReturnCode femap::ISet::PutSavedSet ( int nPutID, enum zDataType entityTYPE, int * nSavedID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x520b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nPutID, entityTYPE, nSavedID);
    return _result;
}

#pragma implementation_key(51)
inline enum femap::zReturnCode femap::ISet::DeleteSavedSet ( int nSavedID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x520c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSavedID);
    return _result;
}

#pragma implementation_key(52)
inline enum femap::zReturnCode femap::ISet::DeleteAllSavedSets ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x520d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(53)
inline enum femap::zReturnCode femap::ISet::DeleteOtherSavedSets ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x520e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(54)
inline enum femap::zReturnCode femap::ISet::ResetSavedSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x520f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(55)
inline int femap::ISet::NextSavedSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5210, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(56)
inline int femap::ISet::EmptySavedSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5211, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(57)
inline int femap::ISet::CountSavedSets ( int * pnAllSets ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5212, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", pnAllSets);
    return _result;
}

#pragma implementation_key(58)
inline enum femap::zReturnCode femap::ISet::AddToSavedSet ( int nSavedID, enum zDataType entityTYPE, int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5213, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nSavedID, entityTYPE, entID);
    return _result;
}

#pragma implementation_key(59)
inline enum femap::zReturnCode femap::ISet::AddSetToSavedSet ( int nSavedID, enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5214, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSavedID, entityTYPE);
    return _result;
}

#pragma implementation_key(60)
inline enum femap::zReturnCode femap::ISet::RemoveFromSavedSet ( int nSavedID, enum zDataType entityTYPE, int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5215, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nSavedID, entityTYPE, entID);
    return _result;
}

#pragma implementation_key(61)
inline enum femap::zReturnCode femap::ISet::RemoveSetFromSavedSet ( int nSavedID, enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5216, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSavedID, entityTYPE);
    return _result;
}

#pragma implementation_key(62)
inline enum femap::zReturnCode femap::ISet::Add ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(63)
inline enum femap::zReturnCode femap::ISet::AddRange ( int startID, int stopID, int increment ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", startID, stopID, increment);
    return _result;
}

#pragma implementation_key(64)
inline enum femap::zReturnCode femap::ISet::Reload ( int oldID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", oldID);
    return _result;
}

#pragma implementation_key(65)
inline enum femap::zReturnCode femap::ISet::Remove ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(66)
inline enum femap::zReturnCode femap::ISet::IsAdded ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(67)
inline enum femap::zReturnCode femap::ISet::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(68)
inline int femap::ISet::Next ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(69)
inline enum femap::zReturnCode femap::ISet::AddSet ( int addID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", addID);
    return _result;
}

#pragma implementation_key(70)
inline enum femap::zReturnCode femap::ISet::RemoveSet ( int addID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", addID);
    return _result;
}

#pragma implementation_key(71)
inline enum femap::zReturnCode femap::ISet::AddCommon ( int set1, int set2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", set1, set2);
    return _result;
}

#pragma implementation_key(72)
inline enum femap::zReturnCode femap::ISet::Copy ( int origID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", origID);
    return _result;
}

#pragma implementation_key(73)
inline int femap::ISet::Count ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(74)
inline enum femap::zReturnCode femap::ISet::AddAll ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(75)
inline enum femap::zReturnCode femap::ISet::Select ( enum zDataType entityTYPE, VARIANT_BOOL clear, _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0008", entityTYPE, clear, (BSTR)title);
    return _result;
}

#pragma implementation_key(76)
inline enum femap::zReturnCode femap::ISet::SelectID ( enum zDataType entityTYPE, _bstr_t title, int * selID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x4003", entityTYPE, (BSTR)title, selID);
    return _result;
}

#pragma implementation_key(77)
inline enum femap::zReturnCode femap::ISet::AddGroup ( enum zDataType entityTYPE, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, groupID);
    return _result;
}

#pragma implementation_key(78)
inline enum femap::zReturnCode femap::ISet::AddRule ( int ID, enum zGroupDefinitionType ruleID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", ID, ruleID);
    return _result;
}

#pragma implementation_key(79)
inline enum femap::zReturnCode femap::ISet::AddSetRule ( int addID, enum zGroupDefinitionType ruleID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", addID, ruleID);
    return _result;
}

#pragma implementation_key(80)
inline enum femap::zReturnCode femap::ISet::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(81)
inline enum femap::zReturnCode femap::ISet::DeleteAll ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(82)
inline int femap::ISet::First ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(83)
inline int femap::ISet::Last ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(84)
inline enum femap::zReturnCode femap::ISet::RemoveRange ( int startID, int stopID, int increment ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", startID, stopID, increment);
    return _result;
}

#pragma implementation_key(85)
inline enum femap::zReturnCode femap::ISet::CopyToClipboard ( VARIANT_BOOL bAsList ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bAsList);
    return _result;
}

#pragma implementation_key(86)
inline enum femap::zReturnCode femap::ISet::AddEntitiesOnLayer ( int laySET, enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", laySET, entityTYPE);
    return _result;
}

#pragma implementation_key(87)
inline enum femap::zReturnCode femap::ISet::GetArray ( int * numID, VARIANT * arrayID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numID, arrayID);
    return _result;
}

#pragma implementation_key(88)
inline enum femap::zReturnCode femap::ISet::AddArray ( int numID, const _variant_t & arrayID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", numID, &arrayID);
    return _result;
}

#pragma implementation_key(89)
inline enum femap::zReturnCode femap::ISet::Match ( int otherID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", otherID);
    return _result;
}

#pragma implementation_key(90)
inline enum femap::zReturnCode femap::ISet::SelectOutputVectorID ( _bstr_t title, int outputSetID, enum zOutputType limitOutputType, enum zOutputComplex limitComplex, enum zDataType limitToEntity, VARIANT_BOOL allowCorner, int * selID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003\x0003\x000b\x4003", (BSTR)title, outputSetID, limitOutputType, limitComplex, limitToEntity, allowCorner, selID);
    return _result;
}

#pragma implementation_key(91)
inline int femap::ISet::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(92)
inline enum femap::zReturnCode femap::ISet::SelectMultiID ( enum zDataType entityTYPE, int entitySET, _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", entityTYPE, entitySET, (BSTR)title);
    return _result;
}

#pragma implementation_key(93)
inline int femap::ISet::IsEmpty ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(94)
inline enum femap::zReturnCode femap::ISet::AddAllExcept ( enum zDataType entityTYPE, int exceptSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, exceptSET);
    return _result;
}

#pragma implementation_key(95)
inline enum femap::zReturnCode femap::ISet::RemoveNotCommon ( int set1 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", set1);
    return _result;
}

#pragma implementation_key(96)
inline enum femap::zReturnCode femap::ISet::RemoveNotCommonToGroup ( enum zDataType entityTYPE, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, groupID);
    return _result;
}

#pragma implementation_key(97)
inline enum femap::zReturnCode femap::ISet::RemoveGroup ( enum zDataType entityTYPE, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, groupID);
    return _result;
}

#pragma implementation_key(98)
inline enum femap::zReturnCode femap::ISet::Debug ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(99)
inline enum femap::zReturnCode femap::ISet::IsSetAdded ( int set1 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", set1);
    return _result;
}

#pragma implementation_key(100)
inline enum femap::zReturnCode femap::ISet::ConvertToAllSurfaces ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(101)
inline enum femap::zReturnCode femap::ISet::ConvertToBoundarySurfaces ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(102)
inline enum femap::zReturnCode femap::ISet::ConvertToBoundarySurfacesOnly ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(103)
inline enum femap::zReturnCode femap::ISet::ConvertToInternalSurfaces ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(104)
inline enum femap::zReturnCode femap::ISet::ConvertToAllCurves ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(105)
inline enum femap::zReturnCode femap::ISet::ConvertToCombinedCurves ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(106)
inline enum femap::zReturnCode femap::ISet::ConvertToCombinedCurvesOnly ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(107)
inline enum femap::zReturnCode femap::ISet::ConvertToInternalCurves ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(108)
inline enum femap::zReturnCode femap::ISet::IsArrayAdded ( int numID, const _variant_t & arrayID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", numID, &arrayID);
    return _result;
}

#pragma implementation_key(109)
inline enum femap::zReturnCode femap::ISet::HasCommon ( int set1 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", set1);
    return _result;
}

#pragma implementation_key(110)
inline enum femap::zReturnCode femap::ISet::RemoveArray ( int numID, const _variant_t & arrayID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", numID, &arrayID);
    return _result;
}

#pragma implementation_key(111)
inline enum femap::zReturnCode femap::ISet::AddCoordinate ( enum zDataType entityTYPE, int nCSysID, const _variant_t & vbXYZ, const _variant_t & vnMode, const _variant_t & vdMin, const _variant_t & vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x000c", entityTYPE, nCSysID, &vbXYZ, &vnMode, &vdMin, &vdMax);
    return _result;
}

#pragma implementation_key(112)
inline enum femap::zReturnCode femap::ISet::AddAroundPoint ( enum zDataType entityTYPE, const _variant_t & vBase, enum zCoordPick nMode, double dMin, double vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0005\x0005", entityTYPE, &vBase, nMode, dMin, vdMax);
    return _result;
}

#pragma implementation_key(113)
inline enum femap::zReturnCode femap::ISet::AddAroundVector ( enum zDataType entityTYPE, const _variant_t & vBase, const _variant_t & vVec, enum zCoordPick nMode, double dMin, double vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x0003\x0005\x0005", entityTYPE, &vBase, &vVec, nMode, dMin, vdMax);
    return _result;
}

#pragma implementation_key(114)
inline enum femap::zReturnCode femap::ISet::AddAroundPlane ( enum zDataType entityTYPE, const _variant_t & vBase, const _variant_t & vVec, enum zCoordPick nMode, double dMin, double vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x0003\x0005\x0005", entityTYPE, &vBase, &vVec, nMode, dMin, vdMax);
    return _result;
}

#pragma implementation_key(115)
inline enum femap::zReturnCode femap::ISet::AddNodesOnGeometry ( enum zDataType geomTYPE, int geomID, VARIANT_BOOL bClear, VARIANT_BOOL bFullTree, VARIANT_BOOL bBoundaryOnly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x000b", geomTYPE, geomID, bClear, bFullTree, bBoundaryOnly);
    return _result;
}

#pragma implementation_key(116)
inline enum femap::zReturnCode femap::ISet::SelectList ( int nNumEntity, enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nNumEntity, entityTYPE);
    return _result;
}

#pragma implementation_key(117)
inline enum femap::zReturnCode femap::ISet::AddAllTitle ( enum zDataType entityTYPE, int nSetID, _bstr_t sFind ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", entityTYPE, nSetID, (BSTR)sFind);
    return _result;
}

#pragma implementation_key(118)
inline enum femap::zReturnCode femap::ISet::AddAllColor ( enum zDataType entityTYPE, int nSetID, int nColor, enum zColorMatch nColorMatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e58, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", entityTYPE, nSetID, nColor, nColorMatch);
    return _result;
}

#pragma implementation_key(119)
inline enum femap::zReturnCode femap::ISet::AddMidsideNodes ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(120)
inline enum femap::zReturnCode femap::ISet::RemoveInternalCurves ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(121)
inline enum femap::zReturnCode femap::ISet::SelectIDInSet ( enum zDataType entityTYPE, _bstr_t title, int nInSetID, int * selID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x0003\x4003", entityTYPE, (BSTR)title, nInSetID, selID);
    return _result;
}

#pragma implementation_key(122)
inline enum femap::zReturnCode femap::ISet::AddNewRemoveCommonSet ( int addID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", addID);
    return _result;
}

#pragma implementation_key(123)
inline int femap::ISet::CountCommon ( int set1 ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e5d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", set1);
    return _result;
}

#pragma implementation_key(124)
inline int femap::ISet::CountNotCommon ( int set1 ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e5e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", set1);
    return _result;
}

#pragma implementation_key(125)
inline enum femap::zReturnCode femap::ISet::HasNotCommon ( int set1 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", set1);
    return _result;
}

#pragma implementation_key(126)
inline int femap::ISet::NextAfter ( int nStartID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nStartID);
    return _result;
}

#pragma implementation_key(127)
inline int femap::ISet::Prev ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(128)
inline int femap::ISet::PrevBefore ( int nStartID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nStartID);
    return _result;
}

#pragma implementation_key(129)
inline int femap::ISet::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e63, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(130)
inline int femap::ISet::EmptyBlock ( int nStartID, int nCount, int * nFirstEmptyID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e64, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nStartID, nCount, nFirstEmptyID);
    return _result;
}

#pragma implementation_key(131)
inline int femap::ISet::NextEmptyAfter ( int nStartID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e65, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nStartID);
    return _result;
}

#pragma implementation_key(132)
inline int femap::ISet::AddAllInRange ( enum zDataType entityTYPE, int startID, int stopID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e66, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, startID, stopID);
    return _result;
}

#pragma implementation_key(133)
inline enum femap::zReturnCode femap::ISet::Reload2 ( int oldID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e67, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", oldID);
    return _result;
}

#pragma implementation_key(134)
inline enum femap::zReturnCode femap::ISet::AddAllSavedSetIDs ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e68, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(135)
inline enum femap::zReturnCode femap::ISet::AddCoordinate2 ( enum zDataType entityTYPE, int nCSysID, const _variant_t & vbXYZ, const _variant_t & vnMode, const _variant_t & vdMin, const _variant_t & vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e69, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x000c", entityTYPE, nCSysID, &vbXYZ, &vnMode, &vdMin, &vdMax);
    return _result;
}

#pragma implementation_key(136)
inline enum femap::zReturnCode femap::ISet::AddAroundPoint2 ( enum zDataType entityTYPE, const _variant_t & vBase, enum zCoordPick nMode, double dMin, double vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0005\x0005", entityTYPE, &vBase, nMode, dMin, vdMax);
    return _result;
}

#pragma implementation_key(137)
inline enum femap::zReturnCode femap::ISet::AddAroundVector2 ( enum zDataType entityTYPE, const _variant_t & vBase, const _variant_t & vVec, enum zCoordPick nMode, double dMin, double vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x0003\x0005\x0005", entityTYPE, &vBase, &vVec, nMode, dMin, vdMax);
    return _result;
}

#pragma implementation_key(138)
inline enum femap::zReturnCode femap::ISet::AddAroundPlane2 ( enum zDataType entityTYPE, const _variant_t & vBase, const _variant_t & vVec, enum zCoordPick nMode, double dMin, double vdMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x0003\x0005\x0005", entityTYPE, &vBase, &vVec, nMode, dMin, vdMax);
    return _result;
}

#pragma implementation_key(139)
inline enum femap::zReturnCode femap::ISet::Show ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(140)
inline enum femap::zReturnCode femap::ISet::ShowAutoscale ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(141)
inline enum femap::zReturnCode femap::ISet::AddSolidElementsAlongVector ( const _variant_t & p1, const _variant_t & p2, int elemSET, VARIANT_BOOL bRequireIntersect, VARIANT_BOOL bInfiniteVector, VARIANT_BOOL bDirectionalVector ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x0003\x000b\x000b\x000b", &p1, &p2, elemSET, bRequireIntersect, bInfiniteVector, bDirectionalVector);
    return _result;
}

#pragma implementation_key(142)
inline enum femap::zReturnCode femap::ISet::AddVisible ( int nVuID, enum zDataType entityTYPE, VARIANT_BOOL bUseViewDrawEntityOption ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e70, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nVuID, entityTYPE, bUseViewDrawEntityOption);
    return _result;
}

#pragma implementation_key(143)
inline enum femap::zReturnCode femap::ISet::AddAllConnectedElements ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e71, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(144)
inline enum femap::zReturnCode femap::ISet::AddConnectedFillets ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e72, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(145)
inline enum femap::zReturnCode femap::ISet::AddTangentSurfaces ( double dTol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e73, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005", dTol);
    return _result;
}

#pragma implementation_key(146)
inline enum femap::zReturnCode femap::ISet::AddConstrained ( VARIANT_BOOL bInAnySet, int nSetID, VARIANT_BOOL bExpandBC, enum zDataType enOnType, enum zMatchOpt enMatch, VARIANT_BOOL bDOF1, VARIANT_BOOL bDOF2, VARIANT_BOOL bDOF3, VARIANT_BOOL bDOF4, VARIANT_BOOL bDOF5, VARIANT_BOOL bDOF6 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e74, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x000b\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x000b", bInAnySet, nSetID, bExpandBC, enOnType, enMatch, bDOF1, bDOF2, bDOF3, bDOF4, bDOF5, bDOF6);
    return _result;
}

#pragma implementation_key(147)
inline enum femap::zReturnCode femap::ISet::AddLoaded ( VARIANT_BOOL bInAnySet, int nSetID, VARIANT_BOOL bExpandLoad, enum zLoadType enLoadType, enum zRangeOpt enRangeOpt, double dMin, double dMax ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e75, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x000b\x0003\x0003\x0005\x0005", bInAnySet, nSetID, bExpandLoad, enLoadType, enRangeOpt, dMin, dMax);
    return _result;
}

#pragma implementation_key(148)
inline enum femap::zReturnCode femap::ISet::RemoveRule ( int ID, enum zGroupDefinitionType ruleID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e76, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", ID, ruleID);
    return _result;
}

#pragma implementation_key(149)
inline enum femap::zReturnCode femap::ISet::RemoveSetRule ( int removeID, enum zGroupDefinitionType ruleID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e77, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", removeID, ruleID);
    return _result;
}

#pragma implementation_key(150)
inline enum femap::zReturnCode femap::ISet::AddConnectedElements ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e78, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(151)
inline enum femap::zReturnCode femap::ISet::AddComponentOutputVectors ( int nFromOutputSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e79, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nFromOutputSetID);
    return _result;
}

#pragma implementation_key(152)
inline enum femap::zReturnCode femap::ISet::AddSimilarOutputVectors ( int nFromOutputSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nFromOutputSetID);
    return _result;
}

#pragma implementation_key(153)
inline enum femap::zReturnCode femap::ISet::AddComplexOutputVectors ( int nFromOutputSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nFromOutputSetID);
    return _result;
}

#pragma implementation_key(154)
inline enum femap::zReturnCode femap::ISet::SelectIDWithNew ( enum zDataType entityTYPE, _bstr_t title, int * selID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x4003", entityTYPE, (BSTR)title, selID);
    return _result;
}

#pragma implementation_key(155)
inline int femap::ISet::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(156)
inline void femap::ISet::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(157)
inline VARIANT_BOOL femap::ISet::GetSave ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(158)
inline void femap::ISet::PutSave ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(159)
inline int femap::ISet::GetCurrentID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(160)
inline void femap::ISet::PutCurrentID ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

//
// dispinterface ISortSet wrapper method implementations
//

#pragma implementation_key(161)
inline enum femap::zReturnCode femap::ISortSet::Add ( int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nID);
    return _result;
}

#pragma implementation_key(162)
inline enum femap::zReturnCode femap::ISortSet::AddReal ( int nID, double dReal1, double dReal2, double dReal3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005", nID, dReal1, dReal2, dReal3);
    return _result;
}

#pragma implementation_key(163)
inline enum femap::zReturnCode femap::ISortSet::AddInt ( int nID, int dInt1, int dInt2, int dInt3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nID, dInt1, dInt2, dInt3);
    return _result;
}

#pragma implementation_key(164)
inline enum femap::zReturnCode femap::ISortSet::AddAll ( int nID, double dReal1, double dReal2, double dReal3, int dInt1, int dInt2, int dInt3, enum zDataType eDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0003\x0003\x0003\x0003", nID, dReal1, dReal2, dReal3, dInt1, dInt2, dInt3, eDataType);
    return _result;
}

#pragma implementation_key(165)
inline enum femap::zReturnCode femap::ISortSet::SetData ( int nID, double dReal1, double dReal2, double dReal3, int dInt1, int dInt2, int dInt3, enum zDataType eDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0003\x0003\x0003\x0003", nID, dReal1, dReal2, dReal3, dInt1, dInt2, dInt3, eDataType);
    return _result;
}

#pragma implementation_key(166)
inline enum femap::zReturnCode femap::ISortSet::GetData ( int nID, double * dReal1, double * dReal2, double * dReal3, int * dInt1, int * dInt2, int * dInt3, enum zDataType * eDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003\x4003\x4003", nID, dReal1, dReal2, dReal3, dInt1, dInt2, dInt3, eDataType);
    return _result;
}

#pragma implementation_key(167)
inline enum femap::zReturnCode femap::ISortSet::Find ( int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nID);
    return _result;
}

#pragma implementation_key(168)
inline enum femap::zReturnCode femap::ISortSet::Remove ( int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nID);
    return _result;
}

#pragma implementation_key(169)
inline enum femap::zReturnCode femap::ISortSet::IsAdded ( int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nID);
    return _result;
}

#pragma implementation_key(170)
inline enum femap::zReturnCode femap::ISortSet::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(171)
inline int femap::ISortSet::Next ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(172)
inline int femap::ISortSet::Prev ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(173)
inline int femap::ISortSet::Count ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(174)
inline enum femap::zReturnCode femap::ISortSet::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(175)
inline int femap::ISortSet::First ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(176)
inline int femap::ISortSet::Last ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(177)
inline enum femap::zReturnCode femap::ISortSet::Sort ( VARIANT_BOOL bSortReal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bSortReal);
    return _result;
}

#pragma implementation_key(178)
inline enum femap::zReturnCode femap::ISortSet::Select ( enum zDataType entityTYPE, VARIANT_BOOL Reload, _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0008", entityTYPE, Reload, (BSTR)title);
    return _result;
}

#pragma implementation_key(179)
inline enum femap::zReturnCode femap::ISortSet::SelectID ( enum zDataType entityTYPE, _bstr_t title, int * selID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x4003", entityTYPE, (BSTR)title, selID);
    return _result;
}

#pragma implementation_key(180)
inline int femap::ISortSet::Current ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(181)
inline enum femap::zReturnCode femap::ISortSet::RemoveSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(182)
inline enum femap::zReturnCode femap::ISortSet::ConvertToBoundarySurfaces ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(183)
inline enum femap::zReturnCode femap::ISortSet::SelectList ( int nNumEntity, enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nNumEntity, entityTYPE);
    return _result;
}

#pragma implementation_key(184)
inline enum femap::zReturnCode femap::ISortSet::SortRemoveDuplicates ( VARIANT_BOOL bSortReal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bSortReal);
    return _result;
}

#pragma implementation_key(185)
inline int femap::ISortSet::IsEmpty ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(186)
inline enum femap::zReturnCode femap::ISortSet::AddAroundPoint ( enum zDataType entityTYPE, int nSetID, const _variant_t & vBase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", entityTYPE, nSetID, &vBase);
    return _result;
}

#pragma implementation_key(187)
inline enum femap::zReturnCode femap::ISortSet::AddAroundVector ( enum zDataType entityTYPE, int nSetID, const _variant_t & vBase, const _variant_t & vDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", entityTYPE, nSetID, &vBase, &vDir);
    return _result;
}

#pragma implementation_key(188)
inline enum femap::zReturnCode femap::ISortSet::AddAroundPlane ( enum zDataType entityTYPE, int nSetID, const _variant_t & vBase, const _variant_t & vDir, VARIANT_BOOL bAbs ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000b", entityTYPE, nSetID, &vBase, &vDir, bAbs);
    return _result;
}

#pragma implementation_key(189)
inline enum femap::zReturnCode femap::ISortSet::SetReal ( int nID, double dReal1, double dReal2, double dReal3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005", nID, dReal1, dReal2, dReal3);
    return _result;
}

#pragma implementation_key(190)
inline enum femap::zReturnCode femap::ISortSet::GetReal ( int nID, double * dReal1, double * dReal2, double * dReal3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005", nID, dReal1, dReal2, dReal3);
    return _result;
}

#pragma implementation_key(191)
inline enum femap::zReturnCode femap::ISortSet::SetInt ( int nID, int dInt1, int dInt2, int dInt3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nID, dInt1, dInt2, dInt3);
    return _result;
}

#pragma implementation_key(192)
inline enum femap::zReturnCode femap::ISortSet::GetInt ( int nID, int * dInt1, int * dInt2, int * dInt3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x4003", nID, dInt1, dInt2, dInt3);
    return _result;
}

#pragma implementation_key(193)
inline enum femap::zReturnCode femap::ISortSet::SetDataType ( int nID, enum zDataType eDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nID, eDataType);
    return _result;
}

#pragma implementation_key(194)
inline enum femap::zReturnCode femap::ISortSet::GetDataType ( int nID, enum zDataType * eDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nID, eDataType);
    return _result;
}

#pragma implementation_key(195)
inline enum femap::zReturnCode femap::ISortSet::GetSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(196)
inline int femap::ISortSet::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(197)
inline void femap::ISortSet::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(198)
inline double femap::ISortSet::GetdReal1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(199)
inline void femap::ISortSet::PutdReal1 ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(200)
inline double femap::ISortSet::GetdReal2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(201)
inline void femap::ISortSet::PutdReal2 ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(202)
inline double femap::ISortSet::GetdReal3 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(203)
inline void femap::ISortSet::PutdReal3 ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(204)
inline int femap::ISortSet::GetnInt1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(205)
inline void femap::ISortSet::PutnInt1 ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(206)
inline int femap::ISortSet::GetnInt2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(207)
inline void femap::ISortSet::PutnInt2 ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(208)
inline int femap::ISortSet::GetnInt3 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(209)
inline void femap::ISortSet::PutnInt3 ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(210)
inline enum femap::zDataType femap::ISortSet::GeteDataType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(211)
inline void femap::ISortSet::PuteDataType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

//
// dispinterface IMapData wrapper method implementations
//

#pragma implementation_key(212)
inline enum femap::zReturnCode femap::IMapData::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(213)
inline enum femap::zReturnCode femap::IMapData::Initialize ( int nCount ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nCount);
    return _result;
}

#pragma implementation_key(214)
inline int femap::IMapData::Count ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(215)
inline enum femap::zReturnCode femap::IMapData::GetIDs ( int nIDSet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nIDSet);
    return _result;
}

#pragma implementation_key(216)
inline enum femap::zReturnCode femap::IMapData::Remove ( int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nID);
    return _result;
}

#pragma implementation_key(217)
inline enum femap::zReturnCode femap::IMapData::RemoveAll ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(218)
inline int femap::IMapData::DefineReal ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(219)
inline int femap::IMapData::DefineInt ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(220)
inline int femap::IMapData::DefineBool ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(221)
inline int femap::IMapData::DefineString ( int nLength ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nLength);
    return _result;
}

#pragma implementation_key(222)
inline int femap::IMapData::DefineVariant ( const _variant_t & vVar ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c", &vVar);
    return _result;
}

#pragma implementation_key(223)
inline enum femap::zReturnCode femap::IMapData::SetReal ( int nIndex, int nID, double dVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nIndex, nID, dVal);
    return _result;
}

#pragma implementation_key(224)
inline enum femap::zReturnCode femap::IMapData::SetInt ( int nIndex, int nID, int nVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nIndex, nID, nVal);
    return _result;
}

#pragma implementation_key(225)
inline enum femap::zReturnCode femap::IMapData::SetBool ( int nIndex, int nID, VARIANT_BOOL bVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nIndex, nID, bVal);
    return _result;
}

#pragma implementation_key(226)
inline enum femap::zReturnCode femap::IMapData::SetString ( int nIndex, int nID, _bstr_t sVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", nIndex, nID, (BSTR)sVal);
    return _result;
}

#pragma implementation_key(227)
inline enum femap::zReturnCode femap::IMapData::SetVariant ( int nIndex, int nID, const _variant_t & vVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", nIndex, nID, &vVal);
    return _result;
}

#pragma implementation_key(228)
inline enum femap::zReturnCode femap::IMapData::GetReal ( int nIndex, int nID, double * pdVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4005", nIndex, nID, pdVal);
    return _result;
}

#pragma implementation_key(229)
inline enum femap::zReturnCode femap::IMapData::GetInt ( int nIndex, int nID, int * pnVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nIndex, nID, pnVal);
    return _result;
}

#pragma implementation_key(230)
inline enum femap::zReturnCode femap::IMapData::GetBool ( int nIndex, int nID, VARIANT_BOOL * pbVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x400b", nIndex, nID, pbVal);
    return _result;
}

#pragma implementation_key(231)
inline enum femap::zReturnCode femap::IMapData::GetString ( int nIndex, int nID, BSTR * psVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008", nIndex, nID, psVal);
    return _result;
}

#pragma implementation_key(232)
inline enum femap::zReturnCode femap::IMapData::GetVariant ( int nIndex, int nID, const _variant_t & vVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", nIndex, nID, &vVal);
    return _result;
}

//
// dispinterface ITrackData wrapper method implementations
//

#pragma implementation_key(233)
inline enum femap::zReturnCode femap::ITrackData::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(234)
inline enum femap::zReturnCode femap::ITrackData::Start ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(235)
inline enum femap::zReturnCode femap::ITrackData::StartGeometry ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(236)
inline enum femap::zReturnCode femap::ITrackData::StartMesh ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(237)
inline enum femap::zReturnCode femap::ITrackData::Stop ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(238)
inline enum femap::zReturnCode femap::ITrackData::StopAll ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(239)
inline enum femap::zReturnCode femap::ITrackData::Created ( enum zDataType entityTYPE, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", entityTYPE, nSetID, bClear);
    return _result;
}

#pragma implementation_key(240)
inline enum femap::zReturnCode femap::ITrackData::Deleted ( enum zDataType entityTYPE, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", entityTYPE, nSetID, bClear);
    return _result;
}

//
// dispinterface IResults wrapper method implementations
//

#pragma implementation_key(241)
inline enum femap::zReturnCode femap::IResults::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(242)
inline enum femap::zReturnCode femap::IResults::GetModel ( __int64 * nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nModelID);
    return _result;
}

#pragma implementation_key(243)
inline enum femap::zReturnCode femap::IResults::SetModel ( __int64 nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014", nModelID);
    return _result;
}

#pragma implementation_key(244)
inline int femap::IResults::NumberOfRows ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(245)
inline int femap::IResults::NumberOfColumns ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(246)
inline enum femap::zReturnCode femap::IResults::DataLocation ( enum zDataType * nDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", nDataType);
    return _result;
}

#pragma implementation_key(247)
inline enum femap::zReturnCode femap::IResults::FindColumn ( int nSetID, int nVectorID, int * nColumnIndex ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nSetID, nVectorID, nColumnIndex);
    return _result;
}

#pragma implementation_key(248)
inline enum femap::zReturnCode femap::IResults::IsPopulated ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(249)
inline enum femap::zReturnCode femap::IResults::Populate ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(250)
inline enum femap::zReturnCode femap::IResults::AddColumn ( int nSetID, int nVectorID, VARIANT_BOOL bAddComponentsCorners, int * nNumColumnsAdded, VARIANT * nColumnIndices ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x4003\x400c", nSetID, nVectorID, bAddComponentsCorners, nNumColumnsAdded, nColumnIndices);
    return _result;
}

#pragma implementation_key(251)
inline enum femap::zReturnCode femap::IResults::AddEmptyColumns ( int nNumberOfColumns, VARIANT * nColumnIndices ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nNumberOfColumns, nColumnIndices);
    return _result;
}

#pragma implementation_key(252)
inline enum femap::zReturnCode femap::IResults::AddConversionColumn ( int nSetID, int nVectorID, enum zResultsConvert nConversionApproach, int * nColumnIndex ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x4003", nSetID, nVectorID, nConversionApproach, nColumnIndex);
    return _result;
}

#pragma implementation_key(253)
inline enum femap::zReturnCode femap::IResults::GetColumnTitle ( int nColumnIndex, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", nColumnIndex, sTitle);
    return _result;
}

#pragma implementation_key(254)
inline enum femap::zReturnCode femap::IResults::GetColumnVector ( int nColumnIndex, int * pnSetID, int * pnVectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003", nColumnIndex, pnSetID, pnVectorID);
    return _result;
}

#pragma implementation_key(255)
inline enum femap::zReturnCode femap::IResults::GetColumnMinMax ( int nColumnIndex, int nLimitToSet, int * pnMinID, int * pnMaxID, double * pdMinVal, double * pdMaxVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4003\x4005\x4005", nColumnIndex, nLimitToSet, pnMinID, pnMaxID, pdMinVal, pdMaxVal);
    return _result;
}

#pragma implementation_key(256)
inline enum femap::zReturnCode femap::IResults::SetTri3Orientation ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(257)
inline enum femap::zReturnCode femap::IResults::SetTri6Orientation ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(258)
inline enum femap::zReturnCode femap::IResults::SetQuad4Orientation ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(259)
inline enum femap::zReturnCode femap::IResults::SetQuad8Orientation ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(260)
inline enum femap::zReturnCode femap::IResults::SetSolidOrientation ( int nIsotropic, int nAnisotropic, int nHyperelastic ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nIsotropic, nAnisotropic, nHyperelastic);
    return _result;
}

#pragma implementation_key(261)
inline enum femap::zReturnCode femap::IResults::SetEngrShearStrain ( VARIANT_BOOL bEngrShearStrain ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bEngrShearStrain);
    return _result;
}

#pragma implementation_key(262)
inline enum femap::zReturnCode femap::IResults::SetNodalTransform ( enum zOutputDestination nTransformTo, int nCSysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nTransformTo, nCSysID);
    return _result;
}

#pragma implementation_key(263)
inline enum femap::zReturnCode femap::IResults::SetPlateTransform ( enum zOutputDestination nTransformTo, int nCSysID, int nCSysAxis, double dVecX, double dVecY, double dVecZ, double dToleranceAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0005\x0005\x0005\x0005", nTransformTo, nCSysID, nCSysAxis, dVecX, dVecY, dVecZ, dToleranceAngle);
    return _result;
}

#pragma implementation_key(264)
inline enum femap::zReturnCode femap::IResults::SetSolidTransform ( enum zOutputDestination nTransformTo, int nCSysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nTransformTo, nCSysID);
    return _result;
}

#pragma implementation_key(265)
inline enum femap::zReturnCode femap::IResults::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(266)
inline enum femap::zReturnCode femap::IResults::Next ( int nColumnIndex, int * pnID, double * pdVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4005", nColumnIndex, pnID, pdVal);
    return _result;
}

#pragma implementation_key(267)
inline enum femap::zReturnCode femap::IResults::GetValue ( int nID, int nColumnIndex, double * pdVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4005", nID, nColumnIndex, pdVal);
    return _result;
}

#pragma implementation_key(268)
inline enum femap::zReturnCode femap::IResults::GetInRow ( int nRowIndex, int nColumnIndex, int * pnID, double * pdVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4005", nRowIndex, nColumnIndex, pnID, pdVal);
    return _result;
}

#pragma implementation_key(269)
inline enum femap::zReturnCode femap::IResults::GetMultipleInRow ( int nRowIndex, int nNumberOfColumns, const _variant_t & nColumnIndices, int * pnID, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x4003\x400c", nRowIndex, nNumberOfColumns, &nColumnIndices, pnID, pdVals);
    return _result;
}

#pragma implementation_key(270)
inline enum femap::zReturnCode femap::IResults::SetValue ( int nID, int nColumnIndex, double dVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nID, nColumnIndex, dVal);
    return _result;
}

#pragma implementation_key(271)
inline enum femap::zReturnCode femap::IResults::SetInRow ( int nRowIndex, int nColumnIndex, double dVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nRowIndex, nColumnIndex, dVal);
    return _result;
}

#pragma implementation_key(272)
inline enum femap::zReturnCode femap::IResults::SetMultipleInRow ( int nRowIndex, int nNumberOfColumns, const _variant_t & nColumnIndices, const _variant_t & dVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", nRowIndex, nNumberOfColumns, &nColumnIndices, &dVals);
    return _result;
}

#pragma implementation_key(273)
inline enum femap::zReturnCode femap::IResults::DataNeeded ( enum zDataType nDataType, int nEntitySetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nDataType, nEntitySetID);
    return _result;
}

#pragma implementation_key(274)
inline enum femap::zReturnCode femap::IResults::GetRowByID ( int nID, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nID, pdVals);
    return _result;
}

#pragma implementation_key(275)
inline enum femap::zReturnCode femap::IResults::GetRow ( int nRowIndex, int * pnID, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nRowIndex, pnID, pdVals);
    return _result;
}

#pragma implementation_key(276)
inline enum femap::zReturnCode femap::IResults::GetRows ( int nNumberOfRows, const _variant_t & nRowIndices, VARIANT * pnIDs, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c", nNumberOfRows, &nRowIndices, pnIDs, pdVals);
    return _result;
}

#pragma implementation_key(277)
inline enum femap::zReturnCode femap::IResults::GetRowsByID ( int nEntitySetID, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nEntitySetID, pdVals);
    return _result;
}

#pragma implementation_key(278)
inline enum femap::zReturnCode femap::IResults::SetColumnGlobalPly ( int nColumnIndex, int nGlobalPlyID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nColumnIndex, nGlobalPlyID);
    return _result;
}

#pragma implementation_key(279)
inline enum femap::zReturnCode femap::IResults::AddEnvelopeColumn ( enum zOutputProcessEnvType nEnvelopeType, int * nDataColumnIndex, int * nColumnColumnIndex ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003", nEnvelopeType, nDataColumnIndex, nColumnColumnIndex);
    return _result;
}

#pragma implementation_key(280)
inline enum femap::zReturnCode femap::IResults::IsAPIColumn ( int nColumnIndex ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nColumnIndex);
    return _result;
}

#pragma implementation_key(281)
inline enum femap::zReturnCode femap::IResults::GetColumn ( int nColIndex, VARIANT * pnIDs, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c", nColIndex, pnIDs, pdVals);
    return _result;
}

#pragma implementation_key(282)
inline enum femap::zReturnCode femap::IResults::GetColumns ( int nNumberOfColumns, const _variant_t & nColIndices, VARIANT * pnIDs, VARIANT * pdVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c", nNumberOfColumns, &nColIndices, pnIDs, pdVals);
    return _result;
}

#pragma implementation_key(283)
inline enum femap::zReturnCode femap::IResults::GetRowsAndColumns ( int nNumberOfRows, const _variant_t & nRowIndices, int nNumberOfColumns, const _variant_t & nColIndices, VARIANT * pnIDs, VARIANT * pdVals, VARIANT_BOOL * pbAllExist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000c\x400c\x400c\x400b", nNumberOfRows, &nRowIndices, nNumberOfColumns, &nColIndices, pnIDs, pdVals, pbAllExist);
    return _result;
}

#pragma implementation_key(284)
inline enum femap::zReturnCode femap::IResults::GetRowsAndColumnsByID ( int nEntitySetID, int nNumberOfColumns, const _variant_t & nColIndices, VARIANT * pdVals, VARIANT_BOOL * pbAllExist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x400c\x400b", nEntitySetID, nNumberOfColumns, &nColIndices, pdVals, pbAllExist);
    return _result;
}

#pragma implementation_key(285)
inline enum femap::zReturnCode femap::IResults::GetColumnSum ( int nColumnIndex, int nLimitToSet, int * pnNumVal, double * pdSum, double * pdSumSq ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4005\x4005", nColumnIndex, nLimitToSet, pnNumVal, pdSum, pdSumSq);
    return _result;
}

#pragma implementation_key(286)
inline enum femap::zReturnCode femap::IResults::SetComplexOptions ( VARIANT_BOOL bExpandComplex, double dComplexPhase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005", bExpandComplex, dComplexPhase);
    return _result;
}

#pragma implementation_key(287)
inline enum femap::zReturnCode femap::IResults::SendToDataTable ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(288)
inline int femap::IResults::NumberOfSets ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4ee8, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(289)
inline enum femap::zReturnCode femap::IResults::NextSetReset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(290)
inline int femap::IResults::NextSet ( enum zExistState nExistState, enum zLocateOption nLocateOption ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4eea, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nExistState, nLocateOption);
    return _result;
}

#pragma implementation_key(291)
inline enum femap::zReturnCode femap::IResults::SetExists ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eeb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(292)
inline enum femap::zReturnCode femap::IResults::SetInfo ( int nSetID, enum zAnalysisProgram * pnAnalysisProgram, enum zAnalysisType * pnAnalysisType, double * pdSetValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eec, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x4005", nSetID, pnAnalysisProgram, pnAnalysisType, pdSetValue);
    return _result;
}

#pragma implementation_key(293)
inline enum femap::zReturnCode femap::IResults::SetTitle ( int nSetID, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eed, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", nSetID, sTitle);
    return _result;
}

#pragma implementation_key(294)
inline enum femap::zReturnCode femap::IResults::SetNotes ( int nSetID, BSTR * sNotes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eee, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", nSetID, sNotes);
    return _result;
}

#pragma implementation_key(295)
inline enum femap::zReturnCode femap::IResults::SetLocation ( int nSetID, enum zResultsLocation * pnSetLocation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eef, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nSetID, pnSetLocation);
    return _result;
}

#pragma implementation_key(296)
inline enum femap::zReturnCode femap::IResults::SetHasVectorsInDB ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(297)
inline enum femap::zReturnCode femap::IResults::Sets ( int nSetSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetSetID, bClear);
    return _result;
}

#pragma implementation_key(298)
inline int femap::IResults::SetSubcase ( int nSetID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4ef2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(299)
inline int femap::IResults::SetRevision ( int nSetID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4ef3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(300)
inline enum femap::zReturnCode femap::IResults::NextVectorReset ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(301)
inline int femap::IResults::NextVector ( int nSetID, enum zExistState nExistState, enum zLocateOption nLocateOption ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4f4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nSetID, nExistState, nLocateOption);
    return _result;
}

#pragma implementation_key(302)
inline enum femap::zReturnCode femap::IResults::VectorExists ( int nSetID, int nVectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nVectorID);
    return _result;
}

#pragma implementation_key(303)
inline enum femap::zReturnCode femap::IResults::VectorInfo ( int nSetID, int nVectorID, enum zDataType * pnDataType, enum zOutputType * pnOutputType, VARIANT_BOOL * pbCentroidTotal, VARIANT_BOOL * pbCalcWarn, int * pnCompDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4003\x400b\x400b\x4003", nSetID, nVectorID, pnDataType, pnOutputType, pbCentroidTotal, pbCalcWarn, pnCompDir);
    return _result;
}

#pragma implementation_key(304)
inline enum femap::zReturnCode femap::IResults::VectorTitle ( int nSetID, int nVectorID, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008", nSetID, nVectorID, sTitle);
    return _result;
}

#pragma implementation_key(305)
inline enum femap::zReturnCode femap::IResults::VectorComponents ( int nSetID, int nVectorID, int * pnNumComponents, VARIANT * pnComponents ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c", nSetID, nVectorID, pnNumComponents, pnComponents);
    return _result;
}

#pragma implementation_key(306)
inline enum femap::zReturnCode femap::IResults::VectorLocation ( int nSetID, int nVectorID, enum zResultsLocation * pnVectorLocation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nSetID, nVectorID, pnVectorLocation);
    return _result;
}

#pragma implementation_key(307)
inline enum femap::zReturnCode femap::IResults::VectorEntities ( int nSetID, int nVectorID, int nEntitySetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", nSetID, nVectorID, nEntitySetID, bClear);
    return _result;
}

#pragma implementation_key(308)
inline enum femap::zReturnCode femap::IResults::Vectors ( int nSetID, int nVectorSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nSetID, nVectorSetID, bClear);
    return _result;
}

#pragma implementation_key(309)
inline enum femap::zReturnCode femap::IResults::EntityValue ( int nSetID, int nVectorID, int nEntityID, double * pdVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x4005", nSetID, nVectorID, nEntityID, pdVal);
    return _result;
}

#pragma implementation_key(310)
inline double femap::IResults::GetValueForNonExisting ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(311)
inline void femap::IResults::PutValueForNonExisting ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

//
// dispinterface IMesher wrapper method implementations
//

#pragma implementation_key(312)
inline enum femap::zReturnCode femap::IMesher::UI ( VARIANT_BOOL bMeshingOptions ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bMeshingOptions);
    return _result;
}

#pragma implementation_key(313)
inline enum femap::zReturnCode femap::IMesher::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(314)
inline enum femap::zReturnCode femap::IMesher::AddSurface ( int nSetID, VARIANT_BOOL bSetSizes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bSetSizes);
    return _result;
}

#pragma implementation_key(315)
inline enum femap::zReturnCode femap::IMesher::AddSolid ( int nSetID, VARIANT_BOOL bSetSizes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bSetSizes);
    return _result;
}

#pragma implementation_key(316)
inline enum femap::zReturnCode femap::IMesher::SetSizes ( double dPrepareSize, double dMeshSize, double dInteriorGrowthFactor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005", dPrepareSize, dMeshSize, dInteriorGrowthFactor);
    return _result;
}

#pragma implementation_key(317)
inline enum femap::zReturnCode femap::IMesher::Prepare ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(318)
inline enum femap::zReturnCode femap::IMesher::Size ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(319)
inline enum femap::zReturnCode femap::IMesher::Mesh ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(320)
inline enum femap::zReturnCode femap::IMesher::Apply ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(321)
inline enum femap::zReturnCode femap::IMesher::HasPrevious ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(322)
inline enum femap::zReturnCode femap::IMesher::RemovePrevious ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(323)
inline VARIANT_BOOL femap::IMesher::GetPrepareGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(324)
inline void femap::IMesher::PutPrepareGeometry ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BOOL, _val);
}

#pragma implementation_key(325)
inline VARIANT_BOOL femap::IMesher::GetMeshSizing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(326)
inline void femap::IMesher::PutMeshSizing ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(327)
inline VARIANT_BOOL femap::IMesher::GetMeshing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(328)
inline void femap::IMesher::PutMeshing ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(329)
inline int femap::IMesher::GetMeshType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(330)
inline void femap::IMesher::PutMeshType ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(331)
inline VARIANT_BOOL femap::IMesher::GetMidsideNodes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(332)
inline void femap::IMesher::PutMidsideNodes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(333)
inline VARIANT_BOOL femap::IMesher::GetSyncSizes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(334)
inline void femap::IMesher::PutSyncSizes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(335)
inline int femap::IMesher::GetLengthBasedSizing ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(336)
inline void femap::IMesher::PutLengthBasedSizing ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(337)
inline double femap::IMesher::GetPrepareSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(338)
inline void femap::IMesher::PutPrepareSize ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(339)
inline double femap::IMesher::GetMeshSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(340)
inline void femap::IMesher::PutMeshSize ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(341)
inline double femap::IMesher::GetInteriorGrowthFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(342)
inline void femap::IMesher::PutInteriorGrowthFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2719, VT_R8, _val);
}

#pragma implementation_key(343)
inline VARIANT_BOOL femap::IMesher::GetAutoSelectTriMesher ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(344)
inline void femap::IMesher::PutAutoSelectTriMesher ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(345)
inline enum femap::zMesherType femap::IMesher::GetTriMesher ( ) {
    enum zMesherType _result;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(346)
inline void femap::IMesher::PutTriMesher ( enum zMesherType _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(347)
inline VARIANT_BOOL femap::IMesher::GetMappedMeshingAllowed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(348)
inline void femap::IMesher::PutMappedMeshingAllowed ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271c, VT_BOOL, _val);
}

#pragma implementation_key(349)
inline int femap::IMesher::GetNodeMergeOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(350)
inline void femap::IMesher::PutNodeMergeOption ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(351)
inline double femap::IMesher::GetTetGrowthRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(352)
inline void femap::IMesher::PutTetGrowthRatio ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(353)
inline double femap::IMesher::GetInitialSizeRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(354)
inline void femap::IMesher::PutInitialSizeRatio ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(355)
inline VARIANT_BOOL femap::IMesher::GetAskAlreadyMeshed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(356)
inline void femap::IMesher::PutAskAlreadyMeshed ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2720, VT_BOOL, _val);
}

#pragma implementation_key(357)
inline double femap::IMesher::GetNarrowSizePct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(358)
inline void femap::IMesher::PutNarrowSizePct ( double _val ) {
    _com_dispatch_propput(this, 0x2721, VT_R8, _val);
}

#pragma implementation_key(359)
inline double femap::IMesher::GetCurveSuppressPct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(360)
inline void femap::IMesher::PutCurveSuppressPct ( double _val ) {
    _com_dispatch_propput(this, 0x2722, VT_R8, _val);
}

#pragma implementation_key(361)
inline double femap::IMesher::GetNarrowAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(362)
inline void femap::IMesher::PutNarrowAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2723, VT_R8, _val);
}

#pragma implementation_key(363)
inline double femap::IMesher::GetFeatureEdgeAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(364)
inline void femap::IMesher::PutFeatureEdgeAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(365)
inline double femap::IMesher::GetCombinedCurveAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(366)
inline void femap::IMesher::PutCombinedCurveAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2725, VT_R8, _val);
}

#pragma implementation_key(367)
inline VARIANT_BOOL femap::IMesher::GetGeometryCleanup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(368)
inline void femap::IMesher::PutGeometryCleanup ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2726, VT_BOOL, _val);
}

#pragma implementation_key(369)
inline VARIANT_BOOL femap::IMesher::GetSuppressVoids ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(370)
inline void femap::IMesher::PutSuppressVoids ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2727, VT_BOOL, _val);
}

#pragma implementation_key(371)
inline VARIANT_BOOL femap::IMesher::GetDetectClosePoints ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(372)
inline void femap::IMesher::PutDetectClosePoints ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2728, VT_BOOL, _val);
}

#pragma implementation_key(373)
inline VARIANT_BOOL femap::IMesher::GetCutSlivers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(374)
inline void femap::IMesher::PutCutSlivers ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2729, VT_BOOL, _val);
}

#pragma implementation_key(375)
inline VARIANT_BOOL femap::IMesher::GetProcessBlends ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(376)
inline void femap::IMesher::PutProcessBlends ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272a, VT_BOOL, _val);
}

#pragma implementation_key(377)
inline VARIANT_BOOL femap::IMesher::GetCombineSmallSurfaces ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(378)
inline void femap::IMesher::PutCombineSmallSurfaces ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272b, VT_BOOL, _val);
}

#pragma implementation_key(379)
inline VARIANT_BOOL femap::IMesher::GetMinElemOnEdgeOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(380)
inline void femap::IMesher::PutMinElemOnEdgeOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272c, VT_BOOL, _val);
}

#pragma implementation_key(381)
inline VARIANT_BOOL femap::IMesher::GetMaxAngleToleranceOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(382)
inline void femap::IMesher::PutMaxAngleToleranceOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272d, VT_BOOL, _val);
}

#pragma implementation_key(383)
inline VARIANT_BOOL femap::IMesher::GetMaxElemSmallFeatureOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(384)
inline void femap::IMesher::PutMaxElemSmallFeatureOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272e, VT_BOOL, _val);
}

#pragma implementation_key(385)
inline VARIANT_BOOL femap::IMesher::GetMaxPctSmallFeatureOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(386)
inline void femap::IMesher::PutMaxPctSmallFeatureOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272f, VT_BOOL, _val);
}

#pragma implementation_key(387)
inline VARIANT_BOOL femap::IMesher::GetVertexAspectRatioOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(388)
inline void femap::IMesher::PutVertexAspectRatioOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2730, VT_BOOL, _val);
}

#pragma implementation_key(389)
inline VARIANT_BOOL femap::IMesher::GetMappedMeshingRefinement ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(390)
inline void femap::IMesher::PutMappedMeshingRefinement ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2731, VT_BOOL, _val);
}

#pragma implementation_key(391)
inline VARIANT_BOOL femap::IMesher::GetSuppressShortEdgesPctOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(392)
inline void femap::IMesher::PutSuppressShortEdgesPctOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2732, VT_BOOL, _val);
}

#pragma implementation_key(393)
inline VARIANT_BOOL femap::IMesher::GetAutoBoundarySmallSurfPctOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(394)
inline void femap::IMesher::PutAutoBoundarySmallSurfPctOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2733, VT_BOOL, _val);
}

#pragma implementation_key(395)
inline int femap::IMesher::GetMinElemOnEdge ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(396)
inline void femap::IMesher::PutMinElemOnEdge ( int _val ) {
    _com_dispatch_propput(this, 0x2734, VT_I4, _val);
}

#pragma implementation_key(397)
inline double femap::IMesher::GetMaxAngleTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(398)
inline void femap::IMesher::PutMaxAngleTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2735, VT_R8, _val);
}

#pragma implementation_key(399)
inline int femap::IMesher::GetMaxElemSmallFeature ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(400)
inline void femap::IMesher::PutMaxElemSmallFeature ( int _val ) {
    _com_dispatch_propput(this, 0x2736, VT_I4, _val);
}

#pragma implementation_key(401)
inline double femap::IMesher::GetMaxPctSmallFeature ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(402)
inline void femap::IMesher::PutMaxPctSmallFeature ( double _val ) {
    _com_dispatch_propput(this, 0x2737, VT_R8, _val);
}

#pragma implementation_key(403)
inline double femap::IMesher::GetVertexAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(404)
inline void femap::IMesher::PutVertexAspectRatio ( double _val ) {
    _com_dispatch_propput(this, 0x2738, VT_R8, _val);
}

#pragma implementation_key(405)
inline double femap::IMesher::GetSuppressShortEdgesPct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(406)
inline void femap::IMesher::PutSuppressShortEdgesPct ( double _val ) {
    _com_dispatch_propput(this, 0x2739, VT_R8, _val);
}

#pragma implementation_key(407)
inline double femap::IMesher::GetAutoBoundarySmallSurfPct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(408)
inline void femap::IMesher::PutAutoBoundarySmallSurfPct ( double _val ) {
    _com_dispatch_propput(this, 0x273a, VT_R8, _val);
}

#pragma implementation_key(409)
inline VARIANT_BOOL femap::IMesher::GetRefinementRatioOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(410)
inline void femap::IMesher::PutRefinementRatioOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273b, VT_BOOL, _val);
}

#pragma implementation_key(411)
inline double femap::IMesher::GetRefinementRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(412)
inline void femap::IMesher::PutRefinementRatio ( double _val ) {
    _com_dispatch_propput(this, 0x273c, VT_R8, _val);
}

#pragma implementation_key(413)
inline VARIANT_BOOL femap::IMesher::GetRefineSurfaceMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(414)
inline void femap::IMesher::PutRefineSurfaceMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273d, VT_BOOL, _val);
}

#pragma implementation_key(415)
inline VARIANT_BOOL femap::IMesher::GetAdjacentSurfaceMatching ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(416)
inline void femap::IMesher::PutAdjacentSurfaceMatching ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273e, VT_BOOL, _val);
}

#pragma implementation_key(417)
inline VARIANT_BOOL femap::IMesher::GetRemovePreviousSlaving ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(418)
inline void femap::IMesher::PutRemovePreviousSlaving ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273f, VT_BOOL, _val);
}

#pragma implementation_key(419)
inline VARIANT_BOOL femap::IMesher::GetAdjustColors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(420)
inline void femap::IMesher::PutAdjustColors ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2740, VT_BOOL, _val);
}

#pragma implementation_key(421)
inline VARIANT_BOOL femap::IMesher::GetSkipSizingOnSlaved ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(422)
inline void femap::IMesher::PutSkipSizingOnSlaved ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2741, VT_BOOL, _val);
}

#pragma implementation_key(423)
inline VARIANT_BOOL femap::IMesher::GetPreV10Meshing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(424)
inline void femap::IMesher::PutPreV10Meshing ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2742, VT_BOOL, _val);
}

#pragma implementation_key(425)
inline VARIANT_BOOL femap::IMesher::GetMidsideMoveToGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2743, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(426)
inline void femap::IMesher::PutMidsideMoveToGeometry ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2743, VT_BOOL, _val);
}

#pragma implementation_key(427)
inline VARIANT_BOOL femap::IMesher::GetMidsideMaxDistortionAngleOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(428)
inline void femap::IMesher::PutMidsideMaxDistortionAngleOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2744, VT_BOOL, _val);
}

#pragma implementation_key(429)
inline double femap::IMesher::GetMidsideMaxDistortionAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(430)
inline void femap::IMesher::PutMidsideMaxDistortionAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2745, VT_R8, _val);
}

#pragma implementation_key(431)
inline VARIANT_BOOL femap::IMesher::GetConnectEdgeNodesOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(432)
inline void femap::IMesher::PutConnectEdgeNodesOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2746, VT_BOOL, _val);
}

#pragma implementation_key(433)
inline double femap::IMesher::GetConnectEdgeNodes ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(434)
inline void femap::IMesher::PutConnectEdgeNodes ( double _val ) {
    _com_dispatch_propput(this, 0x2747, VT_R8, _val);
}

#pragma implementation_key(435)
inline VARIANT_BOOL femap::IMesher::GetSmoothingLaplacian ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(436)
inline void femap::IMesher::PutSmoothingLaplacian ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2748, VT_BOOL, _val);
}

#pragma implementation_key(437)
inline int femap::IMesher::GetSmoothingIterations ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(438)
inline void femap::IMesher::PutSmoothingIterations ( int _val ) {
    _com_dispatch_propput(this, 0x2749, VT_I4, _val);
}

#pragma implementation_key(439)
inline double femap::IMesher::GetSmoothingTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(440)
inline void femap::IMesher::PutSmoothingTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x274a, VT_R8, _val);
}

#pragma implementation_key(441)
inline enum femap::zMeshOffsetFrom femap::IMesher::GetOffsetMeshMode ( ) {
    enum zMeshOffsetFrom _result;
    _com_dispatch_propget(this, 0x274b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(442)
inline void femap::IMesher::PutOffsetMeshMode ( enum zMeshOffsetFrom _val ) {
    _com_dispatch_propput(this, 0x274b, VT_I4, _val);
}

#pragma implementation_key(443)
inline double femap::IMesher::GetOffsetMeshDistance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(444)
inline void femap::IMesher::PutOffsetMeshDistance ( double _val ) {
    _com_dispatch_propput(this, 0x274c, VT_R8, _val);
}

#pragma implementation_key(445)
inline double femap::IMesher::GetMapMaxAngleDeviation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(446)
inline void femap::IMesher::PutMapMaxAngleDeviation ( double _val ) {
    _com_dispatch_propput(this, 0x274d, VT_R8, _val);
}

#pragma implementation_key(447)
inline double femap::IMesher::GetMapMinCornerAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(448)
inline void femap::IMesher::PutMapMinCornerAngle ( double _val ) {
    _com_dispatch_propput(this, 0x274e, VT_R8, _val);
}

#pragma implementation_key(449)
inline VARIANT_BOOL femap::IMesher::GetMapEqualSidesOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(450)
inline void femap::IMesher::PutMapEqualSidesOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274f, VT_BOOL, _val);
}

#pragma implementation_key(451)
inline VARIANT_BOOL femap::IMesher::GetMapSubdivisions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(452)
inline void femap::IMesher::PutMapSubdivisions ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2750, VT_BOOL, _val);
}

#pragma implementation_key(453)
inline VARIANT_BOOL femap::IMesher::GetMapSplitQuadMap ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2751, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(454)
inline void femap::IMesher::PutMapSplitQuadMap ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2751, VT_BOOL, _val);
}

#pragma implementation_key(455)
inline VARIANT_BOOL femap::IMesher::GetMapAlternateBias ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2752, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(456)
inline void femap::IMesher::PutMapAlternateBias ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2752, VT_BOOL, _val);
}

#pragma implementation_key(457)
inline VARIANT_BOOL femap::IMesher::GetMapRightBias ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2753, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(458)
inline void femap::IMesher::PutMapRightBias ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2753, VT_BOOL, _val);
}

#pragma implementation_key(459)
inline VARIANT_BOOL femap::IMesher::GetPostMeshingCleanup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2754, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(460)
inline void femap::IMesher::PutPostMeshingCleanup ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2754, VT_BOOL, _val);
}

#pragma implementation_key(461)
inline int femap::IMesher::GetQuadEdgeLayers ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2755, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(462)
inline void femap::IMesher::PutQuadEdgeLayers ( int _val ) {
    _com_dispatch_propput(this, 0x2755, VT_I4, _val);
}

#pragma implementation_key(463)
inline double femap::IMesher::GetCutQuadDeviationAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2756, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(464)
inline void femap::IMesher::PutCutQuadDeviationAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2756, VT_R8, _val);
}

#pragma implementation_key(465)
inline int femap::IMesher::GetMinElemBetweenBoundary ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2757, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(466)
inline void femap::IMesher::PutMinElemBetweenBoundary ( int _val ) {
    _com_dispatch_propput(this, 0x2757, VT_I4, _val);
}

#pragma implementation_key(467)
inline double femap::IMesher::GetMaxElemAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2758, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(468)
inline void femap::IMesher::PutMaxElemAspectRatio ( double _val ) {
    _com_dispatch_propput(this, 0x2758, VT_R8, _val);
}

#pragma implementation_key(469)
inline VARIANT_BOOL femap::IMesher::GetQuickCutBoundaryOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2759, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(470)
inline void femap::IMesher::PutQuickCutBoundaryOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2759, VT_BOOL, _val);
}

#pragma implementation_key(471)
inline int femap::IMesher::GetQuickCutMaxNodes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(472)
inline void femap::IMesher::PutQuickCutMaxNodes ( int _val ) {
    _com_dispatch_propput(this, 0x275a, VT_I4, _val);
}

#pragma implementation_key(473)
inline VARIANT_BOOL femap::IMesher::GetAttributePropOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(474)
inline void femap::IMesher::PutAttributePropOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275b, VT_BOOL, _val);
}

#pragma implementation_key(475)
inline VARIANT_BOOL femap::IMesher::GetTetStatusMessages ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(476)
inline void femap::IMesher::PutTetStatusMessages ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275c, VT_BOOL, _val);
}

#pragma implementation_key(477)
inline VARIANT_BOOL femap::IMesher::GetTetQualityToDataTable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(478)
inline void femap::IMesher::PutTetQualityToDataTable ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275d, VT_BOOL, _val);
}

#pragma implementation_key(479)
inline VARIANT_BOOL femap::IMesher::GetTetCheckSurfaceElem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(480)
inline void femap::IMesher::PutTetCheckSurfaceElem ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275e, VT_BOOL, _val);
}

#pragma implementation_key(481)
inline VARIANT_BOOL femap::IMesher::GetTetDeleteSurfaceElem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(482)
inline void femap::IMesher::PutTetDeleteSurfaceElem ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275f, VT_BOOL, _val);
}

#pragma implementation_key(483)
inline VARIANT_BOOL femap::IMesher::GetTetSmoothSolidElemOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2760, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(484)
inline void femap::IMesher::PutTetSmoothSolidElemOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2760, VT_BOOL, _val);
}

#pragma implementation_key(485)
inline double femap::IMesher::GetTetSmoothSolidElem ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2761, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(486)
inline void femap::IMesher::PutTetSmoothSolidElem ( double _val ) {
    _com_dispatch_propput(this, 0x2761, VT_R8, _val);
}

#pragma implementation_key(487)
inline VARIANT_BOOL femap::IMesher::GetTetMidsideMoveToGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2762, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(488)
inline void femap::IMesher::PutTetMidsideMoveToGeometry ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2762, VT_BOOL, _val);
}

#pragma implementation_key(489)
inline VARIANT_BOOL femap::IMesher::GetTetMidsideMaxDistortionAngleOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2763, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(490)
inline void femap::IMesher::PutTetMidsideMaxDistortionAngleOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2763, VT_BOOL, _val);
}

#pragma implementation_key(491)
inline double femap::IMesher::GetTetMidsideMaxDistortionAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2764, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(492)
inline void femap::IMesher::PutTetMidsideMaxDistortionAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2764, VT_R8, _val);
}

#pragma implementation_key(493)
inline VARIANT_BOOL femap::IMesher::GetTetAdjustNodalPrecision ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2765, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(494)
inline void femap::IMesher::PutTetAdjustNodalPrecision ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2765, VT_BOOL, _val);
}

#pragma implementation_key(495)
inline VARIANT_BOOL femap::IMesher::GetTetMeshVoids ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2767, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(496)
inline void femap::IMesher::PutTetMeshVoids ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2767, VT_BOOL, _val);
}

#pragma implementation_key(497)
inline VARIANT_BOOL femap::IMesher::GetTetPreV10Meshing ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2768, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(498)
inline void femap::IMesher::PutTetPreV10Meshing ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2768, VT_BOOL, _val);
}

#pragma implementation_key(499)
inline VARIANT_BOOL femap::IMesher::GetRemovePreviousOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(500)
inline void femap::IMesher::PutRemovePreviousOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276b, VT_BOOL, _val);
}

#pragma implementation_key(501)
inline VARIANT_BOOL femap::IMesher::GetRemovePreviousPrep ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(502)
inline void femap::IMesher::PutRemovePreviousPrep ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276c, VT_BOOL, _val);
}

#pragma implementation_key(503)
inline VARIANT_BOOL femap::IMesher::GetDeletePreviousMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(504)
inline void femap::IMesher::PutDeletePreviousMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276d, VT_BOOL, _val);
}

#pragma implementation_key(505)
inline VARIANT_BOOL femap::IMesher::GetSilent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(506)
inline void femap::IMesher::PutSilent ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276e, VT_BOOL, _val);
}

#pragma implementation_key(507)
inline int femap::IMesher::GetFixedGroupID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(508)
inline void femap::IMesher::PutFixedGroupID ( int _val ) {
    _com_dispatch_propput(this, 0x276f, VT_I4, _val);
}

//
// dispinterface IElementQuality wrapper method implementations
//

#pragma implementation_key(509)
inline enum femap::zReturnCode femap::IElementQuality::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(510)
inline enum femap::zReturnCode femap::IElementQuality::GetAspectRatio ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(511)
inline femap::ISortSetPtr femap::IElementQuality::AspectRatio ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(512)
inline enum femap::zReturnCode femap::IElementQuality::GetTaper ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(513)
inline femap::ISortSetPtr femap::IElementQuality::Taper ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(514)
inline enum femap::zReturnCode femap::IElementQuality::GetAlternateTaper ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(515)
inline femap::ISortSetPtr femap::IElementQuality::AlternateTaper ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(516)
inline enum femap::zReturnCode femap::IElementQuality::GetInternalAngle ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(517)
inline femap::ISortSetPtr femap::IElementQuality::InternalAngle ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(518)
inline enum femap::zReturnCode femap::IElementQuality::GetSkew ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(519)
inline femap::ISortSetPtr femap::IElementQuality::Skew ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(520)
inline enum femap::zReturnCode femap::IElementQuality::GetWarping ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(521)
inline femap::ISortSetPtr femap::IElementQuality::Warping ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(522)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranWarping ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(523)
inline femap::ISortSetPtr femap::IElementQuality::NastranWarping ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(524)
inline enum femap::zReturnCode femap::IElementQuality::GetTetCollapse ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(525)
inline femap::ISortSetPtr femap::IElementQuality::TetCollapse ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(526)
inline enum femap::zReturnCode femap::IElementQuality::GetJacobian ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(527)
inline femap::ISortSetPtr femap::IElementQuality::Jacobian ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(528)
inline enum femap::zReturnCode femap::IElementQuality::GetCombined ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(529)
inline femap::ISortSetPtr femap::IElementQuality::Combined ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(530)
inline enum femap::zReturnCode femap::IElementQuality::GetExplicitTimeStep ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(531)
inline femap::ISortSetPtr femap::IElementQuality::ExplicitTimeStep ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(532)
inline femap::ISetPtr femap::IElementQuality::CheckQuality ( int nElemSet, VARIANT_BOOL bList, VARIANT_BOOL bGroup ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x000b\x000b", nElemSet, bList, bGroup);
    return ISetPtr(_result, false);
}

#pragma implementation_key(533)
inline enum femap::zReturnCode femap::IElementQuality::SetModelDefaults ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(534)
inline enum femap::zReturnCode femap::IElementQuality::GetModelDefaults ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(535)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranQuadSkew ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(536)
inline femap::ISortSetPtr femap::IElementQuality::NastranQuadSkew ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(537)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranQuadTaper ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(538)
inline femap::ISortSetPtr femap::IElementQuality::NastranQuadTaper ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(539)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranQuadWarp ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(540)
inline femap::ISortSetPtr femap::IElementQuality::NastranQuadWarp ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(541)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranQuadIAMin ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(542)
inline femap::ISortSetPtr femap::IElementQuality::NastranQuadIAMin ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(543)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranQuadIAMax ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(544)
inline femap::ISortSetPtr femap::IElementQuality::NastranQuadIAMax ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(545)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTriaSkew ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(546)
inline femap::ISortSetPtr femap::IElementQuality::NastranTriaSkew ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(547)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTriaIAMax ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(548)
inline femap::ISortSetPtr femap::IElementQuality::NastranTriaIAMax ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(549)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTetraAR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(550)
inline femap::ISortSetPtr femap::IElementQuality::NastranTetraAR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(551)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTetraEPLR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(552)
inline femap::ISortSetPtr femap::IElementQuality::NastranTetraEPLR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(553)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTetraDetJ ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(554)
inline femap::ISortSetPtr femap::IElementQuality::NastranTetraDetJ ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(555)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranHexAR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(556)
inline femap::ISortSetPtr femap::IElementQuality::NastranHexAR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e56, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(557)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranHexEPLR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(558)
inline femap::ISortSetPtr femap::IElementQuality::NastranHexEPLR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e58, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(559)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranHexDetJ ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(560)
inline femap::ISortSetPtr femap::IElementQuality::NastranHexDetJ ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e5a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(561)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranHexWarp ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(562)
inline femap::ISortSetPtr femap::IElementQuality::NastranHexWarp ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e5c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(563)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPenAR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(564)
inline femap::ISortSetPtr femap::IElementQuality::NastranPenAR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e5e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(565)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPenEPLR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(566)
inline femap::ISortSetPtr femap::IElementQuality::NastranPenEPLR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(567)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPenDetJ ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(568)
inline femap::ISortSetPtr femap::IElementQuality::NastranPenDetJ ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(569)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPenWarp ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e63, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(570)
inline femap::ISortSetPtr femap::IElementQuality::NastranPenWarp ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e64, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(571)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPyrAR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e65, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(572)
inline femap::ISortSetPtr femap::IElementQuality::NastranPyrAR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e66, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(573)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPyrEPLR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e67, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(574)
inline femap::ISortSetPtr femap::IElementQuality::NastranPyrEPLR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e68, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(575)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPyrWarp ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e69, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(576)
inline femap::ISortSetPtr femap::IElementQuality::NastranPyrWarp ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e6a, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(577)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPyrDetJ ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(578)
inline femap::ISortSetPtr femap::IElementQuality::NastranPyrDetJ ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e6c, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(579)
inline femap::ISetPtr femap::IElementQuality::CheckNastranQuality ( int nElemSet, VARIANT_BOOL bList, VARIANT_BOOL bGroup ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e6d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x000b\x000b", nElemSet, bList, bGroup);
    return ISetPtr(_result, false);
}

#pragma implementation_key(580)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranQuadAR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(581)
inline femap::ISortSetPtr femap::IElementQuality::NastranQuadAR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e6f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(582)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTriaAR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e70, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(583)
inline femap::ISortSetPtr femap::IElementQuality::NastranTriaAR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e71, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(584)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTriaEPLR ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e72, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(585)
inline femap::ISortSetPtr femap::IElementQuality::NastranTriaEPLR ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e73, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(586)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranTetraEPIA ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e74, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(587)
inline femap::ISortSetPtr femap::IElementQuality::NastranTetraEPIA ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e75, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(588)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranHexEPIA ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e76, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(589)
inline femap::ISortSetPtr femap::IElementQuality::NastranHexEPIA ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e77, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(590)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPenEPIA ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e78, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(591)
inline femap::ISortSetPtr femap::IElementQuality::NastranPenEPIA ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e79, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(592)
inline enum femap::zReturnCode femap::IElementQuality::GetNastranPyrEPIA ( int nElemID, double * pdValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nElemID, pdValue);
    return _result;
}

#pragma implementation_key(593)
inline femap::ISortSetPtr femap::IElementQuality::NastranPyrEPIA ( int nElemSet, double dLimitVal ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e7b, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0005", nElemSet, dLimitVal);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(594)
inline VARIANT_BOOL femap::IElementQuality::GetAspectRatioOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(595)
inline void femap::IElementQuality::PutAspectRatioOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BOOL, _val);
}

#pragma implementation_key(596)
inline VARIANT_BOOL femap::IElementQuality::GetTaperOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(597)
inline void femap::IElementQuality::PutTaperOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(598)
inline VARIANT_BOOL femap::IElementQuality::GetAlternateTaperOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(599)
inline void femap::IElementQuality::PutAlternateTaperOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(600)
inline VARIANT_BOOL femap::IElementQuality::GetInternalAngleOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(601)
inline void femap::IElementQuality::PutInternalAngleOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(602)
inline VARIANT_BOOL femap::IElementQuality::GetSkewOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(603)
inline void femap::IElementQuality::PutSkewOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(604)
inline VARIANT_BOOL femap::IElementQuality::GetWarpingOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(605)
inline void femap::IElementQuality::PutWarpingOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(606)
inline VARIANT_BOOL femap::IElementQuality::GetNastranWarpingOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(607)
inline void femap::IElementQuality::PutNastranWarpingOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(608)
inline VARIANT_BOOL femap::IElementQuality::GetTetCollapseOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(609)
inline void femap::IElementQuality::PutTetCollapseOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BOOL, _val);
}

#pragma implementation_key(610)
inline VARIANT_BOOL femap::IElementQuality::GetJacobianOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(611)
inline void femap::IElementQuality::PutJacobianOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BOOL, _val);
}

#pragma implementation_key(612)
inline VARIANT_BOOL femap::IElementQuality::GetCombinedOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(613)
inline void femap::IElementQuality::PutCombinedOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BOOL, _val);
}

#pragma implementation_key(614)
inline VARIANT_BOOL femap::IElementQuality::GetExplicitTimeStepOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(615)
inline void femap::IElementQuality::PutExplicitTimeStepOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(616)
inline double femap::IElementQuality::GetAspectRatioLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(617)
inline void femap::IElementQuality::PutAspectRatioLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(618)
inline double femap::IElementQuality::GetTaperLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(619)
inline void femap::IElementQuality::PutTaperLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2725, VT_R8, _val);
}

#pragma implementation_key(620)
inline double femap::IElementQuality::GetAlternateTaperLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(621)
inline void femap::IElementQuality::PutAlternateTaperLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2726, VT_R8, _val);
}

#pragma implementation_key(622)
inline double femap::IElementQuality::GetInternalAngleLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(623)
inline void femap::IElementQuality::PutInternalAngleLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2727, VT_R8, _val);
}

#pragma implementation_key(624)
inline double femap::IElementQuality::GetSkewLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(625)
inline void femap::IElementQuality::PutSkewLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2728, VT_R8, _val);
}

#pragma implementation_key(626)
inline double femap::IElementQuality::GetWarpingLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(627)
inline void femap::IElementQuality::PutWarpingLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2729, VT_R8, _val);
}

#pragma implementation_key(628)
inline double femap::IElementQuality::GetNastranWarpingLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(629)
inline void femap::IElementQuality::PutNastranWarpingLimit ( double _val ) {
    _com_dispatch_propput(this, 0x272a, VT_R8, _val);
}

#pragma implementation_key(630)
inline double femap::IElementQuality::GetTetCollapseLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(631)
inline void femap::IElementQuality::PutTetCollapseLimit ( double _val ) {
    _com_dispatch_propput(this, 0x272b, VT_R8, _val);
}

#pragma implementation_key(632)
inline double femap::IElementQuality::GetJacobianLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(633)
inline void femap::IElementQuality::PutJacobianLimit ( double _val ) {
    _com_dispatch_propput(this, 0x272c, VT_R8, _val);
}

#pragma implementation_key(634)
inline double femap::IElementQuality::GetCombinedLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(635)
inline void femap::IElementQuality::PutCombinedLimit ( double _val ) {
    _com_dispatch_propput(this, 0x272d, VT_R8, _val);
}

#pragma implementation_key(636)
inline double femap::IElementQuality::GetExplicitTimeStepLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(637)
inline void femap::IElementQuality::PutExplicitTimeStepLimit ( double _val ) {
    _com_dispatch_propput(this, 0x272e, VT_R8, _val);
}

#pragma implementation_key(638)
inline VARIANT_BOOL femap::IElementQuality::GetNastranQuadSkewOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(639)
inline void femap::IElementQuality::PutNastranQuadSkewOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272f, VT_BOOL, _val);
}

#pragma implementation_key(640)
inline double femap::IElementQuality::GetNastranQuadSkewLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(641)
inline void femap::IElementQuality::PutNastranQuadSkewLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2730, VT_R8, _val);
}

#pragma implementation_key(642)
inline VARIANT_BOOL femap::IElementQuality::GetNastranQuadTaperOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(643)
inline void femap::IElementQuality::PutNastranQuadTaperOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2731, VT_BOOL, _val);
}

#pragma implementation_key(644)
inline double femap::IElementQuality::GetNastranQuadTaperLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(645)
inline void femap::IElementQuality::PutNastranQuadTaperLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2732, VT_R8, _val);
}

#pragma implementation_key(646)
inline VARIANT_BOOL femap::IElementQuality::GetNastranQuadWarpOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(647)
inline void femap::IElementQuality::PutNastranQuadWarpOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2733, VT_BOOL, _val);
}

#pragma implementation_key(648)
inline double femap::IElementQuality::GetNastranQuadWarpLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(649)
inline void femap::IElementQuality::PutNastranQuadWarpLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2734, VT_R8, _val);
}

#pragma implementation_key(650)
inline VARIANT_BOOL femap::IElementQuality::GetNastranQuadIAMinOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(651)
inline void femap::IElementQuality::PutNastranQuadIAMinOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2735, VT_BOOL, _val);
}

#pragma implementation_key(652)
inline double femap::IElementQuality::GetNastranQuadIAMinLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(653)
inline void femap::IElementQuality::PutNastranQuadIAMinLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2736, VT_R8, _val);
}

#pragma implementation_key(654)
inline VARIANT_BOOL femap::IElementQuality::GetNastranQuadIAMaxOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(655)
inline void femap::IElementQuality::PutNastranQuadIAMaxOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2737, VT_BOOL, _val);
}

#pragma implementation_key(656)
inline double femap::IElementQuality::GetNastranQuadIAMaxLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(657)
inline void femap::IElementQuality::PutNastranQuadIAMaxLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2738, VT_R8, _val);
}

#pragma implementation_key(658)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTriaSkewOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(659)
inline void femap::IElementQuality::PutNastranTriaSkewOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2739, VT_BOOL, _val);
}

#pragma implementation_key(660)
inline double femap::IElementQuality::GetNastranTriaSkewLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(661)
inline void femap::IElementQuality::PutNastranTriaSkewLimit ( double _val ) {
    _com_dispatch_propput(this, 0x273a, VT_R8, _val);
}

#pragma implementation_key(662)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTriaIAMaxOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(663)
inline void femap::IElementQuality::PutNastranTriaIAMaxOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273b, VT_BOOL, _val);
}

#pragma implementation_key(664)
inline double femap::IElementQuality::GetNastranTriaIAMaxLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(665)
inline void femap::IElementQuality::PutNastranTriaIAMaxLimit ( double _val ) {
    _com_dispatch_propput(this, 0x273c, VT_R8, _val);
}

#pragma implementation_key(666)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTetraAROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(667)
inline void femap::IElementQuality::PutNastranTetraAROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273d, VT_BOOL, _val);
}

#pragma implementation_key(668)
inline double femap::IElementQuality::GetNastranTetraARLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(669)
inline void femap::IElementQuality::PutNastranTetraARLimit ( double _val ) {
    _com_dispatch_propput(this, 0x273e, VT_R8, _val);
}

#pragma implementation_key(670)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTetraEPLROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(671)
inline void femap::IElementQuality::PutNastranTetraEPLROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273f, VT_BOOL, _val);
}

#pragma implementation_key(672)
inline double femap::IElementQuality::GetNastranTetraEPLRLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(673)
inline void femap::IElementQuality::PutNastranTetraEPLRLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2740, VT_R8, _val);
}

#pragma implementation_key(674)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTetraDetJOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(675)
inline void femap::IElementQuality::PutNastranTetraDetJOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2741, VT_BOOL, _val);
}

#pragma implementation_key(676)
inline double femap::IElementQuality::GetNastranTetraDetJLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(677)
inline void femap::IElementQuality::PutNastranTetraDetJLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2742, VT_R8, _val);
}

#pragma implementation_key(678)
inline VARIANT_BOOL femap::IElementQuality::GetNastranHexAROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2743, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(679)
inline void femap::IElementQuality::PutNastranHexAROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2743, VT_BOOL, _val);
}

#pragma implementation_key(680)
inline double femap::IElementQuality::GetNastranHexARLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(681)
inline void femap::IElementQuality::PutNastranHexARLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2744, VT_R8, _val);
}

#pragma implementation_key(682)
inline VARIANT_BOOL femap::IElementQuality::GetNastranHexEPLROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(683)
inline void femap::IElementQuality::PutNastranHexEPLROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2745, VT_BOOL, _val);
}

#pragma implementation_key(684)
inline double femap::IElementQuality::GetNastranHexEPLRLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(685)
inline void femap::IElementQuality::PutNastranHexEPLRLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2746, VT_R8, _val);
}

#pragma implementation_key(686)
inline VARIANT_BOOL femap::IElementQuality::GetNastranHexDetJOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(687)
inline void femap::IElementQuality::PutNastranHexDetJOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2747, VT_BOOL, _val);
}

#pragma implementation_key(688)
inline double femap::IElementQuality::GetNastranHexDetJLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(689)
inline void femap::IElementQuality::PutNastranHexDetJLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2748, VT_R8, _val);
}

#pragma implementation_key(690)
inline VARIANT_BOOL femap::IElementQuality::GetNastranHexWarpOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(691)
inline void femap::IElementQuality::PutNastranHexWarpOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2749, VT_BOOL, _val);
}

#pragma implementation_key(692)
inline double femap::IElementQuality::GetNastranHexWarpLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(693)
inline void femap::IElementQuality::PutNastranHexWarpLimit ( double _val ) {
    _com_dispatch_propput(this, 0x274a, VT_R8, _val);
}

#pragma implementation_key(694)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPenAROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(695)
inline void femap::IElementQuality::PutNastranPenAROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274b, VT_BOOL, _val);
}

#pragma implementation_key(696)
inline double femap::IElementQuality::GetNastranPenARLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(697)
inline void femap::IElementQuality::PutNastranPenARLimit ( double _val ) {
    _com_dispatch_propput(this, 0x274c, VT_R8, _val);
}

#pragma implementation_key(698)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPenEPLROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(699)
inline void femap::IElementQuality::PutNastranPenEPLROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274d, VT_BOOL, _val);
}

#pragma implementation_key(700)
inline double femap::IElementQuality::GetNastranPenEPLRLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(701)
inline void femap::IElementQuality::PutNastranPenEPLRLimit ( double _val ) {
    _com_dispatch_propput(this, 0x274e, VT_R8, _val);
}

#pragma implementation_key(702)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPenDetJOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(703)
inline void femap::IElementQuality::PutNastranPenDetJOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274f, VT_BOOL, _val);
}

#pragma implementation_key(704)
inline double femap::IElementQuality::GetNastranPenDetJLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(705)
inline void femap::IElementQuality::PutNastranPenDetJLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2750, VT_R8, _val);
}

#pragma implementation_key(706)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPenWarpOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2751, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(707)
inline void femap::IElementQuality::PutNastranPenWarpOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2751, VT_BOOL, _val);
}

#pragma implementation_key(708)
inline double femap::IElementQuality::GetNastranPenWarpLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2752, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(709)
inline void femap::IElementQuality::PutNastranPenWarpLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2752, VT_R8, _val);
}

#pragma implementation_key(710)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPyrAROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2753, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(711)
inline void femap::IElementQuality::PutNastranPyrAROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2753, VT_BOOL, _val);
}

#pragma implementation_key(712)
inline double femap::IElementQuality::GetNastranPyrARLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2754, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(713)
inline void femap::IElementQuality::PutNastranPyrARLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2754, VT_R8, _val);
}

#pragma implementation_key(714)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPyrEPLROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2755, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(715)
inline void femap::IElementQuality::PutNastranPyrEPLROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2755, VT_BOOL, _val);
}

#pragma implementation_key(716)
inline double femap::IElementQuality::GetNastranPyrEPLRLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2756, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(717)
inline void femap::IElementQuality::PutNastranPyrEPLRLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2756, VT_R8, _val);
}

#pragma implementation_key(718)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPyrDetJOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2757, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(719)
inline void femap::IElementQuality::PutNastranPyrDetJOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2757, VT_BOOL, _val);
}

#pragma implementation_key(720)
inline double femap::IElementQuality::GetNastranPyrDetJLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2758, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(721)
inline void femap::IElementQuality::PutNastranPyrDetJLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2758, VT_R8, _val);
}

#pragma implementation_key(722)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPyrWarpOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2759, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(723)
inline void femap::IElementQuality::PutNastranPyrWarpOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2759, VT_BOOL, _val);
}

#pragma implementation_key(724)
inline double femap::IElementQuality::GetNastranPyrWarpLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x275a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(725)
inline void femap::IElementQuality::PutNastranPyrWarpLimit ( double _val ) {
    _com_dispatch_propput(this, 0x275a, VT_R8, _val);
}

#pragma implementation_key(726)
inline VARIANT_BOOL femap::IElementQuality::GetNastranQuadAROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(727)
inline void femap::IElementQuality::PutNastranQuadAROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275b, VT_BOOL, _val);
}

#pragma implementation_key(728)
inline double femap::IElementQuality::GetNastranQuadARLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x275c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(729)
inline void femap::IElementQuality::PutNastranQuadARLimit ( double _val ) {
    _com_dispatch_propput(this, 0x275c, VT_R8, _val);
}

#pragma implementation_key(730)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTriaAROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(731)
inline void femap::IElementQuality::PutNastranTriaAROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275d, VT_BOOL, _val);
}

#pragma implementation_key(732)
inline double femap::IElementQuality::GetNastranTriaARLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x275e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(733)
inline void femap::IElementQuality::PutNastranTriaARLimit ( double _val ) {
    _com_dispatch_propput(this, 0x275e, VT_R8, _val);
}

#pragma implementation_key(734)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTriaEPLROn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(735)
inline void femap::IElementQuality::PutNastranTriaEPLROn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275f, VT_BOOL, _val);
}

#pragma implementation_key(736)
inline double femap::IElementQuality::GetNastranTriaEPLRLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2760, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(737)
inline void femap::IElementQuality::PutNastranTriaEPLRLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2760, VT_R8, _val);
}

#pragma implementation_key(738)
inline VARIANT_BOOL femap::IElementQuality::GetNastranTetraEPIAOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2761, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(739)
inline void femap::IElementQuality::PutNastranTetraEPIAOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2761, VT_BOOL, _val);
}

#pragma implementation_key(740)
inline double femap::IElementQuality::GetNastranTetraEPIALimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2762, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(741)
inline void femap::IElementQuality::PutNastranTetraEPIALimit ( double _val ) {
    _com_dispatch_propput(this, 0x2762, VT_R8, _val);
}

#pragma implementation_key(742)
inline VARIANT_BOOL femap::IElementQuality::GetNastranHexEPIAOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2763, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(743)
inline void femap::IElementQuality::PutNastranHexEPIAOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2763, VT_BOOL, _val);
}

#pragma implementation_key(744)
inline double femap::IElementQuality::GetNastranHexEPIALimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2764, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(745)
inline void femap::IElementQuality::PutNastranHexEPIALimit ( double _val ) {
    _com_dispatch_propput(this, 0x2764, VT_R8, _val);
}

#pragma implementation_key(746)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPenEPIAOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2765, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(747)
inline void femap::IElementQuality::PutNastranPenEPIAOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2765, VT_BOOL, _val);
}

#pragma implementation_key(748)
inline double femap::IElementQuality::GetNastranPenEPIALimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2766, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(749)
inline void femap::IElementQuality::PutNastranPenEPIALimit ( double _val ) {
    _com_dispatch_propput(this, 0x2766, VT_R8, _val);
}

#pragma implementation_key(750)
inline VARIANT_BOOL femap::IElementQuality::GetNastranPyrEPIAOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2767, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(751)
inline void femap::IElementQuality::PutNastranPyrEPIAOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2767, VT_BOOL, _val);
}

#pragma implementation_key(752)
inline double femap::IElementQuality::GetNastranPyrEPIALimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2768, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(753)
inline void femap::IElementQuality::PutNastranPyrEPIALimit ( double _val ) {
    _com_dispatch_propput(this, 0x2768, VT_R8, _val);
}

//
// dispinterface IStressLinear wrapper method implementations
//

#pragma implementation_key(754)
inline enum femap::zReturnCode femap::IStressLinear::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(755)
inline enum femap::zReturnCode femap::IStressLinear::AddElem ( int nElemSet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nElemSet);
    return _result;
}

#pragma implementation_key(756)
inline enum femap::zReturnCode femap::IStressLinear::ElemAlongLine ( const _variant_t & vXYZ1, const _variant_t & vXYZ2, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x0003", &vXYZ1, &vXYZ2, nSetID);
    return _result;
}

#pragma implementation_key(757)
inline enum femap::zReturnCode femap::IStressLinear::LoadData ( int nElemSet, VARIANT_BOOL bSolids, int dataType, int setID, int vectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x0003\x0003", nElemSet, bSolids, dataType, setID, vectorID);
    return _result;
}

#pragma implementation_key(758)
inline enum femap::zReturnCode femap::IStressLinear::FindElemWithXYZ ( const _variant_t & vXYZ, int * elemID, int * virtElemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4003", &vXYZ, elemID, virtElemID);
    return _result;
}

#pragma implementation_key(759)
inline enum femap::zReturnCode femap::IStressLinear::GetInterpValues ( const _variant_t & vXYZ, int virtElemID, VARIANT * values ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x0003\x400c", &vXYZ, virtElemID, values);
    return _result;
}

#pragma implementation_key(760)
inline enum femap::zReturnCode femap::IStressLinear::Transform3DStress ( int cSysFromID, int cSysToID, const _variant_t & vStressTensorIn, VARIANT * vStressTensorOut ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x400c", cSysFromID, cSysToID, &vStressTensorIn, vStressTensorOut);
    return _result;
}

#pragma implementation_key(761)
inline enum femap::zReturnCode femap::IStressLinear::CalcSolidPrinStresses ( const _variant_t & vStressTensorIn, VARIANT * vPrinTrescaData ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &vStressTensorIn, vPrinTrescaData);
    return _result;
}

#pragma implementation_key(762)
inline int femap::IStressLinear::GetNumElem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(763)
inline void femap::IStressLinear::PutNumElem ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(764)
inline int femap::IStressLinear::GetDataMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(765)
inline void femap::IStressLinear::PutDataMode ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(766)
inline int femap::IStressLinear::GetAvgMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(767)
inline void femap::IStressLinear::PutAvgMode ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

//
// dispinterface IDBase wrapper method implementations
//

#pragma implementation_key(768)
inline enum femap::zReturnCode femap::IDBase::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(769)
inline enum femap::zReturnCode femap::IDBase::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(770)
inline enum femap::zReturnCode femap::IDBase::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(771)
inline enum femap::zReturnCode femap::IDBase::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(772)
inline enum femap::zReturnCode femap::IDBase::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(773)
inline enum femap::zReturnCode femap::IDBase::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(774)
inline enum femap::zReturnCode femap::IDBase::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(775)
inline enum femap::zReturnCode femap::IDBase::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(776)
inline enum femap::zReturnCode femap::IDBase::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(777)
inline enum femap::zReturnCode femap::IDBase::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(778)
inline enum femap::zReturnCode femap::IDBase::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(779)
inline enum femap::zReturnCode femap::IDBase::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(780)
inline enum femap::zReturnCode femap::IDBase::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(781)
inline enum femap::zReturnCode femap::IDBase::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(782)
inline int femap::IDBase::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(783)
inline int femap::IDBase::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(784)
inline int femap::IDBase::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(785)
inline int femap::IDBase::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(786)
inline enum femap::zReturnCode femap::IDBase::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(787)
inline enum femap::zReturnCode femap::IDBase::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(788)
inline enum femap::zReturnCode femap::IDBase::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(789)
inline enum femap::zReturnCode femap::IDBase::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(790)
inline enum femap::zReturnCode femap::IDBase::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(791)
inline int femap::IDBase::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(792)
inline enum femap::zReturnCode femap::IDBase::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(793)
inline enum femap::zReturnCode femap::IDBase::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(794)
inline enum femap::zReturnCode femap::IDBase::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(795)
inline int femap::IDBase::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(796)
inline enum femap::zReturnCode femap::IDBase::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(797)
inline enum femap::zReturnCode femap::IDBase::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(798)
inline int femap::IDBase::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4a38, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(799)
inline void femap::IDBase::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4a38, VT_I4, _val);
}

#pragma implementation_key(800)
inline int femap::IDBase::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4a39, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(801)
inline void femap::IDBase::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4a39, VT_I4, _val);
}

#pragma implementation_key(802)
inline int femap::IDBase::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4a3a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(803)
inline void femap::IDBase::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x4a3a, VT_I4, _val);
}

//
// dispinterface IAnalysisCase wrapper method implementations
//

#pragma implementation_key(804)
inline int femap::IAnalysisCase::GetNasSubseqCase ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(805)
inline void femap::IAnalysisCase::PutNasSubseqCase ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(806)
inline double femap::IAnalysisCase::GetNasSubseqFactor ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(807)
inline void femap::IAnalysisCase::PutNasSubseqFactor ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(808)
inline int femap::IAnalysisCase::GetBCSet ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4a38, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(809)
inline void femap::IAnalysisCase::PutBCSet ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4a38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(810)
inline int femap::IAnalysisCase::GetOutput ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4a39, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(811)
inline void femap::IAnalysisCase::PutOutput ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4a39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(812)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlConvergenceFlags ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(813)
inline void femap::IAnalysisCase::PutNasCnlConvergenceFlags ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4a3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(814)
inline double femap::IAnalysisCase::GetNasCnlConvergenceValue ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4a3b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(815)
inline void femap::IAnalysisCase::PutNasCnlConvergenceValue ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4a3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(816)
inline VARIANT_BOOL femap::IAnalysisCase::GetMSCNasCnlConvergenceFlags ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(817)
inline void femap::IAnalysisCase::PutMSCNasCnlConvergenceFlags ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4a3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(818)
inline enum femap::zReturnCode femap::IAnalysisCase::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61a8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(819)
inline enum femap::zReturnCode femap::IAnalysisCase::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61a9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(820)
inline enum femap::zReturnCode femap::IAnalysisCase::GetContactTable ( int * Count, VARIANT * rowSeg, VARIANT * colSeg, VARIANT * tieType, VARIANT * distTol, VARIANT * sepForce, VARIANT * friction, VARIANT * interClose ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61aa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c", Count, rowSeg, colSeg, tieType, distTol, sepForce, friction, interClose);
    return _result;
}

#pragma implementation_key(821)
inline enum femap::zReturnCode femap::IAnalysisCase::PutContactTable ( int Count, const _variant_t & rowSeg, const _variant_t & colSeg, const _variant_t & tieType, const _variant_t & distTol, const _variant_t & sepForce, const _variant_t & friction, const _variant_t & interClose ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ab, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c", Count, &rowSeg, &colSeg, &tieType, &distTol, &sepForce, &friction, &interClose);
    return _result;
}

#pragma implementation_key(822)
inline enum femap::zReturnCode femap::IAnalysisCase::InitAnalysisCase ( int nSetID, int nCaseID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ac, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nCaseID);
    return _result;
}

#pragma implementation_key(823)
inline enum femap::zReturnCode femap::IAnalysisCase::DeleteAnalysisCase ( int nSetID, int nCaseID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ad, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nCaseID);
    return _result;
}

#pragma implementation_key(824)
inline enum femap::zReturnCode femap::IAnalysisCase::GetStandardTrim ( VARIANT * useTrim, VARIANT * TrimID, VARIANT * TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ae, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c\x400c", useTrim, TrimID, TrimVal);
    return _result;
}

#pragma implementation_key(825)
inline enum femap::zReturnCode femap::IAnalysisCase::PutStandardTrim ( const _variant_t & useTrim, const _variant_t & TrimID, const _variant_t & TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61af, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c", &useTrim, &TrimID, &TrimVal);
    return _result;
}

#pragma implementation_key(826)
inline enum femap::zReturnCode femap::IAnalysisCase::GetTrimControlSurf ( VARIANT * useTrim, VARIANT * TrimID, VARIANT * TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61b0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c\x400c", useTrim, TrimID, TrimVal);
    return _result;
}

#pragma implementation_key(827)
inline enum femap::zReturnCode femap::IAnalysisCase::PutTrimControlSurf ( const _variant_t & useTrim, const _variant_t & TrimID, const _variant_t & TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61b1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c", &useTrim, &TrimID, &TrimVal);
    return _result;
}

#pragma implementation_key(828)
inline enum femap::zReturnCode femap::IAnalysisCase::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(829)
inline enum femap::zReturnCode femap::IAnalysisCase::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(830)
inline enum femap::zReturnCode femap::IAnalysisCase::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(831)
inline enum femap::zReturnCode femap::IAnalysisCase::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(832)
inline enum femap::zReturnCode femap::IAnalysisCase::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(833)
inline enum femap::zReturnCode femap::IAnalysisCase::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(834)
inline enum femap::zReturnCode femap::IAnalysisCase::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(835)
inline enum femap::zReturnCode femap::IAnalysisCase::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(836)
inline enum femap::zReturnCode femap::IAnalysisCase::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(837)
inline enum femap::zReturnCode femap::IAnalysisCase::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(838)
inline enum femap::zReturnCode femap::IAnalysisCase::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(839)
inline enum femap::zReturnCode femap::IAnalysisCase::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(840)
inline int femap::IAnalysisCase::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(841)
inline int femap::IAnalysisCase::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(842)
inline int femap::IAnalysisCase::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(843)
inline int femap::IAnalysisCase::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(844)
inline enum femap::zReturnCode femap::IAnalysisCase::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(845)
inline enum femap::zReturnCode femap::IAnalysisCase::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(846)
inline enum femap::zReturnCode femap::IAnalysisCase::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(847)
inline enum femap::zReturnCode femap::IAnalysisCase::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(848)
inline enum femap::zReturnCode femap::IAnalysisCase::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(849)
inline int femap::IAnalysisCase::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(850)
inline enum femap::zReturnCode femap::IAnalysisCase::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(851)
inline enum femap::zReturnCode femap::IAnalysisCase::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(852)
inline enum femap::zReturnCode femap::IAnalysisCase::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(853)
inline int femap::IAnalysisCase::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(854)
inline enum femap::zReturnCode femap::IAnalysisCase::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(855)
inline enum femap::zReturnCode femap::IAnalysisCase::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(856)
inline _bstr_t femap::IAnalysisCase::GetCaseTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3a98, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(857)
inline void femap::IAnalysisCase::PutCaseTitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3a98, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(858)
inline int femap::IAnalysisCase::GetcaseID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3a99, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(859)
inline void femap::IAnalysisCase::PutcaseID ( int _val ) {
    _com_dispatch_propput(this, 0x3a99, VT_I4, _val);
}

#pragma implementation_key(860)
inline _bstr_t femap::IAnalysisCase::GetEcho ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3a9c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(861)
inline void femap::IAnalysisCase::PutEcho ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3a9c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(862)
inline VARIANT_BOOL femap::IAnalysisCase::GetSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3a9d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(863)
inline void femap::IAnalysisCase::PutSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3a9d, VT_BOOL, _val);
}

#pragma implementation_key(864)
inline int femap::IAnalysisCase::GetStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3a9e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(865)
inline void femap::IAnalysisCase::PutStartText ( int _val ) {
    _com_dispatch_propput(this, 0x3a9e, VT_I4, _val);
}

#pragma implementation_key(866)
inline int femap::IAnalysisCase::GetEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3a9f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(867)
inline void femap::IAnalysisCase::PutEndText ( int _val ) {
    _com_dispatch_propput(this, 0x3a9f, VT_I4, _val);
}

#pragma implementation_key(868)
inline int femap::IAnalysisCase::GetDestination ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(869)
inline void femap::IAnalysisCase::PutDestination ( int _val ) {
    _com_dispatch_propput(this, 0x3aa0, VT_I4, _val);
}

#pragma implementation_key(870)
inline int femap::IAnalysisCase::GetImaginary ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(871)
inline void femap::IAnalysisCase::PutImaginary ( int _val ) {
    _com_dispatch_propput(this, 0x3aa1, VT_I4, _val);
}

#pragma implementation_key(872)
inline int femap::IAnalysisCase::GetCornerOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(873)
inline void femap::IAnalysisCase::PutCornerOutput ( int _val ) {
    _com_dispatch_propput(this, 0x3aa2, VT_I4, _val);
}

#pragma implementation_key(874)
inline int femap::IAnalysisCase::GetIntegrationOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(875)
inline void femap::IAnalysisCase::PutIntegrationOutput ( int _val ) {
    _com_dispatch_propput(this, 0x3aa3, VT_I4, _val);
}

#pragma implementation_key(876)
inline VARIANT_BOOL femap::IAnalysisCase::GetAbaHistOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aa4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(877)
inline void femap::IAnalysisCase::PutAbaHistOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aa4, VT_BOOL, _val);
}

#pragma implementation_key(878)
inline double femap::IAnalysisCase::GetAbaHistTimePeriod ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(879)
inline void femap::IAnalysisCase::PutAbaHistTimePeriod ( double _val ) {
    _com_dispatch_propput(this, 0x3aa5, VT_R8, _val);
}

#pragma implementation_key(880)
inline double femap::IAnalysisCase::GetAbaHistInitTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(881)
inline void femap::IAnalysisCase::PutAbaHistInitTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3aa6, VT_R8, _val);
}

#pragma implementation_key(882)
inline double femap::IAnalysisCase::GetAbaHistMinTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(883)
inline void femap::IAnalysisCase::PutAbaHistMinTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3aa7, VT_R8, _val);
}

#pragma implementation_key(884)
inline double femap::IAnalysisCase::GetAbaHistMaxTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(885)
inline void femap::IAnalysisCase::PutAbaHistMaxTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3aa8, VT_R8, _val);
}

#pragma implementation_key(886)
inline int femap::IAnalysisCase::GetAbaHistEigenvectors ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(887)
inline void femap::IAnalysisCase::PutAbaHistEigenvectors ( int _val ) {
    _com_dispatch_propput(this, 0x3aa9, VT_I4, _val);
}

#pragma implementation_key(888)
inline double femap::IAnalysisCase::GetAbaHistMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aaa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(889)
inline void femap::IAnalysisCase::PutAbaHistMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3aaa, VT_R8, _val);
}

#pragma implementation_key(890)
inline double femap::IAnalysisCase::GetAbaHistMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aab, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(891)
inline void femap::IAnalysisCase::PutAbaHistMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3aab, VT_R8, _val);
}

#pragma implementation_key(892)
inline double femap::IAnalysisCase::GetAbaHistShiftFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aac, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(893)
inline void femap::IAnalysisCase::PutAbaHistShiftFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3aac, VT_R8, _val);
}

#pragma implementation_key(894)
inline double femap::IAnalysisCase::GetAbaHistScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aad, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(895)
inline void femap::IAnalysisCase::PutAbaHistScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x3aad, VT_R8, _val);
}

#pragma implementation_key(896)
inline int femap::IAnalysisCase::GetAbaHistOutInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aae, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(897)
inline void femap::IAnalysisCase::PutAbaHistOutInterval ( int _val ) {
    _com_dispatch_propput(this, 0x3aae, VT_I4, _val);
}

#pragma implementation_key(898)
inline VARIANT_BOOL femap::IAnalysisCase::GetAbaHistNonlinGeom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aaf, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(899)
inline void femap::IAnalysisCase::PutAbaHistNonlinGeom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aaf, VT_BOOL, _val);
}

#pragma implementation_key(900)
inline VARIANT_BOOL femap::IAnalysisCase::GetAbaHistLinearPert ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(901)
inline void femap::IAnalysisCase::PutAbaHistLinearPert ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab0, VT_BOOL, _val);
}

#pragma implementation_key(902)
inline VARIANT_BOOL femap::IAnalysisCase::GetAbaHistAutoContact ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(903)
inline void femap::IAnalysisCase::PutAbaHistAutoContact ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab1, VT_BOOL, _val);
}

#pragma implementation_key(904)
inline VARIANT_BOOL femap::IAnalysisCase::GetAbaHistStabilize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(905)
inline void femap::IAnalysisCase::PutAbaHistStabilize ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab2, VT_BOOL, _val);
}

#pragma implementation_key(906)
inline VARIANT_BOOL femap::IAnalysisCase::GetAbaHistOutZeroInc ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(907)
inline void femap::IAnalysisCase::PutAbaHistOutZeroInc ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab3, VT_BOOL, _val);
}

#pragma implementation_key(908)
inline int femap::IAnalysisCase::GetAbaHistStepAmp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ab4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(909)
inline void femap::IAnalysisCase::PutAbaHistStepAmp ( int _val ) {
    _com_dispatch_propput(this, 0x3ab4, VT_I4, _val);
}

#pragma implementation_key(910)
inline int femap::IAnalysisCase::GetAbaHistStepLoad ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ab5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(911)
inline void femap::IAnalysisCase::PutAbaHistStepLoad ( int _val ) {
    _com_dispatch_propput(this, 0x3ab5, VT_I4, _val);
}

#pragma implementation_key(912)
inline int femap::IAnalysisCase::GetAbaHistStepConstr ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ab6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(913)
inline void femap::IAnalysisCase::PutAbaHistStepConstr ( int _val ) {
    _com_dispatch_propput(this, 0x3ab6, VT_I4, _val);
}

#pragma implementation_key(914)
inline enum femap::zAnalysisType femap::IAnalysisCase::GetAbaHistAnalysisType ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x3ab7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(915)
inline void femap::IAnalysisCase::PutAbaHistAnalysisType ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x3ab7, VT_I4, _val);
}

#pragma implementation_key(916)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsDOFOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(917)
inline void femap::IAnalysisCase::PutAnsDOFOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab8, VT_BOOL, _val);
}

#pragma implementation_key(918)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsDOFDoSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(919)
inline void femap::IAnalysisCase::PutAnsDOFDoSet ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab9, VT_BOOL, _val);
}

#pragma implementation_key(920)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsDOFAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aba, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(921)
inline void femap::IAnalysisCase::PutAnsDOFAutomatic ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aba, VT_BOOL, _val);
}

#pragma implementation_key(922)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsDOFNoRotation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3abb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(923)
inline void femap::IAnalysisCase::PutAnsDOFNoRotation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3abb, VT_BOOL, _val);
}

#pragma implementation_key(924)
inline int femap::IAnalysisCase::GetAnsDOFSetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3abc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(925)
inline void femap::IAnalysisCase::PutAnsDOFSetID ( int _val ) {
    _com_dispatch_propput(this, 0x3abc, VT_I4, _val);
}

#pragma implementation_key(926)
inline int femap::IAnalysisCase::GetAnsDOFNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3abd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(927)
inline void femap::IAnalysisCase::PutAnsDOFNumber ( int _val ) {
    _com_dispatch_propput(this, 0x3abd, VT_I4, _val);
}

#pragma implementation_key(928)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsModesOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3abe, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(929)
inline void femap::IAnalysisCase::PutAnsModesOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3abe, VT_BOOL, _val);
}

#pragma implementation_key(930)
inline int femap::IAnalysisCase::GetAnsModesNumModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3abf, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(931)
inline void femap::IAnalysisCase::PutAnsModesNumModes ( int _val ) {
    _com_dispatch_propput(this, 0x3abf, VT_I4, _val);
}

#pragma implementation_key(932)
inline double femap::IAnalysisCase::GetAnsModesMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(933)
inline void femap::IAnalysisCase::PutAnsModesMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ac0, VT_R8, _val);
}

#pragma implementation_key(934)
inline double femap::IAnalysisCase::GetAnsModesMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(935)
inline void femap::IAnalysisCase::PutAnsModesMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ac1, VT_R8, _val);
}

#pragma implementation_key(936)
inline double femap::IAnalysisCase::GetAnsModesModalMethod ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(937)
inline void femap::IAnalysisCase::PutAnsModesModalMethod ( double _val ) {
    _com_dispatch_propput(this, 0x3ac2, VT_R8, _val);
}

#pragma implementation_key(938)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsModesElemResults ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ac3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(939)
inline void femap::IAnalysisCase::PutAnsModesElemResults ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ac3, VT_BOOL, _val);
}

#pragma implementation_key(940)
inline VARIANT_BOOL femap::IAnalysisCase::GetAnsHeatOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ac4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(941)
inline void femap::IAnalysisCase::PutAnsHeatOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ac4, VT_BOOL, _val);
}

#pragma implementation_key(942)
inline double femap::IAnalysisCase::GetAnsHeatEndTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(943)
inline void femap::IAnalysisCase::PutAnsHeatEndTime ( double _val ) {
    _com_dispatch_propput(this, 0x3ac5, VT_R8, _val);
}

#pragma implementation_key(944)
inline double femap::IAnalysisCase::GetAnsHeatTimeStep ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(945)
inline void femap::IAnalysisCase::PutAnsHeatTimeStep ( double _val ) {
    _com_dispatch_propput(this, 0x3ac6, VT_R8, _val);
}

#pragma implementation_key(946)
inline int femap::IAnalysisCase::GetAnsHeatOutputFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ac7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(947)
inline void femap::IAnalysisCase::PutAnsHeatOutputFreq ( int _val ) {
    _com_dispatch_propput(this, 0x3ac7, VT_I4, _val);
}

#pragma implementation_key(948)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarHistOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ac8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(949)
inline void femap::IAnalysisCase::PutMarHistOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ac8, VT_BOOL, _val);
}

#pragma implementation_key(950)
inline int femap::IAnalysisCase::GetMarHistContactProp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ac9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(951)
inline void femap::IAnalysisCase::PutMarHistContactProp ( int _val ) {
    _com_dispatch_propput(this, 0x3ac9, VT_I4, _val);
}

#pragma implementation_key(952)
inline int femap::IAnalysisCase::GetMarHistCtrlMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aca, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(953)
inline void femap::IAnalysisCase::PutMarHistCtrlMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3aca, VT_I4, _val);
}

#pragma implementation_key(954)
inline int femap::IAnalysisCase::GetMarHistSolverMeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3acb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(955)
inline void femap::IAnalysisCase::PutMarHistSolverMeth ( int _val ) {
    _com_dispatch_propput(this, 0x3acb, VT_I4, _val);
}

#pragma implementation_key(956)
inline int femap::IAnalysisCase::GetMarHistCtrlMaxStep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3acc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(957)
inline void femap::IAnalysisCase::PutMarHistCtrlMaxStep ( int _val ) {
    _com_dispatch_propput(this, 0x3acc, VT_I4, _val);
}

#pragma implementation_key(958)
inline int femap::IAnalysisCase::GetMarHistCtrlMaxRecycle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3acd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(959)
inline void femap::IAnalysisCase::PutMarHistCtrlMaxRecycle ( int _val ) {
    _com_dispatch_propput(this, 0x3acd, VT_I4, _val);
}

#pragma implementation_key(960)
inline int femap::IAnalysisCase::GetMarHistCtrlMinRecycle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ace, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(961)
inline void femap::IAnalysisCase::PutMarHistCtrlMinRecycle ( int _val ) {
    _com_dispatch_propput(this, 0x3ace, VT_I4, _val);
}

#pragma implementation_key(962)
inline double femap::IAnalysisCase::GetMarHistMaxResidual ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3acf, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(963)
inline void femap::IAnalysisCase::PutMarHistMaxResidual ( double _val ) {
    _com_dispatch_propput(this, 0x3acf, VT_R8, _val);
}

#pragma implementation_key(964)
inline int femap::IAnalysisCase::GetMarHistConvergeMeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(965)
inline void femap::IAnalysisCase::PutMarHistConvergeMeth ( int _val ) {
    _com_dispatch_propput(this, 0x3ad0, VT_I4, _val);
}

#pragma implementation_key(966)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarHistNonPosDefinite ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ad1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(967)
inline void femap::IAnalysisCase::PutMarHistNonPosDefinite ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ad1, VT_BOOL, _val);
}

#pragma implementation_key(968)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarHistNonSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ad2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(969)
inline void femap::IAnalysisCase::PutMarHistNonSymmetric ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ad2, VT_BOOL, _val);
}

#pragma implementation_key(970)
inline double femap::IAnalysisCase::GetMarHistModalMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ad3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(971)
inline void femap::IAnalysisCase::PutMarHistModalMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ad3, VT_R8, _val);
}

#pragma implementation_key(972)
inline double femap::IAnalysisCase::GetMarHistModalMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ad4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(973)
inline void femap::IAnalysisCase::PutMarHistModalMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ad4, VT_R8, _val);
}

#pragma implementation_key(974)
inline int femap::IAnalysisCase::GetMarHistModalEigen ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(975)
inline void femap::IAnalysisCase::PutMarHistModalEigen ( int _val ) {
    _com_dispatch_propput(this, 0x3ad5, VT_I4, _val);
}

#pragma implementation_key(976)
inline int femap::IAnalysisCase::GetMarHistChecking ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(977)
inline void femap::IAnalysisCase::PutMarHistChecking ( int _val ) {
    _com_dispatch_propput(this, 0x3ad6, VT_I4, _val);
}

#pragma implementation_key(978)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarHistAutoSwitch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ad7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(979)
inline void femap::IAnalysisCase::PutMarHistAutoSwitch ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ad7, VT_BOOL, _val);
}

#pragma implementation_key(980)
inline enum femap::zAnalysisType femap::IAnalysisCase::GetMarHistAnalCaseSol ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x3ad8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(981)
inline void femap::IAnalysisCase::PutMarHistAnalCaseSol ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x3ad8, VT_I4, _val);
}

#pragma implementation_key(982)
inline int femap::IAnalysisCase::GetMarHistBuckleNumModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(983)
inline void femap::IAnalysisCase::PutMarHistBuckleNumModes ( int _val ) {
    _com_dispatch_propput(this, 0x3ad9, VT_I4, _val);
}

#pragma implementation_key(984)
inline int femap::IAnalysisCase::GetMarHistBucklePosEigen ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ada, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(985)
inline void femap::IAnalysisCase::PutMarHistBucklePosEigen ( int _val ) {
    _com_dispatch_propput(this, 0x3ada, VT_I4, _val);
}

#pragma implementation_key(986)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarIncOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3adb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(987)
inline void femap::IAnalysisCase::PutMarIncOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3adb, VT_BOOL, _val);
}

#pragma implementation_key(988)
inline int femap::IAnalysisCase::GetMarIncArcLenMeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3adc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(989)
inline void femap::IAnalysisCase::PutMarIncArcLenMeth ( int _val ) {
    _com_dispatch_propput(this, 0x3adc, VT_I4, _val);
}

#pragma implementation_key(990)
inline double femap::IAnalysisCase::GetMarIncTimePeriod ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3add, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(991)
inline void femap::IAnalysisCase::PutMarIncTimePeriod ( double _val ) {
    _com_dispatch_propput(this, 0x3add, VT_R8, _val);
}

#pragma implementation_key(992)
inline double femap::IAnalysisCase::GetMarIncInitTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ade, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(993)
inline void femap::IAnalysisCase::PutMarIncInitTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3ade, VT_R8, _val);
}

#pragma implementation_key(994)
inline double femap::IAnalysisCase::GetMarIncMinTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3adf, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(995)
inline void femap::IAnalysisCase::PutMarIncMinTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3adf, VT_R8, _val);
}

#pragma implementation_key(996)
inline double femap::IAnalysisCase::GetMarIncMaxTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(997)
inline void femap::IAnalysisCase::PutMarIncMaxTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3ae0, VT_R8, _val);
}

#pragma implementation_key(998)
inline double femap::IAnalysisCase::GetMarIncScaleFact ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(999)
inline void femap::IAnalysisCase::PutMarIncScaleFact ( double _val ) {
    _com_dispatch_propput(this, 0x3ae1, VT_R8, _val);
}

#pragma implementation_key(1000)
inline int femap::IAnalysisCase::GetMarIncMaxStep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1001)
inline void femap::IAnalysisCase::PutMarIncMaxStep ( int _val ) {
    _com_dispatch_propput(this, 0x3ae2, VT_I4, _val);
}

#pragma implementation_key(1002)
inline int femap::IAnalysisCase::GetMarIncNumOutInc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1003)
inline void femap::IAnalysisCase::PutMarIncNumOutInc ( int _val ) {
    _com_dispatch_propput(this, 0x3ae3, VT_I4, _val);
}

#pragma implementation_key(1004)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarIncQuasiStatDamp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ae4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1005)
inline void femap::IAnalysisCase::PutMarIncQuasiStatDamp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ae4, VT_BOOL, _val);
}

#pragma implementation_key(1006)
inline double femap::IAnalysisCase::GetMarIncFracFirst ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1007)
inline void femap::IAnalysisCase::PutMarIncFracFirst ( double _val ) {
    _com_dispatch_propput(this, 0x3ae5, VT_R8, _val);
}

#pragma implementation_key(1008)
inline int femap::IAnalysisCase::GetMarIncMaxNumInc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1009)
inline void femap::IAnalysisCase::PutMarIncMaxNumInc ( int _val ) {
    _com_dispatch_propput(this, 0x3ae6, VT_I4, _val);
}

#pragma implementation_key(1010)
inline int femap::IAnalysisCase::GetMarIncCtrlMaxRecycle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1011)
inline void femap::IAnalysisCase::PutMarIncCtrlMaxRecycle ( int _val ) {
    _com_dispatch_propput(this, 0x3ae7, VT_I4, _val);
}

#pragma implementation_key(1012)
inline double femap::IAnalysisCase::GetMarIncMaxFracForAll ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1013)
inline void femap::IAnalysisCase::PutMarIncMaxFracForAll ( double _val ) {
    _com_dispatch_propput(this, 0x3ae8, VT_R8, _val);
}

#pragma implementation_key(1014)
inline double femap::IAnalysisCase::GetMarIncTotalTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae9, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1015)
inline void femap::IAnalysisCase::PutMarIncTotalTime ( double _val ) {
    _com_dispatch_propput(this, 0x3ae9, VT_R8, _val);
}

#pragma implementation_key(1016)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarCtblOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aea, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1017)
inline void femap::IAnalysisCase::PutMarCtblOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aea, VT_BOOL, _val);
}

#pragma implementation_key(1018)
inline VARIANT_BOOL femap::IAnalysisCase::GetMarCtblWrite ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aeb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1019)
inline void femap::IAnalysisCase::PutMarCtblWrite ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aeb, VT_BOOL, _val);
}

#pragma implementation_key(1020)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasOmodesOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aec, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1021)
inline void femap::IAnalysisCase::PutNasOmodesOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aec, VT_BOOL, _val);
}

#pragma implementation_key(1022)
inline _bstr_t femap::IAnalysisCase::GetNasOmodes ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3aed, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1023)
inline void femap::IAnalysisCase::PutNasOmodes ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3aed, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1024)
inline _variant_t femap::IAnalysisCase::GetvBCSet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3aee, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1025)
inline void femap::IAnalysisCase::PutvBCSet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3aee, VT_VARIANT, &_val);
}

#pragma implementation_key(1026)
inline _variant_t femap::IAnalysisCase::GetvOutput ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3aef, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1027)
inline void femap::IAnalysisCase::PutvOutput ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3aef, VT_VARIANT, &_val);
}

#pragma implementation_key(1028)
inline int femap::IAnalysisCase::GetCaseType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3af0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1029)
inline void femap::IAnalysisCase::PutCaseType ( int _val ) {
    _com_dispatch_propput(this, 0x3af0, VT_I4, _val);
}

#pragma implementation_key(1030)
inline VARIANT_BOOL femap::IAnalysisCase::GetDynHistOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1031)
inline void femap::IAnalysisCase::PutDynHistOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af1, VT_BOOL, _val);
}

#pragma implementation_key(1032)
inline int femap::IAnalysisCase::GetDynHistBodyLoadGrp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3af2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1033)
inline void femap::IAnalysisCase::PutDynHistBodyLoadGrp ( int _val ) {
    _com_dispatch_propput(this, 0x3af2, VT_I4, _val);
}

#pragma implementation_key(1034)
inline VARIANT_BOOL femap::IAnalysisCase::GetDynHistMassDampOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1035)
inline void femap::IAnalysisCase::PutDynHistMassDampOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af3, VT_BOOL, _val);
}

#pragma implementation_key(1036)
inline double femap::IAnalysisCase::GetDynHistMsssDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3af4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1037)
inline void femap::IAnalysisCase::PutDynHistMsssDamp ( double _val ) {
    _com_dispatch_propput(this, 0x3af4, VT_R8, _val);
}

#pragma implementation_key(1038)
inline VARIANT_BOOL femap::IAnalysisCase::GetDynHistImplicit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1039)
inline void femap::IAnalysisCase::PutDynHistImplicit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af5, VT_BOOL, _val);
}

#pragma implementation_key(1040)
inline VARIANT_BOOL femap::IAnalysisCase::GetDynHistSpringback ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1041)
inline void femap::IAnalysisCase::PutDynHistSpringback ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af6, VT_BOOL, _val);
}

#pragma implementation_key(1042)
inline VARIANT_BOOL femap::IAnalysisCase::GetDynHistStrainOutput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1043)
inline void femap::IAnalysisCase::PutDynHistStrainOutput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af7, VT_BOOL, _val);
}

#pragma implementation_key(1044)
inline double femap::IAnalysisCase::GetDynHistTotalTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3af8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1045)
inline void femap::IAnalysisCase::PutDynHistTotalTime ( double _val ) {
    _com_dispatch_propput(this, 0x3af8, VT_R8, _val);
}

#pragma implementation_key(1046)
inline double femap::IAnalysisCase::GetDynHistTimeHistOuput ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3af9, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1047)
inline void femap::IAnalysisCase::PutDynHistTimeHistOuput ( double _val ) {
    _com_dispatch_propput(this, 0x3af9, VT_R8, _val);
}

#pragma implementation_key(1048)
inline double femap::IAnalysisCase::GetDynHistPrintHistOutput ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3afa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1049)
inline void femap::IAnalysisCase::PutDynHistPrintHistOutput ( double _val ) {
    _com_dispatch_propput(this, 0x3afa, VT_R8, _val);
}

#pragma implementation_key(1050)
inline int femap::IAnalysisCase::GetDynHistPlateIntgPts ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3afb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1051)
inline void femap::IAnalysisCase::PutDynHistPlateIntgPts ( int _val ) {
    _com_dispatch_propput(this, 0x3afb, VT_I4, _val);
}

#pragma implementation_key(1052)
inline int femap::IAnalysisCase::GetDynHistGroupHistId ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3afc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1053)
inline void femap::IAnalysisCase::PutDynHistGroupHistId ( int _val ) {
    _com_dispatch_propput(this, 0x3afc, VT_I4, _val);
}

#pragma implementation_key(1054)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3afd, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1055)
inline void femap::IAnalysisCase::PutNasCnlOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3afd, VT_BOOL, _val);
}

#pragma implementation_key(1056)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlUseLoadSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3afe, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1057)
inline void femap::IAnalysisCase::PutNasCnlUseLoadSet ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3afe, VT_BOOL, _val);
}

#pragma implementation_key(1058)
inline int femap::IAnalysisCase::GetNasCnlIncrements ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aff, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1059)
inline void femap::IAnalysisCase::PutNasCnlIncrements ( int _val ) {
    _com_dispatch_propput(this, 0x3aff, VT_I4, _val);
}

#pragma implementation_key(1060)
inline double femap::IAnalysisCase::GetNasCnlTime_Increment ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b00, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1061)
inline void femap::IAnalysisCase::PutNasCnlTime_Increment ( double _val ) {
    _com_dispatch_propput(this, 0x3b00, VT_R8, _val);
}

#pragma implementation_key(1062)
inline int femap::IAnalysisCase::GetNasCnlMaxIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b01, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1063)
inline void femap::IAnalysisCase::PutNasCnlMaxIter ( int _val ) {
    _com_dispatch_propput(this, 0x3b01, VT_I4, _val);
}

#pragma implementation_key(1064)
inline _variant_t femap::IAnalysisCase::GetvNasCnlConvergenceFlags ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b02, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1065)
inline void femap::IAnalysisCase::PutvNasCnlConvergenceFlags ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b02, VT_VARIANT, &_val);
}

#pragma implementation_key(1066)
inline _variant_t femap::IAnalysisCase::GetvNasCnlConvergenceValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b03, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1067)
inline void femap::IAnalysisCase::PutvNasCnlConvergenceValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b03, VT_VARIANT, &_val);
}

#pragma implementation_key(1068)
inline int femap::IAnalysisCase::GetNasCnlCtiffnessMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b04, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1069)
inline void femap::IAnalysisCase::PutNasCnlCtiffnessMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b04, VT_I4, _val);
}

#pragma implementation_key(1070)
inline int femap::IAnalysisCase::GetNasCnlKstep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b05, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1071)
inline void femap::IAnalysisCase::PutNasCnlKstep ( int _val ) {
    _com_dispatch_propput(this, 0x3b05, VT_I4, _val);
}

#pragma implementation_key(1072)
inline int femap::IAnalysisCase::GetNasCnlIntermediateOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b06, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1073)
inline void femap::IAnalysisCase::PutNasCnlIntermediateOutput ( int _val ) {
    _com_dispatch_propput(this, 0x3b06, VT_I4, _val);
}

#pragma implementation_key(1074)
inline int femap::IAnalysisCase::GetNasCnlOutputInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b07, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1075)
inline void femap::IAnalysisCase::PutNasCnlOutputInterval ( int _val ) {
    _com_dispatch_propput(this, 0x3b07, VT_I4, _val);
}

#pragma implementation_key(1076)
inline int femap::IAnalysisCase::GetNasCnlSolutionStrategy ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b08, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1077)
inline void femap::IAnalysisCase::PutNasCnlSolutionStrategy ( int _val ) {
    _com_dispatch_propput(this, 0x3b08, VT_I4, _val);
}

#pragma implementation_key(1078)
inline int femap::IAnalysisCase::GetNasCnlSolutionOverrides ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b09, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1079)
inline void femap::IAnalysisCase::PutNasCnlSolutionOverrides ( int _val ) {
    _com_dispatch_propput(this, 0x3b09, VT_I4, _val);
}

#pragma implementation_key(1080)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlModnewtonLineSearch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b0a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1081)
inline void femap::IAnalysisCase::PutNasCnlModnewtonLineSearch ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b0a, VT_BOOL, _val);
}

#pragma implementation_key(1082)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlModnewtonQuasiNewton ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b0b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1083)
inline void femap::IAnalysisCase::PutNasCnlModnewtonQuasiNewton ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b0b, VT_BOOL, _val);
}

#pragma implementation_key(1084)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlModnewtonBisection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b0c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1085)
inline void femap::IAnalysisCase::PutNasCnlModnewtonBisection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b0c, VT_BOOL, _val);
}

#pragma implementation_key(1086)
inline int femap::IAnalysisCase::GetNasCnlArcConstraintType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b0d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1087)
inline void femap::IAnalysisCase::PutNasCnlArcConstraintType ( int _val ) {
    _com_dispatch_propput(this, 0x3b0d, VT_I4, _val);
}

#pragma implementation_key(1088)
inline double femap::IAnalysisCase::GetNasCnlArcMinAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b0e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1089)
inline void femap::IAnalysisCase::PutNasCnlArcMinAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x3b0e, VT_R8, _val);
}

#pragma implementation_key(1090)
inline double femap::IAnalysisCase::GetNasCnlArcMaxAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b0f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1091)
inline void femap::IAnalysisCase::PutNasCnlArcMaxAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x3b0f, VT_R8, _val);
}

#pragma implementation_key(1092)
inline double femap::IAnalysisCase::GetNasCnlArcLoadScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b10, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1093)
inline void femap::IAnalysisCase::PutNasCnlArcLoadScale ( double _val ) {
    _com_dispatch_propput(this, 0x3b10, VT_R8, _val);
}

#pragma implementation_key(1094)
inline int femap::IAnalysisCase::GetNasCnlArcDesiredIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b11, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1095)
inline void femap::IAnalysisCase::PutNasCnlArcDesiredIter ( int _val ) {
    _com_dispatch_propput(this, 0x3b11, VT_I4, _val);
}

#pragma implementation_key(1096)
inline int femap::IAnalysisCase::GetNasCnlArcMaxSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b12, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1097)
inline void femap::IAnalysisCase::PutNasCnlArcMaxSteps ( int _val ) {
    _com_dispatch_propput(this, 0x3b12, VT_I4, _val);
}

#pragma implementation_key(1098)
inline int femap::IAnalysisCase::GetNasCnlTimeSkipAdjust ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b13, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1099)
inline void femap::IAnalysisCase::PutNasCnlTimeSkipAdjust ( int _val ) {
    _com_dispatch_propput(this, 0x3b13, VT_I4, _val);
}

#pragma implementation_key(1100)
inline int femap::IAnalysisCase::GetNasCnlDominantPeriodSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b14, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1101)
inline void femap::IAnalysisCase::PutNasCnlDominantPeriodSteps ( int _val ) {
    _com_dispatch_propput(this, 0x3b14, VT_I4, _val);
}

#pragma implementation_key(1102)
inline double femap::IAnalysisCase::GetNasCnlBoundsRb ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b15, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1103)
inline void femap::IAnalysisCase::PutNasCnlBoundsRb ( double _val ) {
    _com_dispatch_propput(this, 0x3b15, VT_R8, _val);
}

#pragma implementation_key(1104)
inline double femap::IAnalysisCase::GetNasCnlStabilityTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b16, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1105)
inline void femap::IAnalysisCase::PutNasCnlStabilityTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x3b16, VT_R8, _val);
}

#pragma implementation_key(1106)
inline int femap::IAnalysisCase::GetNasCnlDivergenceLimit ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b17, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1107)
inline void femap::IAnalysisCase::PutNasCnlDivergenceLimit ( int _val ) {
    _com_dispatch_propput(this, 0x3b17, VT_I4, _val);
}

#pragma implementation_key(1108)
inline int femap::IAnalysisCase::GetNasCnlQuasiNewtonVectors ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b18, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1109)
inline void femap::IAnalysisCase::PutNasCnlQuasiNewtonVectors ( int _val ) {
    _com_dispatch_propput(this, 0x3b18, VT_I4, _val);
}

#pragma implementation_key(1110)
inline int femap::IAnalysisCase::GetNasCnlMaxLineSearch ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b19, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1111)
inline void femap::IAnalysisCase::PutNasCnlMaxLineSearch ( int _val ) {
    _com_dispatch_propput(this, 0x3b19, VT_I4, _val);
}

#pragma implementation_key(1112)
inline double femap::IAnalysisCase::GetNasCnlLineSearchTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1113)
inline void femap::IAnalysisCase::PutNasCnlLineSearchTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x3b1a, VT_R8, _val);
}

#pragma implementation_key(1114)
inline int femap::IAnalysisCase::GetNasCnlMaxBisections ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b1b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1115)
inline void femap::IAnalysisCase::PutNasCnlMaxBisections ( int _val ) {
    _com_dispatch_propput(this, 0x3b1b, VT_I4, _val);
}

#pragma implementation_key(1116)
inline double femap::IAnalysisCase::GetNasCnlMaxRotation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1117)
inline void femap::IAnalysisCase::PutNasCnlMaxRotation ( double _val ) {
    _com_dispatch_propput(this, 0x3b1c, VT_R8, _val);
}

#pragma implementation_key(1118)
inline double femap::IAnalysisCase::GetNasCnlFstress ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1119)
inline void femap::IAnalysisCase::PutNasCnlFstress ( double _val ) {
    _com_dispatch_propput(this, 0x3b1d, VT_R8, _val);
}

#pragma implementation_key(1120)
inline double femap::IAnalysisCase::GetNasCnlMaxAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1121)
inline void femap::IAnalysisCase::PutNasCnlMaxAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x3b1e, VT_R8, _val);
}

#pragma implementation_key(1122)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlCreep ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b1f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1123)
inline void femap::IAnalysisCase::PutNasCnlCreep ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b1f, VT_BOOL, _val);
}

#pragma implementation_key(1124)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlSkipNLPARM ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b20, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1125)
inline void femap::IAnalysisCase::PutNasCnlSkipNLPARM ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b20, VT_BOOL, _val);
}

#pragma implementation_key(1126)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCaeOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b2e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1127)
inline void femap::IAnalysisCase::PutNasCaeOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b2e, VT_BOOL, _val);
}

#pragma implementation_key(1128)
inline double femap::IAnalysisCase::GetNasCaeMachNumber ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b2f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1129)
inline void femap::IAnalysisCase::PutNasCaeMachNumber ( double _val ) {
    _com_dispatch_propput(this, 0x3b2f, VT_R8, _val);
}

#pragma implementation_key(1130)
inline double femap::IAnalysisCase::GetNasCaeDynPressure ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b30, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1131)
inline void femap::IAnalysisCase::PutNasCaeDynPressure ( double _val ) {
    _com_dispatch_propput(this, 0x3b30, VT_R8, _val);
}

#pragma implementation_key(1132)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCaeRigidTrim ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b32, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1133)
inline void femap::IAnalysisCase::PutNasCaeRigidTrim ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b32, VT_BOOL, _val);
}

#pragma implementation_key(1134)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCaeWrtieTrim ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b33, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1135)
inline void femap::IAnalysisCase::PutNasCaeWrtieTrim ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b33, VT_BOOL, _val);
}

#pragma implementation_key(1136)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCflOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b34, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1137)
inline void femap::IAnalysisCase::PutNasCflOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b34, VT_BOOL, _val);
}

#pragma implementation_key(1138)
inline int femap::IAnalysisCase::GetNasCflMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b35, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1139)
inline void femap::IAnalysisCase::PutNasCflMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b35, VT_I4, _val);
}

#pragma implementation_key(1140)
inline int femap::IAnalysisCase::GetNasCflDenID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b36, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1141)
inline void femap::IAnalysisCase::PutNasCflDenID ( int _val ) {
    _com_dispatch_propput(this, 0x3b36, VT_I4, _val);
}

#pragma implementation_key(1142)
inline int femap::IAnalysisCase::GetNasCflMachFactID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b37, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1143)
inline void femap::IAnalysisCase::PutNasCflMachFactID ( int _val ) {
    _com_dispatch_propput(this, 0x3b37, VT_I4, _val);
}

#pragma implementation_key(1144)
inline int femap::IAnalysisCase::GetNasCflRfreqFactID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b38, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1145)
inline void femap::IAnalysisCase::PutNasCflRfreqFactID ( int _val ) {
    _com_dispatch_propput(this, 0x3b38, VT_I4, _val);
}

#pragma implementation_key(1146)
inline int femap::IAnalysisCase::GetNasCflFliMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b39, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1147)
inline void femap::IAnalysisCase::PutNasCflFliMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b39, VT_I4, _val);
}

#pragma implementation_key(1148)
inline int femap::IAnalysisCase::GetNasCflEig ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b3a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1149)
inline void femap::IAnalysisCase::PutNasCflEig ( int _val ) {
    _com_dispatch_propput(this, 0x3b3a, VT_I4, _val);
}

#pragma implementation_key(1150)
inline double femap::IAnalysisCase::GetNasCflEps ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b3b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1151)
inline void femap::IAnalysisCase::PutNasCflEps ( double _val ) {
    _com_dispatch_propput(this, 0x3b3b, VT_R8, _val);
}

#pragma implementation_key(1152)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCflWriteFlutter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b3c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1153)
inline void femap::IAnalysisCase::PutNasCflWriteFlutter ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b3c, VT_BOOL, _val);
}

#pragma implementation_key(1154)
inline int femap::IAnalysisCase::GetNasSELoad ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b3d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1155)
inline void femap::IAnalysisCase::PutNasSELoad ( int _val ) {
    _com_dispatch_propput(this, 0x3b3d, VT_I4, _val);
}

#pragma implementation_key(1156)
inline int femap::IAnalysisCase::GetNasCflSdampID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b43, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1157)
inline void femap::IAnalysisCase::PutNasCflSdampID ( int _val ) {
    _com_dispatch_propput(this, 0x3b43, VT_I4, _val);
}

#pragma implementation_key(1158)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCnlkDAMP ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b44, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1159)
inline void femap::IAnalysisCase::PutNasCnlkDAMP ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b44, VT_BOOL, _val);
}

#pragma implementation_key(1160)
inline int femap::IAnalysisCase::GetNasCnlkUPDATE ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b45, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1161)
inline void femap::IAnalysisCase::PutNasCnlkUPDATE ( int _val ) {
    _com_dispatch_propput(this, 0x3b45, VT_I4, _val);
}

#pragma implementation_key(1162)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasRelEMotion ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b46, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1163)
inline void femap::IAnalysisCase::PutNasRelEMotion ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b46, VT_BOOL, _val);
}

#pragma implementation_key(1164)
inline int femap::IAnalysisCase::GetNasCnlStiffnessMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b47, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1165)
inline void femap::IAnalysisCase::PutNasCnlStiffnessMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b47, VT_I4, _val);
}

#pragma implementation_key(1166)
inline _bstr_t femap::IAnalysisCase::GetCaseLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3b48, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1167)
inline void femap::IAnalysisCase::PutCaseLabel ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3b48, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1168)
inline int femap::IAnalysisCase::GetContactOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b49, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1169)
inline void femap::IAnalysisCase::PutContactOption ( int _val ) {
    _com_dispatch_propput(this, 0x3b49, VT_I4, _val);
}

#pragma implementation_key(1170)
inline int femap::IAnalysisCase::GetContactSetType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b4a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1171)
inline void femap::IAnalysisCase::PutContactSetType ( int _val ) {
    _com_dispatch_propput(this, 0x3b4a, VT_I4, _val);
}

#pragma implementation_key(1172)
inline _variant_t femap::IAnalysisCase::GetvMSCNasCnlConvergenceFlags ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b4b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1173)
inline void femap::IAnalysisCase::PutvMSCNasCnlConvergenceFlags ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b4b, VT_VARIANT, &_val);
}

#pragma implementation_key(1174)
inline VARIANT_BOOL femap::IAnalysisCase::GetNasCurvatureStrain ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b4c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1175)
inline void femap::IAnalysisCase::PutNasCurvatureStrain ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b4c, VT_BOOL, _val);
}

#pragma implementation_key(1176)
inline int femap::IAnalysisCase::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1177)
inline void femap::IAnalysisCase::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(1178)
inline int femap::IAnalysisCase::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1179)
inline void femap::IAnalysisCase::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(1180)
inline int femap::IAnalysisCase::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1181)
inline void femap::IAnalysisCase::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface INode wrapper method implementations
//

#pragma implementation_key(1182)
inline VARIANT_BOOL femap::INode::GetpermBC ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1183)
inline void femap::INode::PutpermBC ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1184)
inline enum femap::zReturnCode femap::INode::GetCoordArray ( int setID, int * numNode, VARIANT * entID, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c", setID, numNode, entID, xyz);
    return _result;
}

#pragma implementation_key(1185)
inline enum femap::zReturnCode femap::INode::GetAllArray ( int setID, int * numNode, VARIANT * entID, VARIANT * xyz, VARIANT * layer, VARIANT * color, VARIANT * ndType, VARIANT * defCSys, VARIANT * outCSys, VARIANT * permBC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", setID, numNode, entID, xyz, layer, color, ndType, defCSys, outCSys, permBC);
    return _result;
}

#pragma implementation_key(1186)
inline enum femap::zReturnCode femap::INode::GetAll ( int entID, double * x, double * y, double * z, int * nlayer, enum zColor * nColor, enum zNodeType * ntype, int * defCSys, int * outCSys, VARIANT * permBC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005\x4003\x4003\x4003\x4003\x4003\x400c", entID, x, y, z, nlayer, nColor, ntype, defCSys, outCSys, permBC);
    return _result;
}

#pragma implementation_key(1187)
inline enum femap::zReturnCode femap::INode::PutAll ( int entID, double x, double y, double z, int layer, enum zColor color, enum zNodeType ndType, int defCSys, int outCSys, const _variant_t & permBC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0003\x0003\x0003\x0003\x0003\x000c", entID, x, y, z, layer, color, ndType, defCSys, outCSys, &permBC);
    return _result;
}

#pragma implementation_key(1188)
inline enum femap::zReturnCode femap::INode::PutAllArray ( int numNode, const _variant_t & entID, const _variant_t & xyz, const _variant_t & layer, const _variant_t & color, const _variant_t & ndType, const _variant_t & defCSys, const _variant_t & outCSys, const _variant_t & permBC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", numNode, &entID, &xyz, &layer, &color, &ndType, &defCSys, &outCSys, &permBC);
    return _result;
}

#pragma implementation_key(1189)
inline enum femap::zReturnCode femap::INode::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(1190)
inline enum femap::zReturnCode femap::INode::GetClosest ( const _variant_t & vXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c", &vXYZ);
    return _result;
}

#pragma implementation_key(1191)
inline enum femap::zReturnCode femap::INode::IsMidsideNode ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(1192)
inline enum femap::zReturnCode femap::INode::PutCoordArray ( int numNode, const _variant_t & entID, const _variant_t & xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", numNode, &entID, &xyz);
    return _result;
}

#pragma implementation_key(1193)
inline enum femap::zReturnCode femap::INode::GetCoordArray2 ( int setID, int * numNode, VARIANT * entID, VARIANT * Exist, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c", setID, numNode, entID, Exist, xyz);
    return _result;
}

#pragma implementation_key(1194)
inline enum femap::zReturnCode femap::INode::GetAllArray2 ( int setID, int * numNode, VARIANT * entID, VARIANT * Exist, VARIANT * xyz, VARIANT * layer, VARIANT * color, VARIANT * ndType, VARIANT * defCSys, VARIANT * outCSys, VARIANT * permBC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", setID, numNode, entID, Exist, xyz, layer, color, ndType, defCSys, outCSys, permBC);
    return _result;
}

#pragma implementation_key(1195)
inline enum femap::zReturnCode femap::INode::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1196)
inline enum femap::zReturnCode femap::INode::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1197)
inline enum femap::zReturnCode femap::INode::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1198)
inline enum femap::zReturnCode femap::INode::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1199)
inline enum femap::zReturnCode femap::INode::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1200)
inline enum femap::zReturnCode femap::INode::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1201)
inline enum femap::zReturnCode femap::INode::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1202)
inline enum femap::zReturnCode femap::INode::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1203)
inline enum femap::zReturnCode femap::INode::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1204)
inline enum femap::zReturnCode femap::INode::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1205)
inline enum femap::zReturnCode femap::INode::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1206)
inline enum femap::zReturnCode femap::INode::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1207)
inline enum femap::zReturnCode femap::INode::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1208)
inline int femap::INode::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1209)
inline int femap::INode::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1210)
inline int femap::INode::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1211)
inline int femap::INode::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1212)
inline enum femap::zReturnCode femap::INode::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1213)
inline enum femap::zReturnCode femap::INode::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1214)
inline enum femap::zReturnCode femap::INode::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1215)
inline enum femap::zReturnCode femap::INode::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(1216)
inline enum femap::zReturnCode femap::INode::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(1217)
inline int femap::INode::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(1218)
inline enum femap::zReturnCode femap::INode::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(1219)
inline enum femap::zReturnCode femap::INode::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(1220)
inline enum femap::zReturnCode femap::INode::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(1221)
inline int femap::INode::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1222)
inline enum femap::zReturnCode femap::INode::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(1223)
inline enum femap::zReturnCode femap::INode::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(1224)
inline double femap::INode::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1225)
inline void femap::INode::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(1226)
inline double femap::INode::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1227)
inline void femap::INode::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(1228)
inline double femap::INode::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1229)
inline void femap::INode::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(1230)
inline int femap::INode::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1231)
inline void femap::INode::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(1232)
inline enum femap::zColor femap::INode::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1233)
inline void femap::INode::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(1234)
inline enum femap::zNodeType femap::INode::Gettype ( ) {
    enum zNodeType _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1235)
inline void femap::INode::Puttype ( enum zNodeType _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(1236)
inline int femap::INode::GetdefCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1237)
inline void femap::INode::PutdefCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(1238)
inline int femap::INode::GetoutCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1239)
inline void femap::INode::PutoutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(1240)
inline _variant_t femap::INode::GetvpermBC ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2719, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1241)
inline void femap::INode::PutvpermBC ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2719, VT_VARIANT, &_val);
}

#pragma implementation_key(1242)
inline int femap::INode::GetsuperelementID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1243)
inline void femap::INode::PutsuperelementID ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(1244)
inline _variant_t femap::INode::Getxyz ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1245)
inline void femap::INode::Putxyz ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(1246)
inline int femap::INode::GetNumberOfElements ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1247)
inline void femap::INode::PutNumberOfElements ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(1248)
inline int femap::INode::GetNumberOfLoads ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1249)
inline void femap::INode::PutNumberOfLoads ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(1250)
inline int femap::INode::GetNumberOfConstraints ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1251)
inline void femap::INode::PutNumberOfConstraints ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(1252)
inline int femap::INode::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1253)
inline void femap::INode::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(1254)
inline int femap::INode::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1255)
inline void femap::INode::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(1256)
inline int femap::INode::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1257)
inline void femap::INode::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IAnalysisMgr wrapper method implementations
//

#pragma implementation_key(1258)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNonlinEpsFlag ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1259)
inline void femap::IAnalysisMgr::PutNasNonlinEpsFlag ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1260)
inline double femap::IAnalysisMgr::GetNasNonlinEps ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1261)
inline void femap::IAnalysisMgr::PutNasNonlinEps ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1262)
inline double femap::IAnalysisMgr::GetNasModeFreqRange ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1263)
inline void femap::IAnalysisMgr::PutNasModeFreqRange ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1264)
inline int femap::IAnalysisMgr::GetNasModeXYRequest ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1265)
inline void femap::IAnalysisMgr::PutNasModeXYRequest ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(1266)
inline int femap::IAnalysisMgr::GetNasRandomRequest ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1267)
inline void femap::IAnalysisMgr::PutNasRandomRequest ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(1268)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandXYRequest ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1269)
inline void femap::IAnalysisMgr::PutNasRandXYRequest ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1270)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGenSpecRequest ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1271)
inline void femap::IAnalysisMgr::PutNasGenSpecRequest ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1272)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGCheckTest ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1273)
inline void femap::IAnalysisMgr::PutNasGCheckTest ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1274)
inline double femap::IAnalysisMgr::GetNasGCheckTol ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1275)
inline void femap::IAnalysisMgr::PutNasGCheckTol ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1276)
inline int femap::IAnalysisMgr::GetNasGCheckMsg ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1277)
inline void femap::IAnalysisMgr::PutNasGCheckMsg ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(1278)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMCheckWtDOFSet ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1279)
inline void femap::IAnalysisMgr::PutNasMCheckWtDOFSet ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1280)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMCheckGrndDOFSet ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1281)
inline void femap::IAnalysisMgr::PutNasMCheckGrndDOFSet ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1282)
inline double femap::IAnalysisMgr::GetFStDynFreqRange ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1283)
inline void femap::IAnalysisMgr::PutFStDynFreqRange ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1284)
inline double femap::IAnalysisMgr::GetNasModeImagFreqRange ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1285)
inline void femap::IAnalysisMgr::PutNasModeImagFreqRange ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1286)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDdamCoeffOn ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1287)
inline void femap::IAnalysisMgr::PutNasDdamCoeffOn ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1288)
inline double femap::IAnalysisMgr::GetNasDdamCoeffVal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1289)
inline void femap::IAnalysisMgr::PutNasDdamCoeffVal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1290)
inline double femap::IAnalysisMgr::GetNasDynKeepFreq ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1291)
inline void femap::IAnalysisMgr::PutNasDynKeepFreq ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1292)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGCheckTest2 ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1293)
inline void femap::IAnalysisMgr::PutNasGCheckTest2 ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1294)
inline double femap::IAnalysisMgr::GetNasGCheckTol2 ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1295)
inline void femap::IAnalysisMgr::PutNasGCheckTol2 ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1296)
inline int femap::IAnalysisMgr::GetNasGCheckMsg2 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1297)
inline void femap::IAnalysisMgr::PutNasGCheckMsg2 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(1298)
inline double femap::IAnalysisMgr::GetNasBulkAlpha1Val ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1299)
inline void femap::IAnalysisMgr::PutNasBulkAlpha1Val ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1300)
inline double femap::IAnalysisMgr::GetNasBulkAlpha2Val ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1301)
inline void femap::IAnalysisMgr::PutNasBulkAlpha2Val ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1302)
inline int femap::IAnalysisMgr::GetBCSet ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4a38, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1303)
inline void femap::IAnalysisMgr::PutBCSet ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4a38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(1304)
inline int femap::IAnalysisMgr::GetOutput ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4a39, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1305)
inline void femap::IAnalysisMgr::PutOutput ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4a39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(1306)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlConvergenceFlags ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a3a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1307)
inline void femap::IAnalysisMgr::PutNasCnlConvergenceFlags ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4a3a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1308)
inline double femap::IAnalysisMgr::GetNasCnlConvergenceValue ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4a3b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1309)
inline void femap::IAnalysisMgr::PutNasCnlConvergenceValue ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4a3b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(1310)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMSCNasCnlConvergenceFlags ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4a3c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(1311)
inline void femap::IAnalysisMgr::PutMSCNasCnlConvergenceFlags ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4a3c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(1312)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetText ( int textID, BSTR * text ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", textID, text);
    return _result;
}

#pragma implementation_key(1313)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutText ( int textID, _bstr_t text ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", textID, (BSTR)text);
    return _result;
}

#pragma implementation_key(1314)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetCorrelate ( int * Count, VARIANT * excitedCase, VARIANT * appliedCase, VARIANT * realScale, VARIANT * imagScale, VARIANT * realFunc, VARIANT * imagFunc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c\x400c\x400c", Count, excitedCase, appliedCase, realScale, imagScale, realFunc, imagFunc);
    return _result;
}

#pragma implementation_key(1315)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutCorrelate ( int Count, const _variant_t & excitedCase, const _variant_t & appliedCase, const _variant_t & realScale, const _variant_t & imagScale, const _variant_t & realFunc, const _variant_t & imagFunc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c", Count, &excitedCase, &appliedCase, &realScale, &imagScale, &realFunc, &imagFunc);
    return _result;
}

#pragma implementation_key(1316)
inline enum femap::zReturnCode femap::IAnalysisMgr::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(1317)
inline enum femap::zReturnCode femap::IAnalysisMgr::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(1318)
inline femap::IAnalysisCasePtr femap::IAnalysisMgr::Case ( int entID ) {
    struct IAnalysisCase * _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", entID);
    return IAnalysisCasePtr(_result, false);
}

#pragma implementation_key(1319)
inline enum femap::zReturnCode femap::IAnalysisMgr::Analyze ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(1320)
inline enum femap::zReturnCode femap::IAnalysisMgr::AnalyzeMultiple ( int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", setID);
    return _result;
}

#pragma implementation_key(1321)
inline enum femap::zReturnCode femap::IAnalysisMgr::ClearAnalysisQueue ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1322)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetCorrelate2 ( int * Count, VARIANT * excitedCase, VARIANT * appliedCase, VARIANT * realScale, VARIANT * imagScale, VARIANT * realFunc, VARIANT * imagFunc, VARIANT * realInterp, VARIANT * imagInterp ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", Count, excitedCase, appliedCase, realScale, imagScale, realFunc, imagFunc, realInterp, imagInterp);
    return _result;
}

#pragma implementation_key(1323)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutCorrelate2 ( int Count, const _variant_t & excitedCase, const _variant_t & appliedCase, const _variant_t & realScale, const _variant_t & imagScale, const _variant_t & realFunc, const _variant_t & imagFunc, const _variant_t & realInterp, const _variant_t & imagInterp ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", Count, &excitedCase, &appliedCase, &realScale, &imagScale, &realFunc, &imagFunc, &realInterp, &imagInterp);
    return _result;
}

#pragma implementation_key(1324)
inline enum femap::zReturnCode femap::IAnalysisMgr::Preview ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(1325)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetStandardTrim ( VARIANT * useTrim, VARIANT * TrimID, VARIANT * TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c\x400c", useTrim, TrimID, TrimVal);
    return _result;
}

#pragma implementation_key(1326)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutStandardTrim ( const _variant_t & useTrim, const _variant_t & TrimID, const _variant_t & TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c", &useTrim, &TrimID, &TrimVal);
    return _result;
}

#pragma implementation_key(1327)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetTrimControlSurf ( VARIANT * useTrim, VARIANT * TrimID, VARIANT * TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c\x400c", useTrim, TrimID, TrimVal);
    return _result;
}

#pragma implementation_key(1328)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutTrimControlSurf ( const _variant_t & useTrim, const _variant_t & TrimID, const _variant_t & TrimVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c", &useTrim, &TrimID, &TrimVal);
    return _result;
}

#pragma implementation_key(1329)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetContactTable ( int * Count, VARIANT * rowSeg, VARIANT * colSeg, VARIANT * tieType, VARIANT * distTol, VARIANT * sepForce, VARIANT * friction, VARIANT * interClose ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61aa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c", Count, rowSeg, colSeg, tieType, distTol, sepForce, friction, interClose);
    return _result;
}

#pragma implementation_key(1330)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutContactTable ( int Count, const _variant_t & rowSeg, const _variant_t & colSeg, const _variant_t & tieType, const _variant_t & distTol, const _variant_t & sepForce, const _variant_t & friction, const _variant_t & interClose ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ab, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c", Count, &rowSeg, &colSeg, &tieType, &distTol, &sepForce, &friction, &interClose);
    return _result;
}

#pragma implementation_key(1331)
inline enum femap::zReturnCode femap::IAnalysisMgr::InitAnalysisMgr ( enum zAnalysisMgrProgram analysis_program, enum zAnalysisType analysis_type, VARIANT_BOOL InitMasterCase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ac, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", analysis_program, analysis_type, InitMasterCase);
    return _result;
}

#pragma implementation_key(1332)
inline enum femap::zReturnCode femap::IAnalysisMgr::DeleteAnalysisCase ( int nSetID, int nCaseID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ad, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nCaseID);
    return _result;
}

#pragma implementation_key(1333)
inline enum femap::zReturnCode femap::IAnalysisMgr::AllFreqOn ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x6590, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1334)
inline enum femap::zReturnCode femap::IAnalysisMgr::AllFreqOff ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x6591, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1335)
inline enum femap::zReturnCode femap::IAnalysisMgr::TurnOnFreq ( int freqID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x6592, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", freqID);
    return _result;
}

#pragma implementation_key(1336)
inline enum femap::zReturnCode femap::IAnalysisMgr::TurnOffFreq ( int freqID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x6593, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", freqID);
    return _result;
}

#pragma implementation_key(1337)
inline enum femap::zReturnCode femap::IAnalysisMgr::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1338)
inline enum femap::zReturnCode femap::IAnalysisMgr::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1339)
inline enum femap::zReturnCode femap::IAnalysisMgr::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1340)
inline enum femap::zReturnCode femap::IAnalysisMgr::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1341)
inline enum femap::zReturnCode femap::IAnalysisMgr::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1342)
inline enum femap::zReturnCode femap::IAnalysisMgr::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1343)
inline enum femap::zReturnCode femap::IAnalysisMgr::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1344)
inline enum femap::zReturnCode femap::IAnalysisMgr::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1345)
inline enum femap::zReturnCode femap::IAnalysisMgr::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1346)
inline enum femap::zReturnCode femap::IAnalysisMgr::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1347)
inline enum femap::zReturnCode femap::IAnalysisMgr::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1348)
inline enum femap::zReturnCode femap::IAnalysisMgr::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1349)
inline int femap::IAnalysisMgr::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1350)
inline int femap::IAnalysisMgr::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1351)
inline int femap::IAnalysisMgr::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1352)
inline int femap::IAnalysisMgr::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1353)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1354)
inline enum femap::zReturnCode femap::IAnalysisMgr::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1355)
inline enum femap::zReturnCode femap::IAnalysisMgr::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(1356)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(1357)
inline enum femap::zReturnCode femap::IAnalysisMgr::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(1358)
inline int femap::IAnalysisMgr::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(1359)
inline enum femap::zReturnCode femap::IAnalysisMgr::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(1360)
inline enum femap::zReturnCode femap::IAnalysisMgr::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(1361)
inline enum femap::zReturnCode femap::IAnalysisMgr::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(1362)
inline int femap::IAnalysisMgr::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(1363)
inline enum femap::zReturnCode femap::IAnalysisMgr::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(1364)
inline enum femap::zReturnCode femap::IAnalysisMgr::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(1365)
inline enum femap::zAnalysisMgrProgram femap::IAnalysisMgr::GetSolver ( ) {
    enum zAnalysisMgrProgram _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1366)
inline void femap::IAnalysisMgr::PutSolver ( enum zAnalysisMgrProgram _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(1367)
inline enum femap::zAnalysisType femap::IAnalysisMgr::GetAnalysisType ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1368)
inline void femap::IAnalysisMgr::PutAnalysisType ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(1369)
inline _bstr_t femap::IAnalysisMgr::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1370)
inline void femap::IAnalysisMgr::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1371)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1372)
inline void femap::IAnalysisMgr::PutNasExecOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(1373)
inline int femap::IAnalysisMgr::GetNasExecVersion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1374)
inline void femap::IAnalysisMgr::PutNasExecVersion ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(1375)
inline _bstr_t femap::IAnalysisMgr::GetNasExecOutDir ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1376)
inline void femap::IAnalysisMgr::PutNasExecOutDir ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1377)
inline _bstr_t femap::IAnalysisMgr::GetNasExecProblem ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1378)
inline void femap::IAnalysisMgr::PutNasExecProblem ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1379)
inline _bstr_t femap::IAnalysisMgr::GetNasExecSolName ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1380)
inline void femap::IAnalysisMgr::PutNasExecSolName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1381)
inline double femap::IAnalysisMgr::GetNasExecMaxTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1382)
inline void femap::IAnalysisMgr::PutNasExecMaxTime ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(1383)
inline _bstr_t femap::IAnalysisMgr::GetNasExecDiag ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1384)
inline void femap::IAnalysisMgr::PutNasExecDiag ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1385)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecIterSolve ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1386)
inline void femap::IAnalysisMgr::PutNasExecIterSolve ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(1387)
inline int femap::IAnalysisMgr::GetNasExecNumCPU ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1388)
inline void femap::IAnalysisMgr::PutNasExecNumCPU ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(1389)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecSaveDB ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1390)
inline void femap::IAnalysisMgr::PutNasExecSaveDB ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271c, VT_BOOL, _val);
}

#pragma implementation_key(1391)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecRestart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1392)
inline void femap::IAnalysisMgr::PutNasExecRestart ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271d, VT_BOOL, _val);
}

#pragma implementation_key(1393)
inline _bstr_t femap::IAnalysisMgr::GetNasExecRestartDB ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1394)
inline void femap::IAnalysisMgr::PutNasExecRestartDB ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271e, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1395)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1396)
inline void femap::IAnalysisMgr::PutNasExecSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271f, VT_BOOL, _val);
}

#pragma implementation_key(1397)
inline int femap::IAnalysisMgr::GetNasExecStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1398)
inline void femap::IAnalysisMgr::PutNasExecStartText ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(1399)
inline int femap::IAnalysisMgr::GetNasExecEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1400)
inline void femap::IAnalysisMgr::PutNasExecEndText ( int _val ) {
    _com_dispatch_propput(this, 0x2721, VT_I4, _val);
}

#pragma implementation_key(1401)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1402)
inline void femap::IAnalysisMgr::PutNasBulkOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2722, VT_BOOL, _val);
}

#pragma implementation_key(1403)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkAutospc ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1404)
inline void femap::IAnalysisMgr::PutNasBulkAutospc ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2723, VT_BOOL, _val);
}

#pragma implementation_key(1405)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkGrdpnt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1406)
inline void femap::IAnalysisMgr::PutNasBulkGrdpnt ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2724, VT_BOOL, _val);
}

#pragma implementation_key(1407)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkWtmass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1408)
inline void femap::IAnalysisMgr::PutNasBulkWtmass ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2725, VT_BOOL, _val);
}

#pragma implementation_key(1409)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkK6rot ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1410)
inline void femap::IAnalysisMgr::PutNasBulkK6rot ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2726, VT_BOOL, _val);
}

#pragma implementation_key(1411)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkMaxratio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1412)
inline void femap::IAnalysisMgr::PutNasBulkMaxratio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2727, VT_BOOL, _val);
}

#pragma implementation_key(1413)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkNdamp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1414)
inline void femap::IAnalysisMgr::PutNasBulkNdamp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2728, VT_BOOL, _val);
}

#pragma implementation_key(1415)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkInrel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1416)
inline void femap::IAnalysisMgr::PutNasBulkInrel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2729, VT_BOOL, _val);
}

#pragma implementation_key(1417)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkLangle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1418)
inline void femap::IAnalysisMgr::PutNasBulkLangle ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272a, VT_BOOL, _val);
}

#pragma implementation_key(1419)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkPrgpst ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1420)
inline void femap::IAnalysisMgr::PutNasBulkPrgpst ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272b, VT_BOOL, _val);
}

#pragma implementation_key(1421)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkLgdisp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1422)
inline void femap::IAnalysisMgr::PutNasBulkLgdisp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272c, VT_BOOL, _val);
}

#pragma implementation_key(1423)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkDdrmmOff ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1424)
inline void femap::IAnalysisMgr::PutNasBulkDdrmmOff ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272d, VT_BOOL, _val);
}

#pragma implementation_key(1425)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkModacc ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1426)
inline void femap::IAnalysisMgr::PutNasBulkModacc ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272e, VT_BOOL, _val);
}

#pragma implementation_key(1427)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkResVec ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1428)
inline void femap::IAnalysisMgr::PutNasBulkResVec ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272f, VT_BOOL, _val);
}

#pragma implementation_key(1429)
inline int femap::IAnalysisMgr::GetNasBulkGrdpntVal ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1430)
inline void femap::IAnalysisMgr::PutNasBulkGrdpntVal ( int _val ) {
    _com_dispatch_propput(this, 0x2730, VT_I4, _val);
}

#pragma implementation_key(1431)
inline double femap::IAnalysisMgr::GetNasBulkWtmassVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1432)
inline void femap::IAnalysisMgr::PutNasBulkWtmassVal ( double _val ) {
    _com_dispatch_propput(this, 0x2731, VT_R8, _val);
}

#pragma implementation_key(1433)
inline double femap::IAnalysisMgr::GetNasBulkK6rotVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1434)
inline void femap::IAnalysisMgr::PutNasBulkK6rotVal ( double _val ) {
    _com_dispatch_propput(this, 0x2732, VT_R8, _val);
}

#pragma implementation_key(1435)
inline double femap::IAnalysisMgr::GetNasBulkMaxratioVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1436)
inline void femap::IAnalysisMgr::PutNasBulkMaxratioVal ( double _val ) {
    _com_dispatch_propput(this, 0x2733, VT_R8, _val);
}

#pragma implementation_key(1437)
inline double femap::IAnalysisMgr::GetNasBulkNdampVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1438)
inline void femap::IAnalysisMgr::PutNasBulkNdampVal ( double _val ) {
    _com_dispatch_propput(this, 0x2734, VT_R8, _val);
}

#pragma implementation_key(1439)
inline int femap::IAnalysisMgr::GetNasBulkLargeField ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1440)
inline void femap::IAnalysisMgr::PutNasBulkLargeField ( int _val ) {
    _com_dispatch_propput(this, 0x2735, VT_I4, _val);
}

#pragma implementation_key(1441)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkQuadr ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1442)
inline void femap::IAnalysisMgr::PutNasBulkQuadr ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2736, VT_BOOL, _val);
}

#pragma implementation_key(1443)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1444)
inline void femap::IAnalysisMgr::PutNasBulkSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2737, VT_BOOL, _val);
}

#pragma implementation_key(1445)
inline int femap::IAnalysisMgr::GetNasBulkStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1446)
inline void femap::IAnalysisMgr::PutNasBulkStartText ( int _val ) {
    _com_dispatch_propput(this, 0x2738, VT_I4, _val);
}

#pragma implementation_key(1447)
inline int femap::IAnalysisMgr::GetNasBulkEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1448)
inline void femap::IAnalysisMgr::PutNasBulkEndText ( int _val ) {
    _com_dispatch_propput(this, 0x2739, VT_I4, _val);
}

#pragma implementation_key(1449)
inline int femap::IAnalysisMgr::GetNasBulkGroupID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1450)
inline void femap::IAnalysisMgr::PutNasBulkGroupID ( int _val ) {
    _com_dispatch_propput(this, 0x273a, VT_I4, _val);
}

#pragma implementation_key(1451)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNonlinOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1452)
inline void femap::IAnalysisMgr::PutNasNonlinOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273b, VT_BOOL, _val);
}

#pragma implementation_key(1453)
inline int femap::IAnalysisMgr::GetNasNonlinNDT ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1454)
inline void femap::IAnalysisMgr::PutNasNonlinNDT ( int _val ) {
    _com_dispatch_propput(this, 0x273c, VT_I4, _val);
}

#pragma implementation_key(1455)
inline double femap::IAnalysisMgr::GetNasNonlinDT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1456)
inline void femap::IAnalysisMgr::PutNasNonlinDT ( double _val ) {
    _com_dispatch_propput(this, 0x273d, VT_R8, _val);
}

#pragma implementation_key(1457)
inline int femap::IAnalysisMgr::GetNasNonlinNO ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1458)
inline void femap::IAnalysisMgr::PutNasNonlinNO ( int _val ) {
    _com_dispatch_propput(this, 0x273e, VT_I4, _val);
}

#pragma implementation_key(1459)
inline int femap::IAnalysisMgr::GetNasNonlinMaxIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1460)
inline void femap::IAnalysisMgr::PutNasNonlinMaxIter ( int _val ) {
    _com_dispatch_propput(this, 0x273f, VT_I4, _val);
}

#pragma implementation_key(1461)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasModeOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1462)
inline void femap::IAnalysisMgr::PutNasModeOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2742, VT_BOOL, _val);
}

#pragma implementation_key(1463)
inline int femap::IAnalysisMgr::GetNasModeEigrSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2743, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1464)
inline void femap::IAnalysisMgr::PutNasModeEigrSet ( int _val ) {
    _com_dispatch_propput(this, 0x2743, VT_I4, _val);
}

#pragma implementation_key(1465)
inline int femap::IAnalysisMgr::GetNasModeMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1466)
inline void femap::IAnalysisMgr::PutNasModeMethod ( int _val ) {
    _com_dispatch_propput(this, 0x2744, VT_I4, _val);
}

#pragma implementation_key(1467)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasModeSolutionType ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1468)
inline void femap::IAnalysisMgr::PutNasModeSolutionType ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2745, VT_BOOL, _val);
}

#pragma implementation_key(1469)
inline int femap::IAnalysisMgr::GetNasModeEstRoots ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1470)
inline void femap::IAnalysisMgr::PutNasModeEstRoots ( int _val ) {
    _com_dispatch_propput(this, 0x2747, VT_I4, _val);
}

#pragma implementation_key(1471)
inline int femap::IAnalysisMgr::GetNasModeDesiredRoots ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1472)
inline void femap::IAnalysisMgr::PutNasModeDesiredRoots ( int _val ) {
    _com_dispatch_propput(this, 0x2748, VT_I4, _val);
}

#pragma implementation_key(1473)
inline int femap::IAnalysisMgr::GetNasModeNormOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1474)
inline void femap::IAnalysisMgr::PutNasModeNormOpt ( int _val ) {
    _com_dispatch_propput(this, 0x2749, VT_I4, _val);
}

#pragma implementation_key(1475)
inline int femap::IAnalysisMgr::GetNasModeNormNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1476)
inline void femap::IAnalysisMgr::PutNasModeNormNode ( int _val ) {
    _com_dispatch_propput(this, 0x274a, VT_I4, _val);
}

#pragma implementation_key(1477)
inline int femap::IAnalysisMgr::GetNasModeNormDOF ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1478)
inline void femap::IAnalysisMgr::PutNasModeNormDOF ( int _val ) {
    _com_dispatch_propput(this, 0x274b, VT_I4, _val);
}

#pragma implementation_key(1479)
inline int femap::IAnalysisMgr::GetNasModeMassForm ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1480)
inline void femap::IAnalysisMgr::PutNasModeMassForm ( int _val ) {
    _com_dispatch_propput(this, 0x274c, VT_I4, _val);
}

#pragma implementation_key(1481)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasModeXYOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1482)
inline void femap::IAnalysisMgr::PutNasModeXYOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274d, VT_BOOL, _val);
}

#pragma implementation_key(1483)
inline int femap::IAnalysisMgr::GetNasModeXYRefNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1484)
inline void femap::IAnalysisMgr::PutNasModeXYRefNode ( int _val ) {
    _com_dispatch_propput(this, 0x274f, VT_I4, _val);
}

#pragma implementation_key(1485)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandomOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1486)
inline void femap::IAnalysisMgr::PutNasRandomOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2750, VT_BOOL, _val);
}

#pragma implementation_key(1487)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandXYOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2752, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1488)
inline void femap::IAnalysisMgr::PutNasRandXYOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2752, VT_BOOL, _val);
}

#pragma implementation_key(1489)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandXYSummary ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2754, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1490)
inline void femap::IAnalysisMgr::PutNasRandXYSummary ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2754, VT_BOOL, _val);
}

#pragma implementation_key(1491)
inline int femap::IAnalysisMgr::GetNasRandXYNodeGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2755, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1492)
inline void femap::IAnalysisMgr::PutNasRandXYNodeGroup ( int _val ) {
    _com_dispatch_propput(this, 0x2755, VT_I4, _val);
}

#pragma implementation_key(1493)
inline int femap::IAnalysisMgr::GetNasRandXYElemGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2756, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1494)
inline void femap::IAnalysisMgr::PutNasRandXYElemGroup ( int _val ) {
    _com_dispatch_propput(this, 0x2756, VT_I4, _val);
}

#pragma implementation_key(1495)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGenSpecOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2757, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1496)
inline void femap::IAnalysisMgr::PutNasGenSpecOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2757, VT_BOOL, _val);
}

#pragma implementation_key(1497)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGenSpecAbsolute ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2759, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1498)
inline void femap::IAnalysisMgr::PutNasGenSpecAbsolute ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2759, VT_BOOL, _val);
}

#pragma implementation_key(1499)
inline int femap::IAnalysisMgr::GetNasGenSpecNodeGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1500)
inline void femap::IAnalysisMgr::PutNasGenSpecNodeGroup ( int _val ) {
    _com_dispatch_propput(this, 0x275a, VT_I4, _val);
}

#pragma implementation_key(1501)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasAppSpecOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1502)
inline void femap::IAnalysisMgr::PutNasAppSpecOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275b, VT_BOOL, _val);
}

#pragma implementation_key(1503)
inline int femap::IAnalysisMgr::GetNasAppSpecType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1504)
inline void femap::IAnalysisMgr::PutNasAppSpecType ( int _val ) {
    _com_dispatch_propput(this, 0x275c, VT_I4, _val);
}

#pragma implementation_key(1505)
inline int femap::IAnalysisMgr::GetNasAppSpecFunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1506)
inline void femap::IAnalysisMgr::PutNasAppSpecFunction ( int _val ) {
    _com_dispatch_propput(this, 0x275d, VT_I4, _val);
}

#pragma implementation_key(1507)
inline double femap::IAnalysisMgr::GetNasAppSpecScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x275e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1508)
inline void femap::IAnalysisMgr::PutNasAppSpecScale ( double _val ) {
    _com_dispatch_propput(this, 0x275e, VT_R8, _val);
}

#pragma implementation_key(1509)
inline int femap::IAnalysisMgr::GetNasAppSpecMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1510)
inline void femap::IAnalysisMgr::PutNasAppSpecMethod ( int _val ) {
    _com_dispatch_propput(this, 0x275f, VT_I4, _val);
}

#pragma implementation_key(1511)
inline double femap::IAnalysisMgr::GetNasAppSpecClose ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2760, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1512)
inline void femap::IAnalysisMgr::PutNasAppSpecClose ( double _val ) {
    _com_dispatch_propput(this, 0x2760, VT_R8, _val);
}

#pragma implementation_key(1513)
inline int femap::IAnalysisMgr::GetNasAppSpecSuport ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2761, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1514)
inline void femap::IAnalysisMgr::PutNasAppSpecSuport ( int _val ) {
    _com_dispatch_propput(this, 0x2761, VT_I4, _val);
}

#pragma implementation_key(1515)
inline int femap::IAnalysisMgr::GetNasAppSpecDamp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2762, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1516)
inline void femap::IAnalysisMgr::PutNasAppSpecDamp ( int _val ) {
    _com_dispatch_propput(this, 0x2762, VT_I4, _val);
}

#pragma implementation_key(1517)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGCheckOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2763, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1518)
inline void femap::IAnalysisMgr::PutNasGCheckOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2763, VT_BOOL, _val);
}

#pragma implementation_key(1519)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGCheckSummary ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2767, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1520)
inline void femap::IAnalysisMgr::PutNasGCheckSummary ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2767, VT_BOOL, _val);
}

#pragma implementation_key(1521)
inline int femap::IAnalysisMgr::GetNasGCheckMsgLimit ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2768, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1522)
inline void femap::IAnalysisMgr::PutNasGCheckMsgLimit ( int _val ) {
    _com_dispatch_propput(this, 0x2768, VT_I4, _val);
}

#pragma implementation_key(1523)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMCheckOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2769, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1524)
inline void femap::IAnalysisMgr::PutNasMCheckOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2769, VT_BOOL, _val);
}

#pragma implementation_key(1525)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMCheckWtCG ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1526)
inline void femap::IAnalysisMgr::PutNasMCheckWtCG ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276b, VT_BOOL, _val);
}

#pragma implementation_key(1527)
inline int femap::IAnalysisMgr::GetNasMCheckWtRefNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1528)
inline void femap::IAnalysisMgr::PutNasMCheckWtRefNode ( int _val ) {
    _com_dispatch_propput(this, 0x276c, VT_I4, _val);
}

#pragma implementation_key(1529)
inline int femap::IAnalysisMgr::GetNasMCheckWtUnits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1530)
inline void femap::IAnalysisMgr::PutNasMCheckWtUnits ( int _val ) {
    _com_dispatch_propput(this, 0x276d, VT_I4, _val);
}

#pragma implementation_key(1531)
inline int femap::IAnalysisMgr::GetNasMCheckGrndRefNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1532)
inline void femap::IAnalysisMgr::PutNasMCheckGrndRefNode ( int _val ) {
    _com_dispatch_propput(this, 0x276e, VT_I4, _val);
}

#pragma implementation_key(1533)
inline double femap::IAnalysisMgr::GetNasMCheckMaxStrnEn ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2770, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1534)
inline void femap::IAnalysisMgr::PutNasMCheckMaxStrnEn ( double _val ) {
    _com_dispatch_propput(this, 0x2770, VT_R8, _val);
}

#pragma implementation_key(1535)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMCheckDataRec ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2771, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1536)
inline void femap::IAnalysisMgr::PutNasMCheckDataRec ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2771, VT_BOOL, _val);
}

#pragma implementation_key(1537)
inline double femap::IAnalysisMgr::GetNasMCheckDataTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2772, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1538)
inline void femap::IAnalysisMgr::PutNasMCheckDataTol ( double _val ) {
    _com_dispatch_propput(this, 0x2772, VT_R8, _val);
}

#pragma implementation_key(1539)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaModOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2773, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1540)
inline void femap::IAnalysisMgr::PutAbaModOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2773, VT_BOOL, _val);
}

#pragma implementation_key(1541)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaModTitleSetNames ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2774, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1542)
inline void femap::IAnalysisMgr::PutAbaModTitleSetNames ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2774, VT_BOOL, _val);
}

#pragma implementation_key(1543)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaModGroupsAsSets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2775, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1544)
inline void femap::IAnalysisMgr::PutAbaModGroupsAsSets ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2775, VT_BOOL, _val);
}

#pragma implementation_key(1545)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaModSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2776, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1546)
inline void femap::IAnalysisMgr::PutAbaModSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2776, VT_BOOL, _val);
}

#pragma implementation_key(1547)
inline int femap::IAnalysisMgr::GetAbaModVersion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2777, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1548)
inline void femap::IAnalysisMgr::PutAbaModVersion ( int _val ) {
    _com_dispatch_propput(this, 0x2777, VT_I4, _val);
}

#pragma implementation_key(1549)
inline int femap::IAnalysisMgr::GetAbaModStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2778, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1550)
inline void femap::IAnalysisMgr::PutAbaModStartText ( int _val ) {
    _com_dispatch_propput(this, 0x2778, VT_I4, _val);
}

#pragma implementation_key(1551)
inline int femap::IAnalysisMgr::GetAbaModEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2779, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1552)
inline void femap::IAnalysisMgr::PutAbaModEndText ( int _val ) {
    _com_dispatch_propput(this, 0x2779, VT_I4, _val);
}

#pragma implementation_key(1553)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1554)
inline void femap::IAnalysisMgr::PutAnsModOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277a, VT_BOOL, _val);
}

#pragma implementation_key(1555)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModTitleSetNames ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1556)
inline void femap::IAnalysisMgr::PutAnsModTitleSetNames ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277b, VT_BOOL, _val);
}

#pragma implementation_key(1557)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModGroupsAsSets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1558)
inline void femap::IAnalysisMgr::PutAnsModGroupsAsSets ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277c, VT_BOOL, _val);
}

#pragma implementation_key(1559)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1560)
inline void femap::IAnalysisMgr::PutAnsModSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277d, VT_BOOL, _val);
}

#pragma implementation_key(1561)
inline int femap::IAnalysisMgr::GetAnsModStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x277e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1562)
inline void femap::IAnalysisMgr::PutAnsModStartText ( int _val ) {
    _com_dispatch_propput(this, 0x277e, VT_I4, _val);
}

#pragma implementation_key(1563)
inline int femap::IAnalysisMgr::GetAnsModEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x277f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1564)
inline void femap::IAnalysisMgr::PutAnsModEndText ( int _val ) {
    _com_dispatch_propput(this, 0x277f, VT_I4, _val);
}

#pragma implementation_key(1565)
inline _bstr_t femap::IAnalysisMgr::GetAnsModTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2780, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1566)
inline void femap::IAnalysisMgr::PutAnsModTitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2780, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1567)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModWriteSolCmd ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2781, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1568)
inline void femap::IAnalysisMgr::PutAnsModWriteSolCmd ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2781, VT_BOOL, _val);
}

#pragma implementation_key(1569)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModWriteIter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2782, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1570)
inline void femap::IAnalysisMgr::PutAnsModWriteIter ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2782, VT_BOOL, _val);
}

#pragma implementation_key(1571)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModWriteLargeDef ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2783, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1572)
inline void femap::IAnalysisMgr::PutAnsModWriteLargeDef ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2783, VT_BOOL, _val);
}

#pragma implementation_key(1573)
inline int femap::IAnalysisMgr::GetAnsModMemory ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2784, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1574)
inline void femap::IAnalysisMgr::PutAnsModMemory ( int _val ) {
    _com_dispatch_propput(this, 0x2784, VT_I4, _val);
}

#pragma implementation_key(1575)
inline int femap::IAnalysisMgr::GetAnsModVersion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2785, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1576)
inline void femap::IAnalysisMgr::PutAnsModVersion ( int _val ) {
    _com_dispatch_propput(this, 0x2785, VT_I4, _val);
}

#pragma implementation_key(1577)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2786, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1578)
inline void femap::IAnalysisMgr::PutAnsRandOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2786, VT_BOOL, _val);
}

#pragma implementation_key(1579)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandDisp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2787, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1580)
inline void femap::IAnalysisMgr::PutAnsRandDisp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2787, VT_BOOL, _val);
}

#pragma implementation_key(1581)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandVel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2788, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1582)
inline void femap::IAnalysisMgr::PutAnsRandVel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2788, VT_BOOL, _val);
}

#pragma implementation_key(1583)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandAccel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2789, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1584)
inline void femap::IAnalysisMgr::PutAnsRandAccel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2789, VT_BOOL, _val);
}

#pragma implementation_key(1585)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandDispRelative ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1586)
inline void femap::IAnalysisMgr::PutAnsRandDispRelative ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278a, VT_BOOL, _val);
}

#pragma implementation_key(1587)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandVelRelative ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1588)
inline void femap::IAnalysisMgr::PutAnsRandVelRelative ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278b, VT_BOOL, _val);
}

#pragma implementation_key(1589)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsRandAccelRelative ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1590)
inline void femap::IAnalysisMgr::PutAnsRandAccelRelative ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278c, VT_BOOL, _val);
}

#pragma implementation_key(1591)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStFilOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1592)
inline void femap::IAnalysisMgr::PutFStFilOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278d, VT_BOOL, _val);
}

#pragma implementation_key(1593)
inline _bstr_t femap::IAnalysisMgr::GetFStFilLogFile ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x278e, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1594)
inline void femap::IAnalysisMgr::PutFStFilLogFile ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x278e, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1595)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStFilKeepLogFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1596)
inline void femap::IAnalysisMgr::PutFStFilKeepLogFile ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278f, VT_BOOL, _val);
}

#pragma implementation_key(1597)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStFilEchoLogFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2790, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1598)
inline void femap::IAnalysisMgr::PutFStFilEchoLogFile ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2790, VT_BOOL, _val);
}

#pragma implementation_key(1599)
inline _bstr_t femap::IAnalysisMgr::GetFStFilHyper1 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2791, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1600)
inline void femap::IAnalysisMgr::PutFStFilHyper1 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2791, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1601)
inline _bstr_t femap::IAnalysisMgr::GetFStFilHyper2 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2792, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1602)
inline void femap::IAnalysisMgr::PutFStFilHyper2 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2792, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1603)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStFilKeepHyper ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2793, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1604)
inline void femap::IAnalysisMgr::PutFStFilKeepHyper ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2793, VT_BOOL, _val);
}

#pragma implementation_key(1605)
inline _bstr_t femap::IAnalysisMgr::GetFStFilScratch1 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2794, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1606)
inline void femap::IAnalysisMgr::PutFStFilScratch1 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2794, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1607)
inline _bstr_t femap::IAnalysisMgr::GetFStFilScratch2 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2795, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1608)
inline void femap::IAnalysisMgr::PutFStFilScratch2 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2795, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1609)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStHeatOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2796, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1610)
inline void femap::IAnalysisMgr::PutFStHeatOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2796, VT_BOOL, _val);
}

#pragma implementation_key(1611)
inline double femap::IAnalysisMgr::GetFStHeatTempTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2797, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1612)
inline void femap::IAnalysisMgr::PutFStHeatTempTol ( double _val ) {
    _com_dispatch_propput(this, 0x2797, VT_R8, _val);
}

#pragma implementation_key(1613)
inline int femap::IAnalysisMgr::GetFStHeatConvergeType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2798, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1614)
inline void femap::IAnalysisMgr::PutFStHeatConvergeType ( int _val ) {
    _com_dispatch_propput(this, 0x2798, VT_I4, _val);
}

#pragma implementation_key(1615)
inline int femap::IAnalysisMgr::GetFStHeatMaxIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2799, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1616)
inline void femap::IAnalysisMgr::PutFStHeatMaxIter ( int _val ) {
    _com_dispatch_propput(this, 0x2799, VT_I4, _val);
}

#pragma implementation_key(1617)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStDynOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x279a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1618)
inline void femap::IAnalysisMgr::PutFStDynOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x279a, VT_BOOL, _val);
}

#pragma implementation_key(1619)
inline int femap::IAnalysisMgr::GetFStDynSolMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x279b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1620)
inline void femap::IAnalysisMgr::PutFStDynSolMethod ( int _val ) {
    _com_dispatch_propput(this, 0x279b, VT_I4, _val);
}

#pragma implementation_key(1621)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStDynMassForm ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x279c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1622)
inline void femap::IAnalysisMgr::PutFStDynMassForm ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x279c, VT_BOOL, _val);
}

#pragma implementation_key(1623)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStDynModalDamp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x279d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1624)
inline void femap::IAnalysisMgr::PutFStDynModalDamp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x279d, VT_BOOL, _val);
}

#pragma implementation_key(1625)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStDynModalNorm ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x279e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1626)
inline void femap::IAnalysisMgr::PutFStDynModalNorm ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x279e, VT_BOOL, _val);
}

#pragma implementation_key(1627)
inline int femap::IAnalysisMgr::GetFStDynNumModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x279f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1628)
inline void femap::IAnalysisMgr::PutFStDynNumModes ( int _val ) {
    _com_dispatch_propput(this, 0x279f, VT_I4, _val);
}

#pragma implementation_key(1629)
inline int femap::IAnalysisMgr::GetFStDynRigidModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1630)
inline void femap::IAnalysisMgr::PutFStDynRigidModes ( int _val ) {
    _com_dispatch_propput(this, 0x27a0, VT_I4, _val);
}

#pragma implementation_key(1631)
inline int femap::IAnalysisMgr::GetFStDynFreqMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1632)
inline void femap::IAnalysisMgr::PutFStDynFreqMethod ( int _val ) {
    _com_dispatch_propput(this, 0x27a1, VT_I4, _val);
}

#pragma implementation_key(1633)
inline int femap::IAnalysisMgr::GetFStDynMassDir ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1634)
inline void femap::IAnalysisMgr::PutFStDynMassDir ( int _val ) {
    _com_dispatch_propput(this, 0x27a3, VT_I4, _val);
}

#pragma implementation_key(1635)
inline double femap::IAnalysisMgr::GetFStDynMassTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27a4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1636)
inline void femap::IAnalysisMgr::PutFStDynMassTol ( double _val ) {
    _com_dispatch_propput(this, 0x27a4, VT_R8, _val);
}

#pragma implementation_key(1637)
inline int femap::IAnalysisMgr::GetFStDynIterVec ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1638)
inline void femap::IAnalysisMgr::PutFStDynIterVec ( int _val ) {
    _com_dispatch_propput(this, 0x27a5, VT_I4, _val);
}

#pragma implementation_key(1639)
inline int femap::IAnalysisMgr::GetFStDynMaxIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1640)
inline void femap::IAnalysisMgr::PutFStDynMaxIter ( int _val ) {
    _com_dispatch_propput(this, 0x27a6, VT_I4, _val);
}

#pragma implementation_key(1641)
inline int femap::IAnalysisMgr::GetFStDynSigDigits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1642)
inline void femap::IAnalysisMgr::PutFStDynSigDigits ( int _val ) {
    _com_dispatch_propput(this, 0x27a7, VT_I4, _val);
}

#pragma implementation_key(1643)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStSolOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27a8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1644)
inline void femap::IAnalysisMgr::PutFStSolOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27a8, VT_BOOL, _val);
}

#pragma implementation_key(1645)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStSolIter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27a9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1646)
inline void femap::IAnalysisMgr::PutFStSolIter ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27a9, VT_BOOL, _val);
}

#pragma implementation_key(1647)
inline double femap::IAnalysisMgr::GetFStSolIterConvTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27aa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1648)
inline void femap::IAnalysisMgr::PutFStSolIterConvTol ( double _val ) {
    _com_dispatch_propput(this, 0x27aa, VT_R8, _val);
}

#pragma implementation_key(1649)
inline int femap::IAnalysisMgr::GetFStSolIterMaxIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ab, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1650)
inline void femap::IAnalysisMgr::PutFStSolIterMaxIter ( int _val ) {
    _com_dispatch_propput(this, 0x27ab, VT_I4, _val);
}

#pragma implementation_key(1651)
inline int femap::IAnalysisMgr::GetFStSolMemIterMax ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ac, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1652)
inline void femap::IAnalysisMgr::PutFStSolMemIterMax ( int _val ) {
    _com_dispatch_propput(this, 0x27ac, VT_I4, _val);
}

#pragma implementation_key(1653)
inline int femap::IAnalysisMgr::GetFStSolMemVirtMax ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ad, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1654)
inline void femap::IAnalysisMgr::PutFStSolMemVirtMax ( int _val ) {
    _com_dispatch_propput(this, 0x27ad, VT_I4, _val);
}

#pragma implementation_key(1655)
inline int femap::IAnalysisMgr::GetFStSolMemAppPct ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ae, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1656)
inline void femap::IAnalysisMgr::PutFStSolMemAppPct ( int _val ) {
    _com_dispatch_propput(this, 0x27ae, VT_I4, _val);
}

#pragma implementation_key(1657)
inline int femap::IAnalysisMgr::GetFStSolMemFortranPct ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27af, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1658)
inline void femap::IAnalysisMgr::PutFStSolMemFortranPct ( int _val ) {
    _com_dispatch_propput(this, 0x27af, VT_I4, _val);
}

#pragma implementation_key(1659)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStSolStressStiff ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27b0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1660)
inline void femap::IAnalysisMgr::PutFStSolStressStiff ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27b0, VT_BOOL, _val);
}

#pragma implementation_key(1661)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStSolSpinSoft ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27b1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1662)
inline void femap::IAnalysisMgr::PutFStSolSpinSoft ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27b1, VT_BOOL, _val);
}

#pragma implementation_key(1663)
inline int femap::IAnalysisMgr::GetFStSolStiffSoftLoad ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27b2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1664)
inline void femap::IAnalysisMgr::PutFStSolStiffSoftLoad ( int _val ) {
    _com_dispatch_propput(this, 0x27b2, VT_I4, _val);
}

#pragma implementation_key(1665)
inline int femap::IAnalysisMgr::GetFStSolShellAuto ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27b3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1666)
inline void femap::IAnalysisMgr::PutFStSolShellAuto ( int _val ) {
    _com_dispatch_propput(this, 0x27b3, VT_I4, _val);
}

#pragma implementation_key(1667)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStSolSingularity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27b4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1668)
inline void femap::IAnalysisMgr::PutFStSolSingularity ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27b4, VT_BOOL, _val);
}

#pragma implementation_key(1669)
inline VARIANT_BOOL femap::IAnalysisMgr::GetFStSolVerification ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27b5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1670)
inline void femap::IAnalysisMgr::PutFStSolVerification ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27b5, VT_BOOL, _val);
}

#pragma implementation_key(1671)
inline double femap::IAnalysisMgr::GetFStSolShellAutoAng ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27b6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1672)
inline void femap::IAnalysisMgr::PutFStSolShellAutoAng ( double _val ) {
    _com_dispatch_propput(this, 0x27b6, VT_R8, _val);
}

#pragma implementation_key(1673)
inline double femap::IAnalysisMgr::GetFStSolSingCriteria ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27b7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1674)
inline void femap::IAnalysisMgr::PutFStSolSingCriteria ( double _val ) {
    _com_dispatch_propput(this, 0x27b7, VT_R8, _val);
}

#pragma implementation_key(1675)
inline int femap::IAnalysisMgr::GetFStSolNodeGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27b8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1676)
inline void femap::IAnalysisMgr::PutFStSolNodeGroup ( int _val ) {
    _com_dispatch_propput(this, 0x27b8, VT_I4, _val);
}

#pragma implementation_key(1677)
inline int femap::IAnalysisMgr::GetFStSolElemGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27b9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1678)
inline void femap::IAnalysisMgr::PutFStSolElemGroup ( int _val ) {
    _com_dispatch_propput(this, 0x27b9, VT_I4, _val);
}

#pragma implementation_key(1679)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27ba, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1680)
inline void femap::IAnalysisMgr::PutMarModOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27ba, VT_BOOL, _val);
}

#pragma implementation_key(1681)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27bb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1682)
inline void femap::IAnalysisMgr::PutMarModSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27bb, VT_BOOL, _val);
}

#pragma implementation_key(1683)
inline int femap::IAnalysisMgr::GetMarModStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27bc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1684)
inline void femap::IAnalysisMgr::PutMarModStartText ( int _val ) {
    _com_dispatch_propput(this, 0x27bc, VT_I4, _val);
}

#pragma implementation_key(1685)
inline int femap::IAnalysisMgr::GetMarModEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27bd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1686)
inline void femap::IAnalysisMgr::PutMarModEndText ( int _val ) {
    _com_dispatch_propput(this, 0x27bd, VT_I4, _val);
}

#pragma implementation_key(1687)
inline _bstr_t femap::IAnalysisMgr::GetMarModTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x27be, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1688)
inline void femap::IAnalysisMgr::PutMarModTitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x27be, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1689)
inline int femap::IAnalysisMgr::GetMarModWorkSpVec ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27bf, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1690)
inline void femap::IAnalysisMgr::PutMarModWorkSpVec ( int _val ) {
    _com_dispatch_propput(this, 0x27bf, VT_I4, _val);
}

#pragma implementation_key(1691)
inline int femap::IAnalysisMgr::GetMarModMaxConstrain ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1692)
inline void femap::IAnalysisMgr::PutMarModMaxConstrain ( int _val ) {
    _com_dispatch_propput(this, 0x27c0, VT_I4, _val);
}

#pragma implementation_key(1693)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModFolOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1694)
inline void femap::IAnalysisMgr::PutMarModFolOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c1, VT_BOOL, _val);
}

#pragma implementation_key(1695)
inline int femap::IAnalysisMgr::GetMarModFolOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1696)
inline void femap::IAnalysisMgr::PutMarModFolOpt ( int _val ) {
    _com_dispatch_propput(this, 0x27c2, VT_I4, _val);
}

#pragma implementation_key(1697)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModPlasOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1698)
inline void femap::IAnalysisMgr::PutMarModPlasOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c3, VT_BOOL, _val);
}

#pragma implementation_key(1699)
inline int femap::IAnalysisMgr::GetMarModPlasOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1700)
inline void femap::IAnalysisMgr::PutMarModPlasOpt ( int _val ) {
    _com_dispatch_propput(this, 0x27c4, VT_I4, _val);
}

#pragma implementation_key(1701)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModElasOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1702)
inline void femap::IAnalysisMgr::PutMarModElasOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c5, VT_BOOL, _val);
}

#pragma implementation_key(1703)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModElasTotal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1704)
inline void femap::IAnalysisMgr::PutMarModElasTotal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c6, VT_BOOL, _val);
}

#pragma implementation_key(1705)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModElasIs ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1706)
inline void femap::IAnalysisMgr::PutMarModElasIs ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c7, VT_BOOL, _val);
}

#pragma implementation_key(1707)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModConstDil ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1708)
inline void femap::IAnalysisMgr::PutMarModConstDil ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c8, VT_BOOL, _val);
}

#pragma implementation_key(1709)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModLgDisp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1710)
inline void femap::IAnalysisMgr::PutMarModLgDisp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c9, VT_BOOL, _val);
}

#pragma implementation_key(1711)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModUpdate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27ca, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1712)
inline void femap::IAnalysisMgr::PutMarModUpdate ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27ca, VT_BOOL, _val);
}

#pragma implementation_key(1713)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModFinite ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27cb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1714)
inline void femap::IAnalysisMgr::PutMarModFinite ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27cb, VT_BOOL, _val);
}

#pragma implementation_key(1715)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModEchoInput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27cc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1716)
inline void femap::IAnalysisMgr::PutMarModEchoInput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27cc, VT_BOOL, _val);
}

#pragma implementation_key(1717)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModWriteGroupSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27cd, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1718)
inline void femap::IAnalysisMgr::PutMarModWriteGroupSet ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27cd, VT_BOOL, _val);
}

#pragma implementation_key(1719)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModExtInput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27ce, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1720)
inline void femap::IAnalysisMgr::PutMarModExtInput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27ce, VT_BOOL, _val);
}

#pragma implementation_key(1721)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModShlTrShear ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27cf, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1722)
inline void femap::IAnalysisMgr::PutMarModShlTrShear ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27cf, VT_BOOL, _val);
}

#pragma implementation_key(1723)
inline int femap::IAnalysisMgr::GetMarModPltIntegPt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1724)
inline void femap::IAnalysisMgr::PutMarModPltIntegPt ( int _val ) {
    _com_dispatch_propput(this, 0x27d0, VT_I4, _val);
}

#pragma implementation_key(1725)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModDistLoadOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27d1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1726)
inline void femap::IAnalysisMgr::PutMarModDistLoadOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27d1, VT_BOOL, _val);
}

#pragma implementation_key(1727)
inline int femap::IAnalysisMgr::GetMarModDistLoadList ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1728)
inline void femap::IAnalysisMgr::PutMarModDistLoadList ( int _val ) {
    _com_dispatch_propput(this, 0x27d2, VT_I4, _val);
}

#pragma implementation_key(1729)
inline int femap::IAnalysisMgr::GetMarModDistLoadElem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1730)
inline void femap::IAnalysisMgr::PutMarModDistLoadElem ( int _val ) {
    _com_dispatch_propput(this, 0x27d3, VT_I4, _val);
}

#pragma implementation_key(1731)
inline int femap::IAnalysisMgr::GetMarModDistLoadNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1732)
inline void femap::IAnalysisMgr::PutMarModDistLoadNode ( int _val ) {
    _com_dispatch_propput(this, 0x27d4, VT_I4, _val);
}

#pragma implementation_key(1733)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModTyingOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27d5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1734)
inline void femap::IAnalysisMgr::PutMarModTyingOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27d5, VT_BOOL, _val);
}

#pragma implementation_key(1735)
inline int femap::IAnalysisMgr::GetMarModTyingCe ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1736)
inline void femap::IAnalysisMgr::PutMarModTyingCe ( int _val ) {
    _com_dispatch_propput(this, 0x27d6, VT_I4, _val);
}

#pragma implementation_key(1737)
inline int femap::IAnalysisMgr::GetMarModTyingType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1738)
inline void femap::IAnalysisMgr::PutMarModTyingType ( int _val ) {
    _com_dispatch_propput(this, 0x27d7, VT_I4, _val);
}

#pragma implementation_key(1739)
inline int femap::IAnalysisMgr::GetMarModTyingServoNd ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1740)
inline void femap::IAnalysisMgr::PutMarModTyingServoNd ( int _val ) {
    _com_dispatch_propput(this, 0x27d8, VT_I4, _val);
}

#pragma implementation_key(1741)
inline int femap::IAnalysisMgr::GetMarModTyingServoLk ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1742)
inline void femap::IAnalysisMgr::PutMarModTyingServoLk ( int _val ) {
    _com_dispatch_propput(this, 0x27d9, VT_I4, _val);
}

#pragma implementation_key(1743)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModOutOfCore ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27da, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1744)
inline void femap::IAnalysisMgr::PutMarModOutOfCore ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27da, VT_BOOL, _val);
}

#pragma implementation_key(1745)
inline int femap::IAnalysisMgr::GetMarModCoreVal ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27db, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1746)
inline void femap::IAnalysisMgr::PutMarModCoreVal ( int _val ) {
    _com_dispatch_propput(this, 0x27db, VT_I4, _val);
}

#pragma implementation_key(1747)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModProcessors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27dc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1748)
inline void femap::IAnalysisMgr::PutMarModProcessors ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27dc, VT_BOOL, _val);
}

#pragma implementation_key(1749)
inline int femap::IAnalysisMgr::GetMarModNoCpu ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27dd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1750)
inline void femap::IAnalysisMgr::PutMarModNoCpu ( int _val ) {
    _com_dispatch_propput(this, 0x27dd, VT_I4, _val);
}

#pragma implementation_key(1751)
inline int femap::IAnalysisMgr::GetMarModVecLength ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27de, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1752)
inline void femap::IAnalysisMgr::PutMarModVecLength ( int _val ) {
    _com_dispatch_propput(this, 0x27de, VT_I4, _val);
}

#pragma implementation_key(1753)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModParallel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27df, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1754)
inline void femap::IAnalysisMgr::PutMarModParallel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27df, VT_BOOL, _val);
}

#pragma implementation_key(1755)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarModBWOpt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27e0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1756)
inline void femap::IAnalysisMgr::PutMarModBWOpt ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27e0, VT_BOOL, _val);
}

#pragma implementation_key(1757)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkResVecOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27e2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1758)
inline void femap::IAnalysisMgr::PutNasBulkResVecOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27e2, VT_BOOL, _val);
}

#pragma implementation_key(1759)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkOgeom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27e3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1760)
inline void femap::IAnalysisMgr::PutNasBulkOgeom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27e3, VT_BOOL, _val);
}

#pragma implementation_key(1761)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkSkipBeamShape ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27e4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1762)
inline void femap::IAnalysisMgr::PutNasBulkSkipBeamShape ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27e4, VT_BOOL, _val);
}

#pragma implementation_key(1763)
inline int femap::IAnalysisMgr::GetNasExecIterSolve2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1764)
inline void femap::IAnalysisMgr::PutNasExecIterSolve2 ( int _val ) {
    _com_dispatch_propput(this, 0x27e5, VT_I4, _val);
}

#pragma implementation_key(1765)
inline _variant_t femap::IAnalysisMgr::GetvNasNonlinEpsFlag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27e6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1766)
inline void femap::IAnalysisMgr::PutvNasNonlinEpsFlag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27e6, VT_VARIANT, &_val);
}

#pragma implementation_key(1767)
inline _variant_t femap::IAnalysisMgr::GetvNasNonlinEps ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27e7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1768)
inline void femap::IAnalysisMgr::PutvNasNonlinEps ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27e7, VT_VARIANT, &_val);
}

#pragma implementation_key(1769)
inline _variant_t femap::IAnalysisMgr::GetvNasModeFreqRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27e8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1770)
inline void femap::IAnalysisMgr::PutvNasModeFreqRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27e8, VT_VARIANT, &_val);
}

#pragma implementation_key(1771)
inline _variant_t femap::IAnalysisMgr::GetvNasModeXYRequest ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27e9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1772)
inline void femap::IAnalysisMgr::PutvNasModeXYRequest ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27e9, VT_VARIANT, &_val);
}

#pragma implementation_key(1773)
inline _variant_t femap::IAnalysisMgr::GetvNasRandomRequest ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ea, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1774)
inline void femap::IAnalysisMgr::PutvNasRandomRequest ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ea, VT_VARIANT, &_val);
}

#pragma implementation_key(1775)
inline _variant_t femap::IAnalysisMgr::GetvNasRandXYRequest ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27eb, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1776)
inline void femap::IAnalysisMgr::PutvNasRandXYRequest ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27eb, VT_VARIANT, &_val);
}

#pragma implementation_key(1777)
inline _variant_t femap::IAnalysisMgr::GetvNasGenSpecRequest ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ec, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1778)
inline void femap::IAnalysisMgr::PutvNasGenSpecRequest ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ec, VT_VARIANT, &_val);
}

#pragma implementation_key(1779)
inline _variant_t femap::IAnalysisMgr::GetvNasGCheckTest ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ed, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1780)
inline void femap::IAnalysisMgr::PutvNasGCheckTest ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ed, VT_VARIANT, &_val);
}

#pragma implementation_key(1781)
inline _variant_t femap::IAnalysisMgr::GetvNasGCheckTol ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ee, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1782)
inline void femap::IAnalysisMgr::PutvNasGCheckTol ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ee, VT_VARIANT, &_val);
}

#pragma implementation_key(1783)
inline _variant_t femap::IAnalysisMgr::GetvNasGCheckMsg ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ef, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1784)
inline void femap::IAnalysisMgr::PutvNasGCheckMsg ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ef, VT_VARIANT, &_val);
}

#pragma implementation_key(1785)
inline _variant_t femap::IAnalysisMgr::GetvNasMCheckWtDOFSet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27f0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1786)
inline void femap::IAnalysisMgr::PutvNasMCheckWtDOFSet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27f0, VT_VARIANT, &_val);
}

#pragma implementation_key(1787)
inline _variant_t femap::IAnalysisMgr::GetvNasMCheckGrndDOFSet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27f1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1788)
inline void femap::IAnalysisMgr::PutvNasMCheckGrndDOFSet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27f1, VT_VARIANT, &_val);
}

#pragma implementation_key(1789)
inline _variant_t femap::IAnalysisMgr::GetvFStDynFreqRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27f2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1790)
inline void femap::IAnalysisMgr::PutvFStDynFreqRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27f2, VT_VARIANT, &_val);
}

#pragma implementation_key(1791)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkAutompc ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27f3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1792)
inline void femap::IAnalysisMgr::PutNasBulkAutompc ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27f3, VT_BOOL, _val);
}

#pragma implementation_key(1793)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27f4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1794)
inline void femap::IAnalysisMgr::PutNasNXStratOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27f4, VT_BOOL, _val);
}

#pragma implementation_key(1795)
inline int femap::IAnalysisMgr::GetNasNXStratSolver ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1796)
inline void femap::IAnalysisMgr::PutNasNXStratSolver ( int _val ) {
    _com_dispatch_propput(this, 0x27f5, VT_I4, _val);
}

#pragma implementation_key(1797)
inline int femap::IAnalysisMgr::GetNasNXStratAuto ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1798)
inline void femap::IAnalysisMgr::PutNasNXStratAuto ( int _val ) {
    _com_dispatch_propput(this, 0x27f6, VT_I4, _val);
}

#pragma implementation_key(1799)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratNposit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27f7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1800)
inline void femap::IAnalysisMgr::PutNasNXStratNposit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27f7, VT_BOOL, _val);
}

#pragma implementation_key(1801)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratMasstyp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27f8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1802)
inline void femap::IAnalysisMgr::PutNasNXStratMasstyp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27f8, VT_BOOL, _val);
}

#pragma implementation_key(1803)
inline int femap::IAnalysisMgr::GetNasNXStratTint ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1804)
inline void femap::IAnalysisMgr::PutNasNXStratTint ( int _val ) {
    _com_dispatch_propput(this, 0x27f9, VT_I4, _val);
}

#pragma implementation_key(1805)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratMstab ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27fa, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1806)
inline void femap::IAnalysisMgr::PutNasNXStratMstab ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27fa, VT_BOOL, _val);
}

#pragma implementation_key(1807)
inline double femap::IAnalysisMgr::GetNasNXStratMsfac ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fb, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1808)
inline void femap::IAnalysisMgr::PutNasNXStratMsfac ( double _val ) {
    _com_dispatch_propput(this, 0x27fb, VT_R8, _val);
}

#pragma implementation_key(1809)
inline double femap::IAnalysisMgr::GetNasNXStratDtdelay ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fc, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1810)
inline void femap::IAnalysisMgr::PutNasNXStratDtdelay ( double _val ) {
    _com_dispatch_propput(this, 0x27fc, VT_R8, _val);
}

#pragma implementation_key(1811)
inline double femap::IAnalysisMgr::GetNasNXStratSdofang ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fd, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1812)
inline void femap::IAnalysisMgr::PutNasNXStratSdofang ( double _val ) {
    _com_dispatch_propput(this, 0x27fd, VT_R8, _val);
}

#pragma implementation_key(1813)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratUpform ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27fe, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1814)
inline void femap::IAnalysisMgr::PutNasNXStratUpform ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27fe, VT_BOOL, _val);
}

#pragma implementation_key(1815)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratDispopt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27ff, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1816)
inline void femap::IAnalysisMgr::PutNasNXStratDispopt ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27ff, VT_BOOL, _val);
}

#pragma implementation_key(1817)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratLoadopt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2800, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1818)
inline void femap::IAnalysisMgr::PutNasNXStratLoadopt ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2800, VT_BOOL, _val);
}

#pragma implementation_key(1819)
inline double femap::IAnalysisMgr::GetNasNXStratAlpha ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2801, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1820)
inline void femap::IAnalysisMgr::PutNasNXStratAlpha ( double _val ) {
    _com_dispatch_propput(this, 0x2801, VT_R8, _val);
}

#pragma implementation_key(1821)
inline double femap::IAnalysisMgr::GetNasNXStratDelta ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2802, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1822)
inline void femap::IAnalysisMgr::PutNasNXStratDelta ( double _val ) {
    _com_dispatch_propput(this, 0x2802, VT_R8, _val);
}

#pragma implementation_key(1823)
inline int femap::IAnalysisMgr::GetNasNXStratItemax ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2803, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1824)
inline void femap::IAnalysisMgr::PutNasNXStratItemax ( int _val ) {
    _com_dispatch_propput(this, 0x2803, VT_I4, _val);
}

#pragma implementation_key(1825)
inline double femap::IAnalysisMgr::GetNasNXStratEpsia ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2804, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1826)
inline void femap::IAnalysisMgr::PutNasNXStratEpsia ( double _val ) {
    _com_dispatch_propput(this, 0x2804, VT_R8, _val);
}

#pragma implementation_key(1827)
inline double femap::IAnalysisMgr::GetNasNXStratEpsib ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2805, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1828)
inline void femap::IAnalysisMgr::PutNasNXStratEpsib ( double _val ) {
    _com_dispatch_propput(this, 0x2805, VT_R8, _val);
}

#pragma implementation_key(1829)
inline double femap::IAnalysisMgr::GetNasNXStratEpsii ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2806, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1830)
inline void femap::IAnalysisMgr::PutNasNXStratEpsii ( double _val ) {
    _com_dispatch_propput(this, 0x2806, VT_R8, _val);
}

#pragma implementation_key(1831)
inline int femap::IAnalysisMgr::GetNasNXStratLsearch ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2807, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1832)
inline void femap::IAnalysisMgr::PutNasNXStratLsearch ( int _val ) {
    _com_dispatch_propput(this, 0x2807, VT_I4, _val);
}

#pragma implementation_key(1833)
inline int femap::IAnalysisMgr::GetNasNXStratMaxite ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2808, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1834)
inline void femap::IAnalysisMgr::PutNasNXStratMaxite ( int _val ) {
    _com_dispatch_propput(this, 0x2808, VT_I4, _val);
}

#pragma implementation_key(1835)
inline int femap::IAnalysisMgr::GetNasNXStratConvcri ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2809, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1836)
inline void femap::IAnalysisMgr::PutNasNXStratConvcri ( int _val ) {
    _com_dispatch_propput(this, 0x2809, VT_I4, _val);
}

#pragma implementation_key(1837)
inline double femap::IAnalysisMgr::GetNasNXStratEtol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1838)
inline void femap::IAnalysisMgr::PutNasNXStratEtol ( double _val ) {
    _com_dispatch_propput(this, 0x280a, VT_R8, _val);
}

#pragma implementation_key(1839)
inline double femap::IAnalysisMgr::GetNasNXStratRtol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1840)
inline void femap::IAnalysisMgr::PutNasNXStratRtol ( double _val ) {
    _com_dispatch_propput(this, 0x280b, VT_R8, _val);
}

#pragma implementation_key(1841)
inline double femap::IAnalysisMgr::GetNasNXStratRnorm ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1842)
inline void femap::IAnalysisMgr::PutNasNXStratRnorm ( double _val ) {
    _com_dispatch_propput(this, 0x280c, VT_R8, _val);
}

#pragma implementation_key(1843)
inline double femap::IAnalysisMgr::GetNasNXStratRmnorm ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1844)
inline void femap::IAnalysisMgr::PutNasNXStratRmnorm ( double _val ) {
    _com_dispatch_propput(this, 0x280d, VT_R8, _val);
}

#pragma implementation_key(1845)
inline double femap::IAnalysisMgr::GetNasNXStratRctol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1846)
inline void femap::IAnalysisMgr::PutNasNXStratRctol ( double _val ) {
    _com_dispatch_propput(this, 0x280e, VT_R8, _val);
}

#pragma implementation_key(1847)
inline double femap::IAnalysisMgr::GetNasNXStratDtol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1848)
inline void femap::IAnalysisMgr::PutNasNXStratDtol ( double _val ) {
    _com_dispatch_propput(this, 0x280f, VT_R8, _val);
}

#pragma implementation_key(1849)
inline double femap::IAnalysisMgr::GetNasNXStratDnorm ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2810, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1850)
inline void femap::IAnalysisMgr::PutNasNXStratDnorm ( double _val ) {
    _com_dispatch_propput(this, 0x2810, VT_R8, _val);
}

#pragma implementation_key(1851)
inline double femap::IAnalysisMgr::GetNasNXStratDmnorm ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2811, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1852)
inline void femap::IAnalysisMgr::PutNasNXStratDmnorm ( double _val ) {
    _com_dispatch_propput(this, 0x2811, VT_R8, _val);
}

#pragma implementation_key(1853)
inline double femap::IAnalysisMgr::GetNasNXStratStol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2812, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1854)
inline void femap::IAnalysisMgr::PutNasNXStratStol ( double _val ) {
    _com_dispatch_propput(this, 0x2812, VT_R8, _val);
}

#pragma implementation_key(1855)
inline double femap::IAnalysisMgr::GetNasNXStratRconsm ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2813, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1856)
inline void femap::IAnalysisMgr::PutNasNXStratRconsm ( double _val ) {
    _com_dispatch_propput(this, 0x2813, VT_R8, _val);
}

#pragma implementation_key(1857)
inline double femap::IAnalysisMgr::GetNasNXStratEnlsth ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2814, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1858)
inline void femap::IAnalysisMgr::PutNasNXStratEnlsth ( double _val ) {
    _com_dispatch_propput(this, 0x2814, VT_R8, _val);
}

#pragma implementation_key(1859)
inline int femap::IAnalysisMgr::GetNasNXStratAtssubd ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2815, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1860)
inline void femap::IAnalysisMgr::PutNasNXStratAtssubd ( int _val ) {
    _com_dispatch_propput(this, 0x2815, VT_I4, _val);
}

#pragma implementation_key(1861)
inline double femap::IAnalysisMgr::GetNasNXStratAtsmxdt ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2816, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1862)
inline void femap::IAnalysisMgr::PutNasNXStratAtsmxdt ( double _val ) {
    _com_dispatch_propput(this, 0x2816, VT_R8, _val);
}

#pragma implementation_key(1863)
inline int femap::IAnalysisMgr::GetNasNXStratAtsnext ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2817, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1864)
inline void femap::IAnalysisMgr::PutNasNXStratAtsnext ( int _val ) {
    _com_dispatch_propput(this, 0x2817, VT_I4, _val);
}

#pragma implementation_key(1865)
inline double femap::IAnalysisMgr::GetNasNXStratAtsdfac ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2818, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1866)
inline void femap::IAnalysisMgr::PutNasNXStratAtsdfac ( double _val ) {
    _com_dispatch_propput(this, 0x2818, VT_R8, _val);
}

#pragma implementation_key(1867)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratAtslows ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2819, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1868)
inline void femap::IAnalysisMgr::PutNasNXStratAtslows ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2819, VT_BOOL, _val);
}

#pragma implementation_key(1869)
inline double femap::IAnalysisMgr::GetNasNXStratAtsdamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x281a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1870)
inline void femap::IAnalysisMgr::PutNasNXStratAtsdamp ( double _val ) {
    _com_dispatch_propput(this, 0x281a, VT_R8, _val);
}

#pragma implementation_key(1871)
inline int femap::IAnalysisMgr::GetNasNXStratLdcgrid ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x281b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1872)
inline void femap::IAnalysisMgr::PutNasNXStratLdcgrid ( int _val ) {
    _com_dispatch_propput(this, 0x281b, VT_I4, _val);
}

#pragma implementation_key(1873)
inline int femap::IAnalysisMgr::GetNasNXStratLdcdof ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x281c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1874)
inline void femap::IAnalysisMgr::PutNasNXStratLdcdof ( int _val ) {
    _com_dispatch_propput(this, 0x281c, VT_I4, _val);
}

#pragma implementation_key(1875)
inline double femap::IAnalysisMgr::GetNasNXStratLdcdisp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x281d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1876)
inline void femap::IAnalysisMgr::PutNasNXStratLdcdisp ( double _val ) {
    _com_dispatch_propput(this, 0x281d, VT_R8, _val);
}

#pragma implementation_key(1877)
inline double femap::IAnalysisMgr::GetNasNXStratLdcimax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x281e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1878)
inline void femap::IAnalysisMgr::PutNasNXStratLdcimax ( double _val ) {
    _com_dispatch_propput(this, 0x281e, VT_R8, _val);
}

#pragma implementation_key(1879)
inline double femap::IAnalysisMgr::GetNasNXStratLdcdmax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x281f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1880)
inline void femap::IAnalysisMgr::PutNasNXStratLdcdmax ( double _val ) {
    _com_dispatch_propput(this, 0x281f, VT_R8, _val);
}

#pragma implementation_key(1881)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratLdccont ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2820, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1882)
inline void femap::IAnalysisMgr::PutNasNXStratLdccont ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2820, VT_BOOL, _val);
}

#pragma implementation_key(1883)
inline int femap::IAnalysisMgr::GetNasNXStratLdcsubd ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2821, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1884)
inline void femap::IAnalysisMgr::PutNasNXStratLdcsubd ( int _val ) {
    _com_dispatch_propput(this, 0x2821, VT_I4, _val);
}

#pragma implementation_key(1885)
inline int femap::IAnalysisMgr::GetNasNXStratImpact ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2822, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1886)
inline void femap::IAnalysisMgr::PutNasNXStratImpact ( int _val ) {
    _com_dispatch_propput(this, 0x2822, VT_I4, _val);
}

#pragma implementation_key(1887)
inline int femap::IAnalysisMgr::GetNasNXStratNsupp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2823, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1888)
inline void femap::IAnalysisMgr::PutNasNXStratNsupp ( int _val ) {
    _com_dispatch_propput(this, 0x2823, VT_I4, _val);
}

#pragma implementation_key(1889)
inline double femap::IAnalysisMgr::GetNasNXStratTstart ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2825, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1890)
inline void femap::IAnalysisMgr::PutNasNXStratTstart ( double _val ) {
    _com_dispatch_propput(this, 0x2825, VT_R8, _val);
}

#pragma implementation_key(1891)
inline int femap::IAnalysisMgr::GetNasNXStratIrint ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2826, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1892)
inline void femap::IAnalysisMgr::PutNasNXStratIrint ( int _val ) {
    _com_dispatch_propput(this, 0x2826, VT_I4, _val);
}

#pragma implementation_key(1893)
inline int femap::IAnalysisMgr::GetNasNXStratNsubgrp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2827, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1894)
inline void femap::IAnalysisMgr::PutNasNXStratNsubgrp ( int _val ) {
    _com_dispatch_propput(this, 0x2827, VT_I4, _val);
}

#pragma implementation_key(1895)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratElcv ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2828, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1896)
inline void femap::IAnalysisMgr::PutNasNXStratElcv ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2828, VT_BOOL, _val);
}

#pragma implementation_key(1897)
inline int femap::IAnalysisMgr::GetNasNXStratEqrbar ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2829, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1898)
inline void femap::IAnalysisMgr::PutNasNXStratEqrbar ( int _val ) {
    _com_dispatch_propput(this, 0x2829, VT_I4, _val);
}

#pragma implementation_key(1899)
inline int femap::IAnalysisMgr::GetNasNXStratEqrbe2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x282a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1900)
inline void femap::IAnalysisMgr::PutNasNXStratEqrbe2 ( int _val ) {
    _com_dispatch_propput(this, 0x282a, VT_I4, _val);
}

#pragma implementation_key(1901)
inline double femap::IAnalysisMgr::GetNasNXStratSpringk ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x282b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1902)
inline void femap::IAnalysisMgr::PutNasNXStratSpringk ( double _val ) {
    _com_dispatch_propput(this, 0x282b, VT_R8, _val);
}

#pragma implementation_key(1903)
inline double femap::IAnalysisMgr::GetNasNXStratBeame ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x282c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1904)
inline void femap::IAnalysisMgr::PutNasNXStratBeame ( double _val ) {
    _com_dispatch_propput(this, 0x282c, VT_R8, _val);
}

#pragma implementation_key(1905)
inline double femap::IAnalysisMgr::GetNasNXStratBeama ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x282d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1906)
inline void femap::IAnalysisMgr::PutNasNXStratBeama ( double _val ) {
    _com_dispatch_propput(this, 0x282d, VT_R8, _val);
}

#pragma implementation_key(1907)
inline double femap::IAnalysisMgr::GetNasNXStratRblcrit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x282e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1908)
inline void femap::IAnalysisMgr::PutNasNXStratRblcrit ( double _val ) {
    _com_dispatch_propput(this, 0x282e, VT_R8, _val);
}

#pragma implementation_key(1909)
inline int femap::IAnalysisMgr::GetNasNXStratXstep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x282f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1910)
inline void femap::IAnalysisMgr::PutNasNXStratXstep ( int _val ) {
    _com_dispatch_propput(this, 0x282f, VT_I4, _val);
}

#pragma implementation_key(1911)
inline int femap::IAnalysisMgr::GetNasNXStratXdtcal ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2830, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1912)
inline void femap::IAnalysisMgr::PutNasNXStratXdtcal ( int _val ) {
    _com_dispatch_propput(this, 0x2830, VT_I4, _val);
}

#pragma implementation_key(1913)
inline double femap::IAnalysisMgr::GetNasNXStratXdtfac ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2831, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1914)
inline void femap::IAnalysisMgr::PutNasNXStratXdtfac ( double _val ) {
    _com_dispatch_propput(this, 0x2831, VT_R8, _val);
}

#pragma implementation_key(1915)
inline double femap::IAnalysisMgr::GetNasNXStratXmscale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2832, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1916)
inline void femap::IAnalysisMgr::PutNasNXStratXmscale ( double _val ) {
    _com_dispatch_propput(this, 0x2832, VT_R8, _val);
}

#pragma implementation_key(1917)
inline double femap::IAnalysisMgr::GetNasNXStratXdtmin1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2833, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1918)
inline void femap::IAnalysisMgr::PutNasNXStratXdtmin1 ( double _val ) {
    _com_dispatch_propput(this, 0x2833, VT_R8, _val);
}

#pragma implementation_key(1919)
inline double femap::IAnalysisMgr::GetNasNXStratXdtmin2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2834, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1920)
inline void femap::IAnalysisMgr::PutNasNXStratXdtmin2 ( double _val ) {
    _com_dispatch_propput(this, 0x2834, VT_R8, _val);
}

#pragma implementation_key(1921)
inline int femap::IAnalysisMgr::GetNasNXStratIcmode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2835, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1922)
inline void femap::IAnalysisMgr::PutNasNXStratIcmode ( int _val ) {
    _com_dispatch_propput(this, 0x2835, VT_I4, _val);
}

#pragma implementation_key(1923)
inline int femap::IAnalysisMgr::GetNasNXStratUlform ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2836, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1924)
inline void femap::IAnalysisMgr::PutNasNXStratUlform ( int _val ) {
    _com_dispatch_propput(this, 0x2836, VT_I4, _val);
}

#pragma implementation_key(1925)
inline _variant_t femap::IAnalysisMgr::GetNasNXStratTimeSteps ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2837, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1926)
inline void femap::IAnalysisMgr::PutNasNXStratTimeSteps ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2837, VT_VARIANT, &_val);
}

#pragma implementation_key(1927)
inline _variant_t femap::IAnalysisMgr::GetNasNXStratTimeIncrement ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2838, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1928)
inline void femap::IAnalysisMgr::PutNasNXStratTimeIncrement ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2838, VT_VARIANT, &_val);
}

#pragma implementation_key(1929)
inline _variant_t femap::IAnalysisMgr::GetNasNXStratSkipFactor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2839, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1930)
inline void femap::IAnalysisMgr::PutNasNXStratSkipFactor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2839, VT_VARIANT, &_val);
}

#pragma implementation_key(1931)
inline int femap::IAnalysisMgr::GetNasNXStratCstype ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x283b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1932)
inline void femap::IAnalysisMgr::PutNasNXStratCstype ( int _val ) {
    _com_dispatch_propput(this, 0x283b, VT_I4, _val);
}

#pragma implementation_key(1933)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynModOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1934)
inline void femap::IAnalysisMgr::PutDynModOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283c, VT_BOOL, _val);
}

#pragma implementation_key(1935)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynModExportRigidNodes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1936)
inline void femap::IAnalysisMgr::PutDynModExportRigidNodes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283d, VT_BOOL, _val);
}

#pragma implementation_key(1937)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynModMatlBasedParts ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1938)
inline void femap::IAnalysisMgr::PutDynModMatlBasedParts ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283e, VT_BOOL, _val);
}

#pragma implementation_key(1939)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynModGroupsAsSets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1940)
inline void femap::IAnalysisMgr::PutDynModGroupsAsSets ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283f, VT_BOOL, _val);
}

#pragma implementation_key(1941)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynModSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2840, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1942)
inline void femap::IAnalysisMgr::PutDynModSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2840, VT_BOOL, _val);
}

#pragma implementation_key(1943)
inline int femap::IAnalysisMgr::GetDynModStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2841, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1944)
inline void femap::IAnalysisMgr::PutDynModStartText ( int _val ) {
    _com_dispatch_propput(this, 0x2841, VT_I4, _val);
}

#pragma implementation_key(1945)
inline int femap::IAnalysisMgr::GetDynModEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2842, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1946)
inline void femap::IAnalysisMgr::PutDynModEndText ( int _val ) {
    _com_dispatch_propput(this, 0x2842, VT_I4, _val);
}

#pragma implementation_key(1947)
inline int femap::IAnalysisMgr::GetNasBulkAutospcType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2843, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1948)
inline void femap::IAnalysisMgr::PutNasBulkAutospcType ( int _val ) {
    _com_dispatch_propput(this, 0x2843, VT_I4, _val);
}

#pragma implementation_key(1949)
inline int femap::IAnalysisMgr::GetNasExecMemory ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2844, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1950)
inline void femap::IAnalysisMgr::PutNasExecMemory ( int _val ) {
    _com_dispatch_propput(this, 0x2844, VT_I4, _val);
}

#pragma implementation_key(1951)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecExtendedMessages ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2845, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1952)
inline void femap::IAnalysisMgr::PutNasExecExtendedMessages ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2845, VT_BOOL, _val);
}

#pragma implementation_key(1953)
inline _bstr_t femap::IAnalysisMgr::GetNasExecSystemCell ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2846, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1954)
inline void femap::IAnalysisMgr::PutNasExecSystemCell ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2846, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1955)
inline _bstr_t femap::IAnalysisMgr::GetNasExecScratchDir1 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2847, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1956)
inline void femap::IAnalysisMgr::PutNasExecScratchDir1 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2847, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1957)
inline _bstr_t femap::IAnalysisMgr::GetNasExecScratchDir2 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2848, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(1958)
inline void femap::IAnalysisMgr::PutNasExecScratchDir2 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2848, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(1959)
inline int femap::IAnalysisMgr::GetNasExecScratchSize1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2849, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1960)
inline void femap::IAnalysisMgr::PutNasExecScratchSize1 ( int _val ) {
    _com_dispatch_propput(this, 0x2849, VT_I4, _val);
}

#pragma implementation_key(1961)
inline int femap::IAnalysisMgr::GetNasExecScratchSize2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x284a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1962)
inline void femap::IAnalysisMgr::PutNasExecScratchSize2 ( int _val ) {
    _com_dispatch_propput(this, 0x284a, VT_I4, _val);
}

#pragma implementation_key(1963)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkRigidThermalExp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x284b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1964)
inline void femap::IAnalysisMgr::PutNasBulkRigidThermalExp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x284b, VT_BOOL, _val);
}

#pragma implementation_key(1965)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkSrcomps ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x284c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1966)
inline void femap::IAnalysisMgr::PutNasBulkSrcomps ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x284c, VT_BOOL, _val);
}

#pragma implementation_key(1967)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkNofisr ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x284d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1968)
inline void femap::IAnalysisMgr::PutNasBulkNofisr ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x284d, VT_BOOL, _val);
}

#pragma implementation_key(1969)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkLgstrn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x284e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1970)
inline void femap::IAnalysisMgr::PutNasBulkLgstrn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x284e, VT_BOOL, _val);
}

#pragma implementation_key(1971)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasModesSkipEigr ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x284f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1972)
inline void femap::IAnalysisMgr::PutNasModesSkipEigr ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x284f, VT_BOOL, _val);
}

#pragma implementation_key(1973)
inline _variant_t femap::IAnalysisMgr::GetvNasModeImagFreqRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2850, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(1974)
inline void femap::IAnalysisMgr::PutvNasModeImagFreqRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2850, VT_VARIANT, &_val);
}

#pragma implementation_key(1975)
inline double femap::IAnalysisMgr::GetNasModesComplexConverge ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2851, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1976)
inline void femap::IAnalysisMgr::PutNasModesComplexConverge ( double _val ) {
    _com_dispatch_propput(this, 0x2851, VT_R8, _val);
}

#pragma implementation_key(1977)
inline double femap::IAnalysisMgr::GetNasModesComplexRegionWidth ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2852, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(1978)
inline void femap::IAnalysisMgr::PutNasModesComplexRegionWidth ( double _val ) {
    _com_dispatch_propput(this, 0x2852, VT_R8, _val);
}

#pragma implementation_key(1979)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratElrescs ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2853, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1980)
inline void femap::IAnalysisMgr::PutNasNXStratElrescs ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2853, VT_BOOL, _val);
}

#pragma implementation_key(1981)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDdamOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2854, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1982)
inline void femap::IAnalysisMgr::PutNasDdamOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2854, VT_BOOL, _val);
}

#pragma implementation_key(1983)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDdamEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2855, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1984)
inline void femap::IAnalysisMgr::PutNasDdamEnabled ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2855, VT_BOOL, _val);
}

#pragma implementation_key(1985)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDdamIncludePath ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2856, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1986)
inline void femap::IAnalysisMgr::PutNasDdamIncludePath ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2856, VT_BOOL, _val);
}

#pragma implementation_key(1987)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDdamIsDDAM ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2857, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(1988)
inline void femap::IAnalysisMgr::PutNasDdamIsDDAM ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2857, VT_BOOL, _val);
}

#pragma implementation_key(1989)
inline int femap::IAnalysisMgr::GetNasDdamUseBuiltInCoeff ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2858, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1990)
inline void femap::IAnalysisMgr::PutNasDdamUseBuiltInCoeff ( int _val ) {
    _com_dispatch_propput(this, 0x2858, VT_I4, _val);
}

#pragma implementation_key(1991)
inline int femap::IAnalysisMgr::GetNasDdamEquationType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2859, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1992)
inline void femap::IAnalysisMgr::PutNasDdamEquationType ( int _val ) {
    _com_dispatch_propput(this, 0x2859, VT_I4, _val);
}

#pragma implementation_key(1993)
inline int femap::IAnalysisMgr::GetNasDdamSurfaceShip ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1994)
inline void femap::IAnalysisMgr::PutNasDdamSurfaceShip ( int _val ) {
    _com_dispatch_propput(this, 0x285a, VT_I4, _val);
}

#pragma implementation_key(1995)
inline int femap::IAnalysisMgr::GetNasDdamEquipmentLocation ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1996)
inline void femap::IAnalysisMgr::PutNasDdamEquipmentLocation ( int _val ) {
    _com_dispatch_propput(this, 0x285b, VT_I4, _val);
}

#pragma implementation_key(1997)
inline int femap::IAnalysisMgr::GetNasDdamElasticPlastic ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(1998)
inline void femap::IAnalysisMgr::PutNasDdamElasticPlastic ( int _val ) {
    _com_dispatch_propput(this, 0x285c, VT_I4, _val);
}

#pragma implementation_key(1999)
inline int femap::IAnalysisMgr::GetNasDdamForeAftDirection ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2000)
inline void femap::IAnalysisMgr::PutNasDdamForeAftDirection ( int _val ) {
    _com_dispatch_propput(this, 0x285d, VT_I4, _val);
}

#pragma implementation_key(2001)
inline int femap::IAnalysisMgr::GetNasDdamVerticalDirection ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2002)
inline void femap::IAnalysisMgr::PutNasDdamVerticalDirection ( int _val ) {
    _com_dispatch_propput(this, 0x285e, VT_I4, _val);
}

#pragma implementation_key(2003)
inline int femap::IAnalysisMgr::GetNasDdamDirectionSequence ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2004)
inline void femap::IAnalysisMgr::PutNasDdamDirectionSequence ( int _val ) {
    _com_dispatch_propput(this, 0x285f, VT_I4, _val);
}

#pragma implementation_key(2005)
inline double femap::IAnalysisMgr::GetNasDdamMassToWeight ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2860, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2006)
inline void femap::IAnalysisMgr::PutNasDdamMassToWeight ( double _val ) {
    _com_dispatch_propput(this, 0x2860, VT_R8, _val);
}

#pragma implementation_key(2007)
inline double femap::IAnalysisMgr::GetNasDdamWeightCutoffPct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2861, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2008)
inline void femap::IAnalysisMgr::PutNasDdamWeightCutoffPct ( double _val ) {
    _com_dispatch_propput(this, 0x2861, VT_R8, _val);
}

#pragma implementation_key(2009)
inline double femap::IAnalysisMgr::GetNasDdamGCutoff ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2862, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2010)
inline void femap::IAnalysisMgr::PutNasDdamGCutoff ( double _val ) {
    _com_dispatch_propput(this, 0x2862, VT_R8, _val);
}

#pragma implementation_key(2011)
inline _bstr_t femap::IAnalysisMgr::GetNasDdamSpecCoeffFile ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2863, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2012)
inline void femap::IAnalysisMgr::PutNasDdamSpecCoeffFile ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2863, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2013)
inline _variant_t femap::IAnalysisMgr::GetvNasDdamCoeffOn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2864, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2014)
inline void femap::IAnalysisMgr::PutvNasDdamCoeffOn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2864, VT_VARIANT, &_val);
}

#pragma implementation_key(2015)
inline _variant_t femap::IAnalysisMgr::GetvNasDdamCoeffVal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2865, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2016)
inline void femap::IAnalysisMgr::PutvNasDdamCoeffVal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2865, VT_VARIANT, &_val);
}

#pragma implementation_key(2017)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2866, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2018)
inline void femap::IAnalysisMgr::PutNasRotorOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2866, VT_BOOL, _val);
}

#pragma implementation_key(2019)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorEnabled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2867, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2020)
inline void femap::IAnalysisMgr::PutNasRotorEnabled ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2867, VT_BOOL, _val);
}

#pragma implementation_key(2021)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorIncludePath ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2868, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2022)
inline void femap::IAnalysisMgr::PutNasRotorIncludePath ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2868, VT_BOOL, _val);
}

#pragma implementation_key(2023)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorSingleRotor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2869, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2024)
inline void femap::IAnalysisMgr::PutNasRotorSingleRotor ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2869, VT_BOOL, _val);
}

#pragma implementation_key(2025)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorFixedRefSys ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2026)
inline void femap::IAnalysisMgr::PutNasRotorFixedRefSys ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286a, VT_BOOL, _val);
}

#pragma implementation_key(2027)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorAsyncResponse ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2028)
inline void femap::IAnalysisMgr::PutNasRotorAsyncResponse ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286b, VT_BOOL, _val);
}

#pragma implementation_key(2029)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorSteinerInertia ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2030)
inline void femap::IAnalysisMgr::PutNasRotorSteinerInertia ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286c, VT_BOOL, _val);
}

#pragma implementation_key(2031)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorForceExcitation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2032)
inline void femap::IAnalysisMgr::PutNasRotorForceExcitation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286d, VT_BOOL, _val);
}

#pragma implementation_key(2033)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorDoCSV ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2034)
inline void femap::IAnalysisMgr::PutNasRotorDoCSV ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286e, VT_BOOL, _val);
}

#pragma implementation_key(2035)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRotorDoGPF ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2036)
inline void femap::IAnalysisMgr::PutNasRotorDoGPF ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286f, VT_BOOL, _val);
}

#pragma implementation_key(2037)
inline int femap::IAnalysisMgr::GetNasRotorInputUnits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2870, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2038)
inline void femap::IAnalysisMgr::PutNasRotorInputUnits ( int _val ) {
    _com_dispatch_propput(this, 0x2870, VT_I4, _val);
}

#pragma implementation_key(2039)
inline int femap::IAnalysisMgr::GetNasRotorOutputUnits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2871, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2040)
inline void femap::IAnalysisMgr::PutNasRotorOutputUnits ( int _val ) {
    _com_dispatch_propput(this, 0x2871, VT_I4, _val);
}

#pragma implementation_key(2041)
inline int femap::IAnalysisMgr::GetNasRotorPrintedOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2872, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2042)
inline void femap::IAnalysisMgr::PutNasRotorPrintedOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2872, VT_I4, _val);
}

#pragma implementation_key(2043)
inline int femap::IAnalysisMgr::GetNasRotorSpeedNumSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2873, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2044)
inline void femap::IAnalysisMgr::PutNasRotorSpeedNumSteps ( int _val ) {
    _com_dispatch_propput(this, 0x2873, VT_I4, _val);
}

#pragma implementation_key(2045)
inline double femap::IAnalysisMgr::GetNasRotorComplexModeOutput ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2874, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2046)
inline void femap::IAnalysisMgr::PutNasRotorComplexModeOutput ( double _val ) {
    _com_dispatch_propput(this, 0x2874, VT_R8, _val);
}

#pragma implementation_key(2047)
inline double femap::IAnalysisMgr::GetNasRotorWhirlThreshold ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2875, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2048)
inline void femap::IAnalysisMgr::PutNasRotorWhirlThreshold ( double _val ) {
    _com_dispatch_propput(this, 0x2875, VT_R8, _val);
}

#pragma implementation_key(2049)
inline double femap::IAnalysisMgr::GetNasRotorExcitationOrder ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2876, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2050)
inline void femap::IAnalysisMgr::PutNasRotorExcitationOrder ( double _val ) {
    _com_dispatch_propput(this, 0x2876, VT_R8, _val);
}

#pragma implementation_key(2051)
inline double femap::IAnalysisMgr::GetNasRotorSpeedStart ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2877, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2052)
inline void femap::IAnalysisMgr::PutNasRotorSpeedStart ( double _val ) {
    _com_dispatch_propput(this, 0x2877, VT_R8, _val);
}

#pragma implementation_key(2053)
inline double femap::IAnalysisMgr::GetNasRotorSpeedStep ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2878, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2054)
inline void femap::IAnalysisMgr::PutNasRotorSpeedStep ( double _val ) {
    _com_dispatch_propput(this, 0x2878, VT_R8, _val);
}

#pragma implementation_key(2055)
inline _bstr_t femap::IAnalysisMgr::GetNasRotorModeSelection ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2879, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2056)
inline void femap::IAnalysisMgr::PutNasRotorModeSelection ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2879, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2057)
inline int femap::IAnalysisMgr::GetNasNXStratCtdisp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x287a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2058)
inline void femap::IAnalysisMgr::PutNasNXStratCtdisp ( int _val ) {
    _com_dispatch_propput(this, 0x287a, VT_I4, _val);
}

#pragma implementation_key(2059)
inline int femap::IAnalysisMgr::GetNasNXStratCtdamp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x287b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2060)
inline void femap::IAnalysisMgr::PutNasNXStratCtdamp ( int _val ) {
    _com_dispatch_propput(this, 0x287b, VT_I4, _val);
}

#pragma implementation_key(2061)
inline double femap::IAnalysisMgr::GetNasNXStratCtdampN ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x287c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2062)
inline void femap::IAnalysisMgr::PutNasNXStratCtdampN ( double _val ) {
    _com_dispatch_propput(this, 0x287c, VT_R8, _val);
}

#pragma implementation_key(2063)
inline double femap::IAnalysisMgr::GetNasNXStratCtdampT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x287d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2064)
inline void femap::IAnalysisMgr::PutNasNXStratCtdampT ( double _val ) {
    _com_dispatch_propput(this, 0x287d, VT_R8, _val);
}

#pragma implementation_key(2065)
inline int femap::IAnalysisMgr::GetNasBulkInrelVal ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x287e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2066)
inline void femap::IAnalysisMgr::PutNasBulkInrelVal ( int _val ) {
    _com_dispatch_propput(this, 0x287e, VT_I4, _val);
}

#pragma implementation_key(2067)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkGapsAsContact ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x287f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2068)
inline void femap::IAnalysisMgr::PutNasBulkGapsAsContact ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x287f, VT_BOOL, _val);
}

#pragma implementation_key(2069)
inline double femap::IAnalysisMgr::GetNasNXStratMaxDisp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2880, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2070)
inline void femap::IAnalysisMgr::PutNasNXStratMaxDisp ( double _val ) {
    _com_dispatch_propput(this, 0x2880, VT_R8, _val);
}

#pragma implementation_key(2071)
inline int femap::IAnalysisMgr::GetNasNXStratBoltstp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2881, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2072)
inline void femap::IAnalysisMgr::PutNasNXStratBoltstp ( int _val ) {
    _com_dispatch_propput(this, 0x2881, VT_I4, _val);
}

#pragma implementation_key(2073)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkBoltFact ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2882, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2074)
inline void femap::IAnalysisMgr::PutNasBulkBoltFact ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2882, VT_BOOL, _val);
}

#pragma implementation_key(2075)
inline double femap::IAnalysisMgr::GetNasBulkBoltFactVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2883, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2076)
inline void femap::IAnalysisMgr::PutNasBulkBoltFactVal ( double _val ) {
    _com_dispatch_propput(this, 0x2883, VT_R8, _val);
}

#pragma implementation_key(2077)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratCvssval ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2884, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2078)
inline void femap::IAnalysisMgr::PutNasNXStratCvssval ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2884, VT_BOOL, _val);
}

#pragma implementation_key(2079)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratXtcurve ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2885, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2080)
inline void femap::IAnalysisMgr::PutNasNXStratXtcurve ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2885, VT_BOOL, _val);
}

#pragma implementation_key(2081)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratRtalg ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2886, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2082)
inline void femap::IAnalysisMgr::PutNasNXStratRtalg ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2886, VT_BOOL, _val);
}

#pragma implementation_key(2083)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratTnslcf ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2887, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2084)
inline void femap::IAnalysisMgr::PutNasNXStratTnslcf ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2887, VT_BOOL, _val);
}

#pragma implementation_key(2085)
inline double femap::IAnalysisMgr::GetNasNXStratDrillkf ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2888, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2086)
inline void femap::IAnalysisMgr::PutNasNXStratDrillkf ( double _val ) {
    _com_dispatch_propput(this, 0x2888, VT_R8, _val);
}

#pragma implementation_key(2087)
inline double femap::IAnalysisMgr::GetNasNXStratLslower ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2889, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2088)
inline void femap::IAnalysisMgr::PutNasNXStratLslower ( double _val ) {
    _com_dispatch_propput(this, 0x2889, VT_R8, _val);
}

#pragma implementation_key(2089)
inline double femap::IAnalysisMgr::GetNasNXStratLsupper ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x288a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2090)
inline void femap::IAnalysisMgr::PutNasNXStratLsupper ( double _val ) {
    _com_dispatch_propput(this, 0x288a, VT_R8, _val);
}

#pragma implementation_key(2091)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecSolutionMonitor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x288b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2092)
inline void femap::IAnalysisMgr::PutNasExecSolutionMonitor ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x288b, VT_BOOL, _val);
}

#pragma implementation_key(2093)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkDynLdAsLOADSET ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x288c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2094)
inline void femap::IAnalysisMgr::PutNasBulkDynLdAsLOADSET ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x288c, VT_BOOL, _val);
}

#pragma implementation_key(2095)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkResViner ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x288d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2096)
inline void femap::IAnalysisMgr::PutNasBulkResViner ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x288d, VT_BOOL, _val);
}

#pragma implementation_key(2097)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasGCheckNone ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x288e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2098)
inline void femap::IAnalysisMgr::PutNasGCheckNone ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x288e, VT_BOOL, _val);
}

#pragma implementation_key(2099)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkWriteAllLoadBCSets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x288f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2100)
inline void femap::IAnalysisMgr::PutNasBulkWriteAllLoadBCSets ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x288f, VT_BOOL, _val);
}

#pragma implementation_key(2101)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDynOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2890, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2102)
inline void femap::IAnalysisMgr::PutNasDynOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2890, VT_BOOL, _val);
}

#pragma implementation_key(2103)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDynUseLoadSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2891, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2104)
inline void femap::IAnalysisMgr::PutNasDynUseLoadSet ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2891, VT_BOOL, _val);
}

#pragma implementation_key(2105)
inline double femap::IAnalysisMgr::GetNasDynDampOverall ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2892, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2106)
inline void femap::IAnalysisMgr::PutNasDynDampOverall ( double _val ) {
    _com_dispatch_propput(this, 0x2892, VT_R8, _val);
}

#pragma implementation_key(2107)
inline double femap::IAnalysisMgr::GetNasDynDampW3 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2893, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2108)
inline void femap::IAnalysisMgr::PutNasDynDampW3 ( double _val ) {
    _com_dispatch_propput(this, 0x2893, VT_R8, _val);
}

#pragma implementation_key(2109)
inline double femap::IAnalysisMgr::GetNasDynDampW4 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2894, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2110)
inline void femap::IAnalysisMgr::PutNasDynDampW4 ( double _val ) {
    _com_dispatch_propput(this, 0x2894, VT_R8, _val);
}

#pragma implementation_key(2111)
inline _variant_t femap::IAnalysisMgr::GetvNasDynKeepFreq ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2895, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2112)
inline void femap::IAnalysisMgr::PutvNasDynKeepFreq ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2895, VT_VARIANT, &_val);
}

#pragma implementation_key(2113)
inline double femap::IAnalysisMgr::GetNasDynTranDT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2896, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2114)
inline void femap::IAnalysisMgr::PutNasDynTranDT ( double _val ) {
    _com_dispatch_propput(this, 0x2896, VT_R8, _val);
}

#pragma implementation_key(2115)
inline int femap::IAnalysisMgr::GetNasDynFreqTbl ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2897, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2116)
inline void femap::IAnalysisMgr::PutNasDynFreqTbl ( int _val ) {
    _com_dispatch_propput(this, 0x2897, VT_I4, _val);
}

#pragma implementation_key(2117)
inline int femap::IAnalysisMgr::GetNasDynDampModalTbl ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2898, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2118)
inline void femap::IAnalysisMgr::PutNasDynDampModalTbl ( int _val ) {
    _com_dispatch_propput(this, 0x2898, VT_I4, _val);
}

#pragma implementation_key(2119)
inline int femap::IAnalysisMgr::GetNasDynKeepModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2899, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2120)
inline void femap::IAnalysisMgr::PutNasDynKeepModes ( int _val ) {
    _com_dispatch_propput(this, 0x2899, VT_I4, _val);
}

#pragma implementation_key(2121)
inline int femap::IAnalysisMgr::GetNasDynTranTimeSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x289a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2122)
inline void femap::IAnalysisMgr::PutNasDynTranTimeSteps ( int _val ) {
    _com_dispatch_propput(this, 0x289a, VT_I4, _val);
}

#pragma implementation_key(2123)
inline int femap::IAnalysisMgr::GetNasDynTransOutInt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x289b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2124)
inline void femap::IAnalysisMgr::PutNasDynTransOutInt ( int _val ) {
    _com_dispatch_propput(this, 0x289b, VT_I4, _val);
}

#pragma implementation_key(2125)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDynDampModalMethod ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x289c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2126)
inline void femap::IAnalysisMgr::PutNasDynDampModalMethod ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x289c, VT_BOOL, _val);
}

#pragma implementation_key(2127)
inline int femap::IAnalysisMgr::GetNasDynRespSpect ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x289d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2128)
inline void femap::IAnalysisMgr::PutNasDynRespSpect ( int _val ) {
    _com_dispatch_propput(this, 0x289d, VT_I4, _val);
}

#pragma implementation_key(2129)
inline int femap::IAnalysisMgr::GetNasDynFreqID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x289e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2130)
inline void femap::IAnalysisMgr::PutNasDynFreqID ( int _val ) {
    _com_dispatch_propput(this, 0x289e, VT_I4, _val);
}

#pragma implementation_key(2131)
inline double femap::IAnalysisMgr::GetNasModeDampOverall ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28a4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2132)
inline void femap::IAnalysisMgr::PutNasModeDampOverall ( double _val ) {
    _com_dispatch_propput(this, 0x28a4, VT_R8, _val);
}

#pragma implementation_key(2133)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkEnfmotn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28a5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2134)
inline void femap::IAnalysisMgr::PutNasBulkEnfmotn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28a5, VT_BOOL, _val);
}

#pragma implementation_key(2135)
inline int femap::IAnalysisMgr::GetNasBulkEnfmotnOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28a6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2136)
inline void femap::IAnalysisMgr::PutNasBulkEnfmotnOpt ( int _val ) {
    _com_dispatch_propput(this, 0x28a6, VT_I4, _val);
}

#pragma implementation_key(2137)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDynFzero ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28a7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2138)
inline void femap::IAnalysisMgr::PutNasDynFzero ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28a7, VT_BOOL, _val);
}

#pragma implementation_key(2139)
inline double femap::IAnalysisMgr::GetNasDynFzeroVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28a8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2140)
inline void femap::IAnalysisMgr::PutNasDynFzeroVal ( double _val ) {
    _com_dispatch_propput(this, 0x28a8, VT_R8, _val);
}

#pragma implementation_key(2141)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasDynWmodal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28a9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2142)
inline void femap::IAnalysisMgr::PutNasDynWmodal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28a9, VT_BOOL, _val);
}

#pragma implementation_key(2143)
inline double femap::IAnalysisMgr::GetNasDdamForceConversion ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28aa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2144)
inline void femap::IAnalysisMgr::PutNasDdamForceConversion ( double _val ) {
    _com_dispatch_propput(this, 0x28aa, VT_R8, _val);
}

#pragma implementation_key(2145)
inline double femap::IAnalysisMgr::GetNasDdamAccelConversion ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28ab, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2146)
inline void femap::IAnalysisMgr::PutNasDdamAccelConversion ( double _val ) {
    _com_dispatch_propput(this, 0x28ab, VT_R8, _val);
}

#pragma implementation_key(2147)
inline double femap::IAnalysisMgr::GetNasNXStratAtsmass ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28ac, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2148)
inline void femap::IAnalysisMgr::PutNasNXStratAtsmass ( double _val ) {
    _com_dispatch_propput(this, 0x28ac, VT_R8, _val);
}

#pragma implementation_key(2149)
inline int femap::IAnalysisMgr::GetNasNXStratModexNew ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ad, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2150)
inline void femap::IAnalysisMgr::PutNasNXStratModexNew ( int _val ) {
    _com_dispatch_propput(this, 0x28ad, VT_I4, _val);
}

#pragma implementation_key(2151)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkCntAset ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ae, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2152)
inline void femap::IAnalysisMgr::PutNasBulkCntAset ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ae, VT_BOOL, _val);
}

#pragma implementation_key(2153)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasAeroOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28af, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2154)
inline void femap::IAnalysisMgr::PutNasAeroOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28af, VT_BOOL, _val);
}

#pragma implementation_key(2155)
inline int femap::IAnalysisMgr::GetNasAeroCsID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2156)
inline void femap::IAnalysisMgr::PutNasAeroCsID ( int _val ) {
    _com_dispatch_propput(this, 0x28b0, VT_I4, _val);
}

#pragma implementation_key(2157)
inline int femap::IAnalysisMgr::GetNasAeroRefCsID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2158)
inline void femap::IAnalysisMgr::PutNasAeroRefCsID ( int _val ) {
    _com_dispatch_propput(this, 0x28b1, VT_I4, _val);
}

#pragma implementation_key(2159)
inline double femap::IAnalysisMgr::GetNasAeroRefLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2160)
inline void femap::IAnalysisMgr::PutNasAeroRefLength ( double _val ) {
    _com_dispatch_propput(this, 0x28b2, VT_R8, _val);
}

#pragma implementation_key(2161)
inline double femap::IAnalysisMgr::GetNasAeroRefSpan ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2162)
inline void femap::IAnalysisMgr::PutNasAeroRefSpan ( double _val ) {
    _com_dispatch_propput(this, 0x28b3, VT_R8, _val);
}

#pragma implementation_key(2163)
inline double femap::IAnalysisMgr::GetNasAeroRefArea ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2164)
inline void femap::IAnalysisMgr::PutNasAeroRefArea ( double _val ) {
    _com_dispatch_propput(this, 0x28b4, VT_R8, _val);
}

#pragma implementation_key(2165)
inline int femap::IAnalysisMgr::GetNasAeroSymXY ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2166)
inline void femap::IAnalysisMgr::PutNasAeroSymXY ( int _val ) {
    _com_dispatch_propput(this, 0x28b5, VT_I4, _val);
}

#pragma implementation_key(2167)
inline int femap::IAnalysisMgr::GetNasAeroSymxz ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2168)
inline void femap::IAnalysisMgr::PutNasAeroSymxz ( int _val ) {
    _com_dispatch_propput(this, 0x28b6, VT_I4, _val);
}

#pragma implementation_key(2169)
inline double femap::IAnalysisMgr::GetNasAeroVelo ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2170)
inline void femap::IAnalysisMgr::PutNasAeroVelo ( double _val ) {
    _com_dispatch_propput(this, 0x28b7, VT_R8, _val);
}

#pragma implementation_key(2171)
inline double femap::IAnalysisMgr::GetNasAeroRefDens ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2172)
inline void femap::IAnalysisMgr::PutNasAeroRefDens ( double _val ) {
    _com_dispatch_propput(this, 0x28b8, VT_R8, _val);
}

#pragma implementation_key(2173)
inline int femap::IAnalysisMgr::GetNasAeroMkFuID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2174)
inline void femap::IAnalysisMgr::PutNasAeroMkFuID ( int _val ) {
    _com_dispatch_propput(this, 0x28b9, VT_I4, _val);
}

#pragma implementation_key(2175)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasAeroAeunit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ba, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2176)
inline void femap::IAnalysisMgr::PutNasAeroAeunit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ba, VT_BOOL, _val);
}

#pragma implementation_key(2177)
inline double femap::IAnalysisMgr::GetNasAeroAeunitVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28bb, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2178)
inline void femap::IAnalysisMgr::PutNasAeroAeunitVal ( double _val ) {
    _com_dispatch_propput(this, 0x28bb, VT_R8, _val);
}

#pragma implementation_key(2179)
inline _variant_t femap::IAnalysisMgr::GetvNasAeroFreqKeep ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28bc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2180)
inline void femap::IAnalysisMgr::PutvNasAeroFreqKeep ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28bc, VT_VARIANT, &_val);
}

#pragma implementation_key(2181)
inline int femap::IAnalysisMgr::GetNasAeroModesKeep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28bd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2182)
inline void femap::IAnalysisMgr::PutNasAeroModesKeep ( int _val ) {
    _com_dispatch_propput(this, 0x28bd, VT_I4, _val);
}

#pragma implementation_key(2183)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasAerobPARAMfzero ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28be, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2184)
inline void femap::IAnalysisMgr::PutNasAerobPARAMfzero ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28be, VT_BOOL, _val);
}

#pragma implementation_key(2185)
inline double femap::IAnalysisMgr::GetNasAerodPARAMfzero ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28bf, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2186)
inline void femap::IAnalysisMgr::PutNasAerodPARAMfzero ( double _val ) {
    _com_dispatch_propput(this, 0x28bf, VT_R8, _val);
}

#pragma implementation_key(2187)
inline int femap::IAnalysisMgr::GetNasAeroDampMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28c0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2188)
inline void femap::IAnalysisMgr::PutNasAeroDampMethod ( int _val ) {
    _com_dispatch_propput(this, 0x28c0, VT_I4, _val);
}

#pragma implementation_key(2189)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2190)
inline void femap::IAnalysisMgr::PutNasExtSEOutOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c1, VT_BOOL, _val);
}

#pragma implementation_key(2191)
inline int femap::IAnalysisMgr::GetNasExtSEOutExtID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28c2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2192)
inline void femap::IAnalysisMgr::PutNasExtSEOutExtID ( int _val ) {
    _com_dispatch_propput(this, 0x28c2, VT_I4, _val);
}

#pragma implementation_key(2193)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutMatStiffness ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2194)
inline void femap::IAnalysisMgr::PutNasExtSEOutMatStiffness ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c3, VT_BOOL, _val);
}

#pragma implementation_key(2195)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutMatMass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2196)
inline void femap::IAnalysisMgr::PutNasExtSEOutMatMass ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c4, VT_BOOL, _val);
}

#pragma implementation_key(2197)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutMatK4damp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2198)
inline void femap::IAnalysisMgr::PutNasExtSEOutMatK4damp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c5, VT_BOOL, _val);
}

#pragma implementation_key(2199)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutMatLoads ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2200)
inline void femap::IAnalysisMgr::PutNasExtSEOutMatLoads ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c6, VT_BOOL, _val);
}

#pragma implementation_key(2201)
inline enum femap::zAnalysisExtSEOutTo femap::IAnalysisMgr::GetNasExtSEOutTo ( ) {
    enum zAnalysisExtSEOutTo _result;
    _com_dispatch_propget(this, 0x28c7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2202)
inline void femap::IAnalysisMgr::PutNasExtSEOutTo ( enum zAnalysisExtSEOutTo _val ) {
    _com_dispatch_propput(this, 0x28c7, VT_I4, _val);
}

#pragma implementation_key(2203)
inline int femap::IAnalysisMgr::GetNasExtSEOutUnitID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28c8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2204)
inline void femap::IAnalysisMgr::PutNasExtSEOutUnitID ( int _val ) {
    _com_dispatch_propput(this, 0x28c8, VT_I4, _val);
}

#pragma implementation_key(2205)
inline _bstr_t femap::IAnalysisMgr::GetNasExtSEOutAssignTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x28c9, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2206)
inline void femap::IAnalysisMgr::PutNasExtSEOutAssignTitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x28c9, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2207)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutOptGeom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ca, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2208)
inline void femap::IAnalysisMgr::PutNasExtSEOutOptGeom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ca, VT_BOOL, _val);
}

#pragma implementation_key(2209)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutOptAsmbulk ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28cb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2210)
inline void femap::IAnalysisMgr::PutNasExtSEOutOptAsmbulk ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28cb, VT_BOOL, _val);
}

#pragma implementation_key(2211)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExtSEOutOptExtbulk ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28cc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2212)
inline void femap::IAnalysisMgr::PutNasExtSEOutOptExtbulk ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28cc, VT_BOOL, _val);
}

#pragma implementation_key(2213)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkSecomb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28cd, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2214)
inline void femap::IAnalysisMgr::PutNasBulkSecomb ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28cd, VT_BOOL, _val);
}

#pragma implementation_key(2215)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecAllowDuplicateNodes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ce, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2216)
inline void femap::IAnalysisMgr::PutNasExecAllowDuplicateNodes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ce, VT_BOOL, _val);
}

#pragma implementation_key(2217)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecWriteSERefPath ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28cf, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2218)
inline void femap::IAnalysisMgr::PutNasExecWriteSERefPath ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28cf, VT_BOOL, _val);
}

#pragma implementation_key(2219)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModSkipPreprocessCMD ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2220)
inline void femap::IAnalysisMgr::PutAnsModSkipPreprocessCMD ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d0, VT_BOOL, _val);
}

#pragma implementation_key(2221)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkPARAMBailout ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2222)
inline void femap::IAnalysisMgr::PutNasBulkPARAMBailout ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d1, VT_BOOL, _val);
}

#pragma implementation_key(2223)
inline double femap::IAnalysisMgr::GetNasExecDuplicateTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28d2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2224)
inline void femap::IAnalysisMgr::PutNasExecDuplicateTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x28d2, VT_R8, _val);
}

#pragma implementation_key(2225)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecRestartReadOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2226)
inline void femap::IAnalysisMgr::PutNasExecRestartReadOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d3, VT_BOOL, _val);
}

#pragma implementation_key(2227)
inline int femap::IAnalysisMgr::GetNasExecRestartVersion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28d4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2228)
inline void femap::IAnalysisMgr::PutNasExecRestartVersion ( int _val ) {
    _com_dispatch_propput(this, 0x28d4, VT_I4, _val);
}

#pragma implementation_key(2229)
inline int femap::IAnalysisMgr::GetNasExecRestartSubcase ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28d5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2230)
inline void femap::IAnalysisMgr::PutNasExecRestartSubcase ( int _val ) {
    _com_dispatch_propput(this, 0x28d5, VT_I4, _val);
}

#pragma implementation_key(2231)
inline enum femap::zAnalysisType femap::IAnalysisMgr::GetNasOptimAnalysisType ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x28d6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2232)
inline void femap::IAnalysisMgr::PutNasOptimAnalysisType ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x28d6, VT_I4, _val);
}

#pragma implementation_key(2233)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasOptimTrackModes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2234)
inline void femap::IAnalysisMgr::PutNasOptimTrackModes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d7, VT_BOOL, _val);
}

#pragma implementation_key(2235)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNonlinKDAMP ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2236)
inline void femap::IAnalysisMgr::PutNasNonlinKDAMP ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d8, VT_BOOL, _val);
}

#pragma implementation_key(2237)
inline int femap::IAnalysisMgr::GetNasNonlinKUPDATE ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28d9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2238)
inline void femap::IAnalysisMgr::PutNasNonlinKUPDATE ( int _val ) {
    _com_dispatch_propput(this, 0x28d9, VT_I4, _val);
}

#pragma implementation_key(2239)
inline _bstr_t femap::IAnalysisMgr::GetNasExecAnalyzeFilename ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x28da, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2240)
inline void femap::IAnalysisMgr::PutNasExecAnalyzeFilename ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x28da, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2241)
inline _variant_t femap::IAnalysisMgr::GetvNasGCheckTest2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28db, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2242)
inline void femap::IAnalysisMgr::PutvNasGCheckTest2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28db, VT_VARIANT, &_val);
}

#pragma implementation_key(2243)
inline _variant_t femap::IAnalysisMgr::GetvNasGCheckTol2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28dc, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2244)
inline void femap::IAnalysisMgr::PutvNasGCheckTol2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28dc, VT_VARIANT, &_val);
}

#pragma implementation_key(2245)
inline _variant_t femap::IAnalysisMgr::GetvNasGCheckMsg2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28dd, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2246)
inline void femap::IAnalysisMgr::PutvNasGCheckMsg2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28dd, VT_VARIANT, &_val);
}

#pragma implementation_key(2247)
inline enum femap::zAnalysisAssignForm femap::IAnalysisMgr::GetNasExtSEOutAssignForm ( ) {
    enum zAnalysisAssignForm _result;
    _com_dispatch_propget(this, 0x28de, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2248)
inline void femap::IAnalysisMgr::PutNasExtSEOutAssignForm ( enum zAnalysisAssignForm _val ) {
    _com_dispatch_propput(this, 0x28de, VT_I4, _val);
}

#pragma implementation_key(2249)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28df, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2250)
inline void femap::IAnalysisMgr::PutNasMscCtOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28df, VT_BOOL, _val);
}

#pragma implementation_key(2251)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtEnable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2252)
inline void femap::IAnalysisMgr::PutNasMscCtEnable ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e0, VT_BOOL, _val);
}

#pragma implementation_key(2253)
inline double femap::IAnalysisMgr::GetNasMscCtDDULMT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28e1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2254)
inline void femap::IAnalysisMgr::PutNasMscCtDDULMT ( double _val ) {
    _com_dispatch_propput(this, 0x28e1, VT_R8, _val);
}

#pragma implementation_key(2255)
inline double femap::IAnalysisMgr::GetNasMscCtRVCNST ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28e2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2256)
inline void femap::IAnalysisMgr::PutNasMscCtRVCNST ( double _val ) {
    _com_dispatch_propput(this, 0x28e2, VT_R8, _val);
}

#pragma implementation_key(2257)
inline double femap::IAnalysisMgr::GetNasMscCtSLDLMT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28e3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2258)
inline void femap::IAnalysisMgr::PutNasMscCtSLDLMT ( double _val ) {
    _com_dispatch_propput(this, 0x28e3, VT_R8, _val);
}

#pragma implementation_key(2259)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtTAUGMNT ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2260)
inline void femap::IAnalysisMgr::PutNasMscCtTAUGMNT ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e4, VT_BOOL, _val);
}

#pragma implementation_key(2261)
inline int femap::IAnalysisMgr::GetNasMscCtAUGMENT ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28e5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2262)
inline void femap::IAnalysisMgr::PutNasMscCtAUGMENT ( int _val ) {
    _com_dispatch_propput(this, 0x28e5, VT_I4, _val);
}

#pragma implementation_key(2263)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtBEAMB ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2264)
inline void femap::IAnalysisMgr::PutNasMscCtBEAMB ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e6, VT_BOOL, _val);
}

#pragma implementation_key(2265)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtERRBAS ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2266)
inline void femap::IAnalysisMgr::PutNasMscCtERRBAS ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e7, VT_BOOL, _val);
}

#pragma implementation_key(2267)
inline int femap::IAnalysisMgr::GetNasMscCtFTYPE ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28e8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2268)
inline void femap::IAnalysisMgr::PutNasMscCtFTYPE ( int _val ) {
    _com_dispatch_propput(this, 0x28e8, VT_I4, _val);
}

#pragma implementation_key(2269)
inline int femap::IAnalysisMgr::GetNasMscCtIBSEP ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28e9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2270)
inline void femap::IAnalysisMgr::PutNasMscCtIBSEP ( int _val ) {
    _com_dispatch_propput(this, 0x28e9, VT_I4, _val);
}

#pragma implementation_key(2271)
inline int femap::IAnalysisMgr::GetNasMscCtICSEP ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ea, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2272)
inline void femap::IAnalysisMgr::PutNasMscCtICSEP ( int _val ) {
    _com_dispatch_propput(this, 0x28ea, VT_I4, _val);
}

#pragma implementation_key(2273)
inline int femap::IAnalysisMgr::GetNasMscCtMAXSEP ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28eb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2274)
inline void femap::IAnalysisMgr::PutNasMscCtMAXSEP ( int _val ) {
    _com_dispatch_propput(this, 0x28eb, VT_I4, _val);
}

#pragma implementation_key(2275)
inline int femap::IAnalysisMgr::GetNasMscCtMETHOD ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ec, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2276)
inline void femap::IAnalysisMgr::PutNasMscCtMETHOD ( int _val ) {
    _com_dispatch_propput(this, 0x28ec, VT_I4, _val);
}

#pragma implementation_key(2277)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtNLGLUE ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ed, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2278)
inline void femap::IAnalysisMgr::PutNasMscCtNLGLUE ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ed, VT_BOOL, _val);
}

#pragma implementation_key(2279)
inline int femap::IAnalysisMgr::GetNasMscCtNODSEP ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ee, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2280)
inline void femap::IAnalysisMgr::PutNasMscCtNODSEP ( int _val ) {
    _com_dispatch_propput(this, 0x28ee, VT_I4, _val);
}

#pragma implementation_key(2281)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasMscCtSEGSYM ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ef, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2282)
inline void femap::IAnalysisMgr::PutNasMscCtSEGSYM ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ef, VT_BOOL, _val);
}

#pragma implementation_key(2283)
inline double femap::IAnalysisMgr::GetNasMscCtAUGDIST ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2284)
inline void femap::IAnalysisMgr::PutNasMscCtAUGDIST ( double _val ) {
    _com_dispatch_propput(this, 0x28f0, VT_R8, _val);
}

#pragma implementation_key(2285)
inline double femap::IAnalysisMgr::GetNasMscCtBIAS ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2286)
inline void femap::IAnalysisMgr::PutNasMscCtBIAS ( double _val ) {
    _com_dispatch_propput(this, 0x28f1, VT_R8, _val);
}

#pragma implementation_key(2287)
inline double femap::IAnalysisMgr::GetNasMscCtERROR ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2288)
inline void femap::IAnalysisMgr::PutNasMscCtERROR ( double _val ) {
    _com_dispatch_propput(this, 0x28f2, VT_R8, _val);
}

#pragma implementation_key(2289)
inline double femap::IAnalysisMgr::GetNasMscCtFNTOL ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2290)
inline void femap::IAnalysisMgr::PutNasMscCtFNTOL ( double _val ) {
    _com_dispatch_propput(this, 0x28f3, VT_R8, _val);
}

#pragma implementation_key(2291)
inline double femap::IAnalysisMgr::GetNasMscCtPENALT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2292)
inline void femap::IAnalysisMgr::PutNasMscCtPENALT ( double _val ) {
    _com_dispatch_propput(this, 0x28f4, VT_R8, _val);
}

#pragma implementation_key(2293)
inline double femap::IAnalysisMgr::GetNasMscCtSTKSLP ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2294)
inline void femap::IAnalysisMgr::PutNasMscCtSTKSLP ( double _val ) {
    _com_dispatch_propput(this, 0x28f5, VT_R8, _val);
}

#pragma implementation_key(2295)
inline double femap::IAnalysisMgr::GetNasMscCtTPENALT ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2296)
inline void femap::IAnalysisMgr::PutNasMscCtTPENALT ( double _val ) {
    _com_dispatch_propput(this, 0x28f6, VT_R8, _val);
}

#pragma implementation_key(2297)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkMgrid ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28f7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2298)
inline void femap::IAnalysisMgr::PutNasBulkMgrid ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28f7, VT_BOOL, _val);
}

#pragma implementation_key(2299)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkSwpangle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28f8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2300)
inline void femap::IAnalysisMgr::PutNasBulkSwpangle ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28f8, VT_BOOL, _val);
}

#pragma implementation_key(2301)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkAlpha1 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28f9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2302)
inline void femap::IAnalysisMgr::PutNasBulkAlpha1 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28f9, VT_BOOL, _val);
}

#pragma implementation_key(2303)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkAlpha2 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28fa, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2304)
inline void femap::IAnalysisMgr::PutNasBulkAlpha2 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28fa, VT_BOOL, _val);
}

#pragma implementation_key(2305)
inline double femap::IAnalysisMgr::GetNasBulkSwpangleVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28fb, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2306)
inline void femap::IAnalysisMgr::PutNasBulkSwpangleVal ( double _val ) {
    _com_dispatch_propput(this, 0x28fb, VT_R8, _val);
}

#pragma implementation_key(2307)
inline int femap::IAnalysisMgr::GetNasBulkMdofVal ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2308)
inline void femap::IAnalysisMgr::PutNasBulkMdofVal ( int _val ) {
    _com_dispatch_propput(this, 0x28fc, VT_I4, _val);
}

#pragma implementation_key(2309)
inline int femap::IAnalysisMgr::GetNasBulkMgridID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2310)
inline void femap::IAnalysisMgr::PutNasBulkMgridID ( int _val ) {
    _com_dispatch_propput(this, 0x28fd, VT_I4, _val);
}

#pragma implementation_key(2311)
inline _variant_t femap::IAnalysisMgr::GetvNasBulkAlpha1Val ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28fe, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2312)
inline void femap::IAnalysisMgr::PutvNasBulkAlpha1Val ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28fe, VT_VARIANT, &_val);
}

#pragma implementation_key(2313)
inline _variant_t femap::IAnalysisMgr::GetvNasBulkAlpha2Val ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28ff, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2314)
inline void femap::IAnalysisMgr::PutvNasBulkAlpha2Val ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28ff, VT_VARIANT, &_val);
}

#pragma implementation_key(2315)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasAerobOPPHIPA ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2900, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2316)
inline void femap::IAnalysisMgr::PutNasAerobOPPHIPA ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2900, VT_BOOL, _val);
}

#pragma implementation_key(2317)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNXStratBeamalg ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2901, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2318)
inline void femap::IAnalysisMgr::PutNasNXStratBeamalg ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2901, VT_BOOL, _val);
}

#pragma implementation_key(2319)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasExecGPU ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2902, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2320)
inline void femap::IAnalysisMgr::PutNasExecGPU ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2902, VT_BOOL, _val);
}

#pragma implementation_key(2321)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasBulkEndTextOutsideBulk ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2903, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2322)
inline void femap::IAnalysisMgr::PutNasBulkEndTextOutsideBulk ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2903, VT_BOOL, _val);
}

#pragma implementation_key(2323)
inline int femap::IAnalysisMgr::GetNasExecGPUOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2904, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2324)
inline void femap::IAnalysisMgr::PutNasExecGPUOpt ( int _val ) {
    _com_dispatch_propput(this, 0x2904, VT_I4, _val);
}

#pragma implementation_key(2325)
inline enum femap::zLinkedSolver femap::IAnalysisMgr::GetLinkedSolverOption ( ) {
    enum zLinkedSolver _result;
    _com_dispatch_propget(this, 0x2905, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2326)
inline void femap::IAnalysisMgr::PutLinkedSolverOption ( enum zLinkedSolver _val ) {
    _com_dispatch_propput(this, 0x2905, VT_I4, _val);
}

#pragma implementation_key(2327)
inline int femap::IAnalysisMgr::GetNasNXStratPlasalg ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2906, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2328)
inline void femap::IAnalysisMgr::PutNasNXStratPlasalg ( int _val ) {
    _com_dispatch_propput(this, 0x2906, VT_I4, _val);
}

#pragma implementation_key(2329)
inline _bstr_t femap::IAnalysisMgr::GetNasExecUserCmdLine ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2907, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2330)
inline void femap::IAnalysisMgr::PutNasExecUserCmdLine ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2907, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2331)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandCorrOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2908, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2332)
inline void femap::IAnalysisMgr::PutNasRandCorrOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2908, VT_BOOL, _val);
}

#pragma implementation_key(2333)
inline int femap::IAnalysisMgr::GetNasRandCorrLagInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2909, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2334)
inline void femap::IAnalysisMgr::PutNasRandCorrLagInterval ( int _val ) {
    _com_dispatch_propput(this, 0x2909, VT_I4, _val);
}

#pragma implementation_key(2335)
inline double femap::IAnalysisMgr::GetNasRandCorrLagStart ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x290a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2336)
inline void femap::IAnalysisMgr::PutNasRandCorrLagStart ( double _val ) {
    _com_dispatch_propput(this, 0x290a, VT_R8, _val);
}

#pragma implementation_key(2337)
inline double femap::IAnalysisMgr::GetNasRandCorrLagMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x290b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2338)
inline void femap::IAnalysisMgr::PutNasRandCorrLagMax ( double _val ) {
    _com_dispatch_propput(this, 0x290b, VT_R8, _val);
}

#pragma implementation_key(2339)
inline _variant_t femap::IAnalysisMgr::GetvNasRandXYRequest2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x290c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2340)
inline void femap::IAnalysisMgr::PutvNasRandXYRequest2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x290c, VT_VARIANT, &_val);
}

#pragma implementation_key(2341)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandXYAuto ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x290d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2342)
inline void femap::IAnalysisMgr::PutNasRandXYAuto ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x290d, VT_BOOL, _val);
}

#pragma implementation_key(2343)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRandXYPsdf ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x290e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2344)
inline void femap::IAnalysisMgr::PutNasRandXYPsdf ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x290e, VT_BOOL, _val);
}

#pragma implementation_key(2345)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasNonlinAdapt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x290f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2346)
inline void femap::IAnalysisMgr::PutNasNonlinAdapt ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x290f, VT_BOOL, _val);
}

#pragma implementation_key(2347)
inline _bstr_t femap::IAnalysisMgr::GetCaseTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3a98, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2348)
inline void femap::IAnalysisMgr::PutCaseTitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3a98, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2349)
inline _bstr_t femap::IAnalysisMgr::GetEcho ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3a9c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2350)
inline void femap::IAnalysisMgr::PutEcho ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3a9c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2351)
inline VARIANT_BOOL femap::IAnalysisMgr::GetSkipStandard ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3a9d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2352)
inline void femap::IAnalysisMgr::PutSkipStandard ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3a9d, VT_BOOL, _val);
}

#pragma implementation_key(2353)
inline int femap::IAnalysisMgr::GetStartText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3a9e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2354)
inline void femap::IAnalysisMgr::PutStartText ( int _val ) {
    _com_dispatch_propput(this, 0x3a9e, VT_I4, _val);
}

#pragma implementation_key(2355)
inline int femap::IAnalysisMgr::GetEndText ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3a9f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2356)
inline void femap::IAnalysisMgr::PutEndText ( int _val ) {
    _com_dispatch_propput(this, 0x3a9f, VT_I4, _val);
}

#pragma implementation_key(2357)
inline int femap::IAnalysisMgr::GetDestination ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2358)
inline void femap::IAnalysisMgr::PutDestination ( int _val ) {
    _com_dispatch_propput(this, 0x3aa0, VT_I4, _val);
}

#pragma implementation_key(2359)
inline int femap::IAnalysisMgr::GetImaginary ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2360)
inline void femap::IAnalysisMgr::PutImaginary ( int _val ) {
    _com_dispatch_propput(this, 0x3aa1, VT_I4, _val);
}

#pragma implementation_key(2361)
inline int femap::IAnalysisMgr::GetCornerOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2362)
inline void femap::IAnalysisMgr::PutCornerOutput ( int _val ) {
    _com_dispatch_propput(this, 0x3aa2, VT_I4, _val);
}

#pragma implementation_key(2363)
inline int femap::IAnalysisMgr::GetIntegrationOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2364)
inline void femap::IAnalysisMgr::PutIntegrationOutput ( int _val ) {
    _com_dispatch_propput(this, 0x3aa3, VT_I4, _val);
}

#pragma implementation_key(2365)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaHistOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aa4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2366)
inline void femap::IAnalysisMgr::PutAbaHistOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aa4, VT_BOOL, _val);
}

#pragma implementation_key(2367)
inline double femap::IAnalysisMgr::GetAbaHistTimePeriod ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2368)
inline void femap::IAnalysisMgr::PutAbaHistTimePeriod ( double _val ) {
    _com_dispatch_propput(this, 0x3aa5, VT_R8, _val);
}

#pragma implementation_key(2369)
inline double femap::IAnalysisMgr::GetAbaHistInitTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2370)
inline void femap::IAnalysisMgr::PutAbaHistInitTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3aa6, VT_R8, _val);
}

#pragma implementation_key(2371)
inline double femap::IAnalysisMgr::GetAbaHistMinTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2372)
inline void femap::IAnalysisMgr::PutAbaHistMinTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3aa7, VT_R8, _val);
}

#pragma implementation_key(2373)
inline double femap::IAnalysisMgr::GetAbaHistMaxTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aa8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2374)
inline void femap::IAnalysisMgr::PutAbaHistMaxTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3aa8, VT_R8, _val);
}

#pragma implementation_key(2375)
inline int femap::IAnalysisMgr::GetAbaHistEigenvectors ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aa9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2376)
inline void femap::IAnalysisMgr::PutAbaHistEigenvectors ( int _val ) {
    _com_dispatch_propput(this, 0x3aa9, VT_I4, _val);
}

#pragma implementation_key(2377)
inline double femap::IAnalysisMgr::GetAbaHistMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aaa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2378)
inline void femap::IAnalysisMgr::PutAbaHistMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3aaa, VT_R8, _val);
}

#pragma implementation_key(2379)
inline double femap::IAnalysisMgr::GetAbaHistMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aab, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2380)
inline void femap::IAnalysisMgr::PutAbaHistMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3aab, VT_R8, _val);
}

#pragma implementation_key(2381)
inline double femap::IAnalysisMgr::GetAbaHistShiftFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aac, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2382)
inline void femap::IAnalysisMgr::PutAbaHistShiftFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3aac, VT_R8, _val);
}

#pragma implementation_key(2383)
inline double femap::IAnalysisMgr::GetAbaHistScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3aad, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2384)
inline void femap::IAnalysisMgr::PutAbaHistScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x3aad, VT_R8, _val);
}

#pragma implementation_key(2385)
inline int femap::IAnalysisMgr::GetAbaHistOutInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aae, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2386)
inline void femap::IAnalysisMgr::PutAbaHistOutInterval ( int _val ) {
    _com_dispatch_propput(this, 0x3aae, VT_I4, _val);
}

#pragma implementation_key(2387)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaHistNonlinGeom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aaf, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2388)
inline void femap::IAnalysisMgr::PutAbaHistNonlinGeom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aaf, VT_BOOL, _val);
}

#pragma implementation_key(2389)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaHistLinearPert ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2390)
inline void femap::IAnalysisMgr::PutAbaHistLinearPert ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab0, VT_BOOL, _val);
}

#pragma implementation_key(2391)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaHistAutoContact ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2392)
inline void femap::IAnalysisMgr::PutAbaHistAutoContact ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab1, VT_BOOL, _val);
}

#pragma implementation_key(2393)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaHistStabilize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2394)
inline void femap::IAnalysisMgr::PutAbaHistStabilize ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab2, VT_BOOL, _val);
}

#pragma implementation_key(2395)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAbaHistOutZeroInc ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2396)
inline void femap::IAnalysisMgr::PutAbaHistOutZeroInc ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab3, VT_BOOL, _val);
}

#pragma implementation_key(2397)
inline int femap::IAnalysisMgr::GetAbaHistStepAmp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ab4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2398)
inline void femap::IAnalysisMgr::PutAbaHistStepAmp ( int _val ) {
    _com_dispatch_propput(this, 0x3ab4, VT_I4, _val);
}

#pragma implementation_key(2399)
inline int femap::IAnalysisMgr::GetAbaHistStepLoad ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ab5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2400)
inline void femap::IAnalysisMgr::PutAbaHistStepLoad ( int _val ) {
    _com_dispatch_propput(this, 0x3ab5, VT_I4, _val);
}

#pragma implementation_key(2401)
inline int femap::IAnalysisMgr::GetAbaHistStepConstr ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ab6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2402)
inline void femap::IAnalysisMgr::PutAbaHistStepConstr ( int _val ) {
    _com_dispatch_propput(this, 0x3ab6, VT_I4, _val);
}

#pragma implementation_key(2403)
inline enum femap::zAnalysisType femap::IAnalysisMgr::GetAbaHistAnalysisType ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x3ab7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2404)
inline void femap::IAnalysisMgr::PutAbaHistAnalysisType ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x3ab7, VT_I4, _val);
}

#pragma implementation_key(2405)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsDOFOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2406)
inline void femap::IAnalysisMgr::PutAnsDOFOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab8, VT_BOOL, _val);
}

#pragma implementation_key(2407)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsDOFDoSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ab9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2408)
inline void femap::IAnalysisMgr::PutAnsDOFDoSet ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ab9, VT_BOOL, _val);
}

#pragma implementation_key(2409)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsDOFAutomatic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aba, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2410)
inline void femap::IAnalysisMgr::PutAnsDOFAutomatic ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aba, VT_BOOL, _val);
}

#pragma implementation_key(2411)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsDOFNoRotation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3abb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2412)
inline void femap::IAnalysisMgr::PutAnsDOFNoRotation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3abb, VT_BOOL, _val);
}

#pragma implementation_key(2413)
inline int femap::IAnalysisMgr::GetAnsDOFSetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3abc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2414)
inline void femap::IAnalysisMgr::PutAnsDOFSetID ( int _val ) {
    _com_dispatch_propput(this, 0x3abc, VT_I4, _val);
}

#pragma implementation_key(2415)
inline int femap::IAnalysisMgr::GetAnsDOFNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3abd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2416)
inline void femap::IAnalysisMgr::PutAnsDOFNumber ( int _val ) {
    _com_dispatch_propput(this, 0x3abd, VT_I4, _val);
}

#pragma implementation_key(2417)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModesOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3abe, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2418)
inline void femap::IAnalysisMgr::PutAnsModesOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3abe, VT_BOOL, _val);
}

#pragma implementation_key(2419)
inline int femap::IAnalysisMgr::GetAnsModesNumModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3abf, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2420)
inline void femap::IAnalysisMgr::PutAnsModesNumModes ( int _val ) {
    _com_dispatch_propput(this, 0x3abf, VT_I4, _val);
}

#pragma implementation_key(2421)
inline double femap::IAnalysisMgr::GetAnsModesMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2422)
inline void femap::IAnalysisMgr::PutAnsModesMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ac0, VT_R8, _val);
}

#pragma implementation_key(2423)
inline double femap::IAnalysisMgr::GetAnsModesMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2424)
inline void femap::IAnalysisMgr::PutAnsModesMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ac1, VT_R8, _val);
}

#pragma implementation_key(2425)
inline double femap::IAnalysisMgr::GetAnsModesModalMethod ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2426)
inline void femap::IAnalysisMgr::PutAnsModesModalMethod ( double _val ) {
    _com_dispatch_propput(this, 0x3ac2, VT_R8, _val);
}

#pragma implementation_key(2427)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsModesElemResults ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ac3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2428)
inline void femap::IAnalysisMgr::PutAnsModesElemResults ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ac3, VT_BOOL, _val);
}

#pragma implementation_key(2429)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsHeatOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ac4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2430)
inline void femap::IAnalysisMgr::PutAnsHeatOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ac4, VT_BOOL, _val);
}

#pragma implementation_key(2431)
inline double femap::IAnalysisMgr::GetAnsHeatEndTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2432)
inline void femap::IAnalysisMgr::PutAnsHeatEndTime ( double _val ) {
    _com_dispatch_propput(this, 0x3ac5, VT_R8, _val);
}

#pragma implementation_key(2433)
inline double femap::IAnalysisMgr::GetAnsHeatTimeStep ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ac6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2434)
inline void femap::IAnalysisMgr::PutAnsHeatTimeStep ( double _val ) {
    _com_dispatch_propput(this, 0x3ac6, VT_R8, _val);
}

#pragma implementation_key(2435)
inline int femap::IAnalysisMgr::GetAnsHeatOutputFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ac7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2436)
inline void femap::IAnalysisMgr::PutAnsHeatOutputFreq ( int _val ) {
    _com_dispatch_propput(this, 0x3ac7, VT_I4, _val);
}

#pragma implementation_key(2437)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarHistOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ac8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2438)
inline void femap::IAnalysisMgr::PutMarHistOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ac8, VT_BOOL, _val);
}

#pragma implementation_key(2439)
inline int femap::IAnalysisMgr::GetMarHistContactProp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ac9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2440)
inline void femap::IAnalysisMgr::PutMarHistContactProp ( int _val ) {
    _com_dispatch_propput(this, 0x3ac9, VT_I4, _val);
}

#pragma implementation_key(2441)
inline int femap::IAnalysisMgr::GetMarHistCtrlMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aca, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2442)
inline void femap::IAnalysisMgr::PutMarHistCtrlMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3aca, VT_I4, _val);
}

#pragma implementation_key(2443)
inline int femap::IAnalysisMgr::GetMarHistSolverMeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3acb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2444)
inline void femap::IAnalysisMgr::PutMarHistSolverMeth ( int _val ) {
    _com_dispatch_propput(this, 0x3acb, VT_I4, _val);
}

#pragma implementation_key(2445)
inline int femap::IAnalysisMgr::GetMarHistCtrlMaxStep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3acc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2446)
inline void femap::IAnalysisMgr::PutMarHistCtrlMaxStep ( int _val ) {
    _com_dispatch_propput(this, 0x3acc, VT_I4, _val);
}

#pragma implementation_key(2447)
inline int femap::IAnalysisMgr::GetMarHistCtrlMaxRecycle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3acd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2448)
inline void femap::IAnalysisMgr::PutMarHistCtrlMaxRecycle ( int _val ) {
    _com_dispatch_propput(this, 0x3acd, VT_I4, _val);
}

#pragma implementation_key(2449)
inline int femap::IAnalysisMgr::GetMarHistCtrlMinRecycle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ace, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2450)
inline void femap::IAnalysisMgr::PutMarHistCtrlMinRecycle ( int _val ) {
    _com_dispatch_propput(this, 0x3ace, VT_I4, _val);
}

#pragma implementation_key(2451)
inline double femap::IAnalysisMgr::GetMarHistMaxResidual ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3acf, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2452)
inline void femap::IAnalysisMgr::PutMarHistMaxResidual ( double _val ) {
    _com_dispatch_propput(this, 0x3acf, VT_R8, _val);
}

#pragma implementation_key(2453)
inline int femap::IAnalysisMgr::GetMarHistConvergeMeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2454)
inline void femap::IAnalysisMgr::PutMarHistConvergeMeth ( int _val ) {
    _com_dispatch_propput(this, 0x3ad0, VT_I4, _val);
}

#pragma implementation_key(2455)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarHistNonPosDefinite ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ad1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2456)
inline void femap::IAnalysisMgr::PutMarHistNonPosDefinite ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ad1, VT_BOOL, _val);
}

#pragma implementation_key(2457)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarHistNonSymmetric ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ad2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2458)
inline void femap::IAnalysisMgr::PutMarHistNonSymmetric ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ad2, VT_BOOL, _val);
}

#pragma implementation_key(2459)
inline double femap::IAnalysisMgr::GetMarHistModalMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ad3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2460)
inline void femap::IAnalysisMgr::PutMarHistModalMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ad3, VT_R8, _val);
}

#pragma implementation_key(2461)
inline double femap::IAnalysisMgr::GetMarHistModalMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ad4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2462)
inline void femap::IAnalysisMgr::PutMarHistModalMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x3ad4, VT_R8, _val);
}

#pragma implementation_key(2463)
inline int femap::IAnalysisMgr::GetMarHistModalEigen ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2464)
inline void femap::IAnalysisMgr::PutMarHistModalEigen ( int _val ) {
    _com_dispatch_propput(this, 0x3ad5, VT_I4, _val);
}

#pragma implementation_key(2465)
inline int femap::IAnalysisMgr::GetMarHistChecking ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2466)
inline void femap::IAnalysisMgr::PutMarHistChecking ( int _val ) {
    _com_dispatch_propput(this, 0x3ad6, VT_I4, _val);
}

#pragma implementation_key(2467)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarHistAutoSwitch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ad7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2468)
inline void femap::IAnalysisMgr::PutMarHistAutoSwitch ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ad7, VT_BOOL, _val);
}

#pragma implementation_key(2469)
inline enum femap::zAnalysisType femap::IAnalysisMgr::GetMarHistAnalCaseSol ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x3ad8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2470)
inline void femap::IAnalysisMgr::PutMarHistAnalCaseSol ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x3ad8, VT_I4, _val);
}

#pragma implementation_key(2471)
inline int femap::IAnalysisMgr::GetMarHistBuckleNumModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ad9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2472)
inline void femap::IAnalysisMgr::PutMarHistBuckleNumModes ( int _val ) {
    _com_dispatch_propput(this, 0x3ad9, VT_I4, _val);
}

#pragma implementation_key(2473)
inline int femap::IAnalysisMgr::GetMarHistBucklePosEigen ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ada, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2474)
inline void femap::IAnalysisMgr::PutMarHistBucklePosEigen ( int _val ) {
    _com_dispatch_propput(this, 0x3ada, VT_I4, _val);
}

#pragma implementation_key(2475)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarIncOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3adb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2476)
inline void femap::IAnalysisMgr::PutMarIncOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3adb, VT_BOOL, _val);
}

#pragma implementation_key(2477)
inline int femap::IAnalysisMgr::GetMarIncArcLenMeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3adc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2478)
inline void femap::IAnalysisMgr::PutMarIncArcLenMeth ( int _val ) {
    _com_dispatch_propput(this, 0x3adc, VT_I4, _val);
}

#pragma implementation_key(2479)
inline double femap::IAnalysisMgr::GetMarIncTimePeriod ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3add, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2480)
inline void femap::IAnalysisMgr::PutMarIncTimePeriod ( double _val ) {
    _com_dispatch_propput(this, 0x3add, VT_R8, _val);
}

#pragma implementation_key(2481)
inline double femap::IAnalysisMgr::GetMarIncInitTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ade, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2482)
inline void femap::IAnalysisMgr::PutMarIncInitTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3ade, VT_R8, _val);
}

#pragma implementation_key(2483)
inline double femap::IAnalysisMgr::GetMarIncMinTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3adf, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2484)
inline void femap::IAnalysisMgr::PutMarIncMinTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3adf, VT_R8, _val);
}

#pragma implementation_key(2485)
inline double femap::IAnalysisMgr::GetMarIncMaxTimeInc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2486)
inline void femap::IAnalysisMgr::PutMarIncMaxTimeInc ( double _val ) {
    _com_dispatch_propput(this, 0x3ae0, VT_R8, _val);
}

#pragma implementation_key(2487)
inline double femap::IAnalysisMgr::GetMarIncScaleFact ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2488)
inline void femap::IAnalysisMgr::PutMarIncScaleFact ( double _val ) {
    _com_dispatch_propput(this, 0x3ae1, VT_R8, _val);
}

#pragma implementation_key(2489)
inline int femap::IAnalysisMgr::GetMarIncMaxStep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2490)
inline void femap::IAnalysisMgr::PutMarIncMaxStep ( int _val ) {
    _com_dispatch_propput(this, 0x3ae2, VT_I4, _val);
}

#pragma implementation_key(2491)
inline int femap::IAnalysisMgr::GetMarIncNumOutInc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2492)
inline void femap::IAnalysisMgr::PutMarIncNumOutInc ( int _val ) {
    _com_dispatch_propput(this, 0x3ae3, VT_I4, _val);
}

#pragma implementation_key(2493)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarIncQuasiStatDamp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3ae4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2494)
inline void femap::IAnalysisMgr::PutMarIncQuasiStatDamp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3ae4, VT_BOOL, _val);
}

#pragma implementation_key(2495)
inline double femap::IAnalysisMgr::GetMarIncFracFirst ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2496)
inline void femap::IAnalysisMgr::PutMarIncFracFirst ( double _val ) {
    _com_dispatch_propput(this, 0x3ae5, VT_R8, _val);
}

#pragma implementation_key(2497)
inline int femap::IAnalysisMgr::GetMarIncMaxNumInc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2498)
inline void femap::IAnalysisMgr::PutMarIncMaxNumInc ( int _val ) {
    _com_dispatch_propput(this, 0x3ae6, VT_I4, _val);
}

#pragma implementation_key(2499)
inline int femap::IAnalysisMgr::GetMarIncCtrlMaxRecycle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3ae7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2500)
inline void femap::IAnalysisMgr::PutMarIncCtrlMaxRecycle ( int _val ) {
    _com_dispatch_propput(this, 0x3ae7, VT_I4, _val);
}

#pragma implementation_key(2501)
inline double femap::IAnalysisMgr::GetMarIncMaxFracForAll ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2502)
inline void femap::IAnalysisMgr::PutMarIncMaxFracForAll ( double _val ) {
    _com_dispatch_propput(this, 0x3ae8, VT_R8, _val);
}

#pragma implementation_key(2503)
inline double femap::IAnalysisMgr::GetMarIncTotalTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3ae9, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2504)
inline void femap::IAnalysisMgr::PutMarIncTotalTime ( double _val ) {
    _com_dispatch_propput(this, 0x3ae9, VT_R8, _val);
}

#pragma implementation_key(2505)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarCtblOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aea, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2506)
inline void femap::IAnalysisMgr::PutMarCtblOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aea, VT_BOOL, _val);
}

#pragma implementation_key(2507)
inline VARIANT_BOOL femap::IAnalysisMgr::GetMarCtblWrite ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aeb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2508)
inline void femap::IAnalysisMgr::PutMarCtblWrite ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aeb, VT_BOOL, _val);
}

#pragma implementation_key(2509)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasOmodesOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3aec, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2510)
inline void femap::IAnalysisMgr::PutNasOmodesOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3aec, VT_BOOL, _val);
}

#pragma implementation_key(2511)
inline _bstr_t femap::IAnalysisMgr::GetNasOmodes ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3aed, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2512)
inline void femap::IAnalysisMgr::PutNasOmodes ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3aed, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2513)
inline _variant_t femap::IAnalysisMgr::GetvBCSet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3aee, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2514)
inline void femap::IAnalysisMgr::PutvBCSet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3aee, VT_VARIANT, &_val);
}

#pragma implementation_key(2515)
inline _variant_t femap::IAnalysisMgr::GetvOutput ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3aef, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2516)
inline void femap::IAnalysisMgr::PutvOutput ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3aef, VT_VARIANT, &_val);
}

#pragma implementation_key(2517)
inline int femap::IAnalysisMgr::GetCaseType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3af0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2518)
inline void femap::IAnalysisMgr::PutCaseType ( int _val ) {
    _com_dispatch_propput(this, 0x3af0, VT_I4, _val);
}

#pragma implementation_key(2519)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynHistOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2520)
inline void femap::IAnalysisMgr::PutDynHistOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af1, VT_BOOL, _val);
}

#pragma implementation_key(2521)
inline int femap::IAnalysisMgr::GetDynHistBodyLoadGrp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3af2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2522)
inline void femap::IAnalysisMgr::PutDynHistBodyLoadGrp ( int _val ) {
    _com_dispatch_propput(this, 0x3af2, VT_I4, _val);
}

#pragma implementation_key(2523)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynHistMassDampOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2524)
inline void femap::IAnalysisMgr::PutDynHistMassDampOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af3, VT_BOOL, _val);
}

#pragma implementation_key(2525)
inline double femap::IAnalysisMgr::GetDynHistMsssDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3af4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2526)
inline void femap::IAnalysisMgr::PutDynHistMsssDamp ( double _val ) {
    _com_dispatch_propput(this, 0x3af4, VT_R8, _val);
}

#pragma implementation_key(2527)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynHistImplicit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2528)
inline void femap::IAnalysisMgr::PutDynHistImplicit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af5, VT_BOOL, _val);
}

#pragma implementation_key(2529)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynHistSpringback ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2530)
inline void femap::IAnalysisMgr::PutDynHistSpringback ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af6, VT_BOOL, _val);
}

#pragma implementation_key(2531)
inline VARIANT_BOOL femap::IAnalysisMgr::GetDynHistStrainOutput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3af7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2532)
inline void femap::IAnalysisMgr::PutDynHistStrainOutput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3af7, VT_BOOL, _val);
}

#pragma implementation_key(2533)
inline double femap::IAnalysisMgr::GetDynHistTotalTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3af8, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2534)
inline void femap::IAnalysisMgr::PutDynHistTotalTime ( double _val ) {
    _com_dispatch_propput(this, 0x3af8, VT_R8, _val);
}

#pragma implementation_key(2535)
inline double femap::IAnalysisMgr::GetDynHistTimeHistOuput ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3af9, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2536)
inline void femap::IAnalysisMgr::PutDynHistTimeHistOuput ( double _val ) {
    _com_dispatch_propput(this, 0x3af9, VT_R8, _val);
}

#pragma implementation_key(2537)
inline double femap::IAnalysisMgr::GetDynHistPrintHistOutput ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3afa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2538)
inline void femap::IAnalysisMgr::PutDynHistPrintHistOutput ( double _val ) {
    _com_dispatch_propput(this, 0x3afa, VT_R8, _val);
}

#pragma implementation_key(2539)
inline int femap::IAnalysisMgr::GetDynHistPlateIntgPts ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3afb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2540)
inline void femap::IAnalysisMgr::PutDynHistPlateIntgPts ( int _val ) {
    _com_dispatch_propput(this, 0x3afb, VT_I4, _val);
}

#pragma implementation_key(2541)
inline int femap::IAnalysisMgr::GetDynHistGroupHistId ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3afc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2542)
inline void femap::IAnalysisMgr::PutDynHistGroupHistId ( int _val ) {
    _com_dispatch_propput(this, 0x3afc, VT_I4, _val);
}

#pragma implementation_key(2543)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3afd, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2544)
inline void femap::IAnalysisMgr::PutNasCnlOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3afd, VT_BOOL, _val);
}

#pragma implementation_key(2545)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlUseLoadSet ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3afe, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2546)
inline void femap::IAnalysisMgr::PutNasCnlUseLoadSet ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3afe, VT_BOOL, _val);
}

#pragma implementation_key(2547)
inline int femap::IAnalysisMgr::GetNasCnlIncrements ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3aff, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2548)
inline void femap::IAnalysisMgr::PutNasCnlIncrements ( int _val ) {
    _com_dispatch_propput(this, 0x3aff, VT_I4, _val);
}

#pragma implementation_key(2549)
inline double femap::IAnalysisMgr::GetNasCnlTime_Increment ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b00, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2550)
inline void femap::IAnalysisMgr::PutNasCnlTime_Increment ( double _val ) {
    _com_dispatch_propput(this, 0x3b00, VT_R8, _val);
}

#pragma implementation_key(2551)
inline int femap::IAnalysisMgr::GetNasCnlMaxIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b01, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2552)
inline void femap::IAnalysisMgr::PutNasCnlMaxIter ( int _val ) {
    _com_dispatch_propput(this, 0x3b01, VT_I4, _val);
}

#pragma implementation_key(2553)
inline _variant_t femap::IAnalysisMgr::GetvNasCnlConvergenceFlags ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b02, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2554)
inline void femap::IAnalysisMgr::PutvNasCnlConvergenceFlags ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b02, VT_VARIANT, &_val);
}

#pragma implementation_key(2555)
inline _variant_t femap::IAnalysisMgr::GetvNasCnlConvergenceValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b03, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2556)
inline void femap::IAnalysisMgr::PutvNasCnlConvergenceValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b03, VT_VARIANT, &_val);
}

#pragma implementation_key(2557)
inline int femap::IAnalysisMgr::GetNasCnlCtiffnessMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b04, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2558)
inline void femap::IAnalysisMgr::PutNasCnlCtiffnessMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b04, VT_I4, _val);
}

#pragma implementation_key(2559)
inline int femap::IAnalysisMgr::GetNasCnlKstep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b05, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2560)
inline void femap::IAnalysisMgr::PutNasCnlKstep ( int _val ) {
    _com_dispatch_propput(this, 0x3b05, VT_I4, _val);
}

#pragma implementation_key(2561)
inline int femap::IAnalysisMgr::GetNasCnlIntermediateOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b06, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2562)
inline void femap::IAnalysisMgr::PutNasCnlIntermediateOutput ( int _val ) {
    _com_dispatch_propput(this, 0x3b06, VT_I4, _val);
}

#pragma implementation_key(2563)
inline int femap::IAnalysisMgr::GetNasCnlOutputInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b07, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2564)
inline void femap::IAnalysisMgr::PutNasCnlOutputInterval ( int _val ) {
    _com_dispatch_propput(this, 0x3b07, VT_I4, _val);
}

#pragma implementation_key(2565)
inline int femap::IAnalysisMgr::GetNasCnlSolutionStrategy ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b08, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2566)
inline void femap::IAnalysisMgr::PutNasCnlSolutionStrategy ( int _val ) {
    _com_dispatch_propput(this, 0x3b08, VT_I4, _val);
}

#pragma implementation_key(2567)
inline int femap::IAnalysisMgr::GetNasCnlSolutionOverrides ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b09, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2568)
inline void femap::IAnalysisMgr::PutNasCnlSolutionOverrides ( int _val ) {
    _com_dispatch_propput(this, 0x3b09, VT_I4, _val);
}

#pragma implementation_key(2569)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlModnewtonLineSearch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b0a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2570)
inline void femap::IAnalysisMgr::PutNasCnlModnewtonLineSearch ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b0a, VT_BOOL, _val);
}

#pragma implementation_key(2571)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlModnewtonQuasiNewton ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b0b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2572)
inline void femap::IAnalysisMgr::PutNasCnlModnewtonQuasiNewton ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b0b, VT_BOOL, _val);
}

#pragma implementation_key(2573)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlModnewtonBisection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b0c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2574)
inline void femap::IAnalysisMgr::PutNasCnlModnewtonBisection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b0c, VT_BOOL, _val);
}

#pragma implementation_key(2575)
inline int femap::IAnalysisMgr::GetNasCnlArcConstraintType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b0d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2576)
inline void femap::IAnalysisMgr::PutNasCnlArcConstraintType ( int _val ) {
    _com_dispatch_propput(this, 0x3b0d, VT_I4, _val);
}

#pragma implementation_key(2577)
inline double femap::IAnalysisMgr::GetNasCnlArcMinAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b0e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2578)
inline void femap::IAnalysisMgr::PutNasCnlArcMinAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x3b0e, VT_R8, _val);
}

#pragma implementation_key(2579)
inline double femap::IAnalysisMgr::GetNasCnlArcMaxAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b0f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2580)
inline void femap::IAnalysisMgr::PutNasCnlArcMaxAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x3b0f, VT_R8, _val);
}

#pragma implementation_key(2581)
inline double femap::IAnalysisMgr::GetNasCnlArcLoadScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b10, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2582)
inline void femap::IAnalysisMgr::PutNasCnlArcLoadScale ( double _val ) {
    _com_dispatch_propput(this, 0x3b10, VT_R8, _val);
}

#pragma implementation_key(2583)
inline int femap::IAnalysisMgr::GetNasCnlArcDesiredIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b11, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2584)
inline void femap::IAnalysisMgr::PutNasCnlArcDesiredIter ( int _val ) {
    _com_dispatch_propput(this, 0x3b11, VT_I4, _val);
}

#pragma implementation_key(2585)
inline int femap::IAnalysisMgr::GetNasCnlArcMaxSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b12, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2586)
inline void femap::IAnalysisMgr::PutNasCnlArcMaxSteps ( int _val ) {
    _com_dispatch_propput(this, 0x3b12, VT_I4, _val);
}

#pragma implementation_key(2587)
inline int femap::IAnalysisMgr::GetNasCnlTimeSkipAdjust ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b13, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2588)
inline void femap::IAnalysisMgr::PutNasCnlTimeSkipAdjust ( int _val ) {
    _com_dispatch_propput(this, 0x3b13, VT_I4, _val);
}

#pragma implementation_key(2589)
inline int femap::IAnalysisMgr::GetNasCnlDominantPeriodSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b14, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2590)
inline void femap::IAnalysisMgr::PutNasCnlDominantPeriodSteps ( int _val ) {
    _com_dispatch_propput(this, 0x3b14, VT_I4, _val);
}

#pragma implementation_key(2591)
inline double femap::IAnalysisMgr::GetNasCnlBoundsRb ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b15, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2592)
inline void femap::IAnalysisMgr::PutNasCnlBoundsRb ( double _val ) {
    _com_dispatch_propput(this, 0x3b15, VT_R8, _val);
}

#pragma implementation_key(2593)
inline double femap::IAnalysisMgr::GetNasCnlStabilityTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b16, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2594)
inline void femap::IAnalysisMgr::PutNasCnlStabilityTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x3b16, VT_R8, _val);
}

#pragma implementation_key(2595)
inline int femap::IAnalysisMgr::GetNasCnlDivergenceLimit ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b17, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2596)
inline void femap::IAnalysisMgr::PutNasCnlDivergenceLimit ( int _val ) {
    _com_dispatch_propput(this, 0x3b17, VT_I4, _val);
}

#pragma implementation_key(2597)
inline int femap::IAnalysisMgr::GetNasCnlQuasiNewtonVectors ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b18, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2598)
inline void femap::IAnalysisMgr::PutNasCnlQuasiNewtonVectors ( int _val ) {
    _com_dispatch_propput(this, 0x3b18, VT_I4, _val);
}

#pragma implementation_key(2599)
inline int femap::IAnalysisMgr::GetNasCnlMaxLineSearch ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b19, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2600)
inline void femap::IAnalysisMgr::PutNasCnlMaxLineSearch ( int _val ) {
    _com_dispatch_propput(this, 0x3b19, VT_I4, _val);
}

#pragma implementation_key(2601)
inline double femap::IAnalysisMgr::GetNasCnlLineSearchTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2602)
inline void femap::IAnalysisMgr::PutNasCnlLineSearchTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x3b1a, VT_R8, _val);
}

#pragma implementation_key(2603)
inline int femap::IAnalysisMgr::GetNasCnlMaxBisections ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b1b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2604)
inline void femap::IAnalysisMgr::PutNasCnlMaxBisections ( int _val ) {
    _com_dispatch_propput(this, 0x3b1b, VT_I4, _val);
}

#pragma implementation_key(2605)
inline double femap::IAnalysisMgr::GetNasCnlMaxRotation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2606)
inline void femap::IAnalysisMgr::PutNasCnlMaxRotation ( double _val ) {
    _com_dispatch_propput(this, 0x3b1c, VT_R8, _val);
}

#pragma implementation_key(2607)
inline double femap::IAnalysisMgr::GetNasCnlFstress ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2608)
inline void femap::IAnalysisMgr::PutNasCnlFstress ( double _val ) {
    _com_dispatch_propput(this, 0x3b1d, VT_R8, _val);
}

#pragma implementation_key(2609)
inline double femap::IAnalysisMgr::GetNasCnlMaxAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b1e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2610)
inline void femap::IAnalysisMgr::PutNasCnlMaxAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x3b1e, VT_R8, _val);
}

#pragma implementation_key(2611)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlCreep ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b1f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2612)
inline void femap::IAnalysisMgr::PutNasCnlCreep ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b1f, VT_BOOL, _val);
}

#pragma implementation_key(2613)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlSkipNLPARM ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b20, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2614)
inline void femap::IAnalysisMgr::PutNasCnlSkipNLPARM ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b20, VT_BOOL, _val);
}

#pragma implementation_key(2615)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCaeOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b21, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2616)
inline void femap::IAnalysisMgr::PutNasCaeOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b21, VT_BOOL, _val);
}

#pragma implementation_key(2617)
inline double femap::IAnalysisMgr::GetNasCaeMachNumber ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b22, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2618)
inline void femap::IAnalysisMgr::PutNasCaeMachNumber ( double _val ) {
    _com_dispatch_propput(this, 0x3b22, VT_R8, _val);
}

#pragma implementation_key(2619)
inline double femap::IAnalysisMgr::GetNasCaeDynPressure ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b23, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2620)
inline void femap::IAnalysisMgr::PutNasCaeDynPressure ( double _val ) {
    _com_dispatch_propput(this, 0x3b23, VT_R8, _val);
}

#pragma implementation_key(2621)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCaeRigidTrim ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b25, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2622)
inline void femap::IAnalysisMgr::PutNasCaeRigidTrim ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b25, VT_BOOL, _val);
}

#pragma implementation_key(2623)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCaeWrtieTrim ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b26, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2624)
inline void femap::IAnalysisMgr::PutNasCaeWrtieTrim ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b26, VT_BOOL, _val);
}

#pragma implementation_key(2625)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCflOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b27, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2626)
inline void femap::IAnalysisMgr::PutNasCflOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b27, VT_BOOL, _val);
}

#pragma implementation_key(2627)
inline int femap::IAnalysisMgr::GetNasCflMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b28, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2628)
inline void femap::IAnalysisMgr::PutNasCflMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b28, VT_I4, _val);
}

#pragma implementation_key(2629)
inline int femap::IAnalysisMgr::GetNasCflDenID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b29, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2630)
inline void femap::IAnalysisMgr::PutNasCflDenID ( int _val ) {
    _com_dispatch_propput(this, 0x3b29, VT_I4, _val);
}

#pragma implementation_key(2631)
inline int femap::IAnalysisMgr::GetNasCflMachFactID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b2a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2632)
inline void femap::IAnalysisMgr::PutNasCflMachFactID ( int _val ) {
    _com_dispatch_propput(this, 0x3b2a, VT_I4, _val);
}

#pragma implementation_key(2633)
inline int femap::IAnalysisMgr::GetNasCflRfreqFactID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b2b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2634)
inline void femap::IAnalysisMgr::PutNasCflRfreqFactID ( int _val ) {
    _com_dispatch_propput(this, 0x3b2b, VT_I4, _val);
}

#pragma implementation_key(2635)
inline int femap::IAnalysisMgr::GetNasCflFliMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b2c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2636)
inline void femap::IAnalysisMgr::PutNasCflFliMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b2c, VT_I4, _val);
}

#pragma implementation_key(2637)
inline int femap::IAnalysisMgr::GetNasCflEig ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b2d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2638)
inline void femap::IAnalysisMgr::PutNasCflEig ( int _val ) {
    _com_dispatch_propput(this, 0x3b2d, VT_I4, _val);
}

#pragma implementation_key(2639)
inline double femap::IAnalysisMgr::GetNasCflEps ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x3b2e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(2640)
inline void femap::IAnalysisMgr::PutNasCflEps ( double _val ) {
    _com_dispatch_propput(this, 0x3b2e, VT_R8, _val);
}

#pragma implementation_key(2641)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCflWriteFlutter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b2f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2642)
inline void femap::IAnalysisMgr::PutNasCflWriteFlutter ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b2f, VT_BOOL, _val);
}

#pragma implementation_key(2643)
inline int femap::IAnalysisMgr::GetNasCflSdampID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b30, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2644)
inline void femap::IAnalysisMgr::PutNasCflSdampID ( int _val ) {
    _com_dispatch_propput(this, 0x3b30, VT_I4, _val);
}

#pragma implementation_key(2645)
inline int femap::IAnalysisMgr::GetNasSELoad ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b31, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2646)
inline void femap::IAnalysisMgr::PutNasSELoad ( int _val ) {
    _com_dispatch_propput(this, 0x3b31, VT_I4, _val);
}

#pragma implementation_key(2647)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCnlkDAMP ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b32, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2648)
inline void femap::IAnalysisMgr::PutNasCnlkDAMP ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b32, VT_BOOL, _val);
}

#pragma implementation_key(2649)
inline int femap::IAnalysisMgr::GetNasCnlkUPDATE ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b33, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2650)
inline void femap::IAnalysisMgr::PutNasCnlkUPDATE ( int _val ) {
    _com_dispatch_propput(this, 0x3b33, VT_I4, _val);
}

#pragma implementation_key(2651)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasRelEMotion ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b34, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2652)
inline void femap::IAnalysisMgr::PutNasRelEMotion ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b34, VT_BOOL, _val);
}

#pragma implementation_key(2653)
inline int femap::IAnalysisMgr::GetNasCnlStiffnessMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b47, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2654)
inline void femap::IAnalysisMgr::PutNasCnlStiffnessMethod ( int _val ) {
    _com_dispatch_propput(this, 0x3b47, VT_I4, _val);
}

#pragma implementation_key(2655)
inline _bstr_t femap::IAnalysisMgr::GetCaseLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3b48, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2656)
inline void femap::IAnalysisMgr::PutCaseLabel ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3b48, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2657)
inline int femap::IAnalysisMgr::GetContactOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b49, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2658)
inline void femap::IAnalysisMgr::PutContactOption ( int _val ) {
    _com_dispatch_propput(this, 0x3b49, VT_I4, _val);
}

#pragma implementation_key(2659)
inline int femap::IAnalysisMgr::GetContactSetType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3b4a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2660)
inline void femap::IAnalysisMgr::PutContactSetType ( int _val ) {
    _com_dispatch_propput(this, 0x3b4a, VT_I4, _val);
}

#pragma implementation_key(2661)
inline _variant_t femap::IAnalysisMgr::GetvMSCNasCnlConvergenceFlags ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x3b4b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2662)
inline void femap::IAnalysisMgr::PutvMSCNasCnlConvergenceFlags ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x3b4b, VT_VARIANT, &_val);
}

#pragma implementation_key(2663)
inline VARIANT_BOOL femap::IAnalysisMgr::GetNasCurvatureStrain ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3b4c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2664)
inline void femap::IAnalysisMgr::PutNasCurvatureStrain ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3b4c, VT_BOOL, _val);
}

#pragma implementation_key(2665)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsCmlOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3e80, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2666)
inline void femap::IAnalysisMgr::PutAnsCmlOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3e80, VT_BOOL, _val);
}

#pragma implementation_key(2667)
inline int femap::IAnalysisMgr::GetAnsCmlVersion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3e81, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2668)
inline void femap::IAnalysisMgr::PutAnsCmlVersion ( int _val ) {
    _com_dispatch_propput(this, 0x3e81, VT_I4, _val);
}

#pragma implementation_key(2669)
inline int femap::IAnalysisMgr::GetAnsCmlPid ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x3e82, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2670)
inline void femap::IAnalysisMgr::PutAnsCmlPid ( int _val ) {
    _com_dispatch_propput(this, 0x3e82, VT_I4, _val);
}

#pragma implementation_key(2671)
inline _bstr_t femap::IAnalysisMgr::GetAnsCmlProd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3e83, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2672)
inline void femap::IAnalysisMgr::PutAnsCmlProd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3e83, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2673)
inline VARIANT_BOOL femap::IAnalysisMgr::GetAnsCmlList ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x3e84, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2674)
inline void femap::IAnalysisMgr::PutAnsCmlList ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x3e84, VT_BOOL, _val);
}

#pragma implementation_key(2675)
inline _bstr_t femap::IAnalysisMgr::GetAnsCmlJobname ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3e85, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2676)
inline void femap::IAnalysisMgr::PutAnsCmlJobname ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3e85, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2677)
inline _bstr_t femap::IAnalysisMgr::GetAnsCmlDir ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3e86, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2678)
inline void femap::IAnalysisMgr::PutAnsCmlDir ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3e86, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2679)
inline int femap::IAnalysisMgr::GetAnsCmlDBmem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27107, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2680)
inline void femap::IAnalysisMgr::PutAnsCmlDBmem ( int _val ) {
    _com_dispatch_propput(this, 0x27107, VT_I4, _val);
}

#pragma implementation_key(2681)
inline int femap::IAnalysisMgr::GetAnsCmlWSmem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27108, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2682)
inline void femap::IAnalysisMgr::PutAnsCmlWSmem ( int _val ) {
    _com_dispatch_propput(this, 0x27108, VT_I4, _val);
}

#pragma implementation_key(2683)
inline _bstr_t femap::IAnalysisMgr::GetAnsCmlUser ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x3e89, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2684)
inline void femap::IAnalysisMgr::PutAnsCmlUser ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x3e89, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2685)
inline int femap::IAnalysisMgr::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2686)
inline void femap::IAnalysisMgr::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(2687)
inline int femap::IAnalysisMgr::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2688)
inline void femap::IAnalysisMgr::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(2689)
inline int femap::IAnalysisMgr::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2690)
inline void femap::IAnalysisMgr::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IBCEqn wrapper method implementations
//

#pragma implementation_key(2691)
inline int femap::IBCEqn::Getdof ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2692)
inline void femap::IBCEqn::Putdof ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(2693)
inline int femap::IBCEqn::GetNode ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2694)
inline void femap::IBCEqn::PutNode ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(2695)
inline double femap::IBCEqn::Getcoefficient ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2696)
inline void femap::IBCEqn::Putcoefficient ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(2697)
inline enum femap::zReturnCode femap::IBCEqn::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2698)
inline enum femap::zReturnCode femap::IBCEqn::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2699)
inline enum femap::zReturnCode femap::IBCEqn::GetAll ( int nID, int nSetID, int * pnDefID, int * pnCount, VARIANT * pvNode, VARIANT * pvDof, VARIANT * pvCoeff, enum zColor * peColor, int * pnLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4003\x400c\x400c\x400c\x4003\x4003", nID, nSetID, pnDefID, pnCount, pvNode, pvDof, pvCoeff, peColor, pnLayer);
    return _result;
}

#pragma implementation_key(2700)
inline enum femap::zReturnCode femap::IBCEqn::PutAll ( int nID, int nSetID, int nDefID, int nCount, const _variant_t & vnode, const _variant_t & vdof, const _variant_t & vCoeff, enum zColor eColor, int nlayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x0003\x0003", nID, nSetID, nDefID, nCount, &vnode, &vdof, &vCoeff, eColor, nlayer);
    return _result;
}

#pragma implementation_key(2701)
inline enum femap::zReturnCode femap::IBCEqn::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2702)
inline enum femap::zReturnCode femap::IBCEqn::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2703)
inline enum femap::zReturnCode femap::IBCEqn::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2704)
inline enum femap::zReturnCode femap::IBCEqn::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2705)
inline enum femap::zReturnCode femap::IBCEqn::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2706)
inline enum femap::zReturnCode femap::IBCEqn::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2707)
inline enum femap::zReturnCode femap::IBCEqn::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2708)
inline enum femap::zReturnCode femap::IBCEqn::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2709)
inline enum femap::zReturnCode femap::IBCEqn::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2710)
inline enum femap::zReturnCode femap::IBCEqn::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2711)
inline enum femap::zReturnCode femap::IBCEqn::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2712)
inline enum femap::zReturnCode femap::IBCEqn::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2713)
inline int femap::IBCEqn::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2714)
inline int femap::IBCEqn::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2715)
inline int femap::IBCEqn::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2716)
inline int femap::IBCEqn::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2717)
inline enum femap::zReturnCode femap::IBCEqn::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2718)
inline enum femap::zReturnCode femap::IBCEqn::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2719)
inline enum femap::zReturnCode femap::IBCEqn::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2720)
inline enum femap::zReturnCode femap::IBCEqn::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2721)
inline enum femap::zReturnCode femap::IBCEqn::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2722)
inline int femap::IBCEqn::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(2723)
inline enum femap::zReturnCode femap::IBCEqn::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2724)
inline enum femap::zReturnCode femap::IBCEqn::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2725)
inline enum femap::zReturnCode femap::IBCEqn::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2726)
inline int femap::IBCEqn::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2727)
inline enum femap::zReturnCode femap::IBCEqn::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2728)
inline enum femap::zReturnCode femap::IBCEqn::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2729)
inline int femap::IBCEqn::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2730)
inline void femap::IBCEqn::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(2731)
inline enum femap::zColor femap::IBCEqn::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2732)
inline void femap::IBCEqn::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(2733)
inline int femap::IBCEqn::GetCount ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2734)
inline void femap::IBCEqn::PutCount ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(2735)
inline _variant_t femap::IBCEqn::Getvdof ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2716, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2736)
inline void femap::IBCEqn::Putvdof ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2716, VT_VARIANT, &_val);
}

#pragma implementation_key(2737)
inline _variant_t femap::IBCEqn::Getvnode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2738)
inline void femap::IBCEqn::Putvnode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(2739)
inline _variant_t femap::IBCEqn::Getvcoefficient ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2740)
inline void femap::IBCEqn::Putvcoefficient ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(2741)
inline int femap::IBCEqn::GetBCDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2742)
inline void femap::IBCEqn::PutBCDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(2743)
inline int femap::IBCEqn::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2744)
inline void femap::IBCEqn::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(2745)
inline int femap::IBCEqn::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2746)
inline void femap::IBCEqn::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(2747)
inline int femap::IBCEqn::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2748)
inline void femap::IBCEqn::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IBCGeom wrapper method implementations
//

#pragma implementation_key(2749)
inline VARIANT_BOOL femap::IBCGeom::Getdof ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2750)
inline void femap::IBCGeom::Putdof ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(2751)
inline double femap::IBCGeom::Getdirection ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2752)
inline void femap::IBCGeom::Putdirection ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(2753)
inline enum femap::zReturnCode femap::IBCGeom::GetSearch ( enum zDataType geomTYPE, int geomID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", geomTYPE, geomID);
    return _result;
}

#pragma implementation_key(2754)
inline enum femap::zReturnCode femap::IBCGeom::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2755)
inline enum femap::zReturnCode femap::IBCGeom::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2756)
inline enum femap::zReturnCode femap::IBCGeom::SetSurfSliding ( int surfID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", surfID);
    return _result;
}

#pragma implementation_key(2757)
inline enum femap::zReturnCode femap::IBCGeom::SetSurfNormal ( int surfID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", surfID);
    return _result;
}

#pragma implementation_key(2758)
inline enum femap::zReturnCode femap::IBCGeom::SetSurfDirection ( int surfID, double x, double y, double z ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005", surfID, x, y, z);
    return _result;
}

#pragma implementation_key(2759)
inline enum femap::zReturnCode femap::IBCGeom::SetCylinder ( int surfID, VARIANT_BOOL radius, VARIANT_BOOL rotation, VARIANT_BOOL sliding ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b", surfID, radius, rotation, sliding);
    return _result;
}

#pragma implementation_key(2760)
inline enum femap::zReturnCode femap::IBCGeom::SetFixed ( enum zDataType geomTYPE, int geomID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", geomTYPE, geomID);
    return _result;
}

#pragma implementation_key(2761)
inline enum femap::zReturnCode femap::IBCGeom::SetPinned ( enum zDataType geomTYPE, int geomID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", geomTYPE, geomID);
    return _result;
}

#pragma implementation_key(2762)
inline enum femap::zReturnCode femap::IBCGeom::SetNoRotation ( enum zDataType geomTYPE, int geomID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", geomTYPE, geomID);
    return _result;
}

#pragma implementation_key(2763)
inline enum femap::zReturnCode femap::IBCGeom::SetArbitrary ( enum zDataType geomTYPE, int geomID, int csysID, VARIANT_BOOL bDOF1, VARIANT_BOOL bDOF2, VARIANT_BOOL bDOF3, VARIANT_BOOL bDOF4, VARIANT_BOOL bDOF5, VARIANT_BOOL bDOF6 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x000b", geomTYPE, geomID, csysID, bDOF1, bDOF2, bDOF3, bDOF4, bDOF5, bDOF6);
    return _result;
}

#pragma implementation_key(2764)
inline enum femap::zReturnCode femap::IBCGeom::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2765)
inline enum femap::zReturnCode femap::IBCGeom::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2766)
inline enum femap::zReturnCode femap::IBCGeom::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2767)
inline enum femap::zReturnCode femap::IBCGeom::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2768)
inline enum femap::zReturnCode femap::IBCGeom::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2769)
inline enum femap::zReturnCode femap::IBCGeom::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2770)
inline enum femap::zReturnCode femap::IBCGeom::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2771)
inline enum femap::zReturnCode femap::IBCGeom::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2772)
inline enum femap::zReturnCode femap::IBCGeom::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2773)
inline enum femap::zReturnCode femap::IBCGeom::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2774)
inline enum femap::zReturnCode femap::IBCGeom::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2775)
inline enum femap::zReturnCode femap::IBCGeom::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2776)
inline int femap::IBCGeom::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2777)
inline int femap::IBCGeom::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2778)
inline int femap::IBCGeom::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2779)
inline int femap::IBCGeom::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2780)
inline enum femap::zReturnCode femap::IBCGeom::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2781)
inline enum femap::zReturnCode femap::IBCGeom::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2782)
inline enum femap::zReturnCode femap::IBCGeom::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2783)
inline enum femap::zReturnCode femap::IBCGeom::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2784)
inline enum femap::zReturnCode femap::IBCGeom::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2785)
inline int femap::IBCGeom::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(2786)
inline enum femap::zReturnCode femap::IBCGeom::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2787)
inline enum femap::zReturnCode femap::IBCGeom::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2788)
inline enum femap::zReturnCode femap::IBCGeom::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2789)
inline int femap::IBCGeom::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2790)
inline enum femap::zReturnCode femap::IBCGeom::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2791)
inline enum femap::zReturnCode femap::IBCGeom::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2792)
inline int femap::IBCGeom::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2793)
inline void femap::IBCGeom::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(2794)
inline enum femap::zColor femap::IBCGeom::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2795)
inline void femap::IBCGeom::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(2796)
inline VARIANT_BOOL femap::IBCGeom::Getexpanded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2797)
inline void femap::IBCGeom::Putexpanded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(2798)
inline int femap::IBCGeom::GetgeomID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2799)
inline void femap::IBCGeom::PutgeomID ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(2800)
inline enum femap::zDataType femap::IBCGeom::GetgeomTYPE ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2801)
inline void femap::IBCGeom::PutgeomTYPE ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(2802)
inline enum femap::zBCGeomType femap::IBCGeom::Gettype ( ) {
    enum zBCGeomType _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2803)
inline void femap::IBCGeom::Puttype ( enum zBCGeomType _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(2804)
inline int femap::IBCGeom::GetoutCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2805)
inline void femap::IBCGeom::PutoutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(2806)
inline _variant_t femap::IBCGeom::Getdofvec ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2719, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2807)
inline void femap::IBCGeom::Putdofvec ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2719, VT_VARIANT, &_val);
}

#pragma implementation_key(2808)
inline _variant_t femap::IBCGeom::Getvdof ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2809)
inline void femap::IBCGeom::Putvdof ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271a, VT_VARIANT, &_val);
}

#pragma implementation_key(2810)
inline _variant_t femap::IBCGeom::Getvdirection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2811)
inline void femap::IBCGeom::Putvdirection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(2812)
inline int femap::IBCGeom::GetBCDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2813)
inline void femap::IBCGeom::PutBCDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(2814)
inline int femap::IBCGeom::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2815)
inline void femap::IBCGeom::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(2816)
inline int femap::IBCGeom::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2817)
inline void femap::IBCGeom::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(2818)
inline int femap::IBCGeom::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2819)
inline void femap::IBCGeom::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IBCNode wrapper method implementations
//

#pragma implementation_key(2820)
inline VARIANT_BOOL femap::IBCNode::Getdof ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2821)
inline void femap::IBCNode::Putdof ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(2822)
inline double femap::IBCNode::Getvalue ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(2823)
inline void femap::IBCNode::Putvalue ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(2824)
inline enum femap::zReturnCode femap::IBCNode::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2825)
inline enum femap::zReturnCode femap::IBCNode::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2826)
inline enum femap::zReturnCode femap::IBCNode::AddArray ( int Count, VARIANT_BOOL doDOF, const _variant_t & NodeID, const _variant_t & dof ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000c\x000c", Count, doDOF, &NodeID, &dof);
    return _result;
}

#pragma implementation_key(2827)
inline enum femap::zReturnCode femap::IBCNode::Add ( int setID, VARIANT_BOOL bDOF1, VARIANT_BOOL bDOF2, VARIANT_BOOL bDOF3, VARIANT_BOOL bDOF4, VARIANT_BOOL bDOF5, VARIANT_BOOL bDOF6 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000b\x000b\x000b", setID, bDOF1, bDOF2, bDOF3, bDOF4, bDOF5, bDOF6);
    return _result;
}

#pragma implementation_key(2828)
inline enum femap::zReturnCode femap::IBCNode::AddNonZero ( int setID, VARIANT_BOOL bDOF1, double dVal1, VARIANT_BOOL bDOF2, double dVal2, VARIANT_BOOL bDOF3, double dVal3, VARIANT_BOOL bDOF4, double dVal4, VARIANT_BOOL bDOF5, double dVal5, VARIANT_BOOL bDOF6, double dVal6 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x0005", setID, bDOF1, dVal1, bDOF2, dVal2, bDOF3, dVal3, bDOF4, dVal4, bDOF5, dVal5, bDOF6, dVal6);
    return _result;
}

#pragma implementation_key(2829)
inline enum femap::zReturnCode femap::IBCNode::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2830)
inline enum femap::zReturnCode femap::IBCNode::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2831)
inline enum femap::zReturnCode femap::IBCNode::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2832)
inline enum femap::zReturnCode femap::IBCNode::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2833)
inline enum femap::zReturnCode femap::IBCNode::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2834)
inline enum femap::zReturnCode femap::IBCNode::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2835)
inline enum femap::zReturnCode femap::IBCNode::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2836)
inline enum femap::zReturnCode femap::IBCNode::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2837)
inline enum femap::zReturnCode femap::IBCNode::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2838)
inline enum femap::zReturnCode femap::IBCNode::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2839)
inline enum femap::zReturnCode femap::IBCNode::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2840)
inline enum femap::zReturnCode femap::IBCNode::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2841)
inline int femap::IBCNode::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2842)
inline int femap::IBCNode::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2843)
inline int femap::IBCNode::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2844)
inline int femap::IBCNode::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2845)
inline enum femap::zReturnCode femap::IBCNode::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2846)
inline enum femap::zReturnCode femap::IBCNode::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2847)
inline enum femap::zReturnCode femap::IBCNode::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2848)
inline enum femap::zReturnCode femap::IBCNode::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2849)
inline enum femap::zReturnCode femap::IBCNode::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2850)
inline int femap::IBCNode::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(2851)
inline enum femap::zReturnCode femap::IBCNode::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2852)
inline enum femap::zReturnCode femap::IBCNode::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2853)
inline enum femap::zReturnCode femap::IBCNode::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2854)
inline int femap::IBCNode::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2855)
inline enum femap::zReturnCode femap::IBCNode::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2856)
inline enum femap::zReturnCode femap::IBCNode::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2857)
inline int femap::IBCNode::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2858)
inline void femap::IBCNode::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(2859)
inline enum femap::zColor femap::IBCNode::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2860)
inline void femap::IBCNode::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(2861)
inline VARIANT_BOOL femap::IBCNode::Getexpanded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2862)
inline void femap::IBCNode::Putexpanded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(2863)
inline _variant_t femap::IBCNode::Getdofvec ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2864)
inline void femap::IBCNode::Putdofvec ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(2865)
inline _variant_t femap::IBCNode::Getvdof ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2866)
inline void femap::IBCNode::Putvdof ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(2867)
inline int femap::IBCNode::GetBCDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2868)
inline void femap::IBCNode::PutBCDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(2869)
inline VARIANT_BOOL femap::IBCNode::GetNonZeroConstraint ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2870)
inline void femap::IBCNode::PutNonZeroConstraint ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BOOL, _val);
}

#pragma implementation_key(2871)
inline _variant_t femap::IBCNode::Getvvalue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2872)
inline void femap::IBCNode::Putvvalue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(2873)
inline int femap::IBCNode::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2874)
inline void femap::IBCNode::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(2875)
inline int femap::IBCNode::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2876)
inline void femap::IBCNode::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(2877)
inline int femap::IBCNode::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2878)
inline void femap::IBCNode::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IBCSet wrapper method implementations
//

#pragma implementation_key(2879)
inline enum femap::zReturnCode femap::IBCSet::Expand ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2880)
inline enum femap::zReturnCode femap::IBCSet::Compress ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2881)
inline enum femap::zReturnCode femap::IBCSet::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2882)
inline enum femap::zReturnCode femap::IBCSet::ResetNextBC ( enum zDataType enDataType, VARIANT_BOOL bOtherBCOnly, VARIANT_BOOL bIncludeExpanded ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b", enDataType, bOtherBCOnly, bIncludeExpanded);
    return _result;
}

#pragma implementation_key(2883)
inline enum femap::zReturnCode femap::IBCSet::NextBC ( IDispatch * * pDispatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4009", pDispatch);
    return _result;
}

#pragma implementation_key(2884)
inline enum femap::zReturnCode femap::IBCSet::ResetNextBCDef ( VARIANT_BOOL bAllDataTypes, enum zDataType enDataType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllDataTypes, enDataType);
    return _result;
}

#pragma implementation_key(2885)
inline enum femap::zReturnCode femap::IBCSet::NextBCDef ( IDispatch * * pDispatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4009", pDispatch);
    return _result;
}

#pragma implementation_key(2886)
inline enum femap::zReturnCode femap::IBCSet::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2887)
inline enum femap::zReturnCode femap::IBCSet::GetCombination ( int * nCombo, VARIANT * nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", nCombo, nSetID);
    return _result;
}

#pragma implementation_key(2888)
inline enum femap::zReturnCode femap::IBCSet::PutCombination ( int nCombo, const _variant_t & nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", nCombo, &nSetID);
    return _result;
}

#pragma implementation_key(2889)
inline enum femap::zReturnCode femap::IBCSet::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2890)
inline enum femap::zReturnCode femap::IBCSet::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2891)
inline enum femap::zReturnCode femap::IBCSet::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2892)
inline enum femap::zReturnCode femap::IBCSet::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2893)
inline enum femap::zReturnCode femap::IBCSet::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2894)
inline enum femap::zReturnCode femap::IBCSet::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2895)
inline enum femap::zReturnCode femap::IBCSet::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2896)
inline enum femap::zReturnCode femap::IBCSet::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2897)
inline enum femap::zReturnCode femap::IBCSet::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2898)
inline enum femap::zReturnCode femap::IBCSet::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2899)
inline enum femap::zReturnCode femap::IBCSet::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2900)
inline enum femap::zReturnCode femap::IBCSet::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2901)
inline int femap::IBCSet::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2902)
inline int femap::IBCSet::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2903)
inline int femap::IBCSet::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2904)
inline int femap::IBCSet::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2905)
inline enum femap::zReturnCode femap::IBCSet::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2906)
inline enum femap::zReturnCode femap::IBCSet::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2907)
inline enum femap::zReturnCode femap::IBCSet::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2908)
inline enum femap::zReturnCode femap::IBCSet::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2909)
inline enum femap::zReturnCode femap::IBCSet::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2910)
inline int femap::IBCSet::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(2911)
inline enum femap::zReturnCode femap::IBCSet::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2912)
inline enum femap::zReturnCode femap::IBCSet::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2913)
inline enum femap::zReturnCode femap::IBCSet::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2914)
inline int femap::IBCSet::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2915)
inline enum femap::zReturnCode femap::IBCSet::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2916)
inline enum femap::zReturnCode femap::IBCSet::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2917)
inline _bstr_t femap::IBCSet::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2918)
inline void femap::IBCSet::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2919)
inline VARIANT_BOOL femap::IBCSet::GetIsCombination ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2920)
inline void femap::IBCSet::PutIsCombination ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(2921)
inline int femap::IBCSet::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2922)
inline void femap::IBCSet::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(2923)
inline int femap::IBCSet::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2924)
inline void femap::IBCSet::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(2925)
inline int femap::IBCSet::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2926)
inline void femap::IBCSet::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IContact wrapper method implementations
//

#pragma implementation_key(2927)
inline double femap::IContact::Getbox ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(2928)
inline void femap::IContact::Putbox ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(2929)
inline enum femap::zReturnCode femap::IContact::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2930)
inline enum femap::zReturnCode femap::IContact::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(2931)
inline enum femap::zReturnCode femap::IContact::GetContactList ( int * listcount, VARIANT * listTYPE, VARIANT * entityID, VARIANT * faceID, VARIANT * expanded ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c", listcount, listTYPE, entityID, faceID, expanded);
    return _result;
}

#pragma implementation_key(2932)
inline enum femap::zReturnCode femap::IContact::PutContactList ( int listcount, const _variant_t & listTYPE, const _variant_t & entityID, const _variant_t & faceID, const _variant_t & expanded ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", listcount, &listTYPE, &entityID, &faceID, &expanded);
    return _result;
}

#pragma implementation_key(2933)
inline enum femap::zReturnCode femap::IContact::Expand ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2934)
inline enum femap::zReturnCode femap::IContact::Compress ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2935)
inline enum femap::zReturnCode femap::IContact::AddContact ( enum zDataType entityTYPE, int entityID, int faceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entityID, faceID);
    return _result;
}

#pragma implementation_key(2936)
inline enum femap::zReturnCode femap::IContact::SetOutputType ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(2937)
inline enum femap::zReturnCode femap::IContact::SetOffset ( double offset ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005", offset);
    return _result;
}

#pragma implementation_key(2938)
inline enum femap::zReturnCode femap::IContact::GetOffset ( double * offset ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", offset);
    return _result;
}

#pragma implementation_key(2939)
inline enum femap::zReturnCode femap::IContact::SetRigidType ( VARIANT_BOOL isRigid ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", isRigid);
    return _result;
}

#pragma implementation_key(2940)
inline enum femap::zReturnCode femap::IContact::IsRigidType ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2941)
inline enum femap::zReturnCode femap::IContact::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2942)
inline femap::ISortSetPtr femap::IContact::GetEntities ( enum zDataType entityTYPE, VARIANT_BOOL bGetExpanded ) {
    struct ISortSet * _result = 0;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x000b", entityTYPE, bGetExpanded);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(2943)
inline enum femap::zReturnCode femap::IContact::Enable ( VARIANT_BOOL bEnable ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bEnable);
    return _result;
}

#pragma implementation_key(2944)
inline enum femap::zReturnCode femap::IContact::IsEnabled ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2945)
inline enum femap::zReturnCode femap::IContact::Reverse ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2946)
inline enum femap::zReturnCode femap::IContact::BoundingBox ( VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", box);
    return _result;
}

#pragma implementation_key(2947)
inline enum femap::zReturnCode femap::IContact::IsEmpty ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2948)
inline enum femap::zReturnCode femap::IContact::BoundingBoxInCSys ( int nCSysID, VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nCSysID, box);
    return _result;
}

#pragma implementation_key(2949)
inline femap::ISetPtr femap::IContact::GetEntitySet ( enum zDataType entityTYPE, VARIANT_BOOL bGetExpanded ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x000b", entityTYPE, bGetExpanded);
    return ISetPtr(_result, false);
}

#pragma implementation_key(2950)
inline enum femap::zReturnCode femap::IContact::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2951)
inline enum femap::zReturnCode femap::IContact::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2952)
inline enum femap::zReturnCode femap::IContact::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2953)
inline enum femap::zReturnCode femap::IContact::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2954)
inline enum femap::zReturnCode femap::IContact::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2955)
inline enum femap::zReturnCode femap::IContact::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2956)
inline enum femap::zReturnCode femap::IContact::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2957)
inline enum femap::zReturnCode femap::IContact::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2958)
inline enum femap::zReturnCode femap::IContact::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2959)
inline enum femap::zReturnCode femap::IContact::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2960)
inline enum femap::zReturnCode femap::IContact::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2961)
inline enum femap::zReturnCode femap::IContact::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2962)
inline int femap::IContact::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2963)
inline int femap::IContact::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2964)
inline int femap::IContact::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2965)
inline int femap::IContact::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2966)
inline enum femap::zReturnCode femap::IContact::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2967)
inline enum femap::zReturnCode femap::IContact::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2968)
inline enum femap::zReturnCode femap::IContact::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(2969)
inline enum femap::zReturnCode femap::IContact::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2970)
inline enum femap::zReturnCode femap::IContact::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(2971)
inline int femap::IContact::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(2972)
inline enum femap::zReturnCode femap::IContact::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2973)
inline enum femap::zReturnCode femap::IContact::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2974)
inline enum femap::zReturnCode femap::IContact::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2975)
inline int femap::IContact::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(2976)
inline enum femap::zReturnCode femap::IContact::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(2977)
inline enum femap::zReturnCode femap::IContact::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(2978)
inline _bstr_t femap::IContact::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(2979)
inline void femap::IContact::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(2980)
inline enum femap::zColor femap::IContact::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2981)
inline void femap::IContact::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(2982)
inline int femap::IContact::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2983)
inline void femap::IContact::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(2984)
inline int femap::IContact::GetrefNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2985)
inline void femap::IContact::PutrefNode ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(2986)
inline enum femap::zDataType femap::IContact::GetOutput ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2987)
inline void femap::IContact::PutOutput ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(2988)
inline VARIANT_BOOL femap::IContact::Getrigid ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(2989)
inline void femap::IContact::Putrigid ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(2990)
inline _variant_t femap::IContact::Getvbox ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(2991)
inline void femap::IContact::Putvbox ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(2992)
inline int femap::IContact::GetCount ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2993)
inline void femap::IContact::PutCount ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(2994)
inline enum femap::zConnectionRegionType femap::IContact::Gettype ( ) {
    enum zConnectionRegionType _result;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2995)
inline void femap::IContact::Puttype ( enum zConnectionRegionType _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(2996)
inline int femap::IContact::GetrefCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2997)
inline void femap::IContact::PutrefCSys ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(2998)
inline int femap::IContact::GetRotorLoadSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(2999)
inline void femap::IContact::PutRotorLoadSet ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(3000)
inline double femap::IContact::Getoffset ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3001)
inline void femap::IContact::Putoffset ( double _val ) {
    _com_dispatch_propput(this, 0x271c, VT_R8, _val);
}

#pragma implementation_key(3002)
inline VARIANT_BOOL femap::IContact::GetFluidZFreeOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3003)
inline void femap::IContact::PutFluidZFreeOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271d, VT_BOOL, _val);
}

#pragma implementation_key(3004)
inline double femap::IContact::GetFluidZFree ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3005)
inline void femap::IContact::PutFluidZFree ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(3006)
inline double femap::IContact::GetFluidDensity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3007)
inline void femap::IContact::PutFluidDensity ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(3008)
inline int femap::IContact::GetFluidXZSymmetry ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3009)
inline void femap::IContact::PutFluidXZSymmetry ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(3010)
inline int femap::IContact::GetFluidYZSymmetry ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3011)
inline void femap::IContact::PutFluidYZSymmetry ( int _val ) {
    _com_dispatch_propput(this, 0x2721, VT_I4, _val);
}

#pragma implementation_key(3012)
inline double femap::IContact::GetFluidCharLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3013)
inline void femap::IContact::PutFluidCharLength ( double _val ) {
    _com_dispatch_propput(this, 0x2722, VT_R8, _val);
}

#pragma implementation_key(3014)
inline double femap::IContact::GetFluidExactIntegFact ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3015)
inline void femap::IContact::PutFluidExactIntegFact ( double _val ) {
    _com_dispatch_propput(this, 0x2723, VT_R8, _val);
}

#pragma implementation_key(3016)
inline double femap::IContact::GetRotorOverallDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3017)
inline void femap::IContact::PutRotorOverallDamp ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(3018)
inline double femap::IContact::GetRotorMatlDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3019)
inline void femap::IContact::PutRotorMatlDamp ( double _val ) {
    _com_dispatch_propput(this, 0x2725, VT_R8, _val);
}

#pragma implementation_key(3020)
inline double femap::IContact::GetRotorSpeed ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3021)
inline void femap::IContact::PutRotorSpeed ( double _val ) {
    _com_dispatch_propput(this, 0x2726, VT_R8, _val);
}

#pragma implementation_key(3022)
inline int femap::IContact::GetBoltDir ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3023)
inline void femap::IContact::PutBoltDir ( int _val ) {
    _com_dispatch_propput(this, 0x2727, VT_I4, _val);
}

#pragma implementation_key(3024)
inline int femap::IContact::GetBoltType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3025)
inline void femap::IContact::PutBoltType ( int _val ) {
    _com_dispatch_propput(this, 0x2728, VT_I4, _val);
}

#pragma implementation_key(3026)
inline int femap::IContact::GetMassType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3027)
inline void femap::IContact::PutMassType ( int _val ) {
    _com_dispatch_propput(this, 0x2729, VT_I4, _val);
}

#pragma implementation_key(3028)
inline double femap::IContact::GetMassNSM ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3029)
inline void femap::IContact::PutMassNSM ( double _val ) {
    _com_dispatch_propput(this, 0x272a, VT_R8, _val);
}

#pragma implementation_key(3030)
inline int femap::IContact::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3031)
inline void femap::IContact::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3032)
inline int femap::IContact::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3033)
inline void femap::IContact::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3034)
inline int femap::IContact::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3035)
inline void femap::IContact::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ICSys wrapper method implementations
//

#pragma implementation_key(3036)
inline enum femap::zReturnCode femap::ICSys::XYPoints ( const _variant_t & origin, const _variant_t & xaxis, const _variant_t & xyplane ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c", &origin, &xaxis, &xyplane);
    return _result;
}

#pragma implementation_key(3037)
inline enum femap::zReturnCode femap::ICSys::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3038)
inline int femap::ICSys::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3039)
inline int femap::ICSys::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3040)
inline enum femap::zReturnCode femap::ICSys::Axis ( int nCSysType, int nAxisDir, const _variant_t & origin, const _variant_t & Axis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", nCSysType, nAxisDir, &origin, &Axis);
    return _result;
}

#pragma implementation_key(3041)
inline enum femap::zReturnCode femap::ICSys::TwoAxes ( int nCSysType, int nNormalAxisDir, const _variant_t & origin, const _variant_t & axis1, const _variant_t & axis2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c", nCSysType, nNormalAxisDir, &origin, &axis1, &axis2);
    return _result;
}

#pragma implementation_key(3042)
inline enum femap::zReturnCode femap::ICSys::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3043)
inline enum femap::zReturnCode femap::ICSys::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3044)
inline enum femap::zReturnCode femap::ICSys::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3045)
inline enum femap::zReturnCode femap::ICSys::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3046)
inline enum femap::zReturnCode femap::ICSys::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3047)
inline enum femap::zReturnCode femap::ICSys::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3048)
inline enum femap::zReturnCode femap::ICSys::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3049)
inline enum femap::zReturnCode femap::ICSys::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3050)
inline enum femap::zReturnCode femap::ICSys::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3051)
inline enum femap::zReturnCode femap::ICSys::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3052)
inline enum femap::zReturnCode femap::ICSys::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3053)
inline enum femap::zReturnCode femap::ICSys::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3054)
inline enum femap::zReturnCode femap::ICSys::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3055)
inline int femap::ICSys::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3056)
inline int femap::ICSys::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3057)
inline enum femap::zReturnCode femap::ICSys::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3058)
inline enum femap::zReturnCode femap::ICSys::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3059)
inline enum femap::zReturnCode femap::ICSys::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3060)
inline enum femap::zReturnCode femap::ICSys::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3061)
inline enum femap::zReturnCode femap::ICSys::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3062)
inline int femap::ICSys::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3063)
inline enum femap::zReturnCode femap::ICSys::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3064)
inline enum femap::zReturnCode femap::ICSys::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3065)
inline enum femap::zReturnCode femap::ICSys::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3066)
inline int femap::ICSys::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3067)
inline enum femap::zReturnCode femap::ICSys::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3068)
inline enum femap::zReturnCode femap::ICSys::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3069)
inline int femap::ICSys::GetdefCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3070)
inline void femap::ICSys::PutdefCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(3071)
inline enum femap::zCSysType femap::ICSys::Gettype ( ) {
    enum zCSysType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3072)
inline void femap::ICSys::Puttype ( enum zCSysType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3073)
inline int femap::ICSys::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3074)
inline void femap::ICSys::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3075)
inline enum femap::zColor femap::ICSys::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3076)
inline void femap::ICSys::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(3077)
inline double femap::ICSys::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3078)
inline void femap::ICSys::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(3079)
inline double femap::ICSys::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3080)
inline void femap::ICSys::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(3081)
inline double femap::ICSys::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3082)
inline void femap::ICSys::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(3083)
inline double femap::ICSys::Getrotx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3084)
inline void femap::ICSys::Putrotx ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(3085)
inline double femap::ICSys::Getroty ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3086)
inline void femap::ICSys::Putroty ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(3087)
inline double femap::ICSys::Getrotz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3088)
inline void femap::ICSys::Putrotz ( double _val ) {
    _com_dispatch_propput(this, 0x2719, VT_R8, _val);
}

#pragma implementation_key(3089)
inline _bstr_t femap::ICSys::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3090)
inline void femap::ICSys::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3091)
inline _variant_t femap::ICSys::Getorigin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3092)
inline void femap::ICSys::Putorigin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(3093)
inline _variant_t femap::ICSys::Getrotation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3094)
inline void femap::ICSys::Putrotation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(3095)
inline _variant_t femap::ICSys::Getmatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3096)
inline void femap::ICSys::Putmatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271d, VT_VARIANT, &_val);
}

#pragma implementation_key(3097)
inline int femap::ICSys::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3098)
inline void femap::ICSys::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3099)
inline int femap::ICSys::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3100)
inline void femap::ICSys::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3101)
inline int femap::ICSys::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3102)
inline void femap::ICSys::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ICurve wrapper method implementations
//

#pragma implementation_key(3103)
inline int femap::ICurve::GetStdPoint ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3104)
inline void femap::ICurve::PutStdPoint ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3105)
inline double femap::ICurve::GetattrOrient ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3106)
inline void femap::ICurve::PutattrOrient ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3107)
inline int femap::ICurve::GetBSplinePoint ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3108)
inline void femap::ICurve::PutBSplinePoint ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3109)
inline double femap::ICurve::GetBSplineKnot ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3110)
inline void femap::ICurve::PutBSplineKnot ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3111)
inline double femap::ICurve::GetBSplineWeight ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3112)
inline void femap::ICurve::PutBSplineWeight ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3113)
inline int femap::ICurve::GetMeshElem ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3114)
inline void femap::ICurve::PutMeshElem ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3115)
inline double femap::ICurve::GetMeshBias ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3116)
inline void femap::ICurve::PutMeshBias ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3117)
inline double femap::ICurve::GetMeshMaxParam ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3118)
inline void femap::ICurve::PutMeshMaxParam ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3119)
inline VARIANT_BOOL femap::ICurve::GetLengthSpacing ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3120)
inline void femap::ICurve::PutLengthSpacing ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3121)
inline VARIANT_BOOL femap::ICurve::GetCenterBias ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3122)
inline void femap::ICurve::PutCenterBias ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3123)
inline VARIANT_BOOL femap::ICurve::GetGeometricBias ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3124)
inline void femap::ICurve::PutGeometricBias ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3125)
inline double femap::ICurve::GetattrOffset ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3126)
inline void femap::ICurve::PutattrOffset ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3127)
inline int femap::ICurve::GetattrRelease ( int nRowIndex, int nColIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3128)
inline void femap::ICurve::PutattrRelease ( int nRowIndex, int nColIndex, int _arg3 ) {
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0003", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3129)
inline enum femap::zReturnCode femap::ICurve::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3130)
inline enum femap::zReturnCode femap::ICurve::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3131)
inline enum femap::zReturnCode femap::ICurve::Reverse ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3132)
inline enum femap::zReturnCode femap::ICurve::EndPoints ( int * startPt, int * endPt ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003", startPt, endPt);
    return _result;
}

#pragma implementation_key(3133)
inline enum femap::zReturnCode femap::ICurve::ArcCircleInfo ( VARIANT * center, VARIANT * normal, VARIANT * startloc, VARIANT * endloc, double * angle, double * radius ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c\x400c\x400c\x4005\x4005", center, normal, startloc, endloc, angle, radius);
    return _result;
}

#pragma implementation_key(3134)
inline enum femap::zReturnCode femap::ICurve::ParamToXYZ ( double s, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x400c", s, xyz);
    return _result;
}

#pragma implementation_key(3135)
inline enum femap::zReturnCode femap::ICurve::XYZToParam ( const _variant_t & xyz, double * s ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4005", &xyz, s);
    return _result;
}

#pragma implementation_key(3136)
inline enum femap::zReturnCode femap::ICurve::Project ( const _variant_t & fromxyz, VARIANT * toxyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &fromxyz, toxyz);
    return _result;
}

#pragma implementation_key(3137)
inline enum femap::zReturnCode femap::ICurve::Tangent ( VARIANT_BOOL outward, const _variant_t & fromxyz, VARIANT * Tangent ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x400c", outward, &fromxyz, Tangent);
    return _result;
}

#pragma implementation_key(3138)
inline double femap::ICurve::Length ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3139)
inline double femap::ICurve::PartialLength ( double s0, double s1 ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0005\x0005", s0, s1);
    return _result;
}

#pragma implementation_key(3140)
inline double femap::ICurve::ParamAtLength ( VARIANT_BOOL fromstart, double Length ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x000b\x0005", fromstart, Length);
    return _result;
}

#pragma implementation_key(3141)
inline enum femap::zReturnCode femap::ICurve::MeshParam ( int * numParam, VARIANT * MeshParam ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numParam, MeshParam);
    return _result;
}

#pragma implementation_key(3142)
inline enum femap::zReturnCode femap::ICurve::AddMeshLoc ( double s, int NumElem, int spacing, int biasMethod, double bias, int biasLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x0003\x0003\x0005\x0003", s, NumElem, spacing, biasMethod, bias, biasLoc);
    return _result;
}

#pragma implementation_key(3143)
inline enum femap::zReturnCode femap::ICurve::AddMeshLocXYZ ( const _variant_t & xyz, int NumElem, int spacing, int biasMethod, double bias, int biasLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x0003\x0003\x0003\x0005\x0003", &xyz, NumElem, spacing, biasMethod, bias, biasLoc);
    return _result;
}

#pragma implementation_key(3144)
inline enum femap::zReturnCode femap::ICurve::Nodes ( VARIANT_BOOL getBoundary, VARIANT_BOOL getInterior, int * numNodes, VARIANT * NodeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x4003\x400c", getBoundary, getInterior, numNodes, NodeID);
    return _result;
}

#pragma implementation_key(3145)
inline enum femap::zReturnCode femap::ICurve::Elements ( int * numElems, VARIANT * elemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numElems, elemID);
    return _result;
}

#pragma implementation_key(3146)
inline enum femap::zReturnCode femap::ICurve::ElementsWithFaces ( int * numElems, VARIANT * elemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numElems, elemID);
    return _result;
}

#pragma implementation_key(3147)
inline enum femap::zReturnCode femap::ICurve::BoundingBox ( VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", box);
    return _result;
}

#pragma implementation_key(3148)
inline enum femap::zReturnCode femap::ICurve::GetMeshLoc ( int * numLoc, VARIANT * MeshParam ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numLoc, MeshParam);
    return _result;
}

#pragma implementation_key(3149)
inline enum femap::zReturnCode femap::ICurve::GetMeshLocXYZ ( int * numLoc, VARIANT * meshXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numLoc, meshXYZ);
    return _result;
}

#pragma implementation_key(3150)
inline enum femap::zReturnCode femap::ICurve::IsSmoothEdge ( double dAngle, int * nConvexityType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x4003", dAngle, nConvexityType);
    return _result;
}

#pragma implementation_key(3151)
inline enum femap::zReturnCode femap::ICurve::Surfaces ( enum zCombinedMode nCombinedMode, int * numSurfaces, VARIANT * surfaceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numSurfaces, surfaceID);
    return _result;
}

#pragma implementation_key(3152)
inline enum femap::zReturnCode femap::ICurve::SurfacesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(3153)
inline enum femap::zReturnCode femap::ICurve::ElementsAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(3154)
inline enum femap::zReturnCode femap::ICurve::NodesAsSet ( VARIANT_BOOL getBoundary, VARIANT_BOOL getInterior, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x000b", getBoundary, getInterior, nSetID, bClear);
    return _result;
}

#pragma implementation_key(3155)
inline enum femap::zReturnCode femap::ICurve::normal ( const _variant_t & xyz, VARIANT * vNormal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &xyz, vNormal);
    return _result;
}

#pragma implementation_key(3156)
inline enum femap::zReturnCode femap::ICurve::IsCombinedCurve ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3157)
inline enum femap::zReturnCode femap::ICurve::GetCombinedCurves ( int * nNumCurves, VARIANT * curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", nNumCurves, curveID);
    return _result;
}

#pragma implementation_key(3158)
inline enum femap::zReturnCode femap::ICurve::CombineCurves ( int nNumCurves, const _variant_t & curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", nNumCurves, &curveID);
    return _result;
}

#pragma implementation_key(3159)
inline enum femap::zReturnCode femap::ICurve::CombinedCurvesAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(3160)
inline enum femap::zReturnCode femap::ICurve::Facets ( int * numPoints, VARIANT * xyzPoint ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numPoints, xyzPoint);
    return _result;
}

#pragma implementation_key(3161)
inline double femap::ICurve::PartialLengthXYZ ( const _variant_t & xyz0, const _variant_t & xyz1 ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x000c\x000c", &xyz0, &xyz1);
    return _result;
}

#pragma implementation_key(3162)
inline double femap::ICurve::PartialLengthNode ( int nNode0, int nNode1 ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nNode0, nNode1);
    return _result;
}

#pragma implementation_key(3163)
inline enum femap::zReturnCode femap::ICurve::IsStraight ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3164)
inline enum femap::zReturnCode femap::ICurve::IsNonManifold ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3165)
inline enum femap::zReturnCode femap::ICurve::IsSmooth ( double dAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005", dAngle);
    return _result;
}

#pragma implementation_key(3166)
inline enum femap::zReturnCode femap::ICurve::TangentAtEnds ( VARIANT_BOOL outward, VARIANT * pvEnd1Tan, VARIANT * pvEnd2Tan ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x400c\x400c", outward, pvEnd1Tan, pvEnd2Tan);
    return _result;
}

#pragma implementation_key(3167)
inline enum femap::zReturnCode femap::ICurve::CurvatureAcrossEdge ( double * pdMinVal, double * pdMaxVal, double * pdAngleBetweenNormals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005", pdMinVal, pdMaxVal, pdAngleBetweenNormals);
    return _result;
}

#pragma implementation_key(3168)
inline enum femap::zReturnCode femap::ICurve::ClosestPointToSurface ( int nSurfaceID, double * pdX, double * pdY, double * pdZ, double * pdDistance, double * pdAngleOfTangentToSurfNormal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005", nSurfaceID, pdX, pdY, pdZ, pdDistance, pdAngleOfTangentToSurfNormal);
    return _result;
}

#pragma implementation_key(3169)
inline enum femap::zReturnCode femap::ICurve::MinRadius ( double * pdMinRadius ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", pdMinRadius);
    return _result;
}

#pragma implementation_key(3170)
inline enum femap::zReturnCode femap::ICurve::ParamOnCombinedCurve ( double s, int * curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x4003", s, curveID);
    return _result;
}

#pragma implementation_key(3171)
inline enum femap::zReturnCode femap::ICurve::IsSuppressed ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3172)
inline enum femap::zReturnCode femap::ICurve::ClearMeshLoc ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3173)
inline enum femap::zReturnCode femap::ICurve::HasMeshSize ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3174)
inline enum femap::zReturnCode femap::ICurve::SetSimpleMeshLoc ( int NumElem, int spacing, int biasMethod, double bias, int biasLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0005\x0003", NumElem, spacing, biasMethod, bias, biasLoc);
    return _result;
}

#pragma implementation_key(3175)
inline enum femap::zReturnCode femap::ICurve::MeshCount ( int * NumElem, VARIANT_BOOL * CustomSize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400b", NumElem, CustomSize);
    return _result;
}

#pragma implementation_key(3176)
inline enum femap::zReturnCode femap::ICurve::CommonPoint ( int nOtherCurveID, int * nCommonPoint, VARIANT_BOOL * bMultipleCommon ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400b", nOtherCurveID, nCommonPoint, bMultipleCommon);
    return _result;
}

#pragma implementation_key(3177)
inline enum femap::zReturnCode femap::ICurve::PointsAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(3178)
inline enum femap::zReturnCode femap::ICurve::ProjectToClosest ( VARIANT_BOOL bExtendCurve, const _variant_t & vOrig, VARIANT * vProj ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x400c", bExtendCurve, &vOrig, vProj);
    return _result;
}

#pragma implementation_key(3179)
inline enum femap::zReturnCode femap::ICurve::ProjectAlongVector ( const _variant_t & vAlong, const _variant_t & vOrig, VARIANT * vProj ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x400c", &vAlong, &vOrig, vProj);
    return _result;
}

#pragma implementation_key(3180)
inline enum femap::zReturnCode femap::ICurve::IsArc ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3181)
inline enum femap::zReturnCode femap::ICurve::ClosestPointToCurve ( int nCurveID, double * pdX, double * pdY, double * pdZ, double * pdDistance, double * pdAngleOfTangents ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005", nCurveID, pdX, pdY, pdZ, pdDistance, pdAngleOfTangents);
    return _result;
}

#pragma implementation_key(3182)
inline enum femap::zReturnCode femap::ICurve::IsGeneral ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3183)
inline enum femap::zReturnCode femap::ICurve::Solid ( int * pnSolidID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", pnSolidID);
    return _result;
}

#pragma implementation_key(3184)
inline enum femap::zReturnCode femap::ICurve::Midpoint ( VARIANT * Midpoint ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", Midpoint);
    return _result;
}

#pragma implementation_key(3185)
inline enum femap::zReturnCode femap::ICurve::center ( VARIANT * center ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", center);
    return _result;
}

#pragma implementation_key(3186)
inline double femap::ICurve::GetPrecision ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e63, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3187)
inline enum femap::zReturnCode femap::ICurve::ResetPrecision ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e64, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3188)
inline enum femap::zReturnCode femap::ICurve::IsMergeable ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e65, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3189)
inline enum femap::zReturnCode femap::ICurve::BoundingBoxInCSys ( int nCSysID, VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e66, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nCSysID, box);
    return _result;
}

#pragma implementation_key(3190)
inline enum femap::zReturnCode femap::ICurve::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3191)
inline enum femap::zReturnCode femap::ICurve::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3192)
inline enum femap::zReturnCode femap::ICurve::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3193)
inline enum femap::zReturnCode femap::ICurve::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3194)
inline enum femap::zReturnCode femap::ICurve::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3195)
inline enum femap::zReturnCode femap::ICurve::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3196)
inline enum femap::zReturnCode femap::ICurve::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3197)
inline enum femap::zReturnCode femap::ICurve::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3198)
inline enum femap::zReturnCode femap::ICurve::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3199)
inline enum femap::zReturnCode femap::ICurve::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3200)
inline enum femap::zReturnCode femap::ICurve::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3201)
inline enum femap::zReturnCode femap::ICurve::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3202)
inline int femap::ICurve::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3203)
inline int femap::ICurve::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3204)
inline int femap::ICurve::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3205)
inline int femap::ICurve::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3206)
inline enum femap::zReturnCode femap::ICurve::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3207)
inline enum femap::zReturnCode femap::ICurve::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3208)
inline enum femap::zReturnCode femap::ICurve::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3209)
inline enum femap::zReturnCode femap::ICurve::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3210)
inline enum femap::zReturnCode femap::ICurve::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3211)
inline int femap::ICurve::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3212)
inline enum femap::zReturnCode femap::ICurve::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3213)
inline enum femap::zReturnCode femap::ICurve::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3214)
inline enum femap::zReturnCode femap::ICurve::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3215)
inline int femap::ICurve::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3216)
inline enum femap::zReturnCode femap::ICurve::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3217)
inline enum femap::zReturnCode femap::ICurve::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3218)
inline enum femap::zCurveType femap::ICurve::Gettype ( ) {
    enum zCurveType _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3219)
inline void femap::ICurve::Puttype ( enum zCurveType _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(3220)
inline int femap::ICurve::GetattrPID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3221)
inline void femap::ICurve::PutattrPID ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3222)
inline enum femap::zCurveOrientType femap::ICurve::GetattrOrientType ( ) {
    enum zCurveOrientType _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3223)
inline void femap::ICurve::PutattrOrientType ( enum zCurveOrientType _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(3224)
inline enum femap::zCurveOffsetType femap::ICurve::GetattrOffsetType ( ) {
    enum zCurveOffsetType _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3225)
inline void femap::ICurve::PutattrOffsetType ( enum zCurveOffsetType _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(3226)
inline enum femap::zColor femap::ICurve::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3227)
inline void femap::ICurve::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(3228)
inline int femap::ICurve::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3229)
inline void femap::ICurve::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(3230)
inline int femap::ICurve::GetAddress ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3231)
inline void femap::ICurve::PutAddress ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(3232)
inline int femap::ICurve::GetEngine ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3233)
inline void femap::ICurve::PutEngine ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(3234)
inline VARIANT_BOOL femap::ICurve::GetSuppressed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3235)
inline void femap::ICurve::PutSuppressed ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271c, VT_BOOL, _val);
}

#pragma implementation_key(3236)
inline int femap::ICurve::GetBSplineOrder ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3237)
inline void femap::ICurve::PutBSplineOrder ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(3238)
inline int femap::ICurve::GetBSplineNumPoints ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3239)
inline void femap::ICurve::PutBSplineNumPoints ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(3240)
inline double femap::ICurve::GetBSplineT0 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3241)
inline void femap::ICurve::PutBSplineT0 ( double _val ) {
    _com_dispatch_propput(this, 0x2722, VT_R8, _val);
}

#pragma implementation_key(3242)
inline double femap::ICurve::GetBSplineT1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3243)
inline void femap::ICurve::PutBSplineT1 ( double _val ) {
    _com_dispatch_propput(this, 0x2723, VT_R8, _val);
}

#pragma implementation_key(3244)
inline VARIANT_BOOL femap::ICurve::GetBSplinePlanar ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3245)
inline void femap::ICurve::PutBSplinePlanar ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2724, VT_BOOL, _val);
}

#pragma implementation_key(3246)
inline VARIANT_BOOL femap::ICurve::GetBSplineClosed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3247)
inline void femap::ICurve::PutBSplineClosed ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2725, VT_BOOL, _val);
}

#pragma implementation_key(3248)
inline VARIANT_BOOL femap::ICurve::GetBSplineRational ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3249)
inline void femap::ICurve::PutBSplineRational ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2726, VT_BOOL, _val);
}

#pragma implementation_key(3250)
inline VARIANT_BOOL femap::ICurve::GetBSplinePeriodic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3251)
inline void femap::ICurve::PutBSplinePeriodic ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2727, VT_BOOL, _val);
}

#pragma implementation_key(3252)
inline VARIANT_BOOL femap::ICurve::GetHasCustomMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3253)
inline void femap::ICurve::PutHasCustomMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272e, VT_BOOL, _val);
}

#pragma implementation_key(3254)
inline _variant_t femap::ICurve::GetvStdPoint ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x272f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3255)
inline void femap::ICurve::PutvStdPoint ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x272f, VT_VARIANT, &_val);
}

#pragma implementation_key(3256)
inline _variant_t femap::ICurve::GetvattrOrient ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2730, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3257)
inline void femap::ICurve::PutvattrOrient ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2730, VT_VARIANT, &_val);
}

#pragma implementation_key(3258)
inline _variant_t femap::ICurve::GetvBSplinePoint ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2731, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3259)
inline void femap::ICurve::PutvBSplinePoint ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2731, VT_VARIANT, &_val);
}

#pragma implementation_key(3260)
inline _variant_t femap::ICurve::GetvBSplineKnot ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2732, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3261)
inline void femap::ICurve::PutvBSplineKnot ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2732, VT_VARIANT, &_val);
}

#pragma implementation_key(3262)
inline _variant_t femap::ICurve::GetvBSplineWeight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2733, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3263)
inline void femap::ICurve::PutvBSplineWeight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2733, VT_VARIANT, &_val);
}

#pragma implementation_key(3264)
inline _variant_t femap::ICurve::GetvMeshElem ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2734, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3265)
inline void femap::ICurve::PutvMeshElem ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2734, VT_VARIANT, &_val);
}

#pragma implementation_key(3266)
inline _variant_t femap::ICurve::GetvMeshBias ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2735, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3267)
inline void femap::ICurve::PutvMeshBias ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2735, VT_VARIANT, &_val);
}

#pragma implementation_key(3268)
inline _variant_t femap::ICurve::GetvMeshMaxParam ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2736, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3269)
inline void femap::ICurve::PutvMeshMaxParam ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2736, VT_VARIANT, &_val);
}

#pragma implementation_key(3270)
inline _variant_t femap::ICurve::GetvLengthSpacing ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2737, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3271)
inline void femap::ICurve::PutvLengthSpacing ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2737, VT_VARIANT, &_val);
}

#pragma implementation_key(3272)
inline _variant_t femap::ICurve::GetvCenterBias ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2738, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3273)
inline void femap::ICurve::PutvCenterBias ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2738, VT_VARIANT, &_val);
}

#pragma implementation_key(3274)
inline _variant_t femap::ICurve::GetvGeometricBias ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2739, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3275)
inline void femap::ICurve::PutvGeometricBias ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2739, VT_VARIANT, &_val);
}

#pragma implementation_key(3276)
inline _variant_t femap::ICurve::GetvattrOffset ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3277)
inline void femap::ICurve::PutvattrOffset ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273a, VT_VARIANT, &_val);
}

#pragma implementation_key(3278)
inline _variant_t femap::ICurve::GetvattrRelease ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3279)
inline void femap::ICurve::PutvattrRelease ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273b, VT_VARIANT, &_val);
}

#pragma implementation_key(3280)
inline int femap::ICurve::GetInternalToBoundary ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3281)
inline void femap::ICurve::PutInternalToBoundary ( int _val ) {
    _com_dispatch_propput(this, 0x273c, VT_I4, _val);
}

#pragma implementation_key(3282)
inline int femap::ICurve::GetInCombinedCurve ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3283)
inline void femap::ICurve::PutInCombinedCurve ( int _val ) {
    _com_dispatch_propput(this, 0x273d, VT_I4, _val);
}

#pragma implementation_key(3284)
inline double femap::ICurve::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3285)
inline void femap::ICurve::PutScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x273e, VT_R8, _val);
}

#pragma implementation_key(3286)
inline int femap::ICurve::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3287)
inline void femap::ICurve::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3288)
inline int femap::ICurve::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3289)
inline void femap::ICurve::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3290)
inline int femap::ICurve::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3291)
inline void femap::ICurve::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IUserData wrapper method implementations
//

#pragma implementation_key(3292)
inline enum femap::zReturnCode femap::IUserData::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3293)
inline enum femap::zReturnCode femap::IUserData::GetTitle ( _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)title);
    return _result;
}

#pragma implementation_key(3294)
inline enum femap::zReturnCode femap::IUserData::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3295)
inline enum femap::zReturnCode femap::IUserData::PutTitle ( _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)title);
    return _result;
}

#pragma implementation_key(3296)
inline enum femap::zReturnCode femap::IUserData::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3297)
inline enum femap::zReturnCode femap::IUserData::DeleteTitle ( _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)title);
    return _result;
}

#pragma implementation_key(3298)
inline enum femap::zReturnCode femap::IUserData::WriteDouble ( double val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005", val);
    return _result;
}

#pragma implementation_key(3299)
inline enum femap::zReturnCode femap::IUserData::WriteDoubleArray ( int num, const _variant_t & val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", num, &val);
    return _result;
}

#pragma implementation_key(3300)
inline enum femap::zReturnCode femap::IUserData::WriteFloat ( float val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0004", val);
    return _result;
}

#pragma implementation_key(3301)
inline enum femap::zReturnCode femap::IUserData::WriteLong ( int val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", val);
    return _result;
}

#pragma implementation_key(3302)
inline enum femap::zReturnCode femap::IUserData::WriteLongArray ( int num, const _variant_t & val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", num, &val);
    return _result;
}

#pragma implementation_key(3303)
inline enum femap::zReturnCode femap::IUserData::WriteShort ( short val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0002", val);
    return _result;
}

#pragma implementation_key(3304)
inline enum femap::zReturnCode femap::IUserData::WriteBool ( VARIANT_BOOL val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", val);
    return _result;
}

#pragma implementation_key(3305)
inline enum femap::zReturnCode femap::IUserData::WriteBoolArray ( int num, const _variant_t & val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", num, &val);
    return _result;
}

#pragma implementation_key(3306)
inline enum femap::zReturnCode femap::IUserData::WriteString ( _bstr_t val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)val);
    return _result;
}

#pragma implementation_key(3307)
inline enum femap::zReturnCode femap::IUserData::ReadDouble ( double * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", val);
    return _result;
}

#pragma implementation_key(3308)
inline enum femap::zReturnCode femap::IUserData::ReadDoubleArray ( int * num, VARIANT * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", num, val);
    return _result;
}

#pragma implementation_key(3309)
inline enum femap::zReturnCode femap::IUserData::ReadFloat ( float * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4004", val);
    return _result;
}

#pragma implementation_key(3310)
inline enum femap::zReturnCode femap::IUserData::ReadLong ( int * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", val);
    return _result;
}

#pragma implementation_key(3311)
inline enum femap::zReturnCode femap::IUserData::ReadLongArray ( int * num, VARIANT * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", num, val);
    return _result;
}

#pragma implementation_key(3312)
inline enum femap::zReturnCode femap::IUserData::ReadShort ( short * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4002", val);
    return _result;
}

#pragma implementation_key(3313)
inline enum femap::zReturnCode femap::IUserData::ReadBool ( VARIANT_BOOL * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400b", val);
    return _result;
}

#pragma implementation_key(3314)
inline enum femap::zReturnCode femap::IUserData::ReadBoolArray ( int * num, VARIANT * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", num, val);
    return _result;
}

#pragma implementation_key(3315)
inline enum femap::zReturnCode femap::IUserData::ReadString ( BSTR * val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4008", val);
    return _result;
}

#pragma implementation_key(3316)
inline int femap::IUserData::Position ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3317)
inline enum femap::zReturnCode femap::IUserData::AtEOF ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3318)
inline enum femap::zReturnCode femap::IUserData::Jump ( int jumpto ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", jumpto);
    return _result;
}

#pragma implementation_key(3319)
inline enum femap::zReturnCode femap::IUserData::Truncate ( int fsize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", fsize);
    return _result;
}

#pragma implementation_key(3320)
inline enum femap::zReturnCode femap::IUserData::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3321)
inline enum femap::zReturnCode femap::IUserData::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3322)
inline enum femap::zReturnCode femap::IUserData::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3323)
inline enum femap::zReturnCode femap::IUserData::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3324)
inline enum femap::zReturnCode femap::IUserData::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3325)
inline enum femap::zReturnCode femap::IUserData::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3326)
inline enum femap::zReturnCode femap::IUserData::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3327)
inline enum femap::zReturnCode femap::IUserData::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3328)
inline enum femap::zReturnCode femap::IUserData::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3329)
inline enum femap::zReturnCode femap::IUserData::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3330)
inline enum femap::zReturnCode femap::IUserData::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3331)
inline enum femap::zReturnCode femap::IUserData::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3332)
inline _bstr_t femap::IUserData::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3333)
inline void femap::IUserData::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3334)
inline int femap::IUserData::GetSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3335)
inline void femap::IUserData::PutSize ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3336)
inline int femap::IUserData::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3337)
inline void femap::IUserData::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3338)
inline int femap::IUserData::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3339)
inline void femap::IUserData::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

//
// dispinterface ILayup wrapper method implementations
//

#pragma implementation_key(3340)
inline double femap::ILayup::Getthickness ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3341)
inline void femap::ILayup::Putthickness ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3342)
inline double femap::ILayup::Getangle ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3343)
inline void femap::ILayup::Putangle ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3344)
inline int femap::ILayup::GetmatlID ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3345)
inline void femap::ILayup::PutmatlID ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3346)
inline int femap::ILayup::Getglobalply ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3347)
inline void femap::ILayup::Putglobalply ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3348)
inline double femap::ILayup::GetAMatrix ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3349)
inline void femap::ILayup::PutAMatrix ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3350)
inline double femap::ILayup::GetBMatrix ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3351)
inline void femap::ILayup::PutBMatrix ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3352)
inline double femap::ILayup::GetDMatrix ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3353)
inline void femap::ILayup::PutDMatrix ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3354)
inline double femap::ILayup::GetAInvMatrix ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3355)
inline void femap::ILayup::PutAInvMatrix ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3356)
inline double femap::ILayup::GetBInvMatrix ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3357)
inline void femap::ILayup::PutBInvMatrix ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3358)
inline double femap::ILayup::GetDInvMatrix ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3359)
inline void femap::ILayup::PutDInvMatrix ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3360)
inline double femap::ILayup::GetInPlaneProp ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4a38, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3361)
inline void femap::ILayup::PutInPlaneProp ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4a38, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3362)
inline double femap::ILayup::GetBendingProp ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4a39, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3363)
inline void femap::ILayup::PutBendingProp ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4a39, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3364)
inline enum femap::zReturnCode femap::ILayup::InsertPly ( int nPlyID, int nMatlID, double dThickness, double dAngle, int nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x0005\x0003", nPlyID, nMatlID, dThickness, dAngle, nGlobalPly);
    return _result;
}

#pragma implementation_key(3365)
inline enum femap::zReturnCode femap::ILayup::AddPly ( int nMatlID, double dThickness, double dAngle, int nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0003", nMatlID, dThickness, dAngle, nGlobalPly);
    return _result;
}

#pragma implementation_key(3366)
inline enum femap::zReturnCode femap::ILayup::DeletePly ( int nPlyID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nPlyID);
    return _result;
}

#pragma implementation_key(3367)
inline enum femap::zReturnCode femap::ILayup::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3368)
inline enum femap::zReturnCode femap::ILayup::Compute ( VARIANT_BOOL dynamic ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", dynamic);
    return _result;
}

#pragma implementation_key(3369)
inline enum femap::zReturnCode femap::ILayup::HasGlobalPly ( int nGlobalPlyID, int * nPlyNum ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nGlobalPlyID, nPlyNum);
    return _result;
}

#pragma implementation_key(3370)
inline enum femap::zReturnCode femap::ILayup::HasMaterial ( int nMatlID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nMatlID);
    return _result;
}

#pragma implementation_key(3371)
inline enum femap::zReturnCode femap::ILayup::TotalThickness ( double * dThickness ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", dThickness);
    return _result;
}

#pragma implementation_key(3372)
inline enum femap::zReturnCode femap::ILayup::GetPly ( int nPlyID, int * nMatlID, double * dThickness, double * dAngle, int * nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4005\x4005\x4003", nPlyID, nMatlID, dThickness, dAngle, nGlobalPly);
    return _result;
}

#pragma implementation_key(3373)
inline enum femap::zReturnCode femap::ILayup::SetPly ( int nPlyID, int nMatlID, double dThickness, double dAngle, int nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x0005\x0003", nPlyID, nMatlID, dThickness, dAngle, nGlobalPly);
    return _result;
}

#pragma implementation_key(3374)
inline enum femap::zReturnCode femap::ILayup::GetAllPly ( int * nNumPly, VARIANT * nMatlID, VARIANT * dThickness, VARIANT * dAngle, VARIANT * nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c", nNumPly, nMatlID, dThickness, dAngle, nGlobalPly);
    return _result;
}

#pragma implementation_key(3375)
inline enum femap::zReturnCode femap::ILayup::SetAllPly ( int nNumPly, const _variant_t & nMatlID, const _variant_t & dThickness, const _variant_t & dAngle, const _variant_t & nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", nNumPly, &nMatlID, &dThickness, &dAngle, &nGlobalPly);
    return _result;
}

#pragma implementation_key(3376)
inline enum femap::zReturnCode femap::ILayup::Compute2 ( int nOption ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nOption);
    return _result;
}

#pragma implementation_key(3377)
inline enum femap::zReturnCode femap::ILayup::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ac, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3378)
inline enum femap::zReturnCode femap::ILayup::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ad, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3379)
inline enum femap::zReturnCode femap::ILayup::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61ba, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3380)
inline enum femap::zReturnCode femap::ILayup::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61bb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3381)
inline enum femap::zReturnCode femap::ILayup::HasFullGlobalPly ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x61bc, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3382)
inline enum femap::zReturnCode femap::ILayup::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3383)
inline enum femap::zReturnCode femap::ILayup::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3384)
inline enum femap::zReturnCode femap::ILayup::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3385)
inline enum femap::zReturnCode femap::ILayup::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3386)
inline enum femap::zReturnCode femap::ILayup::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3387)
inline enum femap::zReturnCode femap::ILayup::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3388)
inline enum femap::zReturnCode femap::ILayup::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3389)
inline enum femap::zReturnCode femap::ILayup::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3390)
inline enum femap::zReturnCode femap::ILayup::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3391)
inline enum femap::zReturnCode femap::ILayup::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3392)
inline enum femap::zReturnCode femap::ILayup::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3393)
inline enum femap::zReturnCode femap::ILayup::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3394)
inline int femap::ILayup::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3395)
inline int femap::ILayup::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3396)
inline int femap::ILayup::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3397)
inline int femap::ILayup::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3398)
inline enum femap::zReturnCode femap::ILayup::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3399)
inline enum femap::zReturnCode femap::ILayup::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3400)
inline enum femap::zReturnCode femap::ILayup::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3401)
inline int femap::ILayup::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3402)
inline enum femap::zReturnCode femap::ILayup::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3403)
inline enum femap::zReturnCode femap::ILayup::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3404)
inline enum femap::zReturnCode femap::ILayup::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3405)
inline int femap::ILayup::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3406)
inline enum femap::zReturnCode femap::ILayup::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3407)
inline enum femap::zReturnCode femap::ILayup::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3408)
inline _bstr_t femap::ILayup::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3409)
inline void femap::ILayup::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3410)
inline int femap::ILayup::GetNumberOfPlys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3411)
inline void femap::ILayup::PutNumberOfPlys ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3412)
inline _variant_t femap::ILayup::Getvthickness ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2712, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3413)
inline void femap::ILayup::Putvthickness ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2712, VT_VARIANT, &_val);
}

#pragma implementation_key(3414)
inline _variant_t femap::ILayup::Getvangle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2713, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3415)
inline void femap::ILayup::Putvangle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2713, VT_VARIANT, &_val);
}

#pragma implementation_key(3416)
inline _variant_t femap::ILayup::GetvmatlID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3417)
inline void femap::ILayup::PutvmatlID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(3418)
inline _variant_t femap::ILayup::Getvglobalply ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3419)
inline void femap::ILayup::Putvglobalply ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(3420)
inline double femap::ILayup::GetLayupThickness ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3421)
inline void femap::ILayup::PutLayupThickness ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(3422)
inline _variant_t femap::ILayup::GetvInPlaneProp ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3423)
inline void femap::ILayup::PutvInPlaneProp ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(3424)
inline _variant_t femap::ILayup::GetvBendingProp ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3425)
inline void femap::ILayup::PutvBendingProp ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(3426)
inline _variant_t femap::ILayup::GetvAMatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2719, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3427)
inline void femap::ILayup::PutvAMatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2719, VT_VARIANT, &_val);
}

#pragma implementation_key(3428)
inline _variant_t femap::ILayup::GetvBMatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3429)
inline void femap::ILayup::PutvBMatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271a, VT_VARIANT, &_val);
}

#pragma implementation_key(3430)
inline _variant_t femap::ILayup::GetvDMatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3431)
inline void femap::ILayup::PutvDMatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(3432)
inline _variant_t femap::ILayup::GetvAInvMatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3433)
inline void femap::ILayup::PutvAInvMatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(3434)
inline _variant_t femap::ILayup::GetvBInvMatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3435)
inline void femap::ILayup::PutvBInvMatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271d, VT_VARIANT, &_val);
}

#pragma implementation_key(3436)
inline _variant_t femap::ILayup::GetvDInvMatrix ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3437)
inline void femap::ILayup::PutvDInvMatrix ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271e, VT_VARIANT, &_val);
}

#pragma implementation_key(3438)
inline int femap::ILayup::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3439)
inline void femap::ILayup::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3440)
inline int femap::ILayup::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3441)
inline void femap::ILayup::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3442)
inline int femap::ILayup::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3443)
inline void femap::ILayup::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IMatl wrapper method implementations
//

#pragma implementation_key(3444)
inline VARIANT_BOOL femap::IMatl::GetbVal ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3445)
inline void femap::IMatl::PutbVal ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3446)
inline double femap::IMatl::Getmval ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3447)
inline void femap::IMatl::Putmval ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3448)
inline int femap::IMatl::Getival ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3449)
inline void femap::IMatl::Putival ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3450)
inline int femap::IMatl::Getfval ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3451)
inline void femap::IMatl::Putfval ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3452)
inline int femap::IMatl::Gettval ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3453)
inline void femap::IMatl::Puttval ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3454)
inline enum femap::zReturnCode femap::IMatl::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3455)
inline enum femap::zReturnCode femap::IMatl::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3456)
inline enum femap::zReturnCode femap::IMatl::AutoComplete ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3457)
inline enum femap::zReturnCode femap::IMatl::AreDuplicate ( int nMatl1, int nMatl2, VARIANT_BOOL ignoretitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nMatl1, nMatl2, ignoretitle);
    return _result;
}

#pragma implementation_key(3458)
inline enum femap::zReturnCode femap::IMatl::GetValueArray ( int numValue, const _variant_t & nMatlID, const _variant_t & nMatlIndex, VARIANT * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x400c", numValue, &nMatlID, &nMatlIndex, dValue);
    return _result;
}

#pragma implementation_key(3459)
inline enum femap::zReturnCode femap::IMatl::PutValueArray ( int numValue, const _variant_t & nMatlID, const _variant_t & nMatlIndex, const _variant_t & dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", numValue, &nMatlID, &nMatlIndex, &dValue);
    return _result;
}

#pragma implementation_key(3460)
inline enum femap::zReturnCode femap::IMatl::PutValue ( int nMatlSetID, int nMatlIndex, double dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nMatlSetID, nMatlIndex, dValue);
    return _result;
}

#pragma implementation_key(3461)
inline enum femap::zReturnCode femap::IMatl::CopyArray ( VARIANT_BOOL bUpdateReferences, VARIANT_BOOL bCopyToStartID, int nCopyToStartID, int numID, const _variant_t & nOrigID, VARIANT * pnNewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x0003\x000c\x400c", bUpdateReferences, bCopyToStartID, nCopyToStartID, numID, &nOrigID, pnNewID);
    return _result;
}

#pragma implementation_key(3462)
inline enum femap::zReturnCode femap::IMatl::GetLibraryOfType ( int libINDEX, enum zMaterialType libTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", libINDEX, libTYPE);
    return _result;
}

#pragma implementation_key(3463)
inline enum femap::zReturnCode femap::IMatl::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3464)
inline enum femap::zReturnCode femap::IMatl::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3465)
inline enum femap::zReturnCode femap::IMatl::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3466)
inline enum femap::zReturnCode femap::IMatl::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3467)
inline enum femap::zReturnCode femap::IMatl::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3468)
inline enum femap::zReturnCode femap::IMatl::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3469)
inline enum femap::zReturnCode femap::IMatl::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3470)
inline enum femap::zReturnCode femap::IMatl::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3471)
inline enum femap::zReturnCode femap::IMatl::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3472)
inline enum femap::zReturnCode femap::IMatl::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3473)
inline enum femap::zReturnCode femap::IMatl::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3474)
inline enum femap::zReturnCode femap::IMatl::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3475)
inline enum femap::zReturnCode femap::IMatl::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3476)
inline int femap::IMatl::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3477)
inline int femap::IMatl::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3478)
inline int femap::IMatl::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3479)
inline int femap::IMatl::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3480)
inline enum femap::zReturnCode femap::IMatl::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3481)
inline enum femap::zReturnCode femap::IMatl::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3482)
inline enum femap::zReturnCode femap::IMatl::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3483)
inline enum femap::zReturnCode femap::IMatl::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3484)
inline int femap::IMatl::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3485)
inline enum femap::zReturnCode femap::IMatl::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3486)
inline enum femap::zReturnCode femap::IMatl::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3487)
inline enum femap::zReturnCode femap::IMatl::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3488)
inline int femap::IMatl::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3489)
inline enum femap::zReturnCode femap::IMatl::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3490)
inline enum femap::zReturnCode femap::IMatl::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3491)
inline int femap::IMatl::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3492)
inline void femap::IMatl::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(3493)
inline enum femap::zColor femap::IMatl::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3494)
inline void femap::IMatl::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3495)
inline enum femap::zMaterialType femap::IMatl::Gettype ( ) {
    enum zMaterialType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3496)
inline void femap::IMatl::Puttype ( enum zMaterialType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3497)
inline int femap::IMatl::Getsubtype ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3498)
inline void femap::IMatl::Putsubtype ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(3499)
inline _bstr_t femap::IMatl::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3500)
inline void femap::IMatl::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3501)
inline double femap::IMatl::GetEx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3502)
inline void femap::IMatl::PutEx ( double _val ) {
    _com_dispatch_propput(this, 0x271a, VT_R8, _val);
}

#pragma implementation_key(3503)
inline double femap::IMatl::GetEy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3504)
inline void femap::IMatl::PutEy ( double _val ) {
    _com_dispatch_propput(this, 0x271b, VT_R8, _val);
}

#pragma implementation_key(3505)
inline double femap::IMatl::GetEz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3506)
inline void femap::IMatl::PutEz ( double _val ) {
    _com_dispatch_propput(this, 0x271c, VT_R8, _val);
}

#pragma implementation_key(3507)
inline double femap::IMatl::GetGx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3508)
inline void femap::IMatl::PutGx ( double _val ) {
    _com_dispatch_propput(this, 0x271d, VT_R8, _val);
}

#pragma implementation_key(3509)
inline double femap::IMatl::GetGy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3510)
inline void femap::IMatl::PutGy ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(3511)
inline double femap::IMatl::GetGz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3512)
inline void femap::IMatl::PutGz ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(3513)
inline double femap::IMatl::GetNuxy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3514)
inline void femap::IMatl::PutNuxy ( double _val ) {
    _com_dispatch_propput(this, 0x2720, VT_R8, _val);
}

#pragma implementation_key(3515)
inline double femap::IMatl::GetNuyz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3516)
inline void femap::IMatl::PutNuyz ( double _val ) {
    _com_dispatch_propput(this, 0x2721, VT_R8, _val);
}

#pragma implementation_key(3517)
inline double femap::IMatl::GetNuxz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3518)
inline void femap::IMatl::PutNuxz ( double _val ) {
    _com_dispatch_propput(this, 0x2722, VT_R8, _val);
}

#pragma implementation_key(3519)
inline double femap::IMatl::GetAlphaxx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3520)
inline void femap::IMatl::PutAlphaxx ( double _val ) {
    _com_dispatch_propput(this, 0x2723, VT_R8, _val);
}

#pragma implementation_key(3521)
inline double femap::IMatl::GetAlphayy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3522)
inline void femap::IMatl::PutAlphayy ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(3523)
inline double femap::IMatl::GetAlphazz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3524)
inline void femap::IMatl::PutAlphazz ( double _val ) {
    _com_dispatch_propput(this, 0x2725, VT_R8, _val);
}

#pragma implementation_key(3525)
inline double femap::IMatl::GetAlphaxy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3526)
inline void femap::IMatl::PutAlphaxy ( double _val ) {
    _com_dispatch_propput(this, 0x2726, VT_R8, _val);
}

#pragma implementation_key(3527)
inline double femap::IMatl::GetAlphayz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3528)
inline void femap::IMatl::PutAlphayz ( double _val ) {
    _com_dispatch_propput(this, 0x2727, VT_R8, _val);
}

#pragma implementation_key(3529)
inline double femap::IMatl::GetAlphazx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3530)
inline void femap::IMatl::PutAlphazx ( double _val ) {
    _com_dispatch_propput(this, 0x2728, VT_R8, _val);
}

#pragma implementation_key(3531)
inline double femap::IMatl::GetKxx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3532)
inline void femap::IMatl::PutKxx ( double _val ) {
    _com_dispatch_propput(this, 0x2729, VT_R8, _val);
}

#pragma implementation_key(3533)
inline double femap::IMatl::GetKyy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3534)
inline void femap::IMatl::PutKyy ( double _val ) {
    _com_dispatch_propput(this, 0x272a, VT_R8, _val);
}

#pragma implementation_key(3535)
inline double femap::IMatl::GetKzz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3536)
inline void femap::IMatl::PutKzz ( double _val ) {
    _com_dispatch_propput(this, 0x272b, VT_R8, _val);
}

#pragma implementation_key(3537)
inline double femap::IMatl::GetKxy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3538)
inline void femap::IMatl::PutKxy ( double _val ) {
    _com_dispatch_propput(this, 0x272c, VT_R8, _val);
}

#pragma implementation_key(3539)
inline double femap::IMatl::GetKyz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3540)
inline void femap::IMatl::PutKyz ( double _val ) {
    _com_dispatch_propput(this, 0x272d, VT_R8, _val);
}

#pragma implementation_key(3541)
inline double femap::IMatl::GetKzx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3542)
inline void femap::IMatl::PutKzx ( double _val ) {
    _com_dispatch_propput(this, 0x272e, VT_R8, _val);
}

#pragma implementation_key(3543)
inline double femap::IMatl::GetCp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3544)
inline void femap::IMatl::PutCp ( double _val ) {
    _com_dispatch_propput(this, 0x272f, VT_R8, _val);
}

#pragma implementation_key(3545)
inline double femap::IMatl::GetDensity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3546)
inline void femap::IMatl::PutDensity ( double _val ) {
    _com_dispatch_propput(this, 0x2730, VT_R8, _val);
}

#pragma implementation_key(3547)
inline double femap::IMatl::GetDamping ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3548)
inline void femap::IMatl::PutDamping ( double _val ) {
    _com_dispatch_propput(this, 0x2731, VT_R8, _val);
}

#pragma implementation_key(3549)
inline double femap::IMatl::GetRefTemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3550)
inline void femap::IMatl::PutRefTemp ( double _val ) {
    _com_dispatch_propput(this, 0x2732, VT_R8, _val);
}

#pragma implementation_key(3551)
inline double femap::IMatl::GetTensionLimit1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3552)
inline void femap::IMatl::PutTensionLimit1 ( double _val ) {
    _com_dispatch_propput(this, 0x2733, VT_R8, _val);
}

#pragma implementation_key(3553)
inline double femap::IMatl::GetTensionLimit2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3554)
inline void femap::IMatl::PutTensionLimit2 ( double _val ) {
    _com_dispatch_propput(this, 0x2734, VT_R8, _val);
}

#pragma implementation_key(3555)
inline double femap::IMatl::GetCompressionLimit1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3556)
inline void femap::IMatl::PutCompressionLimit1 ( double _val ) {
    _com_dispatch_propput(this, 0x2735, VT_R8, _val);
}

#pragma implementation_key(3557)
inline double femap::IMatl::GetCompressionLimit2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3558)
inline void femap::IMatl::PutCompressionLimit2 ( double _val ) {
    _com_dispatch_propput(this, 0x2736, VT_R8, _val);
}

#pragma implementation_key(3559)
inline double femap::IMatl::GetShearLimit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3560)
inline void femap::IMatl::PutShearLimit ( double _val ) {
    _com_dispatch_propput(this, 0x2737, VT_R8, _val);
}

#pragma implementation_key(3561)
inline double femap::IMatl::GetTsaiWu ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3562)
inline void femap::IMatl::PutTsaiWu ( double _val ) {
    _com_dispatch_propput(this, 0x2738, VT_R8, _val);
}

#pragma implementation_key(3563)
inline _variant_t femap::IMatl::Getmmat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2739, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3564)
inline void femap::IMatl::Putmmat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2739, VT_VARIANT, &_val);
}

#pragma implementation_key(3565)
inline _variant_t femap::IMatl::Getimat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3566)
inline void femap::IMatl::Putimat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273a, VT_VARIANT, &_val);
}

#pragma implementation_key(3567)
inline _variant_t femap::IMatl::Getfmat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3568)
inline void femap::IMatl::Putfmat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273b, VT_VARIANT, &_val);
}

#pragma implementation_key(3569)
inline _variant_t femap::IMatl::Gettmat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3570)
inline void femap::IMatl::Puttmat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273c, VT_VARIANT, &_val);
}

#pragma implementation_key(3571)
inline _variant_t femap::IMatl::Getvbval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3572)
inline void femap::IMatl::Putvbval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273d, VT_VARIANT, &_val);
}

#pragma implementation_key(3573)
inline _variant_t femap::IMatl::Getvmval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3574)
inline void femap::IMatl::Putvmval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273e, VT_VARIANT, &_val);
}

#pragma implementation_key(3575)
inline _variant_t femap::IMatl::Getvival ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3576)
inline void femap::IMatl::Putvival ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273f, VT_VARIANT, &_val);
}

#pragma implementation_key(3577)
inline _variant_t femap::IMatl::Getvfval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2740, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3578)
inline void femap::IMatl::Putvfval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2740, VT_VARIANT, &_val);
}

#pragma implementation_key(3579)
inline _variant_t femap::IMatl::Getvtval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2741, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3580)
inline void femap::IMatl::Putvtval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2741, VT_VARIANT, &_val);
}

#pragma implementation_key(3581)
inline int femap::IMatl::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3582)
inline void femap::IMatl::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3583)
inline int femap::IMatl::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3584)
inline void femap::IMatl::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3585)
inline int femap::IMatl::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3586)
inline void femap::IMatl::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IProp wrapper method implementations
//

#pragma implementation_key(3587)
inline VARIANT_BOOL femap::IProp::Getflag ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3588)
inline void femap::IProp::Putflag ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3589)
inline int femap::IProp::GetflagI ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3590)
inline void femap::IProp::PutflagI ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3591)
inline double femap::IProp::Getpval ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3592)
inline void femap::IProp::Putpval ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3593)
inline int femap::IProp::GetExtraMatlID ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3594)
inline void femap::IProp::PutExtraMatlID ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3595)
inline enum femap::zReturnCode femap::IProp::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3596)
inline enum femap::zReturnCode femap::IProp::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3597)
inline enum femap::zReturnCode femap::IProp::ComputeShape ( VARIANT_BOOL shear_center_offset, VARIANT_BOOL Warping, VARIANT_BOOL stress_recovery ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b", shear_center_offset, Warping, stress_recovery);
    return _result;
}

#pragma implementation_key(3598)
inline femap::IMatlPtr femap::IProp::Matl ( ) {
    struct IMatl * _result = 0;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IMatlPtr(_result, false);
}

#pragma implementation_key(3599)
inline femap::ILayupPtr femap::IProp::Layup ( ) {
    struct ILayup * _result = 0;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ILayupPtr(_result, false);
}

#pragma implementation_key(3600)
inline enum femap::zReturnCode femap::IProp::thickness ( double * dAvgOrAtC1, double * dAtC2, double * dAtC3, double * dAtC4 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005\x4005", dAvgOrAtC1, dAtC2, dAtC3, dAtC4);
    return _result;
}

#pragma implementation_key(3601)
inline enum femap::zReturnCode femap::IProp::Area ( double * dAreaA, double * dAreaB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005", dAreaA, dAreaB);
    return _result;
}

#pragma implementation_key(3602)
inline enum femap::zReturnCode femap::IProp::Inertia ( double * dI1A, double * dI2A, double * dI12A, double * dJA, double * dI1B, double * dI2B, double * dI12B, double * dJB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", dI1A, dI2A, dI12A, dJA, dI1B, dI2B, dI12B, dJB);
    return _result;
}

#pragma implementation_key(3603)
inline enum femap::zReturnCode femap::IProp::ComputeStdShape ( enum zShapeStandard shapeID, const _variant_t & dimensions, enum zShapeOrient sOrient, enum zShapeEvaluator EvalMethod, VARIANT_BOOL shear_center_offset, VARIANT_BOOL Warping, VARIANT_BOOL stress_recovery ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0003\x000b\x000b\x000b", shapeID, &dimensions, sOrient, EvalMethod, shear_center_offset, Warping, stress_recovery);
    return _result;
}

#pragma implementation_key(3604)
inline enum femap::zReturnCode femap::IProp::ComputeGeneralShape ( int surfaceID, const _variant_t & vecDIR, enum zShapeOrient sOrient, enum zShapeEvaluator EvalMethod, VARIANT_BOOL shear_center_offset, VARIANT_BOOL Warping, VARIANT_BOOL stress_recovery ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0003\x000b\x000b\x000b", surfaceID, &vecDIR, sOrient, EvalMethod, shear_center_offset, Warping, stress_recovery);
    return _result;
}

#pragma implementation_key(3605)
inline enum femap::zReturnCode femap::IProp::AreDuplicate ( int nProp1, int nProp2, VARIANT_BOOL ignoretitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nProp1, nProp2, ignoretitle);
    return _result;
}

#pragma implementation_key(3606)
inline enum femap::zReturnCode femap::IProp::GetValueArray ( int numValue, const _variant_t & nPropID, const _variant_t & nPropIndex, VARIANT * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x400c", numValue, &nPropID, &nPropIndex, dValue);
    return _result;
}

#pragma implementation_key(3607)
inline enum femap::zReturnCode femap::IProp::PutValueArray ( int numValue, const _variant_t & nPropID, const _variant_t & nPropIndex, const _variant_t & dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", numValue, &nPropID, &nPropIndex, &dValue);
    return _result;
}

#pragma implementation_key(3608)
inline enum femap::zReturnCode femap::IProp::PutValue ( int nPropSetID, int nPropIndex, double dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nPropSetID, nPropIndex, dValue);
    return _result;
}

#pragma implementation_key(3609)
inline enum femap::zReturnCode femap::IProp::CopyArray ( VARIANT_BOOL bUpdateReferences, VARIANT_BOOL bCopyToStartID, int nCopyToStartID, int numID, const _variant_t & nOrigID, VARIANT * pnNewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x0003\x000c\x400c", bUpdateReferences, bCopyToStartID, nCopyToStartID, numID, &nOrigID, pnNewID);
    return _result;
}

#pragma implementation_key(3610)
inline enum femap::zReturnCode femap::IProp::GetLibraryOfType ( int libINDEX, enum zElementType libTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", libINDEX, libTYPE);
    return _result;
}

#pragma implementation_key(3611)
inline enum femap::zReturnCode femap::IProp::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3612)
inline enum femap::zReturnCode femap::IProp::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3613)
inline enum femap::zReturnCode femap::IProp::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3614)
inline enum femap::zReturnCode femap::IProp::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3615)
inline enum femap::zReturnCode femap::IProp::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3616)
inline enum femap::zReturnCode femap::IProp::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3617)
inline enum femap::zReturnCode femap::IProp::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3618)
inline enum femap::zReturnCode femap::IProp::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3619)
inline enum femap::zReturnCode femap::IProp::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3620)
inline enum femap::zReturnCode femap::IProp::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3621)
inline enum femap::zReturnCode femap::IProp::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3622)
inline enum femap::zReturnCode femap::IProp::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3623)
inline int femap::IProp::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3624)
inline int femap::IProp::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3625)
inline int femap::IProp::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3626)
inline int femap::IProp::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3627)
inline enum femap::zReturnCode femap::IProp::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3628)
inline enum femap::zReturnCode femap::IProp::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3629)
inline enum femap::zReturnCode femap::IProp::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3630)
inline enum femap::zReturnCode femap::IProp::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3631)
inline enum femap::zReturnCode femap::IProp::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3632)
inline int femap::IProp::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3633)
inline enum femap::zReturnCode femap::IProp::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3634)
inline enum femap::zReturnCode femap::IProp::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3635)
inline enum femap::zReturnCode femap::IProp::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3636)
inline int femap::IProp::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3637)
inline enum femap::zReturnCode femap::IProp::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3638)
inline enum femap::zReturnCode femap::IProp::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3639)
inline int femap::IProp::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3640)
inline void femap::IProp::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(3641)
inline enum femap::zColor femap::IProp::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3642)
inline void femap::IProp::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3643)
inline int femap::IProp::GetmatlID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3644)
inline void femap::IProp::PutmatlID ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3645)
inline enum femap::zElementType femap::IProp::Gettype ( ) {
    enum zElementType _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3646)
inline void femap::IProp::Puttype ( enum zElementType _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(3647)
inline int femap::IProp::GetrefCS ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3648)
inline void femap::IProp::PutrefCS ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(3649)
inline _bstr_t femap::IProp::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3650)
inline void femap::IProp::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3651)
inline _variant_t femap::IProp::Getextramat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3652)
inline void femap::IProp::Putextramat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271a, VT_VARIANT, &_val);
}

#pragma implementation_key(3653)
inline _variant_t femap::IProp::Getpmat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3654)
inline void femap::IProp::Putpmat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(3655)
inline _variant_t femap::IProp::Getoutline ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3656)
inline void femap::IProp::Putoutline ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(3657)
inline int femap::IProp::GetnumOutline ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3658)
inline void femap::IProp::PutnumOutline ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(3659)
inline _variant_t femap::IProp::Getvflag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3660)
inline void femap::IProp::Putvflag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271e, VT_VARIANT, &_val);
}

#pragma implementation_key(3661)
inline _variant_t femap::IProp::GetvflagI ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3662)
inline void femap::IProp::PutvflagI ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271f, VT_VARIANT, &_val);
}

#pragma implementation_key(3663)
inline _variant_t femap::IProp::Getvpval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2720, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3664)
inline void femap::IProp::Putvpval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2720, VT_VARIANT, &_val);
}

#pragma implementation_key(3665)
inline _variant_t femap::IProp::GetvExtraMatlID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2721, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3666)
inline void femap::IProp::PutvExtraMatlID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2721, VT_VARIANT, &_val);
}

#pragma implementation_key(3667)
inline int femap::IProp::GetlayupID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3668)
inline void femap::IProp::PutlayupID ( int _val ) {
    _com_dispatch_propput(this, 0x2722, VT_I4, _val);
}

#pragma implementation_key(3669)
inline int femap::IProp::Getcbush ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3670)
inline void femap::IProp::Putcbush ( int _val ) {
    _com_dispatch_propput(this, 0x2723, VT_I4, _val);
}

#pragma implementation_key(3671)
inline int femap::IProp::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3672)
inline void femap::IProp::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3673)
inline int femap::IProp::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3674)
inline void femap::IProp::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3675)
inline int femap::IProp::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3676)
inline void femap::IProp::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IElem wrapper method implementations
//

#pragma implementation_key(3677)
inline int femap::IElem::Getformulation ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3678)
inline void femap::IElem::Putformulation ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3679)
inline int femap::IElem::GetContact ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3680)
inline void femap::IElem::PutContact ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3681)
inline int femap::IElem::GetNode ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3682)
inline void femap::IElem::PutNode ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3683)
inline double femap::IElem::Getorient ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3684)
inline void femap::IElem::Putorient ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(3685)
inline double femap::IElem::Getoffset ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3686)
inline void femap::IElem::Putoffset ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3687)
inline VARIANT_BOOL femap::IElem::Getrelease ( int nRowIndex, int nColIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3688)
inline void femap::IElem::Putrelease ( int nRowIndex, int nColIndex, VARIANT_BOOL _arg3 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x000b", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3689)
inline int femap::IElem::GetconnectTYPE ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3690)
inline void femap::IElem::PutconnectTYPE ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3691)
inline int femap::IElem::GetconnectSEG ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3692)
inline void femap::IElem::PutconnectSEG ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3693)
inline int femap::IElem::GetWarping ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3694)
inline void femap::IElem::PutWarping ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(3695)
inline enum femap::zReturnCode femap::IElem::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3696)
inline enum femap::zReturnCode femap::IElem::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3697)
inline enum femap::zReturnCode femap::IElem::GetNodeList ( int listINDEX, int * nodecount, VARIANT * Node, VARIANT * face, VARIANT * weight, VARIANT * dof ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c", listINDEX, nodecount, Node, face, weight, dof);
    return _result;
}

#pragma implementation_key(3698)
inline enum femap::zReturnCode femap::IElem::PutNodeList ( int listINDEX, int nodecount, const _variant_t & Node, const _variant_t & face, const _variant_t & weight, const _variant_t & dof ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x000c", listINDEX, nodecount, &Node, &face, &weight, &dof);
    return _result;
}

#pragma implementation_key(3699)
inline enum femap::zReturnCode femap::IElem::GetAllArray ( int setID, int * NumElem, VARIANT * entID, VARIANT * propID, VARIANT * elemTYPE, VARIANT * topology, VARIANT * layer, VARIANT * color, VARIANT * formulation, VARIANT * orient, VARIANT * offset, VARIANT * release, VARIANT * orientSET, VARIANT * orientID, VARIANT * Nodes, VARIANT * connectTYPE, VARIANT * connectSEG ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", setID, NumElem, entID, propID, elemTYPE, topology, layer, color, formulation, orient, offset, release, orientSET, orientID, Nodes, connectTYPE, connectSEG);
    return _result;
}

#pragma implementation_key(3700)
inline enum femap::zReturnCode femap::IElem::PutAllArray ( int NumElem, const _variant_t & entID, const _variant_t & propID, const _variant_t & elemTYPE, const _variant_t & topology, const _variant_t & layer, const _variant_t & color, const _variant_t & formulation, const _variant_t & orient, const _variant_t & offset, const _variant_t & release, const _variant_t & orientSET, const _variant_t & orientID, const _variant_t & Nodes, const _variant_t & connectTYPE, const _variant_t & connectSEG ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", NumElem, &entID, &propID, &elemTYPE, &topology, &layer, &color, &formulation, &orient, &offset, &release, &orientSET, &orientID, &Nodes, &connectTYPE, &connectSEG);
    return _result;
}

#pragma implementation_key(3701)
inline femap::IPropPtr femap::IElem::Prop ( ) {
    struct IProp * _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IPropPtr(_result, false);
}

#pragma implementation_key(3702)
inline femap::IMatlPtr femap::IElem::Matl ( ) {
    struct IMatl * _result = 0;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IMatlPtr(_result, false);
}

#pragma implementation_key(3703)
inline enum femap::zReturnCode femap::IElem::GetFaceCentroid ( int nFace, VARIANT * cgXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nFace, cgXYZ);
    return _result;
}

#pragma implementation_key(3704)
inline enum femap::zReturnCode femap::IElem::GetFaceNormal ( int nFace, VARIANT * normalXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nFace, normalXYZ);
    return _result;
}

#pragma implementation_key(3705)
inline enum femap::zReturnCode femap::IElem::GetFaceArea ( int nFace, double * dArea ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nFace, dArea);
    return _result;
}

#pragma implementation_key(3706)
inline enum femap::zReturnCode femap::IElem::ClearNodeList ( int listINDEX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", listINDEX);
    return _result;
}

#pragma implementation_key(3707)
inline enum femap::zReturnCode femap::IElem::GetCentroid ( VARIANT * cgXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", cgXYZ);
    return _result;
}

#pragma implementation_key(3708)
inline enum femap::zReturnCode femap::IElem::GetEdgeNodes ( int nEdge, int * n1, int * n2, int * nmid ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x4003", nEdge, n1, n2, nmid);
    return _result;
}

#pragma implementation_key(3709)
inline enum femap::zReturnCode femap::IElem::GetFaceNodes ( int nFace, VARIANT * Nodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nFace, Nodes);
    return _result;
}

#pragma implementation_key(3710)
inline enum femap::zReturnCode femap::IElem::IsParabolic ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3711)
inline enum femap::zReturnCode femap::IElem::thickness ( double * dAvg, double * dAtC1, double * dAtC2, double * dAtC3, double * dAtC4 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005\x4005\x4005", dAvg, dAtC1, dAtC2, dAtC3, dAtC4);
    return _result;
}

#pragma implementation_key(3712)
inline enum femap::zReturnCode femap::IElem::Area ( double * dAreaA, double * dAreaB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005", dAreaA, dAreaB);
    return _result;
}

#pragma implementation_key(3713)
inline enum femap::zReturnCode femap::IElem::Inertia ( double * dI1A, double * dI2A, double * dI12A, double * dJA, double * dI1B, double * dI2B, double * dI12B, double * dJB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", dI1A, dI2A, dI12A, dJA, dI1B, dI2B, dI12B, dJB);
    return _result;
}

#pragma implementation_key(3714)
inline enum femap::zReturnCode femap::IElem::Length ( double * dLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", dLength);
    return _result;
}

#pragma implementation_key(3715)
inline enum femap::zReturnCode femap::IElem::GetMinMaxEdgeLength ( double * dMinLen, double * dMaxLen ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005", dMinLen, dMaxLen);
    return _result;
}

#pragma implementation_key(3716)
inline enum femap::zReturnCode femap::IElem::SetPlateThickness ( double dAtC1, double dAtC2, double dAtC3, double dAtC4 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005", dAtC1, dAtC2, dAtC3, dAtC4);
    return _result;
}

#pragma implementation_key(3717)
inline enum femap::zReturnCode femap::IElem::GetAllArray2 ( int setID, int * NumElem, VARIANT * entID, VARIANT * Exist, VARIANT * propID, VARIANT * elemTYPE, VARIANT * topology, VARIANT * layer, VARIANT * color, VARIANT * formulation, VARIANT * orient, VARIANT * offset, VARIANT * release, VARIANT * orientSET, VARIANT * orientID, VARIANT * Nodes, VARIANT * connectTYPE, VARIANT * connectSEG ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", setID, NumElem, entID, Exist, propID, elemTYPE, topology, layer, color, formulation, orient, offset, release, orientSET, orientID, Nodes, connectTYPE, connectSEG);
    return _result;
}

#pragma implementation_key(3718)
inline enum femap::zReturnCode femap::IElem::GetSpringOrient ( enum zSpringOrient * enOrient, int * nOrient, double * dVec1, double * dVec2, double * dVec3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4005\x4005\x4005", enOrient, nOrient, dVec1, dVec2, dVec3);
    return _result;
}

#pragma implementation_key(3719)
inline enum femap::zReturnCode femap::IElem::SetSpringOrient ( enum zSpringOrient enOrient, int nOrient, double dVec1, double dVec2, double dVec3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x0005\x0005", enOrient, nOrient, dVec1, dVec2, dVec3);
    return _result;
}

#pragma implementation_key(3720)
inline enum femap::zReturnCode femap::IElem::GetSpringOffset ( enum zSpringOffset * enOffset, double * dVec1, double * dVec2, double * dVec3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4005\x4005\x4005", enOffset, dVec1, dVec2, dVec3);
    return _result;
}

#pragma implementation_key(3721)
inline enum femap::zReturnCode femap::IElem::SetSpringOffset ( enum zSpringOffset enOffset, double dVec1, double dVec2, double dVec3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005", enOffset, dVec1, dVec2, dVec3);
    return _result;
}

#pragma implementation_key(3722)
inline enum femap::zReturnCode femap::IElem::GetAllArray3 ( int setID, int * NumElem, VARIANT * entID, VARIANT * Exist, VARIANT * propID, VARIANT * elemTYPE, VARIANT * topology, VARIANT * layer, VARIANT * color, VARIANT * formulation, VARIANT * orient, VARIANT * offset, VARIANT * release, VARIANT * orientSET, VARIANT * orientID, VARIANT * Nodes, VARIANT * connectTYPE, VARIANT * connectSEG, VARIANT * MaterialOrientType, VARIANT * MaterialCSys, VARIANT * warpingID, VARIANT * SpringLocation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", setID, NumElem, entID, Exist, propID, elemTYPE, topology, layer, color, formulation, orient, offset, release, orientSET, orientID, Nodes, connectTYPE, connectSEG, MaterialOrientType, MaterialCSys, warpingID, SpringLocation);
    return _result;
}

#pragma implementation_key(3723)
inline enum femap::zReturnCode femap::IElem::GetFaceNodes2 ( VARIANT_BOOL bCornerPressureOrder, int nFace, VARIANT * Nodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x400c", bCornerPressureOrder, nFace, Nodes);
    return _result;
}

#pragma implementation_key(3724)
inline enum femap::zReturnCode femap::IElem::GetGeomPropArray ( int setID, int * NumElem, VARIANT * entID, VARIANT * propID, VARIANT * matlID, VARIANT * elemTYPE, VARIANT * topology, VARIANT * vCG, VARIANT * Length, VARIANT * Area, VARIANT * volume ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", setID, NumElem, entID, propID, matlID, elemTYPE, topology, vCG, Length, Area, volume);
    return _result;
}

#pragma implementation_key(3725)
inline enum femap::zReturnCode femap::IElem::ElementHasThickness ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3726)
inline enum femap::zReturnCode femap::IElem::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3727)
inline enum femap::zReturnCode femap::IElem::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3728)
inline enum femap::zReturnCode femap::IElem::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3729)
inline enum femap::zReturnCode femap::IElem::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3730)
inline enum femap::zReturnCode femap::IElem::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3731)
inline enum femap::zReturnCode femap::IElem::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3732)
inline enum femap::zReturnCode femap::IElem::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3733)
inline enum femap::zReturnCode femap::IElem::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3734)
inline enum femap::zReturnCode femap::IElem::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3735)
inline enum femap::zReturnCode femap::IElem::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3736)
inline enum femap::zReturnCode femap::IElem::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3737)
inline enum femap::zReturnCode femap::IElem::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3738)
inline int femap::IElem::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3739)
inline int femap::IElem::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3740)
inline int femap::IElem::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3741)
inline int femap::IElem::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3742)
inline enum femap::zReturnCode femap::IElem::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3743)
inline enum femap::zReturnCode femap::IElem::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3744)
inline enum femap::zReturnCode femap::IElem::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3745)
inline enum femap::zReturnCode femap::IElem::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3746)
inline enum femap::zReturnCode femap::IElem::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3747)
inline int femap::IElem::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3748)
inline enum femap::zReturnCode femap::IElem::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3749)
inline enum femap::zReturnCode femap::IElem::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3750)
inline enum femap::zReturnCode femap::IElem::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3751)
inline int femap::IElem::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3752)
inline enum femap::zReturnCode femap::IElem::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3753)
inline enum femap::zReturnCode femap::IElem::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3754)
inline enum femap::zColor femap::IElem::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3755)
inline void femap::IElem::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(3756)
inline int femap::IElem::GetpropID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3757)
inline void femap::IElem::PutpropID ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3758)
inline enum femap::zElementType femap::IElem::Gettype ( ) {
    enum zElementType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3759)
inline void femap::IElem::Puttype ( enum zElementType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3760)
inline enum femap::zTopologyType femap::IElem::Gettopology ( ) {
    enum zTopologyType _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3761)
inline void femap::IElem::Puttopology ( enum zTopologyType _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(3762)
inline int femap::IElem::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3763)
inline void femap::IElem::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(3764)
inline int femap::IElem::GetorientID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3765)
inline void femap::IElem::PutorientID ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(3766)
inline VARIANT_BOOL femap::IElem::GetMaterialAngleFlag ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3767)
inline void femap::IElem::PutMaterialAngleFlag ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(3768)
inline int femap::IElem::GetgeomID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3769)
inline void femap::IElem::PutgeomID ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(3770)
inline VARIANT_BOOL femap::IElem::GetRigidInterpolate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3771)
inline void femap::IElem::PutRigidInterpolate ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271e, VT_BOOL, _val);
}

#pragma implementation_key(3772)
inline double femap::IElem::GetPlateOffset ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3773)
inline void femap::IElem::PutPlateOffset ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(3774)
inline double femap::IElem::GetMaterialAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3775)
inline void femap::IElem::PutMaterialAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2720, VT_R8, _val);
}

#pragma implementation_key(3776)
inline _variant_t femap::IElem::GetNodes ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2721, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3777)
inline void femap::IElem::PutNodes ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2721, VT_VARIANT, &_val);
}

#pragma implementation_key(3778)
inline _variant_t femap::IElem::Getvformulation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2722, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3779)
inline void femap::IElem::Putvformulation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2722, VT_VARIANT, &_val);
}

#pragma implementation_key(3780)
inline _variant_t femap::IElem::Getvcontact ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2723, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3781)
inline void femap::IElem::Putvcontact ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2723, VT_VARIANT, &_val);
}

#pragma implementation_key(3782)
inline _variant_t femap::IElem::Getvnode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2724, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3783)
inline void femap::IElem::Putvnode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2724, VT_VARIANT, &_val);
}

#pragma implementation_key(3784)
inline _variant_t femap::IElem::Getvorient ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2725, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3785)
inline void femap::IElem::Putvorient ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2725, VT_VARIANT, &_val);
}

#pragma implementation_key(3786)
inline _variant_t femap::IElem::Getvoffset ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2726, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3787)
inline void femap::IElem::Putvoffset ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2726, VT_VARIANT, &_val);
}

#pragma implementation_key(3788)
inline _variant_t femap::IElem::Getvrelease ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2727, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3789)
inline void femap::IElem::Putvrelease ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2727, VT_VARIANT, &_val);
}

#pragma implementation_key(3790)
inline _variant_t femap::IElem::GetvconnectTYPE ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2728, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3791)
inline void femap::IElem::PutvconnectTYPE ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2728, VT_VARIANT, &_val);
}

#pragma implementation_key(3792)
inline _variant_t femap::IElem::GetvconnectSEG ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2729, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3793)
inline void femap::IElem::PutvconnectSEG ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2729, VT_VARIANT, &_val);
}

#pragma implementation_key(3794)
inline double femap::IElem::GetRigidThermalExpansion ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3795)
inline void femap::IElem::PutRigidThermalExpansion ( double _val ) {
    _com_dispatch_propput(this, 0x272a, VT_R8, _val);
}

#pragma implementation_key(3796)
inline double femap::IElem::GetRigidInterpolationFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3797)
inline void femap::IElem::PutRigidInterpolationFactor ( double _val ) {
    _com_dispatch_propput(this, 0x272b, VT_R8, _val);
}

#pragma implementation_key(3798)
inline int femap::IElem::GetMaterialOrientType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3799)
inline void femap::IElem::PutMaterialOrientType ( int _val ) {
    _com_dispatch_propput(this, 0x272c, VT_I4, _val);
}

#pragma implementation_key(3800)
inline int femap::IElem::GetMaterialCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3801)
inline void femap::IElem::PutMaterialCSys ( int _val ) {
    _com_dispatch_propput(this, 0x272d, VT_I4, _val);
}

#pragma implementation_key(3802)
inline VARIANT_BOOL femap::IElem::GetSpringUseLocation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3803)
inline void femap::IElem::PutSpringUseLocation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272e, VT_BOOL, _val);
}

#pragma implementation_key(3804)
inline double femap::IElem::GetSpringLocation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3805)
inline void femap::IElem::PutSpringLocation ( double _val ) {
    _com_dispatch_propput(this, 0x272f, VT_R8, _val);
}

#pragma implementation_key(3806)
inline VARIANT_BOOL femap::IElem::GetSpringUsePropLocation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3807)
inline void femap::IElem::PutSpringUsePropLocation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2730, VT_BOOL, _val);
}

#pragma implementation_key(3808)
inline VARIANT_BOOL femap::IElem::GetSpringUseCID ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3809)
inline void femap::IElem::PutSpringUseCID ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2731, VT_BOOL, _val);
}

#pragma implementation_key(3810)
inline VARIANT_BOOL femap::IElem::GetSpringNoOrient ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3811)
inline void femap::IElem::PutSpringNoOrient ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2732, VT_BOOL, _val);
}

#pragma implementation_key(3812)
inline int femap::IElem::GetSpringCID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3813)
inline void femap::IElem::PutSpringCID ( int _val ) {
    _com_dispatch_propput(this, 0x2733, VT_I4, _val);
}

#pragma implementation_key(3814)
inline VARIANT_BOOL femap::IElem::GetSpringUsePropCID ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3815)
inline void femap::IElem::PutSpringUsePropCID ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2734, VT_BOOL, _val);
}

#pragma implementation_key(3816)
inline _variant_t femap::IElem::Getvwarping ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2735, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3817)
inline void femap::IElem::Putvwarping ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2735, VT_VARIANT, &_val);
}

#pragma implementation_key(3818)
inline int femap::IElem::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3819)
inline void femap::IElem::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3820)
inline int femap::IElem::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3821)
inline void femap::IElem::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3822)
inline int femap::IElem::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3823)
inline void femap::IElem::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IFunction wrapper method implementations
//

#pragma implementation_key(3824)
inline enum femap::zReturnCode femap::IFunction::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3825)
inline enum femap::zReturnCode femap::IFunction::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3826)
inline enum femap::zReturnCode femap::IFunction::GetFunctionList ( int * listcount, VARIANT * x, VARIANT * y ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c", listcount, x, y);
    return _result;
}

#pragma implementation_key(3827)
inline enum femap::zReturnCode femap::IFunction::PutFunctionList ( int listcount, const _variant_t & x, const _variant_t & y ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", listcount, &x, &y);
    return _result;
}

#pragma implementation_key(3828)
inline enum femap::zReturnCode femap::IFunction::GetValue ( int nMethod, double x, double * y ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x4005", nMethod, x, y);
    return _result;
}

#pragma implementation_key(3829)
inline enum femap::zReturnCode femap::IFunction::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3830)
inline enum femap::zReturnCode femap::IFunction::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3831)
inline enum femap::zReturnCode femap::IFunction::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3832)
inline enum femap::zReturnCode femap::IFunction::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3833)
inline enum femap::zReturnCode femap::IFunction::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3834)
inline enum femap::zReturnCode femap::IFunction::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3835)
inline enum femap::zReturnCode femap::IFunction::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3836)
inline enum femap::zReturnCode femap::IFunction::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3837)
inline enum femap::zReturnCode femap::IFunction::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3838)
inline enum femap::zReturnCode femap::IFunction::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3839)
inline enum femap::zReturnCode femap::IFunction::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3840)
inline enum femap::zReturnCode femap::IFunction::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3841)
inline enum femap::zReturnCode femap::IFunction::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3842)
inline enum femap::zReturnCode femap::IFunction::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3843)
inline int femap::IFunction::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3844)
inline int femap::IFunction::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3845)
inline int femap::IFunction::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3846)
inline int femap::IFunction::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3847)
inline enum femap::zReturnCode femap::IFunction::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3848)
inline enum femap::zReturnCode femap::IFunction::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3849)
inline enum femap::zReturnCode femap::IFunction::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3850)
inline int femap::IFunction::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3851)
inline enum femap::zReturnCode femap::IFunction::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3852)
inline enum femap::zReturnCode femap::IFunction::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3853)
inline enum femap::zReturnCode femap::IFunction::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3854)
inline int femap::IFunction::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3855)
inline enum femap::zReturnCode femap::IFunction::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3856)
inline enum femap::zReturnCode femap::IFunction::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3857)
inline _bstr_t femap::IFunction::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3858)
inline void femap::IFunction::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3859)
inline enum femap::zFunctionType femap::IFunction::Gettype ( ) {
    enum zFunctionType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3860)
inline void femap::IFunction::Puttype ( enum zFunctionType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3861)
inline int femap::IFunction::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3862)
inline void femap::IFunction::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3863)
inline int femap::IFunction::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3864)
inline void femap::IFunction::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3865)
inline int femap::IFunction::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3866)
inline void femap::IFunction::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGroup wrapper method implementations
//

#pragma implementation_key(3867)
inline VARIANT_BOOL femap::IGroup::GetPlaneClipNeg ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3868)
inline void femap::IGroup::PutPlaneClipNeg ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3869)
inline VARIANT_BOOL femap::IGroup::GetPlaneClipOn ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(3870)
inline void femap::IGroup::PutPlaneClipOn ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(3871)
inline double femap::IGroup::GetPlaneClipBase ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3872)
inline void femap::IGroup::PutPlaneClipBase ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3873)
inline double femap::IGroup::GetPlaneClipDir ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(3874)
inline void femap::IGroup::PutPlaneClipDir ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(3875)
inline enum femap::zReturnCode femap::IGroup::RangeReset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3876)
inline enum femap::zReturnCode femap::IGroup::RangeGetAll ( enum zGroupDefinitionType rangeType, int * rangeCount, VARIANT * startID, VARIANT * stopID, VARIANT * increment, VARIANT * inClude ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c", rangeType, rangeCount, startID, stopID, increment, inClude);
    return _result;
}

#pragma implementation_key(3877)
inline enum femap::zReturnCode femap::IGroup::RangeNext ( enum zGroupDefinitionType rangeType, int * startID, int * stopID, int * increment, int * inClude ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x4003\x4003", rangeType, startID, stopID, increment, inClude);
    return _result;
}

#pragma implementation_key(3878)
inline enum femap::zReturnCode femap::IGroup::RangeAdd ( enum zGroupDefinitionType rangeType, int startID, int stopID, int increment, int inClude ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003", rangeType, startID, stopID, increment, inClude);
    return _result;
}

#pragma implementation_key(3879)
inline enum femap::zReturnCode femap::IGroup::RangeDelete ( enum zGroupDefinitionType rangeType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", rangeType);
    return _result;
}

#pragma implementation_key(3880)
inline enum femap::zReturnCode femap::IGroup::RangeDeleteAll ( enum zGroupDefinitionType rangeType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", rangeType);
    return _result;
}

#pragma implementation_key(3881)
inline enum femap::zReturnCode femap::IGroup::SetAdd ( enum zDataType entityTYPE, int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, setID);
    return _result;
}

#pragma implementation_key(3882)
inline femap::ISetPtr femap::IGroup::List ( enum zGroupDataType listTYPE ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", listTYPE);
    return ISetPtr(_result, false);
}

#pragma implementation_key(3883)
inline enum femap::zReturnCode femap::IGroup::SelectModel ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3884)
inline enum femap::zReturnCode femap::IGroup::SelectMesh ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(3885)
inline enum femap::zReturnCode femap::IGroup::SelectContact ( int contactSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", contactSET);
    return _result;
}

#pragma implementation_key(3886)
inline enum femap::zReturnCode femap::IGroup::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3887)
inline enum femap::zReturnCode femap::IGroup::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(3888)
inline enum femap::zReturnCode femap::IGroup::SetAddOpt ( enum zDataType entityTYPE, int setID, int addOpt ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, setID, addOpt);
    return _result;
}

#pragma implementation_key(3889)
inline femap::ISetPtr femap::IGroup::Range ( enum zGroupDefinitionType rangeType ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", rangeType);
    return ISetPtr(_result, false);
}

#pragma implementation_key(3890)
inline enum femap::zReturnCode femap::IGroup::SelectAllOnLayer ( int startLayer, int endLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", startLayer, endLayer);
    return _result;
}

#pragma implementation_key(3891)
inline enum femap::zReturnCode femap::IGroup::Add ( enum zDataType entityTYPE, int nEntityID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, nEntityID);
    return _result;
}

#pragma implementation_key(3892)
inline femap::ISetPtr femap::IGroup::ReferencedGroups ( ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ISetPtr(_result, false);
}

#pragma implementation_key(3893)
inline enum femap::zReturnCode femap::IGroup::GetList ( enum zGroupDataType listTYPE, int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", listTYPE, setID);
    return _result;
}

#pragma implementation_key(3894)
inline enum femap::zReturnCode femap::IGroup::HasList ( enum zGroupDataType listTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", listTYPE);
    return _result;
}

#pragma implementation_key(3895)
inline int femap::IGroup::CountList ( enum zGroupDataType listTYPE ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", listTYPE);
    return _result;
}

#pragma implementation_key(3896)
inline enum femap::zReturnCode femap::IGroup::Add2 ( enum zGroupDataType entityTYPE, int nEntityID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, nEntityID);
    return _result;
}

#pragma implementation_key(3897)
inline enum femap::zReturnCode femap::IGroup::SetAdd2 ( enum zGroupDataType entityTYPE, int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, setID);
    return _result;
}

#pragma implementation_key(3898)
inline enum femap::zReturnCode femap::IGroup::SetAddOpt2 ( enum zGroupDataType entityTYPE, int setID, int addOpt ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, setID, addOpt);
    return _result;
}

#pragma implementation_key(3899)
inline enum femap::zReturnCode femap::IGroup::AddRelated ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3900)
inline enum femap::zReturnCode femap::IGroup::addOpt ( enum zDataType entityTYPE, int nEntityID, int addOpt ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, nEntityID, addOpt);
    return _result;
}

#pragma implementation_key(3901)
inline enum femap::zReturnCode femap::IGroup::AddOpt2 ( enum zGroupDataType entityTYPE, int nEntityID, int addOpt ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, nEntityID, addOpt);
    return _result;
}

#pragma implementation_key(3902)
inline enum femap::zReturnCode femap::IGroup::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3903)
inline enum femap::zReturnCode femap::IGroup::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3904)
inline enum femap::zReturnCode femap::IGroup::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3905)
inline enum femap::zReturnCode femap::IGroup::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3906)
inline enum femap::zReturnCode femap::IGroup::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3907)
inline enum femap::zReturnCode femap::IGroup::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3908)
inline enum femap::zReturnCode femap::IGroup::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3909)
inline enum femap::zReturnCode femap::IGroup::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3910)
inline enum femap::zReturnCode femap::IGroup::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3911)
inline enum femap::zReturnCode femap::IGroup::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3912)
inline enum femap::zReturnCode femap::IGroup::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3913)
inline enum femap::zReturnCode femap::IGroup::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3914)
inline int femap::IGroup::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3915)
inline int femap::IGroup::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3916)
inline int femap::IGroup::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3917)
inline int femap::IGroup::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3918)
inline enum femap::zReturnCode femap::IGroup::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3919)
inline enum femap::zReturnCode femap::IGroup::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3920)
inline enum femap::zReturnCode femap::IGroup::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3921)
inline enum femap::zReturnCode femap::IGroup::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3922)
inline enum femap::zReturnCode femap::IGroup::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3923)
inline int femap::IGroup::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(3924)
inline enum femap::zReturnCode femap::IGroup::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3925)
inline enum femap::zReturnCode femap::IGroup::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3926)
inline enum femap::zReturnCode femap::IGroup::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3927)
inline int femap::IGroup::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3928)
inline enum femap::zReturnCode femap::IGroup::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(3929)
inline enum femap::zReturnCode femap::IGroup::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(3930)
inline int femap::IGroup::GetLayerMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3931)
inline void femap::IGroup::PutLayerMode ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(3932)
inline int femap::IGroup::GetLayerMin ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3933)
inline void femap::IGroup::PutLayerMin ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(3934)
inline int femap::IGroup::GetLayerMax ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3935)
inline void femap::IGroup::PutLayerMax ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(3936)
inline int femap::IGroup::GetCoordClipOn ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3937)
inline void femap::IGroup::PutCoordClipOn ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(3938)
inline int femap::IGroup::GetCoordClipMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3939)
inline void femap::IGroup::PutCoordClipMode ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(3940)
inline double femap::IGroup::GetCoordClipMin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3941)
inline void femap::IGroup::PutCoordClipMin ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(3942)
inline double femap::IGroup::GetCoordClipMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(3943)
inline void femap::IGroup::PutCoordClipMax ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(3944)
inline int femap::IGroup::GetCoordClipCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3945)
inline void femap::IGroup::PutCoordClipCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(3946)
inline int femap::IGroup::GetCoordClipDir ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3947)
inline void femap::IGroup::PutCoordClipDir ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(3948)
inline int femap::IGroup::GetPlaneClipMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3949)
inline void femap::IGroup::PutPlaneClipMode ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(3950)
inline VARIANT_BOOL femap::IGroup::GetPlaneClipInside ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3951)
inline void femap::IGroup::PutPlaneClipInside ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(3952)
inline VARIANT_BOOL femap::IGroup::GetNeedEval ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3953)
inline void femap::IGroup::PutNeedEval ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271f, VT_BOOL, _val);
}

#pragma implementation_key(3954)
inline VARIANT_BOOL femap::IGroup::GetCondense ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3955)
inline void femap::IGroup::PutCondense ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2720, VT_BOOL, _val);
}

#pragma implementation_key(3956)
inline VARIANT_BOOL femap::IGroup::GetEvalAlways ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3957)
inline void femap::IGroup::PutEvalAlways ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2721, VT_BOOL, _val);
}

#pragma implementation_key(3958)
inline _bstr_t femap::IGroup::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(3959)
inline void femap::IGroup::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2722, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(3960)
inline VARIANT_BOOL femap::IGroup::Getrenumber ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(3961)
inline void femap::IGroup::Putrenumber ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2723, VT_BOOL, _val);
}

#pragma implementation_key(3962)
inline _variant_t femap::IGroup::GetvPlaneClipNeg ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2724, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3963)
inline void femap::IGroup::PutvPlaneClipNeg ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2724, VT_VARIANT, &_val);
}

#pragma implementation_key(3964)
inline _variant_t femap::IGroup::GetvPlaneClipOn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2725, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3965)
inline void femap::IGroup::PutvPlaneClipOn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2725, VT_VARIANT, &_val);
}

#pragma implementation_key(3966)
inline _variant_t femap::IGroup::GetvPlaneClipBase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2726, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3967)
inline void femap::IGroup::PutvPlaneClipBase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2726, VT_VARIANT, &_val);
}

#pragma implementation_key(3968)
inline _variant_t femap::IGroup::GetvPlaneClipDir ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2727, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(3969)
inline void femap::IGroup::PutvPlaneClipDir ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2727, VT_VARIANT, &_val);
}

#pragma implementation_key(3970)
inline int femap::IGroup::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3971)
inline void femap::IGroup::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(3972)
inline int femap::IGroup::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3973)
inline void femap::IGroup::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(3974)
inline int femap::IGroup::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(3975)
inline void femap::IGroup::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILayer wrapper method implementations
//

#pragma implementation_key(3976)
inline enum femap::zReturnCode femap::ILayer::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3977)
inline enum femap::zReturnCode femap::ILayer::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3978)
inline enum femap::zReturnCode femap::ILayer::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3979)
inline enum femap::zReturnCode femap::ILayer::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3980)
inline enum femap::zReturnCode femap::ILayer::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3981)
inline enum femap::zReturnCode femap::ILayer::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3982)
inline enum femap::zReturnCode femap::ILayer::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3983)
inline enum femap::zReturnCode femap::ILayer::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3984)
inline enum femap::zReturnCode femap::ILayer::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3985)
inline enum femap::zReturnCode femap::ILayer::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3986)
inline enum femap::zReturnCode femap::ILayer::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3987)
inline enum femap::zReturnCode femap::ILayer::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3988)
inline enum femap::zReturnCode femap::ILayer::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3989)
inline enum femap::zReturnCode femap::ILayer::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3990)
inline int femap::ILayer::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3991)
inline int femap::ILayer::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3992)
inline int femap::ILayer::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3993)
inline int femap::ILayer::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3994)
inline enum femap::zReturnCode femap::ILayer::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3995)
inline enum femap::zReturnCode femap::ILayer::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(3996)
inline enum femap::zReturnCode femap::ILayer::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(3997)
inline enum femap::zReturnCode femap::ILayer::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3998)
inline enum femap::zReturnCode femap::ILayer::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(3999)
inline int femap::ILayer::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4000)
inline enum femap::zReturnCode femap::ILayer::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4001)
inline enum femap::zReturnCode femap::ILayer::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4002)
inline enum femap::zReturnCode femap::ILayer::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4003)
inline int femap::ILayer::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4004)
inline enum femap::zReturnCode femap::ILayer::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4005)
inline enum femap::zReturnCode femap::ILayer::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4006)
inline _bstr_t femap::ILayer::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4007)
inline void femap::ILayer::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4008)
inline enum femap::zColor femap::ILayer::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4009)
inline void femap::ILayer::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(4010)
inline int femap::ILayer::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4011)
inline void femap::ILayer::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4012)
inline int femap::ILayer::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4013)
inline void femap::ILayer::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4014)
inline int femap::ILayer::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4015)
inline void femap::ILayer::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILoadETemp wrapper method implementations
//

#pragma implementation_key(4016)
inline enum femap::zReturnCode femap::ILoadETemp::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4017)
inline enum femap::zReturnCode femap::ILoadETemp::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4018)
inline enum femap::zReturnCode femap::ILoadETemp::AddArray ( int Count, VARIANT_BOOL doValues, VARIANT_BOOL doFunctions, const _variant_t & elemID, const _variant_t & values, const _variant_t & FunctionID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000c\x000c\x000c", Count, doValues, doFunctions, &elemID, &values, &FunctionID);
    return _result;
}

#pragma implementation_key(4019)
inline enum femap::zReturnCode femap::ILoadETemp::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4020)
inline enum femap::zReturnCode femap::ILoadETemp::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4021)
inline enum femap::zReturnCode femap::ILoadETemp::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4022)
inline enum femap::zReturnCode femap::ILoadETemp::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4023)
inline enum femap::zReturnCode femap::ILoadETemp::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4024)
inline enum femap::zReturnCode femap::ILoadETemp::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4025)
inline enum femap::zReturnCode femap::ILoadETemp::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4026)
inline enum femap::zReturnCode femap::ILoadETemp::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4027)
inline enum femap::zReturnCode femap::ILoadETemp::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4028)
inline enum femap::zReturnCode femap::ILoadETemp::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4029)
inline enum femap::zReturnCode femap::ILoadETemp::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4030)
inline enum femap::zReturnCode femap::ILoadETemp::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4031)
inline int femap::ILoadETemp::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4032)
inline int femap::ILoadETemp::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4033)
inline int femap::ILoadETemp::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4034)
inline int femap::ILoadETemp::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4035)
inline enum femap::zReturnCode femap::ILoadETemp::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4036)
inline enum femap::zReturnCode femap::ILoadETemp::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4037)
inline enum femap::zReturnCode femap::ILoadETemp::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4038)
inline enum femap::zReturnCode femap::ILoadETemp::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4039)
inline enum femap::zReturnCode femap::ILoadETemp::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4040)
inline int femap::ILoadETemp::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4041)
inline enum femap::zReturnCode femap::ILoadETemp::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4042)
inline enum femap::zReturnCode femap::ILoadETemp::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4043)
inline enum femap::zReturnCode femap::ILoadETemp::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4044)
inline int femap::ILoadETemp::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4045)
inline enum femap::zReturnCode femap::ILoadETemp::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4046)
inline enum femap::zReturnCode femap::ILoadETemp::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4047)
inline double femap::ILoadETemp::Gettemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4048)
inline void femap::ILoadETemp::Puttemp ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(4049)
inline double femap::ILoadETemp::Getphase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4050)
inline void femap::ILoadETemp::Putphase ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(4051)
inline int femap::ILoadETemp::GetFunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4052)
inline void femap::ILoadETemp::PutFunction ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(4053)
inline int femap::ILoadETemp::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4054)
inline void femap::ILoadETemp::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(4055)
inline enum femap::zColor femap::ILoadETemp::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4056)
inline void femap::ILoadETemp::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(4057)
inline VARIANT_BOOL femap::ILoadETemp::Getexpanded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4058)
inline void femap::ILoadETemp::Putexpanded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(4059)
inline int femap::ILoadETemp::GetLoadDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4060)
inline void femap::ILoadETemp::PutLoadDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(4061)
inline double femap::ILoadETemp::Getgradient ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4062)
inline void femap::ILoadETemp::Putgradient ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(4063)
inline int femap::ILoadETemp::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4064)
inline void femap::ILoadETemp::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4065)
inline int femap::ILoadETemp::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4066)
inline void femap::ILoadETemp::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4067)
inline int femap::ILoadETemp::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4068)
inline void femap::ILoadETemp::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILoadGeom wrapper method implementations
//

#pragma implementation_key(4069)
inline double femap::ILoadGeom::Getdirbase ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4070)
inline void femap::ILoadGeom::Putdirbase ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4071)
inline double femap::ILoadGeom::Getdirection ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4072)
inline void femap::ILoadGeom::Putdirection ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4073)
inline double femap::ILoadGeom::Getvarvalue ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4074)
inline void femap::ILoadGeom::Putvarvalue ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4075)
inline int femap::ILoadGeom::GetaddlID ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4076)
inline void femap::ILoadGeom::PutaddlID ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4077)
inline int femap::ILoadGeom::Getdof ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4078)
inline void femap::ILoadGeom::Putdof ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4079)
inline VARIANT_BOOL femap::ILoadGeom::Getflag ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4080)
inline void femap::ILoadGeom::Putflag ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(4081)
inline double femap::ILoadGeom::Getload ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4082)
inline void femap::ILoadGeom::Putload ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4083)
inline double femap::ILoadGeom::Getfluxdir ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4084)
inline void femap::ILoadGeom::Putfluxdir ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4085)
inline int femap::ILoadGeom::GetFunction ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4086)
inline void femap::ILoadGeom::PutFunction ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4087)
inline double femap::ILoadGeom::Getvarlocate ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(4088)
inline void femap::ILoadGeom::Putvarlocate ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(4089)
inline int femap::ILoadGeom::GetDataSurface ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4090)
inline void femap::ILoadGeom::PutDataSurface ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4091)
inline enum femap::zReturnCode femap::ILoadGeom::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4092)
inline enum femap::zReturnCode femap::ILoadGeom::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4093)
inline enum femap::zReturnCode femap::ILoadGeom::GetSearch ( enum zLoadType loadType, int geomID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", loadType, geomID);
    return _result;
}

#pragma implementation_key(4094)
inline enum femap::zReturnCode femap::ILoadGeom::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4095)
inline enum femap::zReturnCode femap::ILoadGeom::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4096)
inline enum femap::zReturnCode femap::ILoadGeom::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4097)
inline enum femap::zReturnCode femap::ILoadGeom::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4098)
inline enum femap::zReturnCode femap::ILoadGeom::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4099)
inline enum femap::zReturnCode femap::ILoadGeom::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4100)
inline enum femap::zReturnCode femap::ILoadGeom::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4101)
inline enum femap::zReturnCode femap::ILoadGeom::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4102)
inline enum femap::zReturnCode femap::ILoadGeom::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4103)
inline enum femap::zReturnCode femap::ILoadGeom::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4104)
inline enum femap::zReturnCode femap::ILoadGeom::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4105)
inline enum femap::zReturnCode femap::ILoadGeom::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4106)
inline int femap::ILoadGeom::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4107)
inline int femap::ILoadGeom::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4108)
inline int femap::ILoadGeom::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4109)
inline int femap::ILoadGeom::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4110)
inline enum femap::zReturnCode femap::ILoadGeom::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4111)
inline enum femap::zReturnCode femap::ILoadGeom::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4112)
inline enum femap::zReturnCode femap::ILoadGeom::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4113)
inline enum femap::zReturnCode femap::ILoadGeom::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4114)
inline enum femap::zReturnCode femap::ILoadGeom::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4115)
inline int femap::ILoadGeom::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4116)
inline enum femap::zReturnCode femap::ILoadGeom::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4117)
inline enum femap::zReturnCode femap::ILoadGeom::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4118)
inline enum femap::zReturnCode femap::ILoadGeom::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4119)
inline int femap::ILoadGeom::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4120)
inline enum femap::zReturnCode femap::ILoadGeom::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4121)
inline enum femap::zReturnCode femap::ILoadGeom::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4122)
inline enum femap::zLoadDirection femap::ILoadGeom::Getdirmode ( ) {
    enum zLoadDirection _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4123)
inline void femap::ILoadGeom::Putdirmode ( enum zLoadDirection _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(4124)
inline int femap::ILoadGeom::GetdirID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4125)
inline void femap::ILoadGeom::PutdirID ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(4126)
inline enum femap::zLoadVariation femap::ILoadGeom::Getvariation ( ) {
    enum zLoadVariation _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4127)
inline void femap::ILoadGeom::Putvariation ( enum zLoadVariation _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(4128)
inline _bstr_t femap::ILoadGeom::Getvarname ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4129)
inline void femap::ILoadGeom::Putvarname ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4130)
inline _bstr_t femap::ILoadGeom::Getvareqn ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4131)
inline void femap::ILoadGeom::Putvareqn ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4132)
inline int femap::ILoadGeom::Getvarfunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4133)
inline void femap::ILoadGeom::Putvarfunction ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(4134)
inline VARIANT_BOOL femap::ILoadGeom::Getmidside ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4135)
inline void femap::ILoadGeom::Putmidside ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(4136)
inline int femap::ILoadGeom::GetgeomID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4137)
inline void femap::ILoadGeom::PutgeomID ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(4138)
inline int femap::ILoadGeom::GetCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4139)
inline void femap::ILoadGeom::PutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(4140)
inline enum femap::zLoadType femap::ILoadGeom::Gettype ( ) {
    enum zLoadType _result;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4141)
inline void femap::ILoadGeom::Puttype ( enum zLoadType _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(4142)
inline int femap::ILoadGeom::Getsubtype ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4143)
inline void femap::ILoadGeom::Putsubtype ( int _val ) {
    _com_dispatch_propput(this, 0x2721, VT_I4, _val);
}

#pragma implementation_key(4144)
inline int femap::ILoadGeom::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4145)
inline void femap::ILoadGeom::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2722, VT_I4, _val);
}

#pragma implementation_key(4146)
inline int femap::ILoadGeom::GetLoadDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4147)
inline void femap::ILoadGeom::PutLoadDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2724, VT_I4, _val);
}

#pragma implementation_key(4148)
inline enum femap::zColor femap::ILoadGeom::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2725, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4149)
inline void femap::ILoadGeom::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2725, VT_I4, _val);
}

#pragma implementation_key(4150)
inline VARIANT_BOOL femap::ILoadGeom::Getexpanded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4151)
inline void femap::ILoadGeom::Putexpanded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2726, VT_BOOL, _val);
}

#pragma implementation_key(4152)
inline int femap::ILoadGeom::GetFaceNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4153)
inline void femap::ILoadGeom::PutFaceNumber ( int _val ) {
    _com_dispatch_propput(this, 0x2727, VT_I4, _val);
}

#pragma implementation_key(4154)
inline VARIANT_BOOL femap::ILoadGeom::GetXOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4155)
inline void femap::ILoadGeom::PutXOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2728, VT_BOOL, _val);
}

#pragma implementation_key(4156)
inline VARIANT_BOOL femap::ILoadGeom::GetYOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4157)
inline void femap::ILoadGeom::PutYOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2729, VT_BOOL, _val);
}

#pragma implementation_key(4158)
inline VARIANT_BOOL femap::ILoadGeom::GetZOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4159)
inline void femap::ILoadGeom::PutZOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272a, VT_BOOL, _val);
}

#pragma implementation_key(4160)
inline double femap::ILoadGeom::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4161)
inline void femap::ILoadGeom::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x272b, VT_R8, _val);
}

#pragma implementation_key(4162)
inline double femap::ILoadGeom::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4163)
inline void femap::ILoadGeom::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x272c, VT_R8, _val);
}

#pragma implementation_key(4164)
inline double femap::ILoadGeom::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4165)
inline void femap::ILoadGeom::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x272d, VT_R8, _val);
}

#pragma implementation_key(4166)
inline double femap::ILoadGeom::Gettemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4167)
inline void femap::ILoadGeom::Puttemp ( double _val ) {
    _com_dispatch_propput(this, 0x272e, VT_R8, _val);
}

#pragma implementation_key(4168)
inline double femap::ILoadGeom::Getphase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4169)
inline void femap::ILoadGeom::Putphase ( double _val ) {
    _com_dispatch_propput(this, 0x272f, VT_R8, _val);
}

#pragma implementation_key(4170)
inline int femap::ILoadGeom::GetLoadFunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4171)
inline void femap::ILoadGeom::PutLoadFunction ( int _val ) {
    _com_dispatch_propput(this, 0x2730, VT_I4, _val);
}

#pragma implementation_key(4172)
inline int femap::ILoadGeom::GetTempVsTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4173)
inline void femap::ILoadGeom::PutTempVsTime ( int _val ) {
    _com_dispatch_propput(this, 0x2731, VT_I4, _val);
}

#pragma implementation_key(4174)
inline int femap::ILoadGeom::GetPhaseVsFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4175)
inline void femap::ILoadGeom::PutPhaseVsFreq ( int _val ) {
    _com_dispatch_propput(this, 0x2732, VT_I4, _val);
}

#pragma implementation_key(4176)
inline double femap::ILoadGeom::GetLoadValue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4177)
inline void femap::ILoadGeom::PutLoadValue ( double _val ) {
    _com_dispatch_propput(this, 0x2733, VT_R8, _val);
}

#pragma implementation_key(4178)
inline VARIANT_BOOL femap::ILoadGeom::GetCornerPressure ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4179)
inline void femap::ILoadGeom::PutCornerPressure ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2734, VT_BOOL, _val);
}

#pragma implementation_key(4180)
inline double femap::ILoadGeom::GetPressure ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4181)
inline void femap::ILoadGeom::PutPressure ( double _val ) {
    _com_dispatch_propput(this, 0x2735, VT_R8, _val);
}

#pragma implementation_key(4182)
inline double femap::ILoadGeom::GetHeatGen ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4183)
inline void femap::ILoadGeom::PutHeatGen ( double _val ) {
    _com_dispatch_propput(this, 0x2736, VT_R8, _val);
}

#pragma implementation_key(4184)
inline double femap::ILoadGeom::GetHeatFlux ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4185)
inline void femap::ILoadGeom::PutHeatFlux ( double _val ) {
    _com_dispatch_propput(this, 0x2737, VT_R8, _val);
}

#pragma implementation_key(4186)
inline double femap::ILoadGeom::GetAbsorptivity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4187)
inline void femap::ILoadGeom::PutAbsorptivity ( double _val ) {
    _com_dispatch_propput(this, 0x2738, VT_R8, _val);
}

#pragma implementation_key(4188)
inline int femap::ILoadGeom::GetAbsorptivityVsTemp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4189)
inline void femap::ILoadGeom::PutAbsorptivityVsTemp ( int _val ) {
    _com_dispatch_propput(this, 0x2739, VT_I4, _val);
}

#pragma implementation_key(4190)
inline VARIANT_BOOL femap::ILoadGeom::GetVectorFlux ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4191)
inline void femap::ILoadGeom::PutVectorFlux ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273a, VT_BOOL, _val);
}

#pragma implementation_key(4192)
inline double femap::ILoadGeom::GetFluidValue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4193)
inline void femap::ILoadGeom::PutFluidValue ( double _val ) {
    _com_dispatch_propput(this, 0x273b, VT_R8, _val);
}

#pragma implementation_key(4194)
inline VARIANT_BOOL femap::ILoadGeom::GetPeriodicMaster ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4195)
inline void femap::ILoadGeom::PutPeriodicMaster ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273c, VT_BOOL, _val);
}

#pragma implementation_key(4196)
inline VARIANT_BOOL femap::ILoadGeom::GetPeriodicDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4197)
inline void femap::ILoadGeom::PutPeriodicDirection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273d, VT_BOOL, _val);
}

#pragma implementation_key(4198)
inline double femap::ILoadGeom::GetConvectionCoeff ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4199)
inline void femap::ILoadGeom::PutConvectionCoeff ( double _val ) {
    _com_dispatch_propput(this, 0x273e, VT_R8, _val);
}

#pragma implementation_key(4200)
inline VARIANT_BOOL femap::ILoadGeom::GetForcedConvection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4201)
inline void femap::ILoadGeom::PutForcedConvection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273f, VT_BOOL, _val);
}

#pragma implementation_key(4202)
inline VARIANT_BOOL femap::ILoadGeom::GetFCDisableAdvection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4203)
inline void femap::ILoadGeom::PutFCDisableAdvection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2740, VT_BOOL, _val);
}

#pragma implementation_key(4204)
inline VARIANT_BOOL femap::ILoadGeom::GetFCDisableConvection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4205)
inline void femap::ILoadGeom::PutFCDisableConvection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2741, VT_BOOL, _val);
}

#pragma implementation_key(4206)
inline double femap::ILoadGeom::GetFlowRate ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4207)
inline void femap::ILoadGeom::PutFlowRate ( double _val ) {
    _com_dispatch_propput(this, 0x2742, VT_R8, _val);
}

#pragma implementation_key(4208)
inline double femap::ILoadGeom::GetFlowDiameter ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2743, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4209)
inline void femap::ILoadGeom::PutFlowDiameter ( double _val ) {
    _com_dispatch_propput(this, 0x2743, VT_R8, _val);
}

#pragma implementation_key(4210)
inline double femap::ILoadGeom::GetFlowAreaFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4211)
inline void femap::ILoadGeom::PutFlowAreaFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2744, VT_R8, _val);
}

#pragma implementation_key(4212)
inline double femap::ILoadGeom::GetEmissivity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4213)
inline void femap::ILoadGeom::PutEmissivity ( double _val ) {
    _com_dispatch_propput(this, 0x2745, VT_R8, _val);
}

#pragma implementation_key(4214)
inline int femap::ILoadGeom::GetEmissivityFunc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4215)
inline void femap::ILoadGeom::PutEmissivityFunc ( int _val ) {
    _com_dispatch_propput(this, 0x2746, VT_I4, _val);
}

#pragma implementation_key(4216)
inline double femap::ILoadGeom::GetViewFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4217)
inline void femap::ILoadGeom::PutViewFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2747, VT_R8, _val);
}

#pragma implementation_key(4218)
inline int femap::ILoadGeom::GetViewFactorVsTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4219)
inline void femap::ILoadGeom::PutViewFactorVsTime ( int _val ) {
    _com_dispatch_propput(this, 0x2748, VT_I4, _val);
}

#pragma implementation_key(4220)
inline VARIANT_BOOL femap::ILoadGeom::GetEnclosureRadiation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4221)
inline void femap::ILoadGeom::PutEnclosureRadiation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2749, VT_BOOL, _val);
}

#pragma implementation_key(4222)
inline VARIANT_BOOL femap::ILoadGeom::GetCanShade ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4223)
inline void femap::ILoadGeom::PutCanShade ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274a, VT_BOOL, _val);
}

#pragma implementation_key(4224)
inline VARIANT_BOOL femap::ILoadGeom::GetCanBeShaded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4225)
inline void femap::ILoadGeom::PutCanBeShaded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274b, VT_BOOL, _val);
}

#pragma implementation_key(4226)
inline int femap::ILoadGeom::GetCavityNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4227)
inline void femap::ILoadGeom::PutCavityNumber ( int _val ) {
    _com_dispatch_propput(this, 0x274c, VT_I4, _val);
}

#pragma implementation_key(4228)
inline _variant_t femap::ILoadGeom::Getvdirbase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4229)
inline void femap::ILoadGeom::Putvdirbase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274e, VT_VARIANT, &_val);
}

#pragma implementation_key(4230)
inline _variant_t femap::ILoadGeom::Getvdirection ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4231)
inline void femap::ILoadGeom::Putvdirection ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274f, VT_VARIANT, &_val);
}

#pragma implementation_key(4232)
inline _variant_t femap::ILoadGeom::Getvvarvalue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2750, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4233)
inline void femap::ILoadGeom::Putvvarvalue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2750, VT_VARIANT, &_val);
}

#pragma implementation_key(4234)
inline _variant_t femap::ILoadGeom::GetvaddlID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2751, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4235)
inline void femap::ILoadGeom::PutvaddlID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2751, VT_VARIANT, &_val);
}

#pragma implementation_key(4236)
inline _variant_t femap::ILoadGeom::Getvdof ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2752, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4237)
inline void femap::ILoadGeom::Putvdof ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2752, VT_VARIANT, &_val);
}

#pragma implementation_key(4238)
inline _variant_t femap::ILoadGeom::Getvflag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2753, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4239)
inline void femap::ILoadGeom::Putvflag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2753, VT_VARIANT, &_val);
}

#pragma implementation_key(4240)
inline _variant_t femap::ILoadGeom::Getvload ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2754, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4241)
inline void femap::ILoadGeom::Putvload ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2754, VT_VARIANT, &_val);
}

#pragma implementation_key(4242)
inline _variant_t femap::ILoadGeom::Getvfluxdir ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2755, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4243)
inline void femap::ILoadGeom::Putvfluxdir ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2755, VT_VARIANT, &_val);
}

#pragma implementation_key(4244)
inline _variant_t femap::ILoadGeom::Getvfunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2756, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4245)
inline void femap::ILoadGeom::Putvfunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2756, VT_VARIANT, &_val);
}

#pragma implementation_key(4246)
inline _variant_t femap::ILoadGeom::Getvvarlocate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2757, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4247)
inline void femap::ILoadGeom::Putvvarlocate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2757, VT_VARIANT, &_val);
}

#pragma implementation_key(4248)
inline enum femap::zDataType femap::ILoadGeom::GetgeomTYPE ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2758, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4249)
inline void femap::ILoadGeom::PutgeomTYPE ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2758, VT_I4, _val);
}

#pragma implementation_key(4250)
inline _variant_t femap::ILoadGeom::GetvDataSurface ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2759, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4251)
inline void femap::ILoadGeom::PutvDataSurface ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2759, VT_VARIANT, &_val);
}

#pragma implementation_key(4252)
inline int femap::ILoadGeom::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4253)
inline void femap::ILoadGeom::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4254)
inline int femap::ILoadGeom::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4255)
inline void femap::ILoadGeom::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4256)
inline int femap::ILoadGeom::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4257)
inline void femap::ILoadGeom::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILoadMesh wrapper method implementations
//

#pragma implementation_key(4258)
inline int femap::ILoadMesh::GetaddlID ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4259)
inline void femap::ILoadMesh::PutaddlID ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4260)
inline int femap::ILoadMesh::Getdof ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4261)
inline void femap::ILoadMesh::Putdof ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4262)
inline VARIANT_BOOL femap::ILoadMesh::Getflag ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4263)
inline void femap::ILoadMesh::Putflag ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(4264)
inline double femap::ILoadMesh::Getload ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4265)
inline void femap::ILoadMesh::Putload ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4266)
inline double femap::ILoadMesh::Getfluxdir ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4267)
inline void femap::ILoadMesh::Putfluxdir ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4268)
inline int femap::ILoadMesh::GetFunction ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4269)
inline void femap::ILoadMesh::PutFunction ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4270)
inline enum femap::zReturnCode femap::ILoadMesh::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4271)
inline enum femap::zReturnCode femap::ILoadMesh::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4272)
inline enum femap::zReturnCode femap::ILoadMesh::GetSearch ( enum zLoadType loadType, int meshID, int faceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", loadType, meshID, faceID);
    return _result;
}

#pragma implementation_key(4273)
inline enum femap::zReturnCode femap::ILoadMesh::AddArray ( int Count, VARIANT_BOOL doDOF, VARIANT_BOOL doValues, VARIANT_BOOL doFunctions, const _variant_t & NodeElemID, const _variant_t & dof, const _variant_t & values, const _variant_t & FunctionID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000c\x000c\x000c\x000c", Count, doDOF, doValues, doFunctions, &NodeElemID, &dof, &values, &FunctionID);
    return _result;
}

#pragma implementation_key(4274)
inline enum femap::zReturnCode femap::ILoadMesh::Add ( int setID, enum zLoadType loadType, int nCSys, const _variant_t & dof, const _variant_t & values, const _variant_t & FunctionID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c\x000c", setID, loadType, nCSys, &dof, &values, &FunctionID);
    return _result;
}

#pragma implementation_key(4275)
inline enum femap::zReturnCode femap::ILoadMesh::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4276)
inline enum femap::zReturnCode femap::ILoadMesh::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4277)
inline enum femap::zReturnCode femap::ILoadMesh::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4278)
inline enum femap::zReturnCode femap::ILoadMesh::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4279)
inline enum femap::zReturnCode femap::ILoadMesh::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4280)
inline enum femap::zReturnCode femap::ILoadMesh::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4281)
inline enum femap::zReturnCode femap::ILoadMesh::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4282)
inline enum femap::zReturnCode femap::ILoadMesh::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4283)
inline enum femap::zReturnCode femap::ILoadMesh::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4284)
inline enum femap::zReturnCode femap::ILoadMesh::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4285)
inline enum femap::zReturnCode femap::ILoadMesh::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4286)
inline enum femap::zReturnCode femap::ILoadMesh::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4287)
inline int femap::ILoadMesh::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4288)
inline int femap::ILoadMesh::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4289)
inline int femap::ILoadMesh::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4290)
inline int femap::ILoadMesh::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4291)
inline enum femap::zReturnCode femap::ILoadMesh::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4292)
inline enum femap::zReturnCode femap::ILoadMesh::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4293)
inline enum femap::zReturnCode femap::ILoadMesh::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4294)
inline enum femap::zReturnCode femap::ILoadMesh::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4295)
inline enum femap::zReturnCode femap::ILoadMesh::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4296)
inline int femap::ILoadMesh::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4297)
inline enum femap::zReturnCode femap::ILoadMesh::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4298)
inline enum femap::zReturnCode femap::ILoadMesh::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4299)
inline enum femap::zReturnCode femap::ILoadMesh::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4300)
inline int femap::ILoadMesh::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4301)
inline enum femap::zReturnCode femap::ILoadMesh::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4302)
inline enum femap::zReturnCode femap::ILoadMesh::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4303)
inline int femap::ILoadMesh::GetmeshID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4304)
inline void femap::ILoadMesh::PutmeshID ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(4305)
inline int femap::ILoadMesh::GetCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4306)
inline void femap::ILoadMesh::PutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(4307)
inline enum femap::zLoadType femap::ILoadMesh::Gettype ( ) {
    enum zLoadType _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4308)
inline void femap::ILoadMesh::Puttype ( enum zLoadType _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(4309)
inline int femap::ILoadMesh::Getsubtype ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4310)
inline void femap::ILoadMesh::Putsubtype ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(4311)
inline int femap::ILoadMesh::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4312)
inline void femap::ILoadMesh::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(4313)
inline int femap::ILoadMesh::GetLoadDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4314)
inline void femap::ILoadMesh::PutLoadDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(4315)
inline enum femap::zColor femap::ILoadMesh::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4316)
inline void femap::ILoadMesh::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(4317)
inline VARIANT_BOOL femap::ILoadMesh::Getexpanded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4318)
inline void femap::ILoadMesh::Putexpanded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BOOL, _val);
}

#pragma implementation_key(4319)
inline int femap::ILoadMesh::GetFaceNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4320)
inline void femap::ILoadMesh::PutFaceNumber ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(4321)
inline VARIANT_BOOL femap::ILoadMesh::GetXOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4322)
inline void femap::ILoadMesh::PutXOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271d, VT_BOOL, _val);
}

#pragma implementation_key(4323)
inline VARIANT_BOOL femap::ILoadMesh::GetYOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4324)
inline void femap::ILoadMesh::PutYOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271e, VT_BOOL, _val);
}

#pragma implementation_key(4325)
inline VARIANT_BOOL femap::ILoadMesh::GetZOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4326)
inline void femap::ILoadMesh::PutZOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271f, VT_BOOL, _val);
}

#pragma implementation_key(4327)
inline double femap::ILoadMesh::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4328)
inline void femap::ILoadMesh::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2720, VT_R8, _val);
}

#pragma implementation_key(4329)
inline double femap::ILoadMesh::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4330)
inline void femap::ILoadMesh::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2721, VT_R8, _val);
}

#pragma implementation_key(4331)
inline double femap::ILoadMesh::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4332)
inline void femap::ILoadMesh::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2722, VT_R8, _val);
}

#pragma implementation_key(4333)
inline double femap::ILoadMesh::Gettemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4334)
inline void femap::ILoadMesh::Puttemp ( double _val ) {
    _com_dispatch_propput(this, 0x2723, VT_R8, _val);
}

#pragma implementation_key(4335)
inline double femap::ILoadMesh::Getphase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4336)
inline void femap::ILoadMesh::Putphase ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(4337)
inline int femap::ILoadMesh::GetLoadFunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4338)
inline void femap::ILoadMesh::PutLoadFunction ( int _val ) {
    _com_dispatch_propput(this, 0x2725, VT_I4, _val);
}

#pragma implementation_key(4339)
inline int femap::ILoadMesh::GetTempVsTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4340)
inline void femap::ILoadMesh::PutTempVsTime ( int _val ) {
    _com_dispatch_propput(this, 0x2726, VT_I4, _val);
}

#pragma implementation_key(4341)
inline int femap::ILoadMesh::GetPhaseVsFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4342)
inline void femap::ILoadMesh::PutPhaseVsFreq ( int _val ) {
    _com_dispatch_propput(this, 0x2727, VT_I4, _val);
}

#pragma implementation_key(4343)
inline double femap::ILoadMesh::GetLoadValue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4344)
inline void femap::ILoadMesh::PutLoadValue ( double _val ) {
    _com_dispatch_propput(this, 0x2728, VT_R8, _val);
}

#pragma implementation_key(4345)
inline VARIANT_BOOL femap::ILoadMesh::GetCornerPressure ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4346)
inline void femap::ILoadMesh::PutCornerPressure ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2729, VT_BOOL, _val);
}

#pragma implementation_key(4347)
inline double femap::ILoadMesh::GetPressure ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4348)
inline void femap::ILoadMesh::PutPressure ( double _val ) {
    _com_dispatch_propput(this, 0x272a, VT_R8, _val);
}

#pragma implementation_key(4349)
inline double femap::ILoadMesh::GetHeatGen ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4350)
inline void femap::ILoadMesh::PutHeatGen ( double _val ) {
    _com_dispatch_propput(this, 0x272b, VT_R8, _val);
}

#pragma implementation_key(4351)
inline double femap::ILoadMesh::GetHeatFlux ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4352)
inline void femap::ILoadMesh::PutHeatFlux ( double _val ) {
    _com_dispatch_propput(this, 0x272c, VT_R8, _val);
}

#pragma implementation_key(4353)
inline double femap::ILoadMesh::GetAbsorptivity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4354)
inline void femap::ILoadMesh::PutAbsorptivity ( double _val ) {
    _com_dispatch_propput(this, 0x272d, VT_R8, _val);
}

#pragma implementation_key(4355)
inline int femap::ILoadMesh::GetAbsorptivityVsTemp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4356)
inline void femap::ILoadMesh::PutAbsorptivityVsTemp ( int _val ) {
    _com_dispatch_propput(this, 0x272e, VT_I4, _val);
}

#pragma implementation_key(4357)
inline VARIANT_BOOL femap::ILoadMesh::GetVectorFlux ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4358)
inline void femap::ILoadMesh::PutVectorFlux ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272f, VT_BOOL, _val);
}

#pragma implementation_key(4359)
inline double femap::ILoadMesh::GetFluidValue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4360)
inline void femap::ILoadMesh::PutFluidValue ( double _val ) {
    _com_dispatch_propput(this, 0x2730, VT_R8, _val);
}

#pragma implementation_key(4361)
inline VARIANT_BOOL femap::ILoadMesh::GetPeriodicMaster ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4362)
inline void femap::ILoadMesh::PutPeriodicMaster ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2731, VT_BOOL, _val);
}

#pragma implementation_key(4363)
inline VARIANT_BOOL femap::ILoadMesh::GetPeriodicDirection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4364)
inline void femap::ILoadMesh::PutPeriodicDirection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2732, VT_BOOL, _val);
}

#pragma implementation_key(4365)
inline double femap::ILoadMesh::GetConvectionCoeff ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4366)
inline void femap::ILoadMesh::PutConvectionCoeff ( double _val ) {
    _com_dispatch_propput(this, 0x2733, VT_R8, _val);
}

#pragma implementation_key(4367)
inline VARIANT_BOOL femap::ILoadMesh::GetForcedConvection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4368)
inline void femap::ILoadMesh::PutForcedConvection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2734, VT_BOOL, _val);
}

#pragma implementation_key(4369)
inline VARIANT_BOOL femap::ILoadMesh::GetFCDisableAdvection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4370)
inline void femap::ILoadMesh::PutFCDisableAdvection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2735, VT_BOOL, _val);
}

#pragma implementation_key(4371)
inline VARIANT_BOOL femap::ILoadMesh::GetFCDisableConvection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4372)
inline void femap::ILoadMesh::PutFCDisableConvection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2736, VT_BOOL, _val);
}

#pragma implementation_key(4373)
inline double femap::ILoadMesh::GetFlowRate ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4374)
inline void femap::ILoadMesh::PutFlowRate ( double _val ) {
    _com_dispatch_propput(this, 0x2737, VT_R8, _val);
}

#pragma implementation_key(4375)
inline double femap::ILoadMesh::GetFlowDiameter ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4376)
inline void femap::ILoadMesh::PutFlowDiameter ( double _val ) {
    _com_dispatch_propput(this, 0x2738, VT_R8, _val);
}

#pragma implementation_key(4377)
inline double femap::ILoadMesh::GetFlowAreaFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4378)
inline void femap::ILoadMesh::PutFlowAreaFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2739, VT_R8, _val);
}

#pragma implementation_key(4379)
inline double femap::ILoadMesh::GetEmissivity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4380)
inline void femap::ILoadMesh::PutEmissivity ( double _val ) {
    _com_dispatch_propput(this, 0x273a, VT_R8, _val);
}

#pragma implementation_key(4381)
inline int femap::ILoadMesh::GetEmissivityFunc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4382)
inline void femap::ILoadMesh::PutEmissivityFunc ( int _val ) {
    _com_dispatch_propput(this, 0x273b, VT_I4, _val);
}

#pragma implementation_key(4383)
inline double femap::ILoadMesh::GetViewFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4384)
inline void femap::ILoadMesh::PutViewFactor ( double _val ) {
    _com_dispatch_propput(this, 0x273c, VT_R8, _val);
}

#pragma implementation_key(4385)
inline int femap::ILoadMesh::GetViewFactorVsTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4386)
inline void femap::ILoadMesh::PutViewFactorVsTime ( int _val ) {
    _com_dispatch_propput(this, 0x273d, VT_I4, _val);
}

#pragma implementation_key(4387)
inline VARIANT_BOOL femap::ILoadMesh::GetEnclosureRadiation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4388)
inline void femap::ILoadMesh::PutEnclosureRadiation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273e, VT_BOOL, _val);
}

#pragma implementation_key(4389)
inline VARIANT_BOOL femap::ILoadMesh::GetCanShade ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4390)
inline void femap::ILoadMesh::PutCanShade ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273f, VT_BOOL, _val);
}

#pragma implementation_key(4391)
inline VARIANT_BOOL femap::ILoadMesh::GetCanBeShaded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4392)
inline void femap::ILoadMesh::PutCanBeShaded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2740, VT_BOOL, _val);
}

#pragma implementation_key(4393)
inline int femap::ILoadMesh::GetCavityNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4394)
inline void femap::ILoadMesh::PutCavityNumber ( int _val ) {
    _com_dispatch_propput(this, 0x2741, VT_I4, _val);
}

#pragma implementation_key(4395)
inline _variant_t femap::ILoadMesh::GetvaddlID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2743, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4396)
inline void femap::ILoadMesh::PutvaddlID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2743, VT_VARIANT, &_val);
}

#pragma implementation_key(4397)
inline _variant_t femap::ILoadMesh::Getvdof ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2744, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4398)
inline void femap::ILoadMesh::Putvdof ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2744, VT_VARIANT, &_val);
}

#pragma implementation_key(4399)
inline _variant_t femap::ILoadMesh::Getvflag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2745, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4400)
inline void femap::ILoadMesh::Putvflag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2745, VT_VARIANT, &_val);
}

#pragma implementation_key(4401)
inline _variant_t femap::ILoadMesh::Getvload ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2746, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4402)
inline void femap::ILoadMesh::Putvload ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2746, VT_VARIANT, &_val);
}

#pragma implementation_key(4403)
inline _variant_t femap::ILoadMesh::Getvfluxdir ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2747, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4404)
inline void femap::ILoadMesh::Putvfluxdir ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2747, VT_VARIANT, &_val);
}

#pragma implementation_key(4405)
inline _variant_t femap::ILoadMesh::Getvfunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2748, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4406)
inline void femap::ILoadMesh::Putvfunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2748, VT_VARIANT, &_val);
}

#pragma implementation_key(4407)
inline int femap::ILoadMesh::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4408)
inline void femap::ILoadMesh::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4409)
inline int femap::ILoadMesh::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4410)
inline void femap::ILoadMesh::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4411)
inline int femap::ILoadMesh::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4412)
inline void femap::ILoadMesh::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILoadNTemp wrapper method implementations
//

#pragma implementation_key(4413)
inline enum femap::zReturnCode femap::ILoadNTemp::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4414)
inline enum femap::zReturnCode femap::ILoadNTemp::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4415)
inline enum femap::zReturnCode femap::ILoadNTemp::AddArray ( int Count, VARIANT_BOOL doValues, VARIANT_BOOL doFunctions, const _variant_t & NodeID, const _variant_t & values, const _variant_t & FunctionID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000c\x000c\x000c", Count, doValues, doFunctions, &NodeID, &values, &FunctionID);
    return _result;
}

#pragma implementation_key(4416)
inline enum femap::zReturnCode femap::ILoadNTemp::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4417)
inline enum femap::zReturnCode femap::ILoadNTemp::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4418)
inline enum femap::zReturnCode femap::ILoadNTemp::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4419)
inline enum femap::zReturnCode femap::ILoadNTemp::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4420)
inline enum femap::zReturnCode femap::ILoadNTemp::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4421)
inline enum femap::zReturnCode femap::ILoadNTemp::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4422)
inline enum femap::zReturnCode femap::ILoadNTemp::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4423)
inline enum femap::zReturnCode femap::ILoadNTemp::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4424)
inline enum femap::zReturnCode femap::ILoadNTemp::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4425)
inline enum femap::zReturnCode femap::ILoadNTemp::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4426)
inline enum femap::zReturnCode femap::ILoadNTemp::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4427)
inline enum femap::zReturnCode femap::ILoadNTemp::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4428)
inline int femap::ILoadNTemp::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4429)
inline int femap::ILoadNTemp::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4430)
inline int femap::ILoadNTemp::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4431)
inline int femap::ILoadNTemp::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4432)
inline enum femap::zReturnCode femap::ILoadNTemp::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4433)
inline enum femap::zReturnCode femap::ILoadNTemp::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4434)
inline enum femap::zReturnCode femap::ILoadNTemp::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4435)
inline enum femap::zReturnCode femap::ILoadNTemp::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4436)
inline enum femap::zReturnCode femap::ILoadNTemp::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4437)
inline int femap::ILoadNTemp::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4438)
inline enum femap::zReturnCode femap::ILoadNTemp::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4439)
inline enum femap::zReturnCode femap::ILoadNTemp::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4440)
inline enum femap::zReturnCode femap::ILoadNTemp::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4441)
inline int femap::ILoadNTemp::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4442)
inline enum femap::zReturnCode femap::ILoadNTemp::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4443)
inline enum femap::zReturnCode femap::ILoadNTemp::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4444)
inline double femap::ILoadNTemp::Gettemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4445)
inline void femap::ILoadNTemp::Puttemp ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(4446)
inline double femap::ILoadNTemp::Getphase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4447)
inline void femap::ILoadNTemp::Putphase ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(4448)
inline int femap::ILoadNTemp::GetFunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4449)
inline void femap::ILoadNTemp::PutFunction ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(4450)
inline int femap::ILoadNTemp::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4451)
inline void femap::ILoadNTemp::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(4452)
inline enum femap::zColor femap::ILoadNTemp::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4453)
inline void femap::ILoadNTemp::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(4454)
inline VARIANT_BOOL femap::ILoadNTemp::Getexpanded ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4455)
inline void femap::ILoadNTemp::Putexpanded ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(4456)
inline int femap::ILoadNTemp::GetLoadDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4457)
inline void femap::ILoadNTemp::PutLoadDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(4458)
inline int femap::ILoadNTemp::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4459)
inline void femap::ILoadNTemp::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4460)
inline int femap::ILoadNTemp::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4461)
inline void femap::ILoadNTemp::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4462)
inline int femap::ILoadNTemp::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4463)
inline void femap::ILoadNTemp::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILoadSet wrapper method implementations
//

#pragma implementation_key(4464)
inline VARIANT_BOOL femap::ILoadSet::GetNLConvergenceFlag ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4465)
inline void femap::ILoadSet::PutNLConvergenceFlag ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(4466)
inline double femap::ILoadSet::GetNLConvergenceVal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4467)
inline void femap::ILoadSet::PutNLConvergenceVal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4468)
inline double femap::ILoadSet::GetBodyAccel ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4469)
inline void femap::ILoadSet::PutBodyAccel ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4470)
inline double femap::ILoadSet::GetBodyVelocity ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4471)
inline void femap::ILoadSet::PutBodyVelocity ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4472)
inline double femap::ILoadSet::GetBodyOrigin ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4473)
inline void femap::ILoadSet::PutBodyOrigin ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4474)
inline int femap::ILoadSet::GetBodyAccelFunction ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4475)
inline void femap::ILoadSet::PutBodyAccelFunction ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4476)
inline int femap::ILoadSet::GetBodyVelocityFunction ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4477)
inline void femap::ILoadSet::PutBodyVelocityFunction ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4478)
inline double femap::ILoadSet::GetBodyVaryingAccel ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4479)
inline void femap::ILoadSet::PutBodyVaryingAccel ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4480)
inline enum femap::zReturnCode femap::ILoadSet::Expand ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4481)
inline enum femap::zReturnCode femap::ILoadSet::Compress ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4482)
inline enum femap::zReturnCode femap::ILoadSet::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4483)
inline enum femap::zReturnCode femap::ILoadSet::ResetNextLoad ( enum zDataType enDataType, VARIANT_BOOL bAllLoadTypes, enum zLoadType enLoadType, VARIANT_BOOL bOtherLoadsOnly, VARIANT_BOOL bIncludeExpanded ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x000b\x000b", enDataType, bAllLoadTypes, enLoadType, bOtherLoadsOnly, bIncludeExpanded);
    return _result;
}

#pragma implementation_key(4484)
inline enum femap::zReturnCode femap::ILoadSet::NextLoad ( IDispatch * * pDispatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4009", pDispatch);
    return _result;
}

#pragma implementation_key(4485)
inline enum femap::zReturnCode femap::ILoadSet::ResetNextLoadDef ( VARIANT_BOOL bAllDataTypes, enum zDataType enDataType, VARIANT_BOOL bAllLoadTypes, enum zLoadType enLoadType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x000b\x0003", bAllDataTypes, enDataType, bAllLoadTypes, enLoadType);
    return _result;
}

#pragma implementation_key(4486)
inline enum femap::zReturnCode femap::ILoadSet::NextLoadDef ( IDispatch * * pDispatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4009", pDispatch);
    return _result;
}

#pragma implementation_key(4487)
inline enum femap::zReturnCode femap::ILoadSet::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4488)
inline enum femap::zReturnCode femap::ILoadSet::GetCombination ( double * dOverallScale, int * nCombo, VARIANT * dScale, VARIANT * nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4003\x400c\x400c", dOverallScale, nCombo, dScale, nSetID);
    return _result;
}

#pragma implementation_key(4489)
inline enum femap::zReturnCode femap::ILoadSet::PutCombination ( double dOverallScale, int nCombo, const _variant_t & dScale, const _variant_t & nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x000c\x000c", dOverallScale, nCombo, &dScale, &nSetID);
    return _result;
}

#pragma implementation_key(4490)
inline enum femap::zReturnCode femap::ILoadSet::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4491)
inline enum femap::zReturnCode femap::ILoadSet::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4492)
inline enum femap::zReturnCode femap::ILoadSet::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4493)
inline enum femap::zReturnCode femap::ILoadSet::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4494)
inline enum femap::zReturnCode femap::ILoadSet::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4495)
inline enum femap::zReturnCode femap::ILoadSet::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4496)
inline enum femap::zReturnCode femap::ILoadSet::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4497)
inline enum femap::zReturnCode femap::ILoadSet::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4498)
inline enum femap::zReturnCode femap::ILoadSet::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4499)
inline enum femap::zReturnCode femap::ILoadSet::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4500)
inline enum femap::zReturnCode femap::ILoadSet::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4501)
inline enum femap::zReturnCode femap::ILoadSet::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4502)
inline int femap::ILoadSet::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4503)
inline int femap::ILoadSet::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4504)
inline int femap::ILoadSet::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4505)
inline int femap::ILoadSet::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4506)
inline enum femap::zReturnCode femap::ILoadSet::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4507)
inline enum femap::zReturnCode femap::ILoadSet::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4508)
inline enum femap::zReturnCode femap::ILoadSet::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4509)
inline enum femap::zReturnCode femap::ILoadSet::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4510)
inline enum femap::zReturnCode femap::ILoadSet::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4511)
inline int femap::ILoadSet::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4512)
inline enum femap::zReturnCode femap::ILoadSet::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4513)
inline enum femap::zReturnCode femap::ILoadSet::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4514)
inline enum femap::zReturnCode femap::ILoadSet::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4515)
inline int femap::ILoadSet::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4516)
inline enum femap::zReturnCode femap::ILoadSet::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4517)
inline enum femap::zReturnCode femap::ILoadSet::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4518)
inline int femap::ILoadSet::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4519)
inline void femap::ILoadSet::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(4520)
inline double femap::ILoadSet::GetBodyDefTemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4521)
inline void femap::ILoadSet::PutBodyDefTemp ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(4522)
inline double femap::ILoadSet::GetBodyRefTemp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4523)
inline void femap::ILoadSet::PutBodyRefTemp ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(4524)
inline VARIANT_BOOL femap::ILoadSet::GetBodyDefTempOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4525)
inline void femap::ILoadSet::PutBodyDefTempOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(4526)
inline VARIANT_BOOL femap::ILoadSet::GetBodyRefTempOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4527)
inline void femap::ILoadSet::PutBodyRefTempOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(4528)
inline VARIANT_BOOL femap::ILoadSet::GetBodyAccelOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4529)
inline void femap::ILoadSet::PutBodyAccelOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(4530)
inline VARIANT_BOOL femap::ILoadSet::GetBodyVelocityOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4531)
inline void femap::ILoadSet::PutBodyVelocityOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(4532)
inline double femap::ILoadSet::GetStefanBoltzmann ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4533)
inline void femap::ILoadSet::PutStefanBoltzmann ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(4534)
inline int femap::ILoadSet::GetRadiationAmbientElem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4535)
inline void femap::ILoadSet::PutRadiationAmbientElem ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(4536)
inline double femap::ILoadSet::GetTempOffset ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4537)
inline void femap::ILoadSet::PutTempOffset ( double _val ) {
    _com_dispatch_propput(this, 0x2719, VT_R8, _val);
}

#pragma implementation_key(4538)
inline double femap::ILoadSet::GetFreeConvExponent ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4539)
inline void femap::ILoadSet::PutFreeConvExponent ( double _val ) {
    _com_dispatch_propput(this, 0x271a, VT_R8, _val);
}

#pragma implementation_key(4540)
inline VARIANT_BOOL femap::ILoadSet::GetFreeConvAlternateForm ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4541)
inline void femap::ILoadSet::PutFreeConvAlternateForm ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BOOL, _val);
}

#pragma implementation_key(4542)
inline double femap::ILoadSet::GetFCFluidConductivity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4543)
inline void femap::ILoadSet::PutFCFluidConductivity ( double _val ) {
    _com_dispatch_propput(this, 0x271c, VT_R8, _val);
}

#pragma implementation_key(4544)
inline double femap::ILoadSet::GetFCFluidHeatCapacity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4545)
inline void femap::ILoadSet::PutFCFluidHeatCapacity ( double _val ) {
    _com_dispatch_propput(this, 0x271d, VT_R8, _val);
}

#pragma implementation_key(4546)
inline double femap::ILoadSet::GetFCFluidViscosity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4547)
inline void femap::ILoadSet::PutFCFluidViscosity ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(4548)
inline double femap::ILoadSet::GetFCFluidDensity ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4549)
inline void femap::ILoadSet::PutFCFluidDensity ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(4550)
inline int femap::ILoadSet::GetFCFluidConductivityFunc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4551)
inline void femap::ILoadSet::PutFCFluidConductivityFunc ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(4552)
inline int femap::ILoadSet::GetFCFluidHeatCapacityFunc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4553)
inline void femap::ILoadSet::PutFCFluidHeatCapacityFunc ( int _val ) {
    _com_dispatch_propput(this, 0x2721, VT_I4, _val);
}

#pragma implementation_key(4554)
inline int femap::ILoadSet::GetFCFluidViscosityFunc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4555)
inline void femap::ILoadSet::PutFCFluidViscosityFunc ( int _val ) {
    _com_dispatch_propput(this, 0x2722, VT_I4, _val);
}

#pragma implementation_key(4556)
inline int femap::ILoadSet::GetFCFluidDensityFunc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4557)
inline void femap::ILoadSet::PutFCFluidDensityFunc ( int _val ) {
    _com_dispatch_propput(this, 0x2723, VT_I4, _val);
}

#pragma implementation_key(4558)
inline double femap::ILoadSet::GetFCConstantCoeff ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4559)
inline void femap::ILoadSet::PutFCConstantCoeff ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(4560)
inline double femap::ILoadSet::GetFCReynoldsExp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4561)
inline void femap::ILoadSet::PutFCReynoldsExp ( double _val ) {
    _com_dispatch_propput(this, 0x2725, VT_R8, _val);
}

#pragma implementation_key(4562)
inline double femap::ILoadSet::GetFCPrandtlIn ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4563)
inline void femap::ILoadSet::PutFCPrandtlIn ( double _val ) {
    _com_dispatch_propput(this, 0x2726, VT_R8, _val);
}

#pragma implementation_key(4564)
inline double femap::ILoadSet::GetFCPrandtlOut ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4565)
inline void femap::ILoadSet::PutFCPrandtlOut ( double _val ) {
    _com_dispatch_propput(this, 0x2727, VT_R8, _val);
}

#pragma implementation_key(4566)
inline VARIANT_BOOL femap::ILoadSet::GetFCAlternateForm ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4567)
inline void femap::ILoadSet::PutFCAlternateForm ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2728, VT_BOOL, _val);
}

#pragma implementation_key(4568)
inline VARIANT_BOOL femap::ILoadSet::GetFCExcludeConvective ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4569)
inline void femap::ILoadSet::PutFCExcludeConvective ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2729, VT_BOOL, _val);
}

#pragma implementation_key(4570)
inline int femap::ILoadSet::GetNLOn ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4571)
inline void femap::ILoadSet::PutNLOn ( int _val ) {
    _com_dispatch_propput(this, 0x272a, VT_I4, _val);
}

#pragma implementation_key(4572)
inline int femap::ILoadSet::GetNLIncrements ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4573)
inline void femap::ILoadSet::PutNLIncrements ( int _val ) {
    _com_dispatch_propput(this, 0x272b, VT_I4, _val);
}

#pragma implementation_key(4574)
inline double femap::ILoadSet::GetNLTimeIncrement ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4575)
inline void femap::ILoadSet::PutNLTimeIncrement ( double _val ) {
    _com_dispatch_propput(this, 0x272c, VT_R8, _val);
}

#pragma implementation_key(4576)
inline int femap::ILoadSet::GetNLMaxIterPerStep ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4577)
inline void femap::ILoadSet::PutNLMaxIterPerStep ( int _val ) {
    _com_dispatch_propput(this, 0x272d, VT_I4, _val);
}

#pragma implementation_key(4578)
inline int femap::ILoadSet::GetNLStiffnessMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4579)
inline void femap::ILoadSet::PutNLStiffnessMethod ( int _val ) {
    _com_dispatch_propput(this, 0x2730, VT_I4, _val);
}

#pragma implementation_key(4580)
inline int femap::ILoadSet::GetNLStiffnessIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4581)
inline void femap::ILoadSet::PutNLStiffnessIter ( int _val ) {
    _com_dispatch_propput(this, 0x2731, VT_I4, _val);
}

#pragma implementation_key(4582)
inline int femap::ILoadSet::GetNLIntermediateOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4583)
inline void femap::ILoadSet::PutNLIntermediateOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2732, VT_I4, _val);
}

#pragma implementation_key(4584)
inline int femap::ILoadSet::GetNLOutputInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4585)
inline void femap::ILoadSet::PutNLOutputInterval ( int _val ) {
    _com_dispatch_propput(this, 0x2733, VT_I4, _val);
}

#pragma implementation_key(4586)
inline int femap::ILoadSet::GetNLArcLengthMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4587)
inline void femap::ILoadSet::PutNLArcLengthMethod ( int _val ) {
    _com_dispatch_propput(this, 0x2734, VT_I4, _val);
}

#pragma implementation_key(4588)
inline int femap::ILoadSet::GetNLSolutionOverride ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4589)
inline void femap::ILoadSet::PutNLSolutionOverride ( int _val ) {
    _com_dispatch_propput(this, 0x2735, VT_I4, _val);
}

#pragma implementation_key(4590)
inline VARIANT_BOOL femap::ILoadSet::GetNLNewtRaphLineSearch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4591)
inline void femap::ILoadSet::PutNLNewtRaphLineSearch ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2736, VT_BOOL, _val);
}

#pragma implementation_key(4592)
inline VARIANT_BOOL femap::ILoadSet::GetNLNewtRaphQuasiNewton ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4593)
inline void femap::ILoadSet::PutNLNewtRaphQuasiNewton ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2737, VT_BOOL, _val);
}

#pragma implementation_key(4594)
inline VARIANT_BOOL femap::ILoadSet::GetNLNewtRaphBisection ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4595)
inline void femap::ILoadSet::PutNLNewtRaphBisection ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2738, VT_BOOL, _val);
}

#pragma implementation_key(4596)
inline double femap::ILoadSet::GetNLArcScaleConstLoad ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4597)
inline void femap::ILoadSet::PutNLArcScaleConstLoad ( double _val ) {
    _com_dispatch_propput(this, 0x2739, VT_R8, _val);
}

#pragma implementation_key(4598)
inline double femap::ILoadSet::GetNLArcMinAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4599)
inline void femap::ILoadSet::PutNLArcMinAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x273a, VT_R8, _val);
}

#pragma implementation_key(4600)
inline double femap::ILoadSet::GetNLArcMaxAdjust ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4601)
inline void femap::ILoadSet::PutNLArcMaxAdjust ( double _val ) {
    _com_dispatch_propput(this, 0x273b, VT_R8, _val);
}

#pragma implementation_key(4602)
inline int femap::ILoadSet::GetNLArcConstraintType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4603)
inline void femap::ILoadSet::PutNLArcConstraintType ( int _val ) {
    _com_dispatch_propput(this, 0x273c, VT_I4, _val);
}

#pragma implementation_key(4604)
inline int femap::ILoadSet::GetNLArcDesiredIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4605)
inline void femap::ILoadSet::PutNLArcDesiredIter ( int _val ) {
    _com_dispatch_propput(this, 0x273d, VT_I4, _val);
}

#pragma implementation_key(4606)
inline int femap::ILoadSet::GetNLArcMaxIncrement ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4607)
inline void femap::ILoadSet::PutNLArcMaxIncrement ( int _val ) {
    _com_dispatch_propput(this, 0x273e, VT_I4, _val);
}

#pragma implementation_key(4608)
inline int femap::ILoadSet::GetNLMaxDivergeCond ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4609)
inline void femap::ILoadSet::PutNLMaxDivergeCond ( int _val ) {
    _com_dispatch_propput(this, 0x273f, VT_I4, _val);
}

#pragma implementation_key(4610)
inline int femap::ILoadSet::GetNLQuasiNewtonVec ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4611)
inline void femap::ILoadSet::PutNLQuasiNewtonVec ( int _val ) {
    _com_dispatch_propput(this, 0x2740, VT_I4, _val);
}

#pragma implementation_key(4612)
inline int femap::ILoadSet::GetNLMaxLineSearch ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4613)
inline void femap::ILoadSet::PutNLMaxLineSearch ( int _val ) {
    _com_dispatch_propput(this, 0x2741, VT_I4, _val);
}

#pragma implementation_key(4614)
inline double femap::ILoadSet::GetNLLineSearchTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4615)
inline void femap::ILoadSet::PutNLLineSearchTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2742, VT_R8, _val);
}

#pragma implementation_key(4616)
inline int femap::ILoadSet::GetNLMaxBisection ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2743, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4617)
inline void femap::ILoadSet::PutNLMaxBisection ( int _val ) {
    _com_dispatch_propput(this, 0x2743, VT_I4, _val);
}

#pragma implementation_key(4618)
inline double femap::ILoadSet::GetNLMaxRotation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4619)
inline void femap::ILoadSet::PutNLMaxRotation ( double _val ) {
    _com_dispatch_propput(this, 0x2744, VT_R8, _val);
}

#pragma implementation_key(4620)
inline double femap::ILoadSet::GetNLStressFraction ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4621)
inline void femap::ILoadSet::PutNLStressFraction ( double _val ) {
    _com_dispatch_propput(this, 0x2745, VT_R8, _val);
}

#pragma implementation_key(4622)
inline double femap::ILoadSet::GetNLMaxAdjusted ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4623)
inline void femap::ILoadSet::PutNLMaxAdjusted ( double _val ) {
    _com_dispatch_propput(this, 0x2746, VT_R8, _val);
}

#pragma implementation_key(4624)
inline int femap::ILoadSet::GetNLTransStepSkipFactor ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4625)
inline void femap::ILoadSet::PutNLTransStepSkipFactor ( int _val ) {
    _com_dispatch_propput(this, 0x2747, VT_I4, _val);
}

#pragma implementation_key(4626)
inline int femap::ILoadSet::GetNLTransDominantSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4627)
inline void femap::ILoadSet::PutNLTransDominantSteps ( int _val ) {
    _com_dispatch_propput(this, 0x2748, VT_I4, _val);
}

#pragma implementation_key(4628)
inline double femap::ILoadSet::GetNLTransBoundsMaintain ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4629)
inline void femap::ILoadSet::PutNLTransBoundsMaintain ( double _val ) {
    _com_dispatch_propput(this, 0x2749, VT_R8, _val);
}

#pragma implementation_key(4630)
inline double femap::ILoadSet::GetNLTransStabilityTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4631)
inline void femap::ILoadSet::PutNLTransStabilityTol ( double _val ) {
    _com_dispatch_propput(this, 0x274a, VT_R8, _val);
}

#pragma implementation_key(4632)
inline double femap::ILoadSet::GetDYNStructDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4633)
inline void femap::ILoadSet::PutDYNStructDamp ( double _val ) {
    _com_dispatch_propput(this, 0x274b, VT_R8, _val);
}

#pragma implementation_key(4634)
inline double femap::ILoadSet::GetDYNSystemFreqDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4635)
inline void femap::ILoadSet::PutDYNSystemFreqDamp ( double _val ) {
    _com_dispatch_propput(this, 0x274c, VT_R8, _val);
}

#pragma implementation_key(4636)
inline double femap::ILoadSet::GetDYNElemFreqDamp ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4637)
inline void femap::ILoadSet::PutDYNElemFreqDamp ( double _val ) {
    _com_dispatch_propput(this, 0x274d, VT_R8, _val);
}

#pragma implementation_key(4638)
inline int femap::ILoadSet::GetDYNOn ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4639)
inline void femap::ILoadSet::PutDYNOn ( int _val ) {
    _com_dispatch_propput(this, 0x274e, VT_I4, _val);
}

#pragma implementation_key(4640)
inline int femap::ILoadSet::GetDYNType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4641)
inline void femap::ILoadSet::PutDYNType ( int _val ) {
    _com_dispatch_propput(this, 0x274f, VT_I4, _val);
}

#pragma implementation_key(4642)
inline int femap::ILoadSet::GetDYNModalMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4643)
inline void femap::ILoadSet::PutDYNModalMethod ( int _val ) {
    _com_dispatch_propput(this, 0x2750, VT_I4, _val);
}

#pragma implementation_key(4644)
inline int femap::ILoadSet::GetDYNMassFormulation ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2751, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4645)
inline void femap::ILoadSet::PutDYNMassFormulation ( int _val ) {
    _com_dispatch_propput(this, 0x2751, VT_I4, _val);
}

#pragma implementation_key(4646)
inline int femap::ILoadSet::GetDYNDataRecovery ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2752, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4647)
inline void femap::ILoadSet::PutDYNDataRecovery ( int _val ) {
    _com_dispatch_propput(this, 0x2752, VT_I4, _val);
}

#pragma implementation_key(4648)
inline int femap::ILoadSet::GetDYNSolFreqType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2753, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4649)
inline void femap::ILoadSet::PutDYNSolFreqType ( int _val ) {
    _com_dispatch_propput(this, 0x2753, VT_I4, _val);
}

#pragma implementation_key(4650)
inline int femap::ILoadSet::GetDYNPSDType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2754, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4651)
inline void femap::ILoadSet::PutDYNPSDType ( int _val ) {
    _com_dispatch_propput(this, 0x2754, VT_I4, _val);
}

#pragma implementation_key(4652)
inline int femap::ILoadSet::GetDYNPSDInterp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2755, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4653)
inline void femap::ILoadSet::PutDYNPSDInterp ( int _val ) {
    _com_dispatch_propput(this, 0x2755, VT_I4, _val);
}

#pragma implementation_key(4654)
inline double femap::ILoadSet::GetDYNSolFreqSpread ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2756, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4655)
inline void femap::ILoadSet::PutDYNSolFreqSpread ( double _val ) {
    _com_dispatch_propput(this, 0x2756, VT_R8, _val);
}

#pragma implementation_key(4656)
inline int femap::ILoadSet::GetDYNSolFreqNumFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2757, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4657)
inline void femap::ILoadSet::PutDYNSolFreqNumFreq ( int _val ) {
    _com_dispatch_propput(this, 0x2757, VT_I4, _val);
}

#pragma implementation_key(4658)
inline double femap::ILoadSet::GetDYNSolFreqMin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2758, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4659)
inline void femap::ILoadSet::PutDYNSolFreqMin ( double _val ) {
    _com_dispatch_propput(this, 0x2758, VT_R8, _val);
}

#pragma implementation_key(4660)
inline double femap::ILoadSet::GetDYNSolFreqMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2759, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4661)
inline void femap::ILoadSet::PutDYNSolFreqMax ( double _val ) {
    _com_dispatch_propput(this, 0x2759, VT_R8, _val);
}

#pragma implementation_key(4662)
inline VARIANT_BOOL femap::ILoadSet::GetDYNSolFreqLogInterp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4663)
inline void femap::ILoadSet::PutDYNSolFreqLogInterp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275a, VT_BOOL, _val);
}

#pragma implementation_key(4664)
inline int femap::ILoadSet::GetDYNTransTimeSteps ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4665)
inline void femap::ILoadSet::PutDYNTransTimeSteps ( int _val ) {
    _com_dispatch_propput(this, 0x275b, VT_I4, _val);
}

#pragma implementation_key(4666)
inline double femap::ILoadSet::GetDYNTransTimePerStep ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x275c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4667)
inline void femap::ILoadSet::PutDYNTransTimePerStep ( double _val ) {
    _com_dispatch_propput(this, 0x275c, VT_R8, _val);
}

#pragma implementation_key(4668)
inline int femap::ILoadSet::GetDYNTransOutputInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4669)
inline void femap::ILoadSet::PutDYNTransOutputInterval ( int _val ) {
    _com_dispatch_propput(this, 0x275d, VT_I4, _val);
}

#pragma implementation_key(4670)
inline int femap::ILoadSet::GetDYNFrequencyTable ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4671)
inline void femap::ILoadSet::PutDYNFrequencyTable ( int _val ) {
    _com_dispatch_propput(this, 0x275e, VT_I4, _val);
}

#pragma implementation_key(4672)
inline int femap::ILoadSet::GetDYNDampingTable ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x275f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4673)
inline void femap::ILoadSet::PutDYNDampingTable ( int _val ) {
    _com_dispatch_propput(this, 0x275f, VT_I4, _val);
}

#pragma implementation_key(4674)
inline int femap::ILoadSet::GetDYNRandomPSD ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2760, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4675)
inline void femap::ILoadSet::PutDYNRandomPSD ( int _val ) {
    _com_dispatch_propput(this, 0x2760, VT_I4, _val);
}

#pragma implementation_key(4676)
inline int femap::ILoadSet::GetDYNResponseModes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2761, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4677)
inline void femap::ILoadSet::PutDYNResponseModes ( int _val ) {
    _com_dispatch_propput(this, 0x2761, VT_I4, _val);
}

#pragma implementation_key(4678)
inline double femap::ILoadSet::GetDYNResponseMinFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2762, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4679)
inline void femap::ILoadSet::PutDYNResponseMinFreq ( double _val ) {
    _com_dispatch_propput(this, 0x2762, VT_R8, _val);
}

#pragma implementation_key(4680)
inline double femap::ILoadSet::GetDYNResponseMaxFreq ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2763, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4681)
inline void femap::ILoadSet::PutDYNResponseMaxFreq ( double _val ) {
    _com_dispatch_propput(this, 0x2763, VT_R8, _val);
}

#pragma implementation_key(4682)
inline _bstr_t femap::ILoadSet::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2764, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4683)
inline void femap::ILoadSet::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2764, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4684)
inline int femap::ILoadSet::GetDYNAddlFreqType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2768, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4685)
inline void femap::ILoadSet::PutDYNAddlFreqType ( int _val ) {
    _com_dispatch_propput(this, 0x2768, VT_I4, _val);
}

#pragma implementation_key(4686)
inline int femap::ILoadSet::GetDYNAddlFreqNumFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2769, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4687)
inline void femap::ILoadSet::PutDYNAddlFreqNumFreq ( int _val ) {
    _com_dispatch_propput(this, 0x2769, VT_I4, _val);
}

#pragma implementation_key(4688)
inline double femap::ILoadSet::GetDYNAddlFreqMin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x276a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4689)
inline void femap::ILoadSet::PutDYNAddlFreqMin ( double _val ) {
    _com_dispatch_propput(this, 0x276a, VT_R8, _val);
}

#pragma implementation_key(4690)
inline double femap::ILoadSet::GetDYNAddlFreqMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x276b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4691)
inline void femap::ILoadSet::PutDYNAddlFreqMax ( double _val ) {
    _com_dispatch_propput(this, 0x276b, VT_R8, _val);
}

#pragma implementation_key(4692)
inline VARIANT_BOOL femap::ILoadSet::GetDYNAddlFreqLogInterp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4693)
inline void femap::ILoadSet::PutDYNAddlFreqLogInterp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276c, VT_BOOL, _val);
}

#pragma implementation_key(4694)
inline double femap::ILoadSet::GetDYNAddlFreqSpread ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x276d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4695)
inline void femap::ILoadSet::PutDYNAddlFreqSpread ( double _val ) {
    _com_dispatch_propput(this, 0x276d, VT_R8, _val);
}

#pragma implementation_key(4696)
inline _variant_t femap::ILoadSet::GetvNLConvergenceFlag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x276e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4697)
inline void femap::ILoadSet::PutvNLConvergenceFlag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x276e, VT_VARIANT, &_val);
}

#pragma implementation_key(4698)
inline _variant_t femap::ILoadSet::GetvNLConvergenceVal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x276f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4699)
inline void femap::ILoadSet::PutvNLConvergenceVal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x276f, VT_VARIANT, &_val);
}

#pragma implementation_key(4700)
inline _variant_t femap::ILoadSet::GetvBodyAccel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2770, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4701)
inline void femap::ILoadSet::PutvBodyAccel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2770, VT_VARIANT, &_val);
}

#pragma implementation_key(4702)
inline _variant_t femap::ILoadSet::GetvBodyVelocity ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2771, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4703)
inline void femap::ILoadSet::PutvBodyVelocity ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2771, VT_VARIANT, &_val);
}

#pragma implementation_key(4704)
inline _variant_t femap::ILoadSet::GetvBodyOrigin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2772, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4705)
inline void femap::ILoadSet::PutvBodyOrigin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2772, VT_VARIANT, &_val);
}

#pragma implementation_key(4706)
inline _variant_t femap::ILoadSet::GetvBodyAccelFunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2773, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4707)
inline void femap::ILoadSet::PutvBodyAccelFunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2773, VT_VARIANT, &_val);
}

#pragma implementation_key(4708)
inline _variant_t femap::ILoadSet::GetvBodyVelocityFunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2774, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4709)
inline void femap::ILoadSet::PutvBodyVelocityFunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2774, VT_VARIANT, &_val);
}

#pragma implementation_key(4710)
inline VARIANT_BOOL femap::ILoadSet::GetIsCombination ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2775, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4711)
inline void femap::ILoadSet::PutIsCombination ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2775, VT_BOOL, _val);
}

#pragma implementation_key(4712)
inline double femap::ILoadSet::GetCombinedScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2776, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4713)
inline void femap::ILoadSet::PutCombinedScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2776, VT_R8, _val);
}

#pragma implementation_key(4714)
inline int femap::ILoadSet::GetBodyLoadCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2777, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4715)
inline void femap::ILoadSet::PutBodyLoadCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2777, VT_I4, _val);
}

#pragma implementation_key(4716)
inline VARIANT_BOOL femap::ILoadSet::GetBodyVaryingAccelOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2778, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4717)
inline void femap::ILoadSet::PutBodyVaryingAccelOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2778, VT_BOOL, _val);
}

#pragma implementation_key(4718)
inline int femap::ILoadSet::GetBodyVaryingAccelAxis ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2779, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4719)
inline void femap::ILoadSet::PutBodyVaryingAccelAxis ( int _val ) {
    _com_dispatch_propput(this, 0x2779, VT_I4, _val);
}

#pragma implementation_key(4720)
inline int femap::ILoadSet::GetBodyVaryingAccelFunction ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x277a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4721)
inline void femap::ILoadSet::PutBodyVaryingAccelFunction ( int _val ) {
    _com_dispatch_propput(this, 0x277a, VT_I4, _val);
}

#pragma implementation_key(4722)
inline _variant_t femap::ILoadSet::GetvBodyVaryingAccel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x277b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4723)
inline void femap::ILoadSet::PutvBodyVaryingAccel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x277b, VT_VARIANT, &_val);
}

#pragma implementation_key(4724)
inline double femap::ILoadSet::GetRadViewFactorZTOL ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x277c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4725)
inline void femap::ILoadSet::PutRadViewFactorZTOL ( double _val ) {
    _com_dispatch_propput(this, 0x277c, VT_R8, _val);
}

#pragma implementation_key(4726)
inline VARIANT_BOOL femap::ILoadSet::GetbRadViewFactorZTOL ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4727)
inline void femap::ILoadSet::PutbRadViewFactorZTOL ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277d, VT_BOOL, _val);
}

#pragma implementation_key(4728)
inline int femap::ILoadSet::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4729)
inline void femap::ILoadSet::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4730)
inline int femap::ILoadSet::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4731)
inline void femap::ILoadSet::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4732)
inline int femap::ILoadSet::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4733)
inline void femap::ILoadSet::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IOptim wrapper method implementations
//

#pragma implementation_key(4734)
inline enum femap::zReturnCode femap::IOptim::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4735)
inline enum femap::zReturnCode femap::IOptim::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4736)
inline enum femap::zReturnCode femap::IOptim::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4737)
inline enum femap::zReturnCode femap::IOptim::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4738)
inline enum femap::zReturnCode femap::IOptim::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4739)
inline enum femap::zReturnCode femap::IOptim::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4740)
inline enum femap::zReturnCode femap::IOptim::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4741)
inline enum femap::zReturnCode femap::IOptim::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4742)
inline enum femap::zReturnCode femap::IOptim::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4743)
inline enum femap::zReturnCode femap::IOptim::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4744)
inline enum femap::zReturnCode femap::IOptim::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4745)
inline enum femap::zReturnCode femap::IOptim::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4746)
inline enum femap::zReturnCode femap::IOptim::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4747)
inline enum femap::zReturnCode femap::IOptim::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4748)
inline int femap::IOptim::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4749)
inline int femap::IOptim::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4750)
inline int femap::IOptim::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4751)
inline int femap::IOptim::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4752)
inline enum femap::zReturnCode femap::IOptim::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4753)
inline enum femap::zReturnCode femap::IOptim::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4754)
inline enum femap::zReturnCode femap::IOptim::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4755)
inline enum femap::zReturnCode femap::IOptim::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4756)
inline enum femap::zReturnCode femap::IOptim::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4757)
inline int femap::IOptim::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4758)
inline enum femap::zReturnCode femap::IOptim::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4759)
inline enum femap::zReturnCode femap::IOptim::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4760)
inline enum femap::zReturnCode femap::IOptim::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4761)
inline int femap::IOptim::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4762)
inline enum femap::zReturnCode femap::IOptim::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4763)
inline enum femap::zReturnCode femap::IOptim::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4764)
inline enum femap::zOptType femap::IOptim::Gettype ( ) {
    enum zOptType _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4765)
inline void femap::IOptim::Puttype ( enum zOptType _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(4766)
inline enum femap::zOptGoal femap::IOptim::Getgoal ( ) {
    enum zOptGoal _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4767)
inline void femap::IOptim::Putgoal ( enum zOptGoal _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(4768)
inline enum femap::zOptVary femap::IOptim::Getvary ( ) {
    enum zOptVary _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4769)
inline void femap::IOptim::Putvary ( enum zOptVary _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(4770)
inline enum femap::zOptLimit femap::IOptim::Getlimit ( ) {
    enum zOptLimit _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4771)
inline void femap::IOptim::Putlimit ( enum zOptLimit _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(4772)
inline int femap::IOptim::Getcycles ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4773)
inline void femap::IOptim::Putcycles ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(4774)
inline enum femap::zDataType femap::IOptim::GetvaryType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4775)
inline void femap::IOptim::PutvaryType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(4776)
inline int femap::IOptim::GetvaryID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4777)
inline void femap::IOptim::PutvaryID ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(4778)
inline int femap::IOptim::GetvaryExtraID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4779)
inline void femap::IOptim::PutvaryExtraID ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(4780)
inline VARIANT_BOOL femap::IOptim::GetvaryPct ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4781)
inline void femap::IOptim::PutvaryPct ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BOOL, _val);
}

#pragma implementation_key(4782)
inline double femap::IOptim::GetvaryMin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4783)
inline void femap::IOptim::PutvaryMin ( double _val ) {
    _com_dispatch_propput(this, 0x2719, VT_R8, _val);
}

#pragma implementation_key(4784)
inline double femap::IOptim::GetvaryMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4785)
inline void femap::IOptim::PutvaryMax ( double _val ) {
    _com_dispatch_propput(this, 0x271a, VT_R8, _val);
}

#pragma implementation_key(4786)
inline double femap::IOptim::GetvaryDelta ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4787)
inline void femap::IOptim::PutvaryDelta ( double _val ) {
    _com_dispatch_propput(this, 0x271b, VT_R8, _val);
}

#pragma implementation_key(4788)
inline enum femap::zDataType femap::IOptim::GetrespType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4789)
inline void femap::IOptim::PutrespType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(4790)
inline int femap::IOptim::GetrespID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4791)
inline void femap::IOptim::PutrespID ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(4792)
inline double femap::IOptim::GetrespMin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4793)
inline void femap::IOptim::PutrespMin ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(4794)
inline double femap::IOptim::GetrespMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4795)
inline void femap::IOptim::PutrespMax ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(4796)
inline int femap::IOptim::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4797)
inline void femap::IOptim::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4798)
inline int femap::IOptim::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4799)
inline void femap::IOptim::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4800)
inline int femap::IOptim::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4801)
inline void femap::IOptim::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IOutput wrapper method implementations
//

#pragma implementation_key(4802)
inline int femap::IOutput::Getcomponent ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4803)
inline void femap::IOutput::Putcomponent ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(4804)
inline double femap::IOutput::Getvalue ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(4805)
inline void femap::IOutput::Putvalue ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(4806)
inline enum femap::zReturnCode femap::IOutput::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4807)
inline enum femap::zReturnCode femap::IOutput::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4808)
inline enum femap::zReturnCode femap::IOutput::GetOutputList ( int * listcount, VARIANT * ID, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c", listcount, ID, value);
    return _result;
}

#pragma implementation_key(4809)
inline enum femap::zReturnCode femap::IOutput::GetScalarAtNode ( int * listcount, VARIANT * ID, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c", listcount, ID, value);
    return _result;
}

#pragma implementation_key(4810)
inline enum femap::zReturnCode femap::IOutput::GetScalarAtElem ( int * listcount, VARIANT * ID, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c", listcount, ID, value);
    return _result;
}

#pragma implementation_key(4811)
inline enum femap::zReturnCode femap::IOutput::PutOutputList ( int listcount, const _variant_t & ID, const _variant_t & value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", listcount, &ID, &value);
    return _result;
}

#pragma implementation_key(4812)
inline enum femap::zReturnCode femap::IOutput::PutScalarAtNode ( int listcount, const _variant_t & ID, const _variant_t & value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", listcount, &ID, &value);
    return _result;
}

#pragma implementation_key(4813)
inline enum femap::zReturnCode femap::IOutput::PutScalarAtElem ( int listcount, const _variant_t & ID, const _variant_t & value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", listcount, &ID, &value);
    return _result;
}

#pragma implementation_key(4814)
inline enum femap::zReturnCode femap::IOutput::InitScalarAtNode ( int OutputSet, int Vec, _bstr_t title, enum zOutputType category, VARIANT_BOOL nonlinear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008\x0003\x000b", OutputSet, Vec, (BSTR)title, category, nonlinear);
    return _result;
}

#pragma implementation_key(4815)
inline enum femap::zReturnCode femap::IOutput::InitVectorAtNode ( int OutputSet, int Vec, int VecX, int VecY, int VecZ, _bstr_t title, enum zOutputType category, VARIANT_BOOL nonlinear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0008\x0003\x000b", OutputSet, Vec, VecX, VecY, VecZ, (BSTR)title, category, nonlinear);
    return _result;
}

#pragma implementation_key(4816)
inline enum femap::zReturnCode femap::IOutput::InitScalarAtElem ( int OutputSet, int Vec, _bstr_t title, enum zOutputType category, VARIANT_BOOL nonlinear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008\x0003\x000b", OutputSet, Vec, (BSTR)title, category, nonlinear);
    return _result;
}

#pragma implementation_key(4817)
inline enum femap::zReturnCode femap::IOutput::InitElemWithCorner ( int OutputSet, int Vec, int Vec1, int Vec2, int Vec3, int Vec4, int Vec5, int Vec6, int Vec7, int Vec8, _bstr_t title, enum zOutputType category, VARIANT_BOOL nonlinear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0008\x0003\x000b", OutputSet, Vec, Vec1, Vec2, Vec3, Vec4, Vec5, Vec6, Vec7, Vec8, (BSTR)title, category, nonlinear);
    return _result;
}

#pragma implementation_key(4818)
inline enum femap::zReturnCode femap::IOutput::GetVectorAtNode ( int * listcount, VARIANT * ID, VARIANT * x, VARIANT * y, VARIANT * z ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c", listcount, ID, x, y, z);
    return _result;
}

#pragma implementation_key(4819)
inline enum femap::zReturnCode femap::IOutput::PutVectorAtNode ( int listcount, const _variant_t & ID, const _variant_t & x, const _variant_t & y, const _variant_t & z ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", listcount, &ID, &x, &y, &z);
    return _result;
}

#pragma implementation_key(4820)
inline enum femap::zReturnCode femap::IOutput::GetElemWithCorner ( int * listcount, int * maxcorner, VARIANT * ID, VARIANT * centroid, VARIANT * c1, VARIANT * c2, VARIANT * c3, VARIANT * c4, VARIANT * c5, VARIANT * c6, VARIANT * c7, VARIANT * c8 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", listcount, maxcorner, ID, centroid, c1, c2, c3, c4, c5, c6, c7, c8);
    return _result;
}

#pragma implementation_key(4821)
inline enum femap::zReturnCode femap::IOutput::PutElemWithCorner ( int listcount, int maxcorner, const _variant_t & ID, const _variant_t & centroid, const _variant_t & c1, const _variant_t & c2, const _variant_t & c3, const _variant_t & c4, const _variant_t & c5, const _variant_t & c6, const _variant_t & c7, const _variant_t & c8 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", listcount, maxcorner, &ID, &centroid, &c1, &c2, &c3, &c4, &c5, &c6, &c7, &c8);
    return _result;
}

#pragma implementation_key(4822)
inline enum femap::zReturnCode femap::IOutput::GetOutputListAtID ( const _variant_t & ID, const _variant_t & defaultVal, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x400c", &ID, &defaultVal, value);
    return _result;
}

#pragma implementation_key(4823)
inline enum femap::zReturnCode femap::IOutput::GetOutputListAtSet ( int idSET, const _variant_t & defaultVal, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", idSET, &defaultVal, value);
    return _result;
}

#pragma implementation_key(4824)
inline enum femap::zReturnCode femap::IOutput::GetScalarAtNodeSet ( int idSET, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", idSET, value);
    return _result;
}

#pragma implementation_key(4825)
inline enum femap::zReturnCode femap::IOutput::GetVectorAtNodeSet ( int idSET, VARIANT * x, VARIANT * y, VARIANT * z ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c", idSET, x, y, z);
    return _result;
}

#pragma implementation_key(4826)
inline enum femap::zReturnCode femap::IOutput::GetScalarAtElemSet ( int idSET, VARIANT * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", idSET, value);
    return _result;
}

#pragma implementation_key(4827)
inline enum femap::zReturnCode femap::IOutput::GetElemWithCornerSet ( int idSET, int * maxcorner, VARIANT * centroid, VARIANT * c1, VARIANT * c2, VARIANT * c3, VARIANT * c4, VARIANT * c5, VARIANT * c6, VARIANT * c7, VARIANT * c8 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", idSET, maxcorner, centroid, c1, c2, c3, c4, c5, c6, c7, c8);
    return _result;
}

#pragma implementation_key(4828)
inline enum femap::zReturnCode femap::IOutput::GetFromSet ( int setID, int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", setID, entID);
    return _result;
}

#pragma implementation_key(4829)
inline enum femap::zReturnCode femap::IOutput::FindMaxMin ( int idSET, VARIANT_BOOL bUseCornersOrComponents, int * minID, double * minVALUE, int * maxID, double * maxVALUE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x4003\x4005\x4003\x4005", idSET, bUseCornersOrComponents, minID, minVALUE, maxID, maxVALUE);
    return _result;
}

#pragma implementation_key(4830)
inline enum femap::zReturnCode femap::IOutput::InitScalarAtBeam ( int OutputSet, int VecA, int VecB, _bstr_t title, int vecstyle, enum zOutputType category, VARIANT_BOOL nonlinear, VARIANT_BOOL add_endAB_titles ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008\x0003\x0003\x000b\x000b", OutputSet, VecA, VecB, (BSTR)title, vecstyle, category, nonlinear, add_endAB_titles);
    return _result;
}

#pragma implementation_key(4831)
inline enum femap::zReturnCode femap::IOutput::PutScalarAtBeam ( int listcount, const _variant_t & ID, const _variant_t & ValA, const _variant_t & ValB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", listcount, &ID, &ValA, &ValB);
    return _result;
}

#pragma implementation_key(4832)
inline enum femap::zReturnCode femap::IOutput::GetVectorAtSingleNode ( int nNodeID, double * x, double * y, double * z ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005", nNodeID, x, y, z);
    return _result;
}

#pragma implementation_key(4833)
inline enum femap::zReturnCode femap::IOutput::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4834)
inline enum femap::zReturnCode femap::IOutput::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4835)
inline enum femap::zReturnCode femap::IOutput::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4836)
inline enum femap::zReturnCode femap::IOutput::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4837)
inline enum femap::zReturnCode femap::IOutput::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4838)
inline enum femap::zReturnCode femap::IOutput::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4839)
inline enum femap::zReturnCode femap::IOutput::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4840)
inline enum femap::zReturnCode femap::IOutput::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4841)
inline int femap::IOutput::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4842)
inline int femap::IOutput::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4843)
inline int femap::IOutput::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4844)
inline int femap::IOutput::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4845)
inline int femap::IOutput::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4846)
inline enum femap::zReturnCode femap::IOutput::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4847)
inline enum femap::zReturnCode femap::IOutput::GetModel ( __int64 * nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nModelID);
    return _result;
}

#pragma implementation_key(4848)
inline enum femap::zReturnCode femap::IOutput::SetModel ( __int64 nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014", nModelID);
    return _result;
}

#pragma implementation_key(4849)
inline enum femap::zReturnCode femap::IOutput::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4850)
inline enum femap::zReturnCode femap::IOutput::SetComplexOptions ( VARIANT_BOOL bExpandComplex, double dComplexPhase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005", bExpandComplex, dComplexPhase);
    return _result;
}

#pragma implementation_key(4851)
inline enum femap::zReturnCode femap::IOutput::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4852)
inline enum femap::zReturnCode femap::IOutput::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4853)
inline enum femap::zReturnCode femap::IOutput::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4854)
inline enum femap::zReturnCode femap::IOutput::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4855)
inline enum femap::zReturnCode femap::IOutput::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4856)
inline enum femap::zReturnCode femap::IOutput::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4857)
inline enum femap::zReturnCode femap::IOutput::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4858)
inline enum femap::zReturnCode femap::IOutput::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4859)
inline enum femap::zReturnCode femap::IOutput::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4860)
inline int femap::IOutput::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4861)
inline enum femap::zReturnCode femap::IOutput::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4862)
inline enum femap::zReturnCode femap::IOutput::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4863)
inline enum femap::zReturnCode femap::IOutput::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4864)
inline enum femap::zReturnCode femap::IOutput::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4865)
inline enum femap::zOutputType femap::IOutput::Getcategory ( ) {
    enum zOutputType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4866)
inline void femap::IOutput::Putcategory ( enum zOutputType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(4867)
inline enum femap::zDataType femap::IOutput::Getlocation ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4868)
inline void femap::IOutput::Putlocation ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(4869)
inline VARIANT_BOOL femap::IOutput::Getnonlinear ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4870)
inline void femap::IOutput::Putnonlinear ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(4871)
inline int femap::IOutput::Gethascomponent ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4872)
inline void femap::IOutput::Puthascomponent ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(4873)
inline VARIANT_BOOL femap::IOutput::Getcentroidtotal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4874)
inline void femap::IOutput::Putcentroidtotal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(4875)
inline double femap::IOutput::Getmaxval ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4876)
inline void femap::IOutput::Putmaxval ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(4877)
inline double femap::IOutput::Getminval ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4878)
inline void femap::IOutput::Putminval ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(4879)
inline double femap::IOutput::Getabsmaxval ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4880)
inline void femap::IOutput::Putabsmaxval ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(4881)
inline int femap::IOutput::GetmaxvalID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4882)
inline void femap::IOutput::PutmaxvalID ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(4883)
inline int femap::IOutput::GetminvalID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4884)
inline void femap::IOutput::PutminvalID ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(4885)
inline _bstr_t femap::IOutput::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4886)
inline void femap::IOutput::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4887)
inline _variant_t femap::IOutput::Getvcomponent ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(4888)
inline void femap::IOutput::Putvcomponent ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271d, VT_VARIANT, &_val);
}

#pragma implementation_key(4889)
inline int femap::IOutput::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4890)
inline void femap::IOutput::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(4891)
inline int femap::IOutput::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4892)
inline void femap::IOutput::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x271f, VT_I4, _val);
}

#pragma implementation_key(4893)
inline int femap::IOutput::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4894)
inline void femap::IOutput::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(4895)
inline VARIANT_BOOL femap::IOutput::GetInitAsInteger ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(4896)
inline void femap::IOutput::PutInitAsInteger ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2721, VT_BOOL, _val);
}

//
// dispinterface IOutputSet wrapper method implementations
//

#pragma implementation_key(4897)
inline femap::IOutputPtr femap::IOutputSet::Vector ( int entID ) {
    struct IOutput * _result = 0;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", entID);
    return IOutputPtr(_result, false);
}

#pragma implementation_key(4898)
inline int femap::IOutputSet::OutputVectors ( int nVectorSetID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nVectorSetID);
    return _result;
}

#pragma implementation_key(4899)
inline int femap::IOutputSet::SetCombination ( enum zResultsProcessType enProcessType, int nNumFactors, const _variant_t & vnSetIDArray, const _variant_t & vdFactorArray ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", enProcessType, nNumFactors, &vnSetIDArray, &vdFactorArray);
    return _result;
}

#pragma implementation_key(4900)
inline int femap::IOutputSet::SetStudyCombination ( enum zResultsProcessType enProcessType, int nStudyID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", enProcessType, nStudyID);
    return _result;
}

#pragma implementation_key(4901)
inline int femap::IOutputSet::ExpandCombination ( VARIANT_BOOL bSetTitles ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bSetTitles);
    return _result;
}

#pragma implementation_key(4902)
inline enum femap::zReturnCode femap::IOutputSet::SetComplexOptions ( VARIANT_BOOL bExpandComplex, double dComplexPhase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005", bExpandComplex, dComplexPhase);
    return _result;
}

#pragma implementation_key(4903)
inline enum femap::zReturnCode femap::IOutputSet::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4904)
inline enum femap::zReturnCode femap::IOutputSet::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4905)
inline enum femap::zReturnCode femap::IOutputSet::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4906)
inline enum femap::zReturnCode femap::IOutputSet::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4907)
inline enum femap::zReturnCode femap::IOutputSet::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4908)
inline enum femap::zReturnCode femap::IOutputSet::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4909)
inline enum femap::zReturnCode femap::IOutputSet::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4910)
inline enum femap::zReturnCode femap::IOutputSet::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4911)
inline enum femap::zReturnCode femap::IOutputSet::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4912)
inline enum femap::zReturnCode femap::IOutputSet::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4913)
inline enum femap::zReturnCode femap::IOutputSet::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4914)
inline enum femap::zReturnCode femap::IOutputSet::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4915)
inline int femap::IOutputSet::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4916)
inline int femap::IOutputSet::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4917)
inline int femap::IOutputSet::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4918)
inline int femap::IOutputSet::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4919)
inline enum femap::zReturnCode femap::IOutputSet::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4920)
inline enum femap::zReturnCode femap::IOutputSet::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4921)
inline enum femap::zReturnCode femap::IOutputSet::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4922)
inline enum femap::zReturnCode femap::IOutputSet::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4923)
inline enum femap::zReturnCode femap::IOutputSet::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4924)
inline int femap::IOutputSet::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4925)
inline enum femap::zReturnCode femap::IOutputSet::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4926)
inline enum femap::zReturnCode femap::IOutputSet::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4927)
inline enum femap::zReturnCode femap::IOutputSet::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4928)
inline int femap::IOutputSet::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4929)
inline enum femap::zReturnCode femap::IOutputSet::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4930)
inline enum femap::zReturnCode femap::IOutputSet::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4931)
inline enum femap::zReturnCode femap::IOutputSet::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4932)
inline enum femap::zReturnCode femap::IOutputSet::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4933)
inline double femap::IOutputSet::Getvalue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4934)
inline void femap::IOutputSet::Putvalue ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(4935)
inline enum femap::zAnalysisProgram femap::IOutputSet::Getprogram ( ) {
    enum zAnalysisProgram _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4936)
inline void femap::IOutputSet::Putprogram ( enum zAnalysisProgram _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(4937)
inline enum femap::zAnalysisType femap::IOutputSet::Getanalysis ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4938)
inline void femap::IOutputSet::Putanalysis ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(4939)
inline _bstr_t femap::IOutputSet::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4940)
inline void femap::IOutputSet::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4941)
inline _bstr_t femap::IOutputSet::Getnotes ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(4942)
inline void femap::IOutputSet::Putnotes ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(4943)
inline int femap::IOutputSet::Getstudy ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4944)
inline void femap::IOutputSet::Putstudy ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(4945)
inline enum femap::zResultsProcessType femap::IOutputSet::Getcombination_type ( ) {
    enum zResultsProcessType _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4946)
inline void femap::IOutputSet::Putcombination_type ( enum zResultsProcessType _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(4947)
inline int femap::IOutputSet::Getnas_case ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4948)
inline void femap::IOutputSet::Putnas_case ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(4949)
inline int femap::IOutputSet::Getnas_revision ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4950)
inline void femap::IOutputSet::Putnas_revision ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(4951)
inline int femap::IOutputSet::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4952)
inline void femap::IOutputSet::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(4953)
inline int femap::IOutputSet::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4954)
inline void femap::IOutputSet::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(4955)
inline int femap::IOutputSet::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(4956)
inline void femap::IOutputSet::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IPoint wrapper method implementations
//

#pragma implementation_key(4957)
inline enum femap::zReturnCode femap::IPoint::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(4958)
inline enum femap::zReturnCode femap::IPoint::Nodes ( int * numNodes, VARIANT * NodeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numNodes, NodeID);
    return _result;
}

#pragma implementation_key(4959)
inline enum femap::zReturnCode femap::IPoint::NodesAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(4960)
inline enum femap::zReturnCode femap::IPoint::Curves ( enum zCombinedMode nCombinedMode, int * numCurves, VARIANT * curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numCurves, curveID);
    return _result;
}

#pragma implementation_key(4961)
inline enum femap::zReturnCode femap::IPoint::CurvesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(4962)
inline enum femap::zReturnCode femap::IPoint::SurfacesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(4963)
inline enum femap::zReturnCode femap::IPoint::GetClosest ( const _variant_t & vXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c", &vXYZ);
    return _result;
}

#pragma implementation_key(4964)
inline enum femap::zReturnCode femap::IPoint::Solid ( int * pnSolidID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", pnSolidID);
    return _result;
}

#pragma implementation_key(4965)
inline enum femap::zReturnCode femap::IPoint::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4966)
inline enum femap::zReturnCode femap::IPoint::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4967)
inline enum femap::zReturnCode femap::IPoint::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4968)
inline enum femap::zReturnCode femap::IPoint::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4969)
inline enum femap::zReturnCode femap::IPoint::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4970)
inline enum femap::zReturnCode femap::IPoint::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4971)
inline enum femap::zReturnCode femap::IPoint::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4972)
inline enum femap::zReturnCode femap::IPoint::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4973)
inline enum femap::zReturnCode femap::IPoint::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4974)
inline enum femap::zReturnCode femap::IPoint::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4975)
inline enum femap::zReturnCode femap::IPoint::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4976)
inline enum femap::zReturnCode femap::IPoint::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4977)
inline enum femap::zReturnCode femap::IPoint::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4978)
inline int femap::IPoint::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4979)
inline int femap::IPoint::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4980)
inline int femap::IPoint::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4981)
inline int femap::IPoint::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4982)
inline enum femap::zReturnCode femap::IPoint::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4983)
inline enum femap::zReturnCode femap::IPoint::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4984)
inline enum femap::zReturnCode femap::IPoint::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(4985)
inline enum femap::zReturnCode femap::IPoint::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4986)
inline enum femap::zReturnCode femap::IPoint::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(4987)
inline int femap::IPoint::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(4988)
inline enum femap::zReturnCode femap::IPoint::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4989)
inline enum femap::zReturnCode femap::IPoint::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4990)
inline enum femap::zReturnCode femap::IPoint::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4991)
inline int femap::IPoint::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(4992)
inline enum femap::zReturnCode femap::IPoint::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(4993)
inline enum femap::zReturnCode femap::IPoint::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(4994)
inline double femap::IPoint::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4995)
inline void femap::IPoint::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(4996)
inline double femap::IPoint::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4997)
inline void femap::IPoint::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(4998)
inline double femap::IPoint::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(4999)
inline void femap::IPoint::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(5000)
inline int femap::IPoint::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5001)
inline void femap::IPoint::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(5002)
inline enum femap::zColor femap::IPoint::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5003)
inline void femap::IPoint::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(5004)
inline enum femap::zPointType femap::IPoint::Gettype ( ) {
    enum zPointType _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5005)
inline void femap::IPoint::Puttype ( enum zPointType _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(5006)
inline int femap::IPoint::GetdefCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5007)
inline void femap::IPoint::PutdefCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(5008)
inline int femap::IPoint::GetattrPID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5009)
inline void femap::IPoint::PutattrPID ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(5010)
inline int femap::IPoint::GetEngine ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5011)
inline void femap::IPoint::PutEngine ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(5012)
inline int femap::IPoint::GetAddress ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5013)
inline void femap::IPoint::PutAddress ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(5014)
inline double femap::IPoint::GetMeshSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5015)
inline void femap::IPoint::PutMeshSize ( double _val ) {
    _com_dispatch_propput(this, 0x271a, VT_R8, _val);
}

#pragma implementation_key(5016)
inline _variant_t femap::IPoint::Getxyz ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5017)
inline void femap::IPoint::Putxyz ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(5018)
inline int femap::IPoint::GetInCombinedCurve ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5019)
inline void femap::IPoint::PutInCombinedCurve ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(5020)
inline double femap::IPoint::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5021)
inline void femap::IPoint::PutScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x271d, VT_R8, _val);
}

#pragma implementation_key(5022)
inline int femap::IPoint::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5023)
inline void femap::IPoint::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5024)
inline int femap::IPoint::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5025)
inline void femap::IPoint::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5026)
inline int femap::IPoint::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5027)
inline void femap::IPoint::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IReport wrapper method implementations
//

#pragma implementation_key(5028)
inline enum femap::zReturnCode femap::IReport::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5029)
inline enum femap::zReturnCode femap::IReport::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5030)
inline enum femap::zReturnCode femap::IReport::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5031)
inline enum femap::zReturnCode femap::IReport::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5032)
inline enum femap::zReturnCode femap::IReport::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5033)
inline enum femap::zReturnCode femap::IReport::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5034)
inline enum femap::zReturnCode femap::IReport::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5035)
inline enum femap::zReturnCode femap::IReport::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5036)
inline enum femap::zReturnCode femap::IReport::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5037)
inline enum femap::zReturnCode femap::IReport::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5038)
inline enum femap::zReturnCode femap::IReport::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5039)
inline enum femap::zReturnCode femap::IReport::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5040)
inline enum femap::zReturnCode femap::IReport::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5041)
inline enum femap::zReturnCode femap::IReport::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5042)
inline int femap::IReport::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5043)
inline int femap::IReport::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5044)
inline int femap::IReport::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5045)
inline int femap::IReport::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5046)
inline enum femap::zReturnCode femap::IReport::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5047)
inline enum femap::zReturnCode femap::IReport::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5048)
inline enum femap::zReturnCode femap::IReport::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5049)
inline enum femap::zReturnCode femap::IReport::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5050)
inline enum femap::zReturnCode femap::IReport::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5051)
inline int femap::IReport::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5052)
inline enum femap::zReturnCode femap::IReport::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5053)
inline enum femap::zReturnCode femap::IReport::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5054)
inline enum femap::zReturnCode femap::IReport::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5055)
inline int femap::IReport::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5056)
inline enum femap::zReturnCode femap::IReport::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5057)
inline enum femap::zReturnCode femap::IReport::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5058)
inline _bstr_t femap::IReport::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5059)
inline void femap::IReport::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5060)
inline enum femap::zDataType femap::IReport::GetdataType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5061)
inline void femap::IReport::PutdataType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(5062)
inline VARIANT_BOOL femap::IReport::GetCenterHeader1 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5063)
inline void femap::IReport::PutCenterHeader1 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(5064)
inline VARIANT_BOOL femap::IReport::GetCenterHeader2 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5065)
inline void femap::IReport::PutCenterHeader2 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(5066)
inline VARIANT_BOOL femap::IReport::GetDbSpHeader1 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5067)
inline void femap::IReport::PutDbSpHeader1 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(5068)
inline VARIANT_BOOL femap::IReport::GetDbSpHeader2 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5069)
inline void femap::IReport::PutDbSpHeader2 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(5070)
inline _bstr_t femap::IReport::GetHeader1 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5071)
inline void femap::IReport::PutHeader1 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5072)
inline _bstr_t femap::IReport::GetHeader2 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5073)
inline void femap::IReport::PutHeader2 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5074)
inline _bstr_t femap::IReport::GetColumnHeader ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5075)
inline void femap::IReport::PutColumnHeader ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5076)
inline _bstr_t femap::IReport::GetData1 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5077)
inline void femap::IReport::PutData1 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5078)
inline _bstr_t femap::IReport::GetData2 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5079)
inline void femap::IReport::PutData2 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5080)
inline _bstr_t femap::IReport::GetData3 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5081)
inline void femap::IReport::PutData3 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5082)
inline _bstr_t femap::IReport::GetData4 ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5083)
inline void femap::IReport::PutData4 ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5084)
inline int femap::IReport::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5085)
inline void femap::IReport::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5086)
inline int femap::IReport::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5087)
inline void femap::IReport::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5088)
inline int femap::IReport::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5089)
inline void femap::IReport::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ISolid wrapper method implementations
//

#pragma implementation_key(5090)
inline int femap::ISolid::GetVolSurface ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5091)
inline void femap::ISolid::PutVolSurface ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5092)
inline VARIANT_BOOL femap::ISolid::GetVolReverse ( int nRowIndex, int nColIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(5093)
inline void femap::ISolid::PutVolReverse ( int nRowIndex, int nColIndex, VARIANT_BOOL _arg3 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x000b", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(5094)
inline enum femap::zReturnCode femap::ISolid::Curves ( enum zCombinedMode nCombinedMode, int * numCurves, VARIANT * curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numCurves, curveID);
    return _result;
}

#pragma implementation_key(5095)
inline enum femap::zReturnCode femap::ISolid::Surfaces ( enum zCombinedMode nCombinedMode, int * numSurfs, VARIANT * surfaceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numSurfs, surfaceID);
    return _result;
}

#pragma implementation_key(5096)
inline enum femap::zReturnCode femap::ISolid::MassProp ( double * Area, double * volume, VARIANT * cg, VARIANT * Inertia ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x400c\x400c", Area, volume, cg, Inertia);
    return _result;
}

#pragma implementation_key(5097)
inline enum femap::zReturnCode femap::ISolid::Export ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(5098)
inline enum femap::zReturnCode femap::ISolid::IsSolid ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5099)
inline enum femap::zReturnCode femap::ISolid::IsSheet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5100)
inline enum femap::zReturnCode femap::ISolid::IsWire ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5101)
inline enum femap::zReturnCode femap::ISolid::Facets ( int * numFacets, VARIANT * xyzFacet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numFacets, xyzFacet);
    return _result;
}

#pragma implementation_key(5102)
inline enum femap::zReturnCode femap::ISolid::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5103)
inline enum femap::zReturnCode femap::ISolid::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5104)
inline enum femap::zReturnCode femap::ISolid::Nodes ( VARIANT_BOOL getBoundary, VARIANT_BOOL getInterior, int * numNodes, VARIANT * NodeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x4003\x400c", getBoundary, getInterior, numNodes, NodeID);
    return _result;
}

#pragma implementation_key(5105)
inline enum femap::zReturnCode femap::ISolid::Elements ( int * numElems, VARIANT * elemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numElems, elemID);
    return _result;
}

#pragma implementation_key(5106)
inline enum femap::zReturnCode femap::ISolid::BoundingBox ( VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", box);
    return _result;
}

#pragma implementation_key(5107)
inline enum femap::zReturnCode femap::ISolid::CurvesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5108)
inline enum femap::zReturnCode femap::ISolid::SurfacesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5109)
inline enum femap::zReturnCode femap::ISolid::ElementsAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(5110)
inline enum femap::zReturnCode femap::ISolid::NodesAsSet ( VARIANT_BOOL getBoundary, VARIANT_BOOL getInterior, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x000b", getBoundary, getInterior, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5111)
inline enum femap::zReturnCode femap::ISolid::IsGeneral ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5112)
inline enum femap::zReturnCode femap::ISolid::FreeCurvesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5113)
inline enum femap::zReturnCode femap::ISolid::Points ( int * numPoints, VARIANT * pointID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numPoints, pointID);
    return _result;
}

#pragma implementation_key(5114)
inline enum femap::zReturnCode femap::ISolid::PointsAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(5115)
inline enum femap::zReturnCode femap::ISolid::ElementsAsSet2 ( VARIANT_BOOL bInSolid, VARIANT_BOOL bOnSurfaces, VARIANT_BOOL bOnCurves, VARIANT_BOOL bOnPoints, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x000b\x0003\x000b", bInSolid, bOnSurfaces, bOnCurves, bOnPoints, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5116)
inline enum femap::zReturnCode femap::ISolid::SheetFacesAsSet ( int nSetID, int nInsideSolidSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nInsideSolidSetID);
    return _result;
}

#pragma implementation_key(5117)
inline enum femap::zReturnCode femap::ISolid::WireCurvesAsSet ( int nSetID, int nInsideSolidSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nInsideSolidSetID);
    return _result;
}

#pragma implementation_key(5118)
inline enum femap::zReturnCode femap::ISolid::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5119)
inline enum femap::zReturnCode femap::ISolid::Inside ( const _variant_t & vXYZ, int * nInsideCode ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003", &vXYZ, nInsideCode);
    return _result;
}

#pragma implementation_key(5120)
inline enum femap::zReturnCode femap::ISolid::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5121)
inline enum femap::zReturnCode femap::ISolid::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5122)
inline enum femap::zReturnCode femap::ISolid::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5123)
inline enum femap::zReturnCode femap::ISolid::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5124)
inline enum femap::zReturnCode femap::ISolid::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5125)
inline enum femap::zReturnCode femap::ISolid::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5126)
inline enum femap::zReturnCode femap::ISolid::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5127)
inline enum femap::zReturnCode femap::ISolid::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5128)
inline enum femap::zReturnCode femap::ISolid::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5129)
inline enum femap::zReturnCode femap::ISolid::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5130)
inline enum femap::zReturnCode femap::ISolid::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5131)
inline int femap::ISolid::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5132)
inline int femap::ISolid::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5133)
inline int femap::ISolid::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5134)
inline int femap::ISolid::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5135)
inline enum femap::zReturnCode femap::ISolid::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5136)
inline enum femap::zReturnCode femap::ISolid::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5137)
inline enum femap::zReturnCode femap::ISolid::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5138)
inline enum femap::zReturnCode femap::ISolid::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5139)
inline enum femap::zReturnCode femap::ISolid::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5140)
inline int femap::ISolid::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5141)
inline enum femap::zReturnCode femap::ISolid::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5142)
inline enum femap::zReturnCode femap::ISolid::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5143)
inline enum femap::zReturnCode femap::ISolid::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5144)
inline int femap::ISolid::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5145)
inline enum femap::zReturnCode femap::ISolid::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5146)
inline enum femap::zReturnCode femap::ISolid::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5147)
inline enum femap::zDataType femap::ISolid::Gettype ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5148)
inline void femap::ISolid::Puttype ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(5149)
inline int femap::ISolid::GetattrPID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5150)
inline void femap::ISolid::PutattrPID ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(5151)
inline enum femap::zColor femap::ISolid::GetVolColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5152)
inline void femap::ISolid::PutVolColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(5153)
inline int femap::ISolid::GetVolLayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5154)
inline void femap::ISolid::PutVolLayer ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(5155)
inline enum femap::zVolumeType femap::ISolid::GetVolType ( ) {
    enum zVolumeType _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5156)
inline void femap::ISolid::PutVolType ( enum zVolumeType _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(5157)
inline enum femap::zColor femap::ISolid::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5158)
inline void femap::ISolid::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(5159)
inline int femap::ISolid::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5160)
inline void femap::ISolid::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(5161)
inline int femap::ISolid::GetAddress ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5162)
inline void femap::ISolid::PutAddress ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(5163)
inline int femap::ISolid::GetEngine ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5164)
inline void femap::ISolid::PutEngine ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(5165)
inline _bstr_t femap::ISolid::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5166)
inline void femap::ISolid::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5167)
inline _variant_t femap::ISolid::GetvVolSurface ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5168)
inline void femap::ISolid::PutvVolSurface ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(5169)
inline _variant_t femap::ISolid::GetvVolReverse ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5170)
inline void femap::ISolid::PutvVolReverse ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271d, VT_VARIANT, &_val);
}

#pragma implementation_key(5171)
inline double femap::ISolid::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5172)
inline void femap::ISolid::PutScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(5173)
inline int femap::ISolid::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5174)
inline void femap::ISolid::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5175)
inline int femap::ISolid::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5176)
inline void femap::ISolid::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5177)
inline int femap::ISolid::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5178)
inline void femap::ISolid::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ISurface wrapper method implementations
//

#pragma implementation_key(5179)
inline int femap::ISurface::GetStdCurve ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5180)
inline void femap::ISurface::PutStdCurve ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5181)
inline VARIANT_BOOL femap::ISurface::GetStdCurveReverse ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5182)
inline void femap::ISurface::PutStdCurveReverse ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(5183)
inline int femap::ISurface::GetapproachData ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5184)
inline void femap::ISurface::PutapproachData ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5185)
inline int femap::ISurface::GetDivisions ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5186)
inline void femap::ISurface::PutDivisions ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5187)
inline int femap::ISurface::GetMeshPoint ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5188)
inline void femap::ISurface::PutMeshPoint ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5189)
inline int femap::ISurface::GetBoundaryCurve ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5190)
inline void femap::ISurface::PutBoundaryCurve ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5191)
inline int femap::ISurface::GetBoundaryFlag ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5192)
inline void femap::ISurface::PutBoundaryFlag ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5193)
inline enum femap::zReturnCode femap::ISurface::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5194)
inline enum femap::zReturnCode femap::ISurface::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5195)
inline enum femap::zReturnCode femap::ISurface::Inside ( double u, double v ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005", u, v);
    return _result;
}

#pragma implementation_key(5196)
inline enum femap::zReturnCode femap::ISurface::ParamToXYZ ( double u, double v, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x400c", u, v, xyz);
    return _result;
}

#pragma implementation_key(5197)
inline enum femap::zReturnCode femap::ISurface::XYZToParam ( const _variant_t & xyz, double * u, double * v ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4005\x4005", &xyz, u, v);
    return _result;
}

#pragma implementation_key(5198)
inline enum femap::zReturnCode femap::ISurface::cg ( VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", xyz);
    return _result;
}

#pragma implementation_key(5199)
inline enum femap::zReturnCode femap::ISurface::Tangents ( double u, double v, VARIANT * stan, VARIANT * ttan ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x400c\x400c", u, v, stan, ttan);
    return _result;
}

#pragma implementation_key(5200)
inline enum femap::zReturnCode femap::ISurface::normal ( double u, double v, VARIANT * normal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x400c", u, v, normal);
    return _result;
}

#pragma implementation_key(5201)
inline enum femap::zReturnCode femap::ISurface::ProjectOnto ( const _variant_t & initial, double tolerance, VARIANT * projection ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x0005\x400c", &initial, tolerance, projection);
    return _result;
}

#pragma implementation_key(5202)
inline enum femap::zReturnCode femap::ISurface::Curves ( enum zCombinedMode nCombinedMode, int * numCurves, VARIANT * curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numCurves, curveID);
    return _result;
}

#pragma implementation_key(5203)
inline enum femap::zReturnCode femap::ISurface::Points ( enum zCombinedMode nCombinedMode, int * numPoints, VARIANT * pointID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numPoints, pointID);
    return _result;
}

#pragma implementation_key(5204)
inline enum femap::zReturnCode femap::ISurface::EndPoints ( int * numPoints, VARIANT * pointID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numPoints, pointID);
    return _result;
}

#pragma implementation_key(5205)
inline enum femap::zReturnCode femap::ISurface::Planar ( VARIANT * base, VARIANT * normal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c", base, normal);
    return _result;
}

#pragma implementation_key(5206)
inline enum femap::zReturnCode femap::ISurface::Cylindrical ( double * radius, VARIANT * base, VARIANT * Axis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x400c\x400c", radius, base, Axis);
    return _result;
}

#pragma implementation_key(5207)
inline enum femap::zReturnCode femap::ISurface::Area ( double * Area ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", Area);
    return _result;
}

#pragma implementation_key(5208)
inline enum femap::zReturnCode femap::ISurface::Facets ( int * numFacets, VARIANT * xyzFacet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numFacets, xyzFacet);
    return _result;
}

#pragma implementation_key(5209)
inline enum femap::zReturnCode femap::ISurface::Nodes ( VARIANT_BOOL getBoundary, VARIANT_BOOL getInterior, int * numNodes, VARIANT * NodeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x4003\x400c", getBoundary, getInterior, numNodes, NodeID);
    return _result;
}

#pragma implementation_key(5210)
inline enum femap::zReturnCode femap::ISurface::Elements ( int * numElems, VARIANT * elemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numElems, elemID);
    return _result;
}

#pragma implementation_key(5211)
inline enum femap::zReturnCode femap::ISurface::ElementFaces ( VARIANT_BOOL getPlaneElem, VARIANT_BOOL getSolidElem, VARIANT_BOOL requireElemAttach, int * numFaces, VARIANT * elemID, VARIANT * faceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x4003\x400c\x400c", getPlaneElem, getSolidElem, requireElemAttach, numFaces, elemID, faceID);
    return _result;
}

#pragma implementation_key(5212)
inline enum femap::zReturnCode femap::ISurface::ElementsWithFaces ( int * numElems, VARIANT * elemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numElems, elemID);
    return _result;
}

#pragma implementation_key(5213)
inline enum femap::zReturnCode femap::ISurface::IsPlane ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5214)
inline enum femap::zReturnCode femap::ISurface::IsCylinder ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5215)
inline enum femap::zReturnCode femap::ISurface::IsSphere ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5216)
inline enum femap::zReturnCode femap::ISurface::IsCone ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5217)
inline enum femap::zReturnCode femap::ISurface::IsTorus ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5218)
inline enum femap::zReturnCode femap::ISurface::Spherical ( double * radius, VARIANT * center ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x400c", radius, center);
    return _result;
}

#pragma implementation_key(5219)
inline enum femap::zReturnCode femap::ISurface::Conical ( double * radius, double * angle, VARIANT * base, VARIANT * Axis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x400c\x400c", radius, angle, base, Axis);
    return _result;
}

#pragma implementation_key(5220)
inline enum femap::zReturnCode femap::ISurface::Toroidal ( double * radius1, double * radius2, VARIANT * base, VARIANT * Axis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x400c\x400c", radius1, radius2, base, Axis);
    return _result;
}

#pragma implementation_key(5221)
inline enum femap::zReturnCode femap::ISurface::HasPole ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5222)
inline enum femap::zReturnCode femap::ISurface::RationalParamToXYZ ( double u, double v, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x400c", u, v, xyz);
    return _result;
}

#pragma implementation_key(5223)
inline enum femap::zReturnCode femap::ISurface::BoundingBox ( VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", box);
    return _result;
}

#pragma implementation_key(5224)
inline enum femap::zReturnCode femap::ISurface::MaxNormalDeviation ( double dLimit, double * dAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x4005", dLimit, dAngle);
    return _result;
}

#pragma implementation_key(5225)
inline enum femap::zReturnCode femap::ISurface::NormalAtXYZ ( int nLocations, const _variant_t & xyz, VARIANT * normal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", nLocations, &xyz, normal);
    return _result;
}

#pragma implementation_key(5226)
inline enum femap::zReturnCode femap::ISurface::NormalBox ( VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", box);
    return _result;
}

#pragma implementation_key(5227)
inline enum femap::zReturnCode femap::ISurface::BoundarySurfaces ( int * numSurf, VARIANT * surfID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numSurf, surfID);
    return _result;
}

#pragma implementation_key(5228)
inline enum femap::zReturnCode femap::ISurface::AdjacentSurfaces ( enum zCombinedMode nCombinedMode, int * numSurfaces, VARIANT * surfaceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nCombinedMode, numSurfaces, surfaceID);
    return _result;
}

#pragma implementation_key(5229)
inline enum femap::zReturnCode femap::ISurface::BoundarySurfacesAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(5230)
inline enum femap::zReturnCode femap::ISurface::AdjacentSurfacesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5231)
inline enum femap::zReturnCode femap::ISurface::CurvesAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5232)
inline enum femap::zReturnCode femap::ISurface::PointsAsSet ( enum zCombinedMode nCombinedMode, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nCombinedMode, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5233)
inline enum femap::zReturnCode femap::ISurface::EndPointsAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(5234)
inline enum femap::zReturnCode femap::ISurface::ElementsAsSet ( int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bClear);
    return _result;
}

#pragma implementation_key(5235)
inline enum femap::zReturnCode femap::ISurface::NodesAsSet ( VARIANT_BOOL getBoundary, VARIANT_BOOL getInterior, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x000b", getBoundary, getInterior, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5236)
inline enum femap::zReturnCode femap::ISurface::Solid ( int * pnSolidID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", pnSolidID);
    return _result;
}

#pragma implementation_key(5237)
inline enum femap::zReturnCode femap::ISurface::InsideXYZ ( const _variant_t & xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c", &xyz);
    return _result;
}

#pragma implementation_key(5238)
inline enum femap::zReturnCode femap::ISurface::IsBoundingSolidRegion ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5239)
inline enum femap::zReturnCode femap::ISurface::ResetMeshAttr ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5240)
inline enum femap::zReturnCode femap::ISurface::Mesh ( int propID, enum zTopologyType elemShape, VARIANT_BOOL bAllowMapped ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", propID, elemShape, bAllowMapped);
    return _result;
}

#pragma implementation_key(5241)
inline enum femap::zReturnCode femap::ISurface::AngleAtPoint ( int nPtID, double * dAngle, VARIANT * vBisector, VARIANT * vNormal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x400c\x400c", nPtID, dAngle, vBisector, vNormal);
    return _result;
}

#pragma implementation_key(5242)
inline enum femap::zReturnCode femap::ISurface::BoundingSize ( VARIANT * pvDim, VARIANT * pvLongDir, VARIANT * pvNormalDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c\x400c\x400c", pvDim, pvLongDir, pvNormalDir);
    return _result;
}

#pragma implementation_key(5243)
inline enum femap::zReturnCode femap::ISurface::ApproximateArea ( double * Area ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005", Area);
    return _result;
}

#pragma implementation_key(5244)
inline enum femap::zReturnCode femap::ISurface::MinRadiiOfCurvature ( double * pdConcaveRadius, double * pdConvexRadius, VARIANT_BOOL * pbIsPlanar ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x400b", pdConcaveRadius, pdConvexRadius, pbIsPlanar);
    return _result;
}

#pragma implementation_key(5245)
inline enum femap::zReturnCode femap::ISurface::CurveLoops ( enum zCombinedMode nCombinedMode, int * numLoops, int * numCurves, VARIANT * curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x400c", nCombinedMode, numLoops, numCurves, curveID);
    return _result;
}

#pragma implementation_key(5246)
inline enum femap::zReturnCode femap::ISurface::CurvesAtPoint ( int nPtID, int * PrevCurveID, int * NextCurveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003", nPtID, PrevCurveID, NextCurveID);
    return _result;
}

#pragma implementation_key(5247)
inline enum femap::zReturnCode femap::ISurface::CommonCurvesAsSet ( enum zCombinedMode nCombinedMode, int nOtherSurfaceID, int nSetID, VARIANT_BOOL bClear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", nCombinedMode, nOtherSurfaceID, nSetID, bClear);
    return _result;
}

#pragma implementation_key(5248)
inline enum femap::zReturnCode femap::ISurface::FindMappedMeshingCorners ( int nNumDesired, int * pnNumFound, VARIANT * pnCornerList ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nNumDesired, pnNumFound, pnCornerList);
    return _result;
}

#pragma implementation_key(5249)
inline enum femap::zReturnCode femap::ISurface::IsSuppressed ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e58, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5250)
inline enum femap::zReturnCode femap::ISurface::Curvature ( const _variant_t & vXYZ, double * pdRadius1, VARIANT * vCurveDir1, double * pdRadius2, VARIANT * vCurveDir2, VARIANT * vNormDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4005\x400c\x4005\x400c\x400c", &vXYZ, pdRadius1, vCurveDir1, pdRadius2, vCurveDir2, vNormDir);
    return _result;
}

#pragma implementation_key(5251)
inline enum femap::zReturnCode femap::ISurface::IsMappedApproach ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5252)
inline enum femap::zReturnCode femap::ISurface::IsMappable ( VARIANT_BOOL bForceBlends, double dMaxBlendRadius, double dMergeAngle, int * pnNumEdges, VARIANT * pnCornerPoints, VARIANT * pdEdgeLength, int * pnNumEdgeCurves, VARIANT * pnEdgeCurves ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005\x0005\x4003\x400c\x400c\x4003\x400c", bForceBlends, dMaxBlendRadius, dMergeAngle, pnNumEdges, pnCornerPoints, pdEdgeLength, pnNumEdgeCurves, pnEdgeCurves);
    return _result;
}

#pragma implementation_key(5253)
inline enum femap::zReturnCode femap::ISurface::AddMeshPoint ( int nPointID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nPointID);
    return _result;
}

#pragma implementation_key(5254)
inline int femap::ISurface::CountMeshPoint ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e5d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5255)
inline enum femap::zReturnCode femap::ISurface::IsMultiLoop ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5256)
inline enum femap::zReturnCode femap::ISurface::PointLoops ( enum zCombinedMode nCombinedMode, int * numLoops, int * numPoints, VARIANT * pointID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x400c", nCombinedMode, numLoops, numPoints, pointID);
    return _result;
}

#pragma implementation_key(5257)
inline enum femap::zReturnCode femap::ISurface::ProjectToClosest ( const _variant_t & vOrig, VARIANT * vProj ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &vOrig, vProj);
    return _result;
}

#pragma implementation_key(5258)
inline enum femap::zReturnCode femap::ISurface::ProjectAlongVector ( VARIANT_BOOL bBothDirections, const _variant_t & vAlong, const _variant_t & vOrig, VARIANT * vProj ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x000c\x400c", bBothDirections, &vAlong, &vOrig, vProj);
    return _result;
}

#pragma implementation_key(5259)
inline enum femap::zReturnCode femap::ISurface::IsBlend ( int * blendtype, double * dRadius ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4005", blendtype, dRadius);
    return _result;
}

#pragma implementation_key(5260)
inline enum femap::zReturnCode femap::ISurface::BoundingBoxInCSys ( int nCSysID, VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e63, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nCSysID, box);
    return _result;
}

#pragma implementation_key(5261)
inline enum femap::zReturnCode femap::ISurface::RemoveMeshPoint ( int nPointID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e64, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nPointID);
    return _result;
}

#pragma implementation_key(5262)
inline enum femap::zReturnCode femap::ISurface::RemoveAllMeshPoints ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e65, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5263)
inline enum femap::zReturnCode femap::ISurface::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5264)
inline enum femap::zReturnCode femap::ISurface::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5265)
inline enum femap::zReturnCode femap::ISurface::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5266)
inline enum femap::zReturnCode femap::ISurface::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5267)
inline enum femap::zReturnCode femap::ISurface::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5268)
inline enum femap::zReturnCode femap::ISurface::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5269)
inline enum femap::zReturnCode femap::ISurface::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5270)
inline enum femap::zReturnCode femap::ISurface::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5271)
inline enum femap::zReturnCode femap::ISurface::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5272)
inline enum femap::zReturnCode femap::ISurface::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5273)
inline enum femap::zReturnCode femap::ISurface::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5274)
inline enum femap::zReturnCode femap::ISurface::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5275)
inline int femap::ISurface::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5276)
inline int femap::ISurface::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5277)
inline int femap::ISurface::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5278)
inline int femap::ISurface::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5279)
inline enum femap::zReturnCode femap::ISurface::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5280)
inline enum femap::zReturnCode femap::ISurface::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5281)
inline enum femap::zReturnCode femap::ISurface::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5282)
inline enum femap::zReturnCode femap::ISurface::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5283)
inline enum femap::zReturnCode femap::ISurface::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5284)
inline int femap::ISurface::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5285)
inline enum femap::zReturnCode femap::ISurface::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5286)
inline enum femap::zReturnCode femap::ISurface::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5287)
inline enum femap::zReturnCode femap::ISurface::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5288)
inline int femap::ISurface::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5289)
inline enum femap::zReturnCode femap::ISurface::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5290)
inline enum femap::zReturnCode femap::ISurface::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5291)
inline enum femap::zSurfaceType femap::ISurface::Gettype ( ) {
    enum zSurfaceType _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5292)
inline void femap::ISurface::Puttype ( enum zSurfaceType _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(5293)
inline int femap::ISurface::GetattrPID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5294)
inline void femap::ISurface::PutattrPID ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(5295)
inline double femap::ISurface::GetattrOffset ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5296)
inline void femap::ISurface::PutattrOffset ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(5297)
inline enum femap::zMeshApproach femap::ISurface::Getapproach ( ) {
    enum zMeshApproach _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5298)
inline void femap::ISurface::Putapproach ( enum zMeshApproach _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(5299)
inline enum femap::zColor femap::ISurface::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5300)
inline void femap::ISurface::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(5301)
inline int femap::ISurface::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5302)
inline void femap::ISurface::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(5303)
inline int femap::ISurface::GetAddress ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5304)
inline void femap::ISurface::PutAddress ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(5305)
inline int femap::ISurface::GetEngine ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5306)
inline void femap::ISurface::PutEngine ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(5307)
inline VARIANT_BOOL femap::ISurface::GetSuppressed ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5308)
inline void femap::ISurface::PutSuppressed ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271c, VT_BOOL, _val);
}

#pragma implementation_key(5309)
inline double femap::ISurface::GetMeshSizeInterior ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5310)
inline void femap::ISurface::PutMeshSizeInterior ( double _val ) {
    _com_dispatch_propput(this, 0x271d, VT_R8, _val);
}

#pragma implementation_key(5311)
inline double femap::ISurface::GetMeshSizeChord ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5312)
inline void femap::ISurface::PutMeshSizeChord ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(5313)
inline int femap::ISurface::GetBoundaryMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5314)
inline void femap::ISurface::PutBoundaryMode ( int _val ) {
    _com_dispatch_propput(this, 0x2722, VT_I4, _val);
}

#pragma implementation_key(5315)
inline int femap::ISurface::GetBoundaryOnSurface ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5316)
inline void femap::ISurface::PutBoundaryOnSurface ( int _val ) {
    _com_dispatch_propput(this, 0x2723, VT_I4, _val);
}

#pragma implementation_key(5317)
inline _variant_t femap::ISurface::GetvStdCurve ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2724, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5318)
inline void femap::ISurface::PutvStdCurve ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2724, VT_VARIANT, &_val);
}

#pragma implementation_key(5319)
inline _variant_t femap::ISurface::GetvStdCurveReverse ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2725, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5320)
inline void femap::ISurface::PutvStdCurveReverse ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2725, VT_VARIANT, &_val);
}

#pragma implementation_key(5321)
inline _variant_t femap::ISurface::GetvapproachData ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2726, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5322)
inline void femap::ISurface::PutvapproachData ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2726, VT_VARIANT, &_val);
}

#pragma implementation_key(5323)
inline _variant_t femap::ISurface::GetvDivisions ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2727, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5324)
inline void femap::ISurface::PutvDivisions ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2727, VT_VARIANT, &_val);
}

#pragma implementation_key(5325)
inline _variant_t femap::ISurface::GetvMeshPoint ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2728, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5326)
inline void femap::ISurface::PutvMeshPoint ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2728, VT_VARIANT, &_val);
}

#pragma implementation_key(5327)
inline _variant_t femap::ISurface::GetvBoundaryCurve ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2729, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5328)
inline void femap::ISurface::PutvBoundaryCurve ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2729, VT_VARIANT, &_val);
}

#pragma implementation_key(5329)
inline _variant_t femap::ISurface::GetvBoundaryFlag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x272a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5330)
inline void femap::ISurface::PutvBoundaryFlag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x272a, VT_VARIANT, &_val);
}

#pragma implementation_key(5331)
inline int femap::ISurface::GetQuadMeshLayers ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5332)
inline void femap::ISurface::PutQuadMeshLayers ( int _val ) {
    _com_dispatch_propput(this, 0x272b, VT_I4, _val);
}

#pragma implementation_key(5333)
inline int femap::ISurface::GetInternalToBoundary ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5334)
inline void femap::ISurface::PutInternalToBoundary ( int _val ) {
    _com_dispatch_propput(this, 0x272c, VT_I4, _val);
}

#pragma implementation_key(5335)
inline enum femap::zTopologyType femap::ISurface::GetattrTopology ( ) {
    enum zTopologyType _result;
    _com_dispatch_propget(this, 0x272d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5336)
inline void femap::ISurface::PutattrTopology ( enum zTopologyType _val ) {
    _com_dispatch_propput(this, 0x272d, VT_I4, _val);
}

#pragma implementation_key(5337)
inline enum femap::zMesherType femap::ISurface::GetattrMesher ( ) {
    enum zMesherType _result;
    _com_dispatch_propget(this, 0x272e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5338)
inline void femap::ISurface::PutattrMesher ( enum zMesherType _val ) {
    _com_dispatch_propput(this, 0x272e, VT_I4, _val);
}

#pragma implementation_key(5339)
inline int femap::ISurface::GetattrMappedLevel ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5340)
inline void femap::ISurface::PutattrMappedLevel ( int _val ) {
    _com_dispatch_propput(this, 0x272f, VT_I4, _val);
}

#pragma implementation_key(5341)
inline VARIANT_BOOL femap::ISurface::GetattrMapSubdivisions ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5342)
inline void femap::ISurface::PutattrMapSubdivisions ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2730, VT_BOOL, _val);
}

#pragma implementation_key(5343)
inline VARIANT_BOOL femap::ISurface::GetattrMapEqualOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5344)
inline void femap::ISurface::PutattrMapEqualOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2731, VT_BOOL, _val);
}

#pragma implementation_key(5345)
inline VARIANT_BOOL femap::ISurface::GetattrMapAltTri ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5346)
inline void femap::ISurface::PutattrMapAltTri ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2732, VT_BOOL, _val);
}

#pragma implementation_key(5347)
inline VARIANT_BOOL femap::ISurface::GetattrMapRightBias ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5348)
inline void femap::ISurface::PutattrMapRightBias ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2733, VT_BOOL, _val);
}

#pragma implementation_key(5349)
inline double femap::ISurface::GetattrMapAngleDeviation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5350)
inline void femap::ISurface::PutattrMapAngleDeviation ( double _val ) {
    _com_dispatch_propput(this, 0x2734, VT_R8, _val);
}

#pragma implementation_key(5351)
inline double femap::ISurface::GetattrMapMinCornerAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5352)
inline void femap::ISurface::PutattrMapMinCornerAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2735, VT_R8, _val);
}

#pragma implementation_key(5353)
inline VARIANT_BOOL femap::ISurface::GetattrMidsideGeom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5354)
inline void femap::ISurface::PutattrMidsideGeom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2736, VT_BOOL, _val);
}

#pragma implementation_key(5355)
inline double femap::ISurface::GetattrMidsideAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5356)
inline void femap::ISurface::PutattrMidsideAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2737, VT_R8, _val);
}

#pragma implementation_key(5357)
inline int femap::ISurface::GetattrMinBetween ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5358)
inline void femap::ISurface::PutattrMinBetween ( int _val ) {
    _com_dispatch_propput(this, 0x2738, VT_I4, _val);
}

#pragma implementation_key(5359)
inline double femap::ISurface::GetattrMaxAspect ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5360)
inline void femap::ISurface::PutattrMaxAspect ( double _val ) {
    _com_dispatch_propput(this, 0x2739, VT_R8, _val);
}

#pragma implementation_key(5361)
inline int femap::ISurface::GetattrQuickCutNodes ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5362)
inline void femap::ISurface::PutattrQuickCutNodes ( int _val ) {
    _com_dispatch_propput(this, 0x273a, VT_I4, _val);
}

#pragma implementation_key(5363)
inline double femap::ISurface::GetattrQuadCutAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5364)
inline void femap::ISurface::PutattrQuadCutAngle ( double _val ) {
    _com_dispatch_propput(this, 0x273b, VT_R8, _val);
}

#pragma implementation_key(5365)
inline VARIANT_BOOL femap::ISurface::GetattrSmoothLaplacian ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5366)
inline void femap::ISurface::PutattrSmoothLaplacian ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273c, VT_BOOL, _val);
}

#pragma implementation_key(5367)
inline int femap::ISurface::GetattrSmoothIter ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5368)
inline void femap::ISurface::PutattrSmoothIter ( int _val ) {
    _com_dispatch_propput(this, 0x273d, VT_I4, _val);
}

#pragma implementation_key(5369)
inline double femap::ISurface::GetattrSmoothTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5370)
inline void femap::ISurface::PutattrSmoothTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x273e, VT_R8, _val);
}

#pragma implementation_key(5371)
inline VARIANT_BOOL femap::ISurface::GetattrConnectEdgeNodes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5372)
inline void femap::ISurface::PutattrConnectEdgeNodes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273f, VT_BOOL, _val);
}

#pragma implementation_key(5373)
inline double femap::ISurface::GetattrConnectEdgeNodeTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5374)
inline void femap::ISurface::PutattrConnectEdgeNodeTol ( double _val ) {
    _com_dispatch_propput(this, 0x2740, VT_R8, _val);
}

#pragma implementation_key(5375)
inline enum femap::zMeshOffsetFrom femap::ISurface::GetattrOffsetFrom ( ) {
    enum zMeshOffsetFrom _result;
    _com_dispatch_propget(this, 0x2741, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5376)
inline void femap::ISurface::PutattrOffsetFrom ( enum zMeshOffsetFrom _val ) {
    _com_dispatch_propput(this, 0x2741, VT_I4, _val);
}

#pragma implementation_key(5377)
inline VARIANT_BOOL femap::ISurface::GetattrInitialized ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5378)
inline void femap::ISurface::PutattrInitialized ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2742, VT_BOOL, _val);
}

#pragma implementation_key(5379)
inline VARIANT_BOOL femap::ISurface::GetattrPostMeshCleanup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2743, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5380)
inline void femap::ISurface::PutattrPostMeshCleanup ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2743, VT_BOOL, _val);
}

#pragma implementation_key(5381)
inline VARIANT_BOOL femap::ISurface::GetattrMapSplitQuads ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5382)
inline void femap::ISurface::PutattrMapSplitQuads ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2744, VT_BOOL, _val);
}

#pragma implementation_key(5383)
inline double femap::ISurface::GetScaleFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5384)
inline void femap::ISurface::PutScaleFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2745, VT_R8, _val);
}

#pragma implementation_key(5385)
inline VARIANT_BOOL femap::ISurface::GetattrVertexLoopsAsHardPoints ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5386)
inline void femap::ISurface::PutattrVertexLoopsAsHardPoints ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2746, VT_BOOL, _val);
}

#pragma implementation_key(5387)
inline VARIANT_BOOL femap::ISurface::GetattrMaxQuads ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5388)
inline void femap::ISurface::PutattrMaxQuads ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2747, VT_BOOL, _val);
}

#pragma implementation_key(5389)
inline int femap::ISurface::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5390)
inline void femap::ISurface::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5391)
inline int femap::ISurface::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5392)
inline void femap::ISurface::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5393)
inline int femap::ISurface::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5394)
inline void femap::ISurface::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ITmgBC wrapper method implementations
//

#pragma implementation_key(5395)
inline int femap::ITmgBC::Geti ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5396)
inline void femap::ITmgBC::Puti ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5397)
inline double femap::ITmgBC::Getr ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5398)
inline void femap::ITmgBC::Putr ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5399)
inline int femap::ITmgBC::Getc ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5400)
inline void femap::ITmgBC::Putc ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5401)
inline VARIANT_BOOL femap::ITmgBC::Getb ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5402)
inline void femap::ITmgBC::Putb ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(5403)
inline enum femap::zReturnCode femap::ITmgBC::GetAll ( int entID, VARIANT * i, VARIANT * r, VARIANT * c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c", entID, i, r, c);
    return _result;
}

#pragma implementation_key(5404)
inline enum femap::zReturnCode femap::ITmgBC::PutAll ( int entID, const _variant_t & i, const _variant_t & r, const _variant_t & c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", entID, &i, &r, &c);
    return _result;
}

#pragma implementation_key(5405)
inline enum femap::zReturnCode femap::ITmgBC::GetAll2 ( int entID, VARIANT * i, VARIANT * r, VARIANT * b, VARIANT * c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c\x400c", entID, i, r, b, c);
    return _result;
}

#pragma implementation_key(5406)
inline enum femap::zReturnCode femap::ITmgBC::PutAll2 ( int entID, const _variant_t & i, const _variant_t & r, const _variant_t & b, const _variant_t & c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", entID, &i, &r, &b, &c);
    return _result;
}

#pragma implementation_key(5407)
inline enum femap::zReturnCode femap::ITmgBC::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5408)
inline enum femap::zReturnCode femap::ITmgBC::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5409)
inline enum femap::zReturnCode femap::ITmgBC::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5410)
inline enum femap::zReturnCode femap::ITmgBC::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5411)
inline enum femap::zReturnCode femap::ITmgBC::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5412)
inline enum femap::zReturnCode femap::ITmgBC::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5413)
inline enum femap::zReturnCode femap::ITmgBC::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5414)
inline enum femap::zReturnCode femap::ITmgBC::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5415)
inline enum femap::zReturnCode femap::ITmgBC::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5416)
inline enum femap::zReturnCode femap::ITmgBC::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5417)
inline enum femap::zReturnCode femap::ITmgBC::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5418)
inline enum femap::zReturnCode femap::ITmgBC::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5419)
inline enum femap::zReturnCode femap::ITmgBC::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5420)
inline enum femap::zReturnCode femap::ITmgBC::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5421)
inline int femap::ITmgBC::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5422)
inline int femap::ITmgBC::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5423)
inline int femap::ITmgBC::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5424)
inline int femap::ITmgBC::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5425)
inline enum femap::zReturnCode femap::ITmgBC::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5426)
inline enum femap::zReturnCode femap::ITmgBC::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5427)
inline enum femap::zReturnCode femap::ITmgBC::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5428)
inline enum femap::zReturnCode femap::ITmgBC::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5429)
inline enum femap::zReturnCode femap::ITmgBC::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5430)
inline int femap::ITmgBC::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5431)
inline enum femap::zReturnCode femap::ITmgBC::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5432)
inline enum femap::zReturnCode femap::ITmgBC::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5433)
inline enum femap::zReturnCode femap::ITmgBC::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5434)
inline int femap::ITmgBC::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5435)
inline enum femap::zReturnCode femap::ITmgBC::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5436)
inline enum femap::zReturnCode femap::ITmgBC::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5437)
inline _variant_t femap::ITmgBC::Getvi ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2713, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5438)
inline void femap::ITmgBC::Putvi ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2713, VT_VARIANT, &_val);
}

#pragma implementation_key(5439)
inline _variant_t femap::ITmgBC::Getvr ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5440)
inline void femap::ITmgBC::Putvr ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(5441)
inline _variant_t femap::ITmgBC::Getvc ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5442)
inline void femap::ITmgBC::Putvc ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(5443)
inline _variant_t femap::ITmgBC::Getvb ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2716, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5444)
inline void femap::ITmgBC::Putvb ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2716, VT_VARIANT, &_val);
}

#pragma implementation_key(5445)
inline int femap::ITmgBC::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5446)
inline void femap::ITmgBC::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5447)
inline int femap::ITmgBC::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5448)
inline void femap::ITmgBC::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5449)
inline int femap::ITmgBC::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5450)
inline void femap::ITmgBC::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ITmgCtl wrapper method implementations
//

#pragma implementation_key(5451)
inline int femap::ITmgCtl::Geti ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5452)
inline void femap::ITmgCtl::Puti ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5453)
inline double femap::ITmgCtl::Getr ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5454)
inline void femap::ITmgCtl::Putr ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5455)
inline VARIANT_BOOL femap::ITmgCtl::Getb ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5456)
inline void femap::ITmgCtl::Putb ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(5457)
inline int femap::ITmgCtl::Getc ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5458)
inline void femap::ITmgCtl::Putc ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5459)
inline enum femap::zReturnCode femap::ITmgCtl::GetAll ( int entID, VARIANT * i, VARIANT * r, VARIANT * b, VARIANT * c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c\x400c", entID, i, r, b, c);
    return _result;
}

#pragma implementation_key(5460)
inline enum femap::zReturnCode femap::ITmgCtl::PutAll ( int entID, const _variant_t & i, const _variant_t & r, const _variant_t & b, const _variant_t & c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", entID, &i, &r, &b, &c);
    return _result;
}

#pragma implementation_key(5461)
inline enum femap::zReturnCode femap::ITmgCtl::GetAll2 ( int entID, VARIANT * i, VARIANT * r, VARIANT * b, VARIANT * c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c\x400c", entID, i, r, b, c);
    return _result;
}

#pragma implementation_key(5462)
inline enum femap::zReturnCode femap::ITmgCtl::PutAll2 ( int entID, const _variant_t & i, const _variant_t & r, const _variant_t & b, const _variant_t & c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", entID, &i, &r, &b, &c);
    return _result;
}

#pragma implementation_key(5463)
inline enum femap::zReturnCode femap::ITmgCtl::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5464)
inline enum femap::zReturnCode femap::ITmgCtl::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5465)
inline enum femap::zReturnCode femap::ITmgCtl::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5466)
inline enum femap::zReturnCode femap::ITmgCtl::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5467)
inline enum femap::zReturnCode femap::ITmgCtl::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5468)
inline enum femap::zReturnCode femap::ITmgCtl::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5469)
inline enum femap::zReturnCode femap::ITmgCtl::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5470)
inline enum femap::zReturnCode femap::ITmgCtl::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5471)
inline enum femap::zReturnCode femap::ITmgCtl::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5472)
inline enum femap::zReturnCode femap::ITmgCtl::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5473)
inline enum femap::zReturnCode femap::ITmgCtl::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5474)
inline enum femap::zReturnCode femap::ITmgCtl::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5475)
inline enum femap::zReturnCode femap::ITmgCtl::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5476)
inline enum femap::zReturnCode femap::ITmgCtl::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5477)
inline int femap::ITmgCtl::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5478)
inline int femap::ITmgCtl::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5479)
inline int femap::ITmgCtl::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5480)
inline int femap::ITmgCtl::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5481)
inline enum femap::zReturnCode femap::ITmgCtl::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5482)
inline enum femap::zReturnCode femap::ITmgCtl::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5483)
inline enum femap::zReturnCode femap::ITmgCtl::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5484)
inline enum femap::zReturnCode femap::ITmgCtl::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5485)
inline enum femap::zReturnCode femap::ITmgCtl::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5486)
inline int femap::ITmgCtl::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5487)
inline enum femap::zReturnCode femap::ITmgCtl::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5488)
inline enum femap::zReturnCode femap::ITmgCtl::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5489)
inline enum femap::zReturnCode femap::ITmgCtl::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5490)
inline int femap::ITmgCtl::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5491)
inline enum femap::zReturnCode femap::ITmgCtl::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5492)
inline enum femap::zReturnCode femap::ITmgCtl::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5493)
inline _variant_t femap::ITmgCtl::Getvi ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5494)
inline void femap::ITmgCtl::Putvi ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(5495)
inline _variant_t femap::ITmgCtl::Getvr ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5496)
inline void femap::ITmgCtl::Putvr ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(5497)
inline _variant_t femap::ITmgCtl::Getvb ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2716, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5498)
inline void femap::ITmgCtl::Putvb ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2716, VT_VARIANT, &_val);
}

#pragma implementation_key(5499)
inline _variant_t femap::ITmgCtl::Getvc ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5500)
inline void femap::ITmgCtl::Putvc ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(5501)
inline int femap::ITmgCtl::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5502)
inline void femap::ITmgCtl::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5503)
inline int femap::ITmgCtl::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5504)
inline void femap::ITmgCtl::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5505)
inline int femap::ITmgCtl::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5506)
inline void femap::ITmgCtl::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ITmgInt wrapper method implementations
//

#pragma implementation_key(5507)
inline int femap::ITmgInt::Geti ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5508)
inline void femap::ITmgInt::Puti ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5509)
inline enum femap::zReturnCode femap::ITmgInt::GetAll ( int entID, VARIANT * i ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", entID, i);
    return _result;
}

#pragma implementation_key(5510)
inline enum femap::zReturnCode femap::ITmgInt::PutAll ( int entID, const _variant_t & i ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", entID, &i);
    return _result;
}

#pragma implementation_key(5511)
inline enum femap::zReturnCode femap::ITmgInt::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5512)
inline enum femap::zReturnCode femap::ITmgInt::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5513)
inline enum femap::zReturnCode femap::ITmgInt::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5514)
inline enum femap::zReturnCode femap::ITmgInt::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5515)
inline enum femap::zReturnCode femap::ITmgInt::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5516)
inline enum femap::zReturnCode femap::ITmgInt::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5517)
inline enum femap::zReturnCode femap::ITmgInt::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5518)
inline enum femap::zReturnCode femap::ITmgInt::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5519)
inline enum femap::zReturnCode femap::ITmgInt::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5520)
inline enum femap::zReturnCode femap::ITmgInt::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5521)
inline enum femap::zReturnCode femap::ITmgInt::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5522)
inline enum femap::zReturnCode femap::ITmgInt::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5523)
inline enum femap::zReturnCode femap::ITmgInt::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5524)
inline enum femap::zReturnCode femap::ITmgInt::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5525)
inline int femap::ITmgInt::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5526)
inline int femap::ITmgInt::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5527)
inline int femap::ITmgInt::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5528)
inline int femap::ITmgInt::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5529)
inline enum femap::zReturnCode femap::ITmgInt::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5530)
inline enum femap::zReturnCode femap::ITmgInt::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5531)
inline enum femap::zReturnCode femap::ITmgInt::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5532)
inline enum femap::zReturnCode femap::ITmgInt::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5533)
inline enum femap::zReturnCode femap::ITmgInt::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5534)
inline int femap::ITmgInt::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5535)
inline enum femap::zReturnCode femap::ITmgInt::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5536)
inline enum femap::zReturnCode femap::ITmgInt::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5537)
inline enum femap::zReturnCode femap::ITmgInt::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5538)
inline int femap::ITmgInt::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5539)
inline enum femap::zReturnCode femap::ITmgInt::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5540)
inline enum femap::zReturnCode femap::ITmgInt::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5541)
inline _variant_t femap::ITmgInt::Getvi ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2711, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5542)
inline void femap::ITmgInt::Putvi ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2711, VT_VARIANT, &_val);
}

#pragma implementation_key(5543)
inline int femap::ITmgInt::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5544)
inline void femap::ITmgInt::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5545)
inline int femap::ITmgInt::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5546)
inline void femap::ITmgInt::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5547)
inline int femap::ITmgInt::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5548)
inline void femap::ITmgInt::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ITmgOpt wrapper method implementations
//

#pragma implementation_key(5549)
inline int femap::ITmgOpt::Geti ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5550)
inline void femap::ITmgOpt::Puti ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5551)
inline double femap::ITmgOpt::Getr ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5552)
inline void femap::ITmgOpt::Putr ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5553)
inline int femap::ITmgOpt::Getc ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5554)
inline void femap::ITmgOpt::Putc ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5555)
inline enum femap::zReturnCode femap::ITmgOpt::GetAll ( int entID, VARIANT * i, VARIANT * r, VARIANT * c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c", entID, i, r, c);
    return _result;
}

#pragma implementation_key(5556)
inline enum femap::zReturnCode femap::ITmgOpt::PutAll ( int entID, const _variant_t & i, const _variant_t & r, const _variant_t & c ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", entID, &i, &r, &c);
    return _result;
}

#pragma implementation_key(5557)
inline enum femap::zReturnCode femap::ITmgOpt::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5558)
inline enum femap::zReturnCode femap::ITmgOpt::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5559)
inline enum femap::zReturnCode femap::ITmgOpt::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5560)
inline enum femap::zReturnCode femap::ITmgOpt::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5561)
inline enum femap::zReturnCode femap::ITmgOpt::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5562)
inline enum femap::zReturnCode femap::ITmgOpt::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5563)
inline enum femap::zReturnCode femap::ITmgOpt::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5564)
inline enum femap::zReturnCode femap::ITmgOpt::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5565)
inline enum femap::zReturnCode femap::ITmgOpt::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5566)
inline enum femap::zReturnCode femap::ITmgOpt::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5567)
inline enum femap::zReturnCode femap::ITmgOpt::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5568)
inline enum femap::zReturnCode femap::ITmgOpt::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5569)
inline enum femap::zReturnCode femap::ITmgOpt::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5570)
inline enum femap::zReturnCode femap::ITmgOpt::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5571)
inline int femap::ITmgOpt::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5572)
inline int femap::ITmgOpt::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5573)
inline int femap::ITmgOpt::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5574)
inline int femap::ITmgOpt::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5575)
inline enum femap::zReturnCode femap::ITmgOpt::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5576)
inline enum femap::zReturnCode femap::ITmgOpt::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5577)
inline enum femap::zReturnCode femap::ITmgOpt::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5578)
inline enum femap::zReturnCode femap::ITmgOpt::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5579)
inline enum femap::zReturnCode femap::ITmgOpt::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5580)
inline int femap::ITmgOpt::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5581)
inline enum femap::zReturnCode femap::ITmgOpt::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5582)
inline enum femap::zReturnCode femap::ITmgOpt::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5583)
inline enum femap::zReturnCode femap::ITmgOpt::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5584)
inline int femap::ITmgOpt::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5585)
inline enum femap::zReturnCode femap::ITmgOpt::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5586)
inline enum femap::zReturnCode femap::ITmgOpt::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5587)
inline _variant_t femap::ITmgOpt::Getvi ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2713, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5588)
inline void femap::ITmgOpt::Putvi ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2713, VT_VARIANT, &_val);
}

#pragma implementation_key(5589)
inline _variant_t femap::ITmgOpt::Getvr ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5590)
inline void femap::ITmgOpt::Putvr ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(5591)
inline _variant_t femap::ITmgOpt::Getvc ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5592)
inline void femap::ITmgOpt::Putvc ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(5593)
inline int femap::ITmgOpt::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5594)
inline void femap::ITmgOpt::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5595)
inline int femap::ITmgOpt::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5596)
inline void femap::ITmgOpt::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5597)
inline int femap::ITmgOpt::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5598)
inline void femap::ITmgOpt::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ITmgReal wrapper method implementations
//

#pragma implementation_key(5599)
inline int femap::ITmgReal::Geti ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5600)
inline void femap::ITmgReal::Puti ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5601)
inline double femap::ITmgReal::Getr ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5602)
inline void femap::ITmgReal::Putr ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5603)
inline enum femap::zReturnCode femap::ITmgReal::GetAll ( int entID, VARIANT * i, VARIANT * r ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c", entID, i, r);
    return _result;
}

#pragma implementation_key(5604)
inline enum femap::zReturnCode femap::ITmgReal::PutAll ( int entID, const _variant_t & i, const _variant_t & r ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", entID, &i, &r);
    return _result;
}

#pragma implementation_key(5605)
inline enum femap::zReturnCode femap::ITmgReal::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5606)
inline enum femap::zReturnCode femap::ITmgReal::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5607)
inline enum femap::zReturnCode femap::ITmgReal::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5608)
inline enum femap::zReturnCode femap::ITmgReal::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5609)
inline enum femap::zReturnCode femap::ITmgReal::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5610)
inline enum femap::zReturnCode femap::ITmgReal::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5611)
inline enum femap::zReturnCode femap::ITmgReal::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5612)
inline enum femap::zReturnCode femap::ITmgReal::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5613)
inline enum femap::zReturnCode femap::ITmgReal::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5614)
inline enum femap::zReturnCode femap::ITmgReal::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5615)
inline enum femap::zReturnCode femap::ITmgReal::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5616)
inline enum femap::zReturnCode femap::ITmgReal::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5617)
inline enum femap::zReturnCode femap::ITmgReal::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5618)
inline enum femap::zReturnCode femap::ITmgReal::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5619)
inline int femap::ITmgReal::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5620)
inline int femap::ITmgReal::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5621)
inline int femap::ITmgReal::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5622)
inline int femap::ITmgReal::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5623)
inline enum femap::zReturnCode femap::ITmgReal::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5624)
inline enum femap::zReturnCode femap::ITmgReal::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5625)
inline enum femap::zReturnCode femap::ITmgReal::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5626)
inline enum femap::zReturnCode femap::ITmgReal::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5627)
inline enum femap::zReturnCode femap::ITmgReal::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5628)
inline int femap::ITmgReal::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5629)
inline enum femap::zReturnCode femap::ITmgReal::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5630)
inline enum femap::zReturnCode femap::ITmgReal::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5631)
inline enum femap::zReturnCode femap::ITmgReal::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5632)
inline int femap::ITmgReal::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5633)
inline enum femap::zReturnCode femap::ITmgReal::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5634)
inline enum femap::zReturnCode femap::ITmgReal::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5635)
inline _variant_t femap::ITmgReal::Getvi ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2712, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5636)
inline void femap::ITmgReal::Putvi ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2712, VT_VARIANT, &_val);
}

#pragma implementation_key(5637)
inline _variant_t femap::ITmgReal::Getvr ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2713, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5638)
inline void femap::ITmgReal::Putvr ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2713, VT_VARIANT, &_val);
}

#pragma implementation_key(5639)
inline int femap::ITmgReal::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5640)
inline void femap::ITmgReal::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5641)
inline int femap::ITmgReal::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5642)
inline void femap::ITmgReal::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5643)
inline int femap::ITmgReal::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5644)
inline void femap::ITmgReal::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IVar wrapper method implementations
//

#pragma implementation_key(5645)
inline int femap::IVar::GetVarID ( _bstr_t varname ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)varname);
    return _result;
}

#pragma implementation_key(5646)
inline double femap::IVar::Evaluate ( ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_R8, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5647)
inline enum femap::zReturnCode femap::IVar::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5648)
inline enum femap::zReturnCode femap::IVar::Define ( _bstr_t varname, _bstr_t Equation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008", (BSTR)varname, (BSTR)Equation);
    return _result;
}

#pragma implementation_key(5649)
inline enum femap::zReturnCode femap::IVar::DefineReal ( _bstr_t varname, double value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005", (BSTR)varname, value);
    return _result;
}

#pragma implementation_key(5650)
inline enum femap::zReturnCode femap::IVar::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5651)
inline enum femap::zReturnCode femap::IVar::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5652)
inline enum femap::zReturnCode femap::IVar::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5653)
inline enum femap::zReturnCode femap::IVar::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5654)
inline enum femap::zReturnCode femap::IVar::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5655)
inline enum femap::zReturnCode femap::IVar::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5656)
inline enum femap::zReturnCode femap::IVar::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5657)
inline enum femap::zReturnCode femap::IVar::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5658)
inline enum femap::zReturnCode femap::IVar::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5659)
inline enum femap::zReturnCode femap::IVar::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5660)
inline enum femap::zReturnCode femap::IVar::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5661)
inline enum femap::zReturnCode femap::IVar::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5662)
inline enum femap::zReturnCode femap::IVar::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5663)
inline int femap::IVar::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5664)
inline int femap::IVar::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5665)
inline int femap::IVar::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5666)
inline int femap::IVar::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5667)
inline enum femap::zReturnCode femap::IVar::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5668)
inline enum femap::zReturnCode femap::IVar::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5669)
inline enum femap::zReturnCode femap::IVar::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5670)
inline enum femap::zReturnCode femap::IVar::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5671)
inline enum femap::zReturnCode femap::IVar::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5672)
inline int femap::IVar::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5673)
inline enum femap::zReturnCode femap::IVar::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5674)
inline enum femap::zReturnCode femap::IVar::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5675)
inline enum femap::zReturnCode femap::IVar::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5676)
inline int femap::IVar::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5677)
inline enum femap::zReturnCode femap::IVar::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5678)
inline enum femap::zReturnCode femap::IVar::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5679)
inline double femap::IVar::Getvalue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5680)
inline void femap::IVar::Putvalue ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(5681)
inline _bstr_t femap::IVar::Getvarname ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5682)
inline void femap::IVar::Putvarname ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5683)
inline _bstr_t femap::IVar::GetEquation ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5684)
inline void femap::IVar::PutEquation ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5685)
inline int femap::IVar::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5686)
inline void femap::IVar::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(5687)
inline int femap::IVar::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5688)
inline void femap::IVar::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(5689)
inline int femap::IVar::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5690)
inline void femap::IVar::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IView wrapper method implementations
//

#pragma implementation_key(5691)
inline double femap::IView::Getrotation ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5692)
inline void femap::IView::Putrotation ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5693)
inline double femap::IView::Getcenter ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5694)
inline void femap::IView::Putcenter ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5695)
inline int femap::IView::GetXYOutputSet ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5696)
inline void femap::IView::PutXYOutputSet ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5697)
inline int femap::IView::GetXYOutputData ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5698)
inline void femap::IView::PutXYOutputData ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5699)
inline int femap::IView::GetXYOutputEntity ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5700)
inline void femap::IView::PutXYOutputEntity ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5701)
inline double femap::IView::GetLight ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5702)
inline void femap::IView::PutLight ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5703)
inline double femap::IView::GetAxisLocation ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5704)
inline void femap::IView::PutAxisLocation ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5705)
inline int femap::IView::GetUserContourLevel ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5706)
inline void femap::IView::PutUserContourLevel ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5707)
inline double femap::IView::GetUserContourValue ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5708)
inline void femap::IView::PutUserContourValue ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5709)
inline enum femap::zColor femap::IView::GetContourColor ( int nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5710)
inline void femap::IView::PutContourColor ( int nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5711)
inline double femap::IView::GetXYScale ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5712)
inline void femap::IView::PutXYScale ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5713)
inline int femap::IView::GetColorMode ( enum zViewOptions nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5714)
inline void femap::IView::PutColorMode ( enum zViewOptions nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5715)
inline enum femap::zColor femap::IView::Getcolor ( enum zViewOptions nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5716)
inline void femap::IView::Putcolor ( enum zViewOptions nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5717)
inline VARIANT_BOOL femap::IView::GetDraw ( enum zViewOptions nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5718)
inline void femap::IView::PutDraw ( enum zViewOptions nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(5719)
inline int femap::IView::GetLabel ( enum zViewOptions nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5720)
inline void femap::IView::PutLabel ( enum zViewOptions nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5721)
inline double femap::IView::GetPrevCenter ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5722)
inline void femap::IView::PutPrevCenter ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5723)
inline double femap::IView::GetSectionBase ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5724)
inline void femap::IView::PutSectionBase ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5725)
inline double femap::IView::GetSectionNormal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4661, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5726)
inline void femap::IView::PutSectionNormal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4661, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5727)
inline double femap::IView::GetSection2Base ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4662, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5728)
inline void femap::IView::PutSection2Base ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4662, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5729)
inline double femap::IView::GetSection2Normal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4663, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5730)
inline void femap::IView::PutSection2Normal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4663, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5731)
inline double femap::IView::GetSection3Base ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4664, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5732)
inline void femap::IView::PutSection3Base ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4664, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5733)
inline double femap::IView::GetSection3Normal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4665, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5734)
inline void femap::IView::PutSection3Normal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4665, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5735)
inline int femap::IView::GetFunction ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4666, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5736)
inline void femap::IView::PutFunction ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4666, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5737)
inline int femap::IView::GetXYSetRange ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5738)
inline void femap::IView::PutXYSetRange ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5739)
inline int femap::IView::GetContourVecID1 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5740)
inline void femap::IView::PutContourVecID1 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5741)
inline int femap::IView::GetContourVecID2 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5742)
inline void femap::IView::PutContourVecID2 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5743)
inline int femap::IView::GetContourVecID3 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5744)
inline void femap::IView::PutContourVecID3 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5745)
inline double femap::IView::GetContourVecDir ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5746)
inline void femap::IView::PutContourVecDir ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5747)
inline double femap::IView::GetSpotlightDir ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x466c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5748)
inline void femap::IView::PutSpotlightDir ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x466c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5749)
inline double femap::IView::GetRotationCenter ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4672, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5750)
inline void femap::IView::PutRotationCenter ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4672, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5751)
inline double femap::IView::GetRotationVector ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4673, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5752)
inline void femap::IView::PutRotationVector ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4673, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5753)
inline double femap::IView::GetLogoLocation ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4674, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5754)
inline void femap::IView::PutLogoLocation ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4674, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5755)
inline double femap::IView::GetStreamLineLocation ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4675, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5756)
inline void femap::IView::PutStreamLineLocation ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4675, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5757)
inline enum femap::zColor femap::IView::GetUserContourPalette ( int nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x4676, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5758)
inline void femap::IView::PutUserContourPalette ( int nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x4676, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(5759)
inline double femap::IView::GetPrevRotation ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4677, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5760)
inline void femap::IView::PutPrevRotation ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4677, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5761)
inline double femap::IView::GetTransformPlateVector ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4678, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5762)
inline void femap::IView::PutTransformPlateVector ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4678, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5763)
inline double femap::IView::GetClipPlaneOrigin ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4679, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5764)
inline void femap::IView::PutClipPlaneOrigin ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4679, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5765)
inline double femap::IView::GetClipPlaneNormal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x467a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5766)
inline void femap::IView::PutClipPlaneNormal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x467a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(5767)
inline VARIANT_BOOL femap::IView::GetContourVecOn ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x467b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(5768)
inline void femap::IView::PutContourVecOn ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x467b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(5769)
inline enum femap::zReturnCode femap::IView::Visible ( VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", Visible);
    return _result;
}

#pragma implementation_key(5770)
inline enum femap::zReturnCode femap::IView::Redraw ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5771)
inline enum femap::zReturnCode femap::IView::Regenerate ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5772)
inline enum femap::zReturnCode femap::IView::IsLayerVisible ( int layerID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", layerID);
    return _result;
}

#pragma implementation_key(5773)
inline enum femap::zReturnCode femap::IView::SetLayerVisible ( int layerID, VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", layerID, Visible);
    return _result;
}

#pragma implementation_key(5774)
inline enum femap::zReturnCode femap::IView::Rotate ( double oX, double oY, double oZ, double dX, double dY, double dZ, double angle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x0005", oX, oY, oZ, dX, dY, dZ, angle);
    return _result;
}

#pragma implementation_key(5775)
inline enum femap::zReturnCode femap::IView::AlignCSys ( int csysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", csysID);
    return _result;
}

#pragma implementation_key(5776)
inline enum femap::zReturnCode femap::IView::AlignVector ( double oX, double oY, double oZ, double dX, double dY, double dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", oX, oY, oZ, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(5777)
inline enum femap::zReturnCode femap::IView::AlignWorkplane ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5778)
inline enum femap::zReturnCode femap::IView::AutoscaleAll ( VARIANT_BOOL redoBox ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", redoBox);
    return _result;
}

#pragma implementation_key(5779)
inline enum femap::zReturnCode femap::IView::AutoscaleVisible ( VARIANT_BOOL redoBox ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", redoBox);
    return _result;
}

#pragma implementation_key(5780)
inline enum femap::zReturnCode femap::IView::Initialize ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5781)
inline enum femap::zReturnCode femap::IView::Align2Vector ( double vZx, double vZy, double vZz, double vXYx, double vXYy, double vXYZ, VARIANT_BOOL bAutoXY ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005\x000b", vZx, vZy, vZz, vXYx, vXYy, vXYZ, bAutoXY);
    return _result;
}

#pragma implementation_key(5782)
inline enum femap::zReturnCode femap::IView::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5783)
inline enum femap::zReturnCode femap::IView::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(5784)
inline enum femap::zReturnCode femap::IView::GetMultiGroupList ( int * nGroup, VARIANT * nGroupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", nGroup, nGroupID);
    return _result;
}

#pragma implementation_key(5785)
inline enum femap::zReturnCode femap::IView::SetMultiGroupList ( VARIANT_BOOL bClear, int nGroups, const _variant_t & nGroupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x000c", bClear, nGroups, &nGroupID);
    return _result;
}

#pragma implementation_key(5786)
inline enum femap::zReturnCode femap::IView::ClearMultiGroupList ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5787)
inline enum femap::zReturnCode femap::IView::SetMultiGroupListFromSets ( VARIANT_BOOL bClear, int nShowSetID, int nHideSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003", bClear, nShowSetID, nHideSetID);
    return _result;
}

#pragma implementation_key(5788)
inline enum femap::zReturnCode femap::IView::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5789)
inline enum femap::zReturnCode femap::IView::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5790)
inline enum femap::zReturnCode femap::IView::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5791)
inline enum femap::zReturnCode femap::IView::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5792)
inline enum femap::zReturnCode femap::IView::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5793)
inline enum femap::zReturnCode femap::IView::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5794)
inline enum femap::zReturnCode femap::IView::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5795)
inline enum femap::zReturnCode femap::IView::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5796)
inline enum femap::zReturnCode femap::IView::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5797)
inline enum femap::zReturnCode femap::IView::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5798)
inline enum femap::zReturnCode femap::IView::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5799)
inline enum femap::zReturnCode femap::IView::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5800)
inline int femap::IView::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5801)
inline int femap::IView::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5802)
inline int femap::IView::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5803)
inline int femap::IView::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5804)
inline enum femap::zReturnCode femap::IView::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5805)
inline enum femap::zReturnCode femap::IView::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5806)
inline enum femap::zReturnCode femap::IView::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(5807)
inline enum femap::zReturnCode femap::IView::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5808)
inline enum femap::zReturnCode femap::IView::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(5809)
inline int femap::IView::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(5810)
inline enum femap::zReturnCode femap::IView::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5811)
inline enum femap::zReturnCode femap::IView::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5812)
inline enum femap::zReturnCode femap::IView::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5813)
inline int femap::IView::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(5814)
inline enum femap::zReturnCode femap::IView::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(5815)
inline enum femap::zReturnCode femap::IView::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(5816)
inline enum femap::zViewMode femap::IView::GetMode ( ) {
    enum zViewMode _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5817)
inline void femap::IView::PutMode ( enum zViewMode _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(5818)
inline enum femap::zDeformedFormat femap::IView::GetDeformed ( ) {
    enum zDeformedFormat _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5819)
inline void femap::IView::PutDeformed ( enum zDeformedFormat _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(5820)
inline enum femap::zContourFormat femap::IView::GetContour ( ) {
    enum zContourFormat _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5821)
inline void femap::IView::PutContour ( enum zContourFormat _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(5822)
inline double femap::IView::GetMagnification ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5823)
inline void femap::IView::PutMagnification ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(5824)
inline double femap::IView::GetAspect ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5825)
inline void femap::IView::PutAspect ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(5826)
inline VARIANT_BOOL femap::IView::GetWindowTitleBar ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5827)
inline void femap::IView::PutWindowTitleBar ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BOOL, _val);
}

#pragma implementation_key(5828)
inline int femap::IView::GetWindowBorder ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5829)
inline void femap::IView::PutWindowBorder ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(5830)
inline VARIANT_BOOL femap::IView::GetWindowEraseBack ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5831)
inline void femap::IView::PutWindowEraseBack ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271d, VT_BOOL, _val);
}

#pragma implementation_key(5832)
inline enum femap::zColor femap::IView::GetWindowBackColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5833)
inline void femap::IView::PutWindowBackColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(5834)
inline double femap::IView::GetPrevWindowLeft ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5835)
inline void femap::IView::PutPrevWindowLeft ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(5836)
inline double femap::IView::GetPrevWindowTop ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5837)
inline void femap::IView::PutPrevWindowTop ( double _val ) {
    _com_dispatch_propput(this, 0x2720, VT_R8, _val);
}

#pragma implementation_key(5838)
inline double femap::IView::GetPrevWindowRight ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5839)
inline void femap::IView::PutPrevWindowRight ( double _val ) {
    _com_dispatch_propput(this, 0x2721, VT_R8, _val);
}

#pragma implementation_key(5840)
inline double femap::IView::GetPrevWindowBottom ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5841)
inline void femap::IView::PutPrevWindowBottom ( double _val ) {
    _com_dispatch_propput(this, 0x2722, VT_R8, _val);
}

#pragma implementation_key(5842)
inline double femap::IView::GetPrevWindowXmin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5843)
inline void femap::IView::PutPrevWindowXmin ( double _val ) {
    _com_dispatch_propput(this, 0x2723, VT_R8, _val);
}

#pragma implementation_key(5844)
inline double femap::IView::GetPrevWindowXmax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5845)
inline void femap::IView::PutPrevWindowXmax ( double _val ) {
    _com_dispatch_propput(this, 0x2724, VT_R8, _val);
}

#pragma implementation_key(5846)
inline double femap::IView::GetPrevWindowYmin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5847)
inline void femap::IView::PutPrevWindowYmin ( double _val ) {
    _com_dispatch_propput(this, 0x2725, VT_R8, _val);
}

#pragma implementation_key(5848)
inline double femap::IView::GetPrevWindowYmax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5849)
inline void femap::IView::PutPrevWindowYmax ( double _val ) {
    _com_dispatch_propput(this, 0x2726, VT_R8, _val);
}

#pragma implementation_key(5850)
inline int femap::IView::GetBC ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5851)
inline void femap::IView::PutBC ( int _val ) {
    _com_dispatch_propput(this, 0x2727, VT_I4, _val);
}

#pragma implementation_key(5852)
inline int femap::IView::Getload ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5853)
inline void femap::IView::Putload ( int _val ) {
    _com_dispatch_propput(this, 0x2728, VT_I4, _val);
}

#pragma implementation_key(5854)
inline int femap::IView::GetGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5855)
inline void femap::IView::PutGroup ( int _val ) {
    _com_dispatch_propput(this, 0x2729, VT_I4, _val);
}

#pragma implementation_key(5856)
inline int femap::IView::GetOutputSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5857)
inline void femap::IView::PutOutputSet ( int _val ) {
    _com_dispatch_propput(this, 0x272a, VT_I4, _val);
}

#pragma implementation_key(5858)
inline int femap::IView::GetFinalOutputSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5859)
inline void femap::IView::PutFinalOutputSet ( int _val ) {
    _com_dispatch_propput(this, 0x272b, VT_I4, _val);
}

#pragma implementation_key(5860)
inline int femap::IView::GetOutputSetInc ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5861)
inline void femap::IView::PutOutputSetInc ( int _val ) {
    _com_dispatch_propput(this, 0x272c, VT_I4, _val);
}

#pragma implementation_key(5862)
inline int femap::IView::GetDeformData ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5863)
inline void femap::IView::PutDeformData ( int _val ) {
    _com_dispatch_propput(this, 0x272d, VT_I4, _val);
}

#pragma implementation_key(5864)
inline int femap::IView::GetContourData ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5865)
inline void femap::IView::PutContourData ( int _val ) {
    _com_dispatch_propput(this, 0x272e, VT_I4, _val);
}

#pragma implementation_key(5866)
inline double femap::IView::GetPerspectiveDist ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5867)
inline void femap::IView::PutPerspectiveDist ( double _val ) {
    _com_dispatch_propput(this, 0x2732, VT_R8, _val);
}

#pragma implementation_key(5868)
inline double femap::IView::GetInterOccularDist ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5869)
inline void femap::IView::PutInterOccularDist ( double _val ) {
    _com_dispatch_propput(this, 0x2733, VT_R8, _val);
}

#pragma implementation_key(5870)
inline double femap::IView::GetShrinkFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5871)
inline void femap::IView::PutShrinkFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2734, VT_R8, _val);
}

#pragma implementation_key(5872)
inline double femap::IView::GetPerspectiveAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5873)
inline void femap::IView::PutPerspectiveAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2735, VT_R8, _val);
}

#pragma implementation_key(5874)
inline double femap::IView::GetAmbientLight ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5875)
inline void femap::IView::PutAmbientLight ( double _val ) {
    _com_dispatch_propput(this, 0x2736, VT_R8, _val);
}

#pragma implementation_key(5876)
inline double femap::IView::GetArrowsToLabel ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5877)
inline void femap::IView::PutArrowsToLabel ( double _val ) {
    _com_dispatch_propput(this, 0x2739, VT_R8, _val);
}

#pragma implementation_key(5878)
inline double femap::IView::GetDeformedRelScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5879)
inline void femap::IView::PutDeformedRelScale ( double _val ) {
    _com_dispatch_propput(this, 0x273a, VT_R8, _val);
}

#pragma implementation_key(5880)
inline double femap::IView::GetDeformedAbsScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5881)
inline void femap::IView::PutDeformedAbsScale ( double _val ) {
    _com_dispatch_propput(this, 0x273b, VT_R8, _val);
}

#pragma implementation_key(5882)
inline int femap::IView::GetAnimationFrames ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5883)
inline void femap::IView::PutAnimationFrames ( int _val ) {
    _com_dispatch_propput(this, 0x273c, VT_I4, _val);
}

#pragma implementation_key(5884)
inline int femap::IView::GetAnimationDelay ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5885)
inline void femap::IView::PutAnimationDelay ( int _val ) {
    _com_dispatch_propput(this, 0x273d, VT_I4, _val);
}

#pragma implementation_key(5886)
inline int femap::IView::GetUserContourCount ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5887)
inline void femap::IView::PutUserContourCount ( int _val ) {
    _com_dispatch_propput(this, 0x2740, VT_I4, _val);
}

#pragma implementation_key(5888)
inline int femap::IView::GetContourLabelFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5889)
inline void femap::IView::PutContourLabelFreq ( int _val ) {
    _com_dispatch_propput(this, 0x2741, VT_I4, _val);
}

#pragma implementation_key(5890)
inline int femap::IView::GetContourLegendFreq ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5891)
inline void femap::IView::PutContourLegendFreq ( int _val ) {
    _com_dispatch_propput(this, 0x2742, VT_I4, _val);
}

#pragma implementation_key(5892)
inline double femap::IView::GetCriteriaMax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5893)
inline void femap::IView::PutCriteriaMax ( double _val ) {
    _com_dispatch_propput(this, 0x2744, VT_R8, _val);
}

#pragma implementation_key(5894)
inline double femap::IView::GetCriteriaMin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5895)
inline void femap::IView::PutCriteriaMin ( double _val ) {
    _com_dispatch_propput(this, 0x2745, VT_R8, _val);
}

#pragma implementation_key(5896)
inline double femap::IView::GetXYXmin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5897)
inline void femap::IView::PutXYXmin ( double _val ) {
    _com_dispatch_propput(this, 0x2746, VT_R8, _val);
}

#pragma implementation_key(5898)
inline double femap::IView::GetXYXmax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5899)
inline void femap::IView::PutXYXmax ( double _val ) {
    _com_dispatch_propput(this, 0x2747, VT_R8, _val);
}

#pragma implementation_key(5900)
inline double femap::IView::GetXYymin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5901)
inline void femap::IView::PutXYymin ( double _val ) {
    _com_dispatch_propput(this, 0x2748, VT_R8, _val);
}

#pragma implementation_key(5902)
inline double femap::IView::GetXYymax ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5903)
inline void femap::IView::PutXYymax ( double _val ) {
    _com_dispatch_propput(this, 0x2749, VT_R8, _val);
}

#pragma implementation_key(5904)
inline _bstr_t femap::IView::GetXYTitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5905)
inline void femap::IView::PutXYTitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x274b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5906)
inline _bstr_t femap::IView::GetXYSubtitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5907)
inline void femap::IView::PutXYSubtitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x274c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5908)
inline int femap::IView::GetXYCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5909)
inline void femap::IView::PutXYCSys ( int _val ) {
    _com_dispatch_propput(this, 0x274d, VT_I4, _val);
}

#pragma implementation_key(5910)
inline int femap::IView::GetXYDirection ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5911)
inline void femap::IView::PutXYDirection ( int _val ) {
    _com_dispatch_propput(this, 0x274e, VT_I4, _val);
}

#pragma implementation_key(5912)
inline int femap::IView::GetXYXTics ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5913)
inline void femap::IView::PutXYXTics ( int _val ) {
    _com_dispatch_propput(this, 0x274f, VT_I4, _val);
}

#pragma implementation_key(5914)
inline int femap::IView::GetXYYTics ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5915)
inline void femap::IView::PutXYYTics ( int _val ) {
    _com_dispatch_propput(this, 0x2750, VT_I4, _val);
}

#pragma implementation_key(5916)
inline double femap::IView::GetLoadVecLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2756, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5917)
inline void femap::IView::PutLoadVecLength ( double _val ) {
    _com_dispatch_propput(this, 0x2756, VT_R8, _val);
}

#pragma implementation_key(5918)
inline double femap::IView::GetOtherVecLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2757, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5919)
inline void femap::IView::PutOtherVecLength ( double _val ) {
    _com_dispatch_propput(this, 0x2757, VT_R8, _val);
}

#pragma implementation_key(5920)
inline double femap::IView::GetPrevMagnification ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2759, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5921)
inline void femap::IView::PutPrevMagnification ( double _val ) {
    _com_dispatch_propput(this, 0x2759, VT_R8, _val);
}

#pragma implementation_key(5922)
inline VARIANT_BOOL femap::IView::GetShowAllLayers ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5923)
inline void femap::IView::PutShowAllLayers ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275a, VT_BOOL, _val);
}

#pragma implementation_key(5924)
inline VARIANT_BOOL femap::IView::GetSectionPlaneMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5925)
inline void femap::IView::PutSectionPlaneMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275b, VT_BOOL, _val);
}

#pragma implementation_key(5926)
inline VARIANT_BOOL femap::IView::GetSection1On ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5927)
inline void femap::IView::PutSection1On ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275c, VT_BOOL, _val);
}

#pragma implementation_key(5928)
inline VARIANT_BOOL femap::IView::GetSection2On ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5929)
inline void femap::IView::PutSection2On ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275d, VT_BOOL, _val);
}

#pragma implementation_key(5930)
inline VARIANT_BOOL femap::IView::GetSection3On ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x275e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5931)
inline void femap::IView::PutSection3On ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x275e, VT_BOOL, _val);
}

#pragma implementation_key(5932)
inline double femap::IView::GetBeamDiagramScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x275f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5933)
inline void femap::IView::PutBeamDiagramScale ( double _val ) {
    _com_dispatch_propput(this, 0x275f, VT_R8, _val);
}

#pragma implementation_key(5934)
inline double femap::IView::GetSectionSpacing ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2765, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5935)
inline void femap::IView::PutSectionSpacing ( double _val ) {
    _com_dispatch_propput(this, 0x2765, VT_R8, _val);
}

#pragma implementation_key(5936)
inline int femap::IView::GetSectionCount ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2766, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5937)
inline void femap::IView::PutSectionCount ( int _val ) {
    _com_dispatch_propput(this, 0x2766, VT_I4, _val);
}

#pragma implementation_key(5938)
inline VARIANT_BOOL femap::IView::GetSectionMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2767, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5939)
inline void femap::IView::PutSectionMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2767, VT_BOOL, _val);
}

#pragma implementation_key(5940)
inline VARIANT_BOOL femap::IView::GetUndefAnimation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2769, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5941)
inline void femap::IView::PutUndefAnimation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2769, VT_BOOL, _val);
}

#pragma implementation_key(5942)
inline int femap::IView::GetTraceOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5943)
inline void femap::IView::PutTraceOpt ( int _val ) {
    _com_dispatch_propput(this, 0x276b, VT_I4, _val);
}

#pragma implementation_key(5944)
inline int femap::IView::GetTraceID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5945)
inline void femap::IView::PutTraceID ( int _val ) {
    _com_dispatch_propput(this, 0x276c, VT_I4, _val);
}

#pragma implementation_key(5946)
inline VARIANT_BOOL femap::IView::GetContourVecHide ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5947)
inline void femap::IView::PutContourVecHide ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276d, VT_BOOL, _val);
}

#pragma implementation_key(5948)
inline int femap::IView::GetContourVecMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5949)
inline void femap::IView::PutContourVecMode ( int _val ) {
    _com_dispatch_propput(this, 0x276e, VT_I4, _val);
}

#pragma implementation_key(5950)
inline int femap::IView::GetContourVecCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2772, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5951)
inline void femap::IView::PutContourVecCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2772, VT_I4, _val);
}

#pragma implementation_key(5952)
inline double femap::IView::GetSpotlightDist ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2775, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5953)
inline void femap::IView::PutSpotlightDist ( double _val ) {
    _com_dispatch_propput(this, 0x2775, VT_R8, _val);
}

#pragma implementation_key(5954)
inline int femap::IView::GetContourLabelDigits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2777, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5955)
inline void femap::IView::PutContourLabelDigits ( int _val ) {
    _com_dispatch_propput(this, 0x2777, VT_I4, _val);
}

#pragma implementation_key(5956)
inline int femap::IView::GetContourLegendDigits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2778, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5957)
inline void femap::IView::PutContourLegendDigits ( int _val ) {
    _com_dispatch_propput(this, 0x2778, VT_I4, _val);
}

#pragma implementation_key(5958)
inline double femap::IView::GetIsosurfaceValue ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2779, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5959)
inline void femap::IView::PutIsosurfaceValue ( double _val ) {
    _com_dispatch_propput(this, 0x2779, VT_R8, _val);
}

#pragma implementation_key(5960)
inline double femap::IView::GetLoadVectorMinScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x277a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5961)
inline void femap::IView::PutLoadVectorMinScale ( double _val ) {
    _com_dispatch_propput(this, 0x277a, VT_R8, _val);
}

#pragma implementation_key(5962)
inline double femap::IView::GetRenderPushForward ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x277b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5963)
inline void femap::IView::PutRenderPushForward ( double _val ) {
    _com_dispatch_propput(this, 0x277b, VT_R8, _val);
}

#pragma implementation_key(5964)
inline enum femap::zColor femap::IView::GetContourVecColor2 ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x277c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5965)
inline void femap::IView::PutContourVecColor2 ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x277c, VT_I4, _val);
}

#pragma implementation_key(5966)
inline enum femap::zColor femap::IView::GetContourVecColor3 ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x277d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5967)
inline void femap::IView::PutContourVecColor3 ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x277d, VT_I4, _val);
}

#pragma implementation_key(5968)
inline VARIANT_BOOL femap::IView::GetFreebodyShowSum ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2783, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5969)
inline void femap::IView::PutFreebodyShowSum ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2783, VT_BOOL, _val);
}

#pragma implementation_key(5970)
inline VARIANT_BOOL femap::IView::GetFreebodyMinVecFlag ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2784, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5971)
inline void femap::IView::PutFreebodyMinVecFlag ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2784, VT_BOOL, _val);
}

#pragma implementation_key(5972)
inline double femap::IView::GetFreebodyShowMag ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x278b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5973)
inline void femap::IView::PutFreebodyShowMag ( double _val ) {
    _com_dispatch_propput(this, 0x278b, VT_R8, _val);
}

#pragma implementation_key(5974)
inline int femap::IView::GetContourVecAddl ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x278f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5975)
inline void femap::IView::PutContourVecAddl ( int _val ) {
    _com_dispatch_propput(this, 0x278f, VT_I4, _val);
}

#pragma implementation_key(5976)
inline VARIANT_BOOL femap::IView::GetContourElemUnaveraged ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2790, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5977)
inline void femap::IView::PutContourElemUnaveraged ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2790, VT_BOOL, _val);
}

#pragma implementation_key(5978)
inline VARIANT_BOOL femap::IView::GetContourElemBreakProp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2791, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5979)
inline void femap::IView::PutContourElemBreakProp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2791, VT_BOOL, _val);
}

#pragma implementation_key(5980)
inline VARIANT_BOOL femap::IView::GetContourElemBreakMatl ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2792, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5981)
inline void femap::IView::PutContourElemBreakMatl ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2792, VT_BOOL, _val);
}

#pragma implementation_key(5982)
inline VARIANT_BOOL femap::IView::GetContourElemBreakLayer ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2793, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5983)
inline void femap::IView::PutContourElemBreakLayer ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2793, VT_BOOL, _val);
}

#pragma implementation_key(5984)
inline VARIANT_BOOL femap::IView::GetContourElemBreakColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2794, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5985)
inline void femap::IView::PutContourElemBreakColor ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2794, VT_BOOL, _val);
}

#pragma implementation_key(5986)
inline VARIANT_BOOL femap::IView::GetContourElemBreakGeom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2795, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5987)
inline void femap::IView::PutContourElemBreakGeom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2795, VT_BOOL, _val);
}

#pragma implementation_key(5988)
inline double femap::IView::GetContourElemBreakAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2796, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(5989)
inline void femap::IView::PutContourElemBreakAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2796, VT_R8, _val);
}

#pragma implementation_key(5990)
inline VARIANT_BOOL femap::IView::GetRotationCenterOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2797, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5991)
inline void femap::IView::PutRotationCenterOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2797, VT_BOOL, _val);
}

#pragma implementation_key(5992)
inline _bstr_t femap::IView::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x279a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(5993)
inline void femap::IView::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x279a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(5994)
inline enum femap::zColor femap::IView::GetWindowBackColor2 ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x279b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(5995)
inline void femap::IView::PutWindowBackColor2 ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x279b, VT_I4, _val);
}

#pragma implementation_key(5996)
inline VARIANT_BOOL femap::IView::GetWindowShadeBack ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x279c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(5997)
inline void femap::IView::PutWindowShadeBack ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x279c, VT_BOOL, _val);
}

#pragma implementation_key(5998)
inline _variant_t femap::IView::GetvRotation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x279d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(5999)
inline void femap::IView::PutvRotation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x279d, VT_VARIANT, &_val);
}

#pragma implementation_key(6000)
inline _variant_t femap::IView::GetvCenter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x279e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6001)
inline void femap::IView::PutvCenter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x279e, VT_VARIANT, &_val);
}

#pragma implementation_key(6002)
inline _variant_t femap::IView::GetvXYOutputSet ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x279f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6003)
inline void femap::IView::PutvXYOutputSet ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x279f, VT_VARIANT, &_val);
}

#pragma implementation_key(6004)
inline _variant_t femap::IView::GetvXYOutputData ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6005)
inline void femap::IView::PutvXYOutputData ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a0, VT_VARIANT, &_val);
}

#pragma implementation_key(6006)
inline _variant_t femap::IView::GetvXYOutputEntity ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6007)
inline void femap::IView::PutvXYOutputEntity ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a1, VT_VARIANT, &_val);
}

#pragma implementation_key(6008)
inline _variant_t femap::IView::GetvLight ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6009)
inline void femap::IView::PutvLight ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a2, VT_VARIANT, &_val);
}

#pragma implementation_key(6010)
inline _variant_t femap::IView::GetvAxisLocation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6011)
inline void femap::IView::PutvAxisLocation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a3, VT_VARIANT, &_val);
}

#pragma implementation_key(6012)
inline _variant_t femap::IView::GetvUserContourLevel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6013)
inline void femap::IView::PutvUserContourLevel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a4, VT_VARIANT, &_val);
}

#pragma implementation_key(6014)
inline _variant_t femap::IView::GetvUserContourValue ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6015)
inline void femap::IView::PutvUserContourValue ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a5, VT_VARIANT, &_val);
}

#pragma implementation_key(6016)
inline _variant_t femap::IView::GetvContourColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6017)
inline void femap::IView::PutvContourColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a6, VT_VARIANT, &_val);
}

#pragma implementation_key(6018)
inline _variant_t femap::IView::GetvXYScale ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6019)
inline void femap::IView::PutvXYScale ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a7, VT_VARIANT, &_val);
}

#pragma implementation_key(6020)
inline _variant_t femap::IView::GetvColorMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6021)
inline void femap::IView::PutvColorMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a8, VT_VARIANT, &_val);
}

#pragma implementation_key(6022)
inline _variant_t femap::IView::GetvColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27a9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6023)
inline void femap::IView::PutvColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27a9, VT_VARIANT, &_val);
}

#pragma implementation_key(6024)
inline _variant_t femap::IView::GetvDraw ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27aa, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6025)
inline void femap::IView::PutvDraw ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27aa, VT_VARIANT, &_val);
}

#pragma implementation_key(6026)
inline _variant_t femap::IView::GetvLabel ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ab, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6027)
inline void femap::IView::PutvLabel ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ab, VT_VARIANT, &_val);
}

#pragma implementation_key(6028)
inline _variant_t femap::IView::GetvPrevCenter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ac, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6029)
inline void femap::IView::PutvPrevCenter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ac, VT_VARIANT, &_val);
}

#pragma implementation_key(6030)
inline _variant_t femap::IView::GetvSectionBase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ad, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6031)
inline void femap::IView::PutvSectionBase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ad, VT_VARIANT, &_val);
}

#pragma implementation_key(6032)
inline _variant_t femap::IView::GetvSectionNormal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ae, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6033)
inline void femap::IView::PutvSectionNormal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ae, VT_VARIANT, &_val);
}

#pragma implementation_key(6034)
inline _variant_t femap::IView::GetvSection2Base ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27af, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6035)
inline void femap::IView::PutvSection2Base ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27af, VT_VARIANT, &_val);
}

#pragma implementation_key(6036)
inline _variant_t femap::IView::GetvSection2Normal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6037)
inline void femap::IView::PutvSection2Normal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b0, VT_VARIANT, &_val);
}

#pragma implementation_key(6038)
inline _variant_t femap::IView::GetvSection3Base ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b1, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6039)
inline void femap::IView::PutvSection3Base ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b1, VT_VARIANT, &_val);
}

#pragma implementation_key(6040)
inline _variant_t femap::IView::GetvSection3Normal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6041)
inline void femap::IView::PutvSection3Normal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b2, VT_VARIANT, &_val);
}

#pragma implementation_key(6042)
inline _variant_t femap::IView::Getvfunction ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6043)
inline void femap::IView::Putvfunction ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b3, VT_VARIANT, &_val);
}

#pragma implementation_key(6044)
inline _variant_t femap::IView::GetvXYSetRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b4, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6045)
inline void femap::IView::PutvXYSetRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b4, VT_VARIANT, &_val);
}

#pragma implementation_key(6046)
inline _variant_t femap::IView::GetvContourVecID1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6047)
inline void femap::IView::PutvContourVecID1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b5, VT_VARIANT, &_val);
}

#pragma implementation_key(6048)
inline _variant_t femap::IView::GetvContourVecID2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b6, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6049)
inline void femap::IView::PutvContourVecID2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b6, VT_VARIANT, &_val);
}

#pragma implementation_key(6050)
inline _variant_t femap::IView::GetvContourVecID3 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6051)
inline void femap::IView::PutvContourVecID3 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b7, VT_VARIANT, &_val);
}

#pragma implementation_key(6052)
inline _variant_t femap::IView::GetvContourVecDir ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b8, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6053)
inline void femap::IView::PutvContourVecDir ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b8, VT_VARIANT, &_val);
}

#pragma implementation_key(6054)
inline _variant_t femap::IView::GetvSpotlightDir ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27b9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6055)
inline void femap::IView::PutvSpotlightDir ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27b9, VT_VARIANT, &_val);
}

#pragma implementation_key(6056)
inline _variant_t femap::IView::GetvRotationCenter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27bf, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6057)
inline void femap::IView::PutvRotationCenter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27bf, VT_VARIANT, &_val);
}

#pragma implementation_key(6058)
inline _variant_t femap::IView::GetvRotationVector ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27c0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6059)
inline void femap::IView::PutvRotationVector ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27c0, VT_VARIANT, &_val);
}

#pragma implementation_key(6060)
inline enum femap::zColor femap::IView::GetWindowBackColor3 ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27c1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6061)
inline void femap::IView::PutWindowBackColor3 ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27c1, VT_I4, _val);
}

#pragma implementation_key(6062)
inline int femap::IView::GetWindowShadeBackOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6063)
inline void femap::IView::PutWindowShadeBackOpt ( int _val ) {
    _com_dispatch_propput(this, 0x27c2, VT_I4, _val);
}

#pragma implementation_key(6064)
inline int femap::IView::GetWindowShadeHorizon ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6065)
inline void femap::IView::PutWindowShadeHorizon ( int _val ) {
    _com_dispatch_propput(this, 0x27c3, VT_I4, _val);
}

#pragma implementation_key(6066)
inline VARIANT_BOOL femap::IView::GetWindowLogo ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6067)
inline void femap::IView::PutWindowLogo ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c4, VT_BOOL, _val);
}

#pragma implementation_key(6068)
inline _variant_t femap::IView::GetvLogoLocation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27c5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6069)
inline void femap::IView::PutvLogoLocation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27c5, VT_VARIANT, &_val);
}

#pragma implementation_key(6070)
inline double femap::IView::GetRenderPushUnit ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27c6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6071)
inline void femap::IView::PutRenderPushUnit ( double _val ) {
    _com_dispatch_propput(this, 0x27c6, VT_R8, _val);
}

#pragma implementation_key(6072)
inline double femap::IView::GetRenderPushUndeformed ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27c7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6073)
inline void femap::IView::PutRenderPushUndeformed ( double _val ) {
    _com_dispatch_propput(this, 0x27c7, VT_R8, _val);
}

#pragma implementation_key(6074)
inline int femap::IView::GetRenderPushLabel ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6075)
inline void femap::IView::PutRenderPushLabel ( int _val ) {
    _com_dispatch_propput(this, 0x27c8, VT_I4, _val);
}

#pragma implementation_key(6076)
inline int femap::IView::GetStreamLineOpt ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6077)
inline void femap::IView::PutStreamLineOpt ( int _val ) {
    _com_dispatch_propput(this, 0x27c9, VT_I4, _val);
}

#pragma implementation_key(6078)
inline int femap::IView::GetStreamLineID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ca, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6079)
inline void femap::IView::PutStreamLineID ( int _val ) {
    _com_dispatch_propput(this, 0x27ca, VT_I4, _val);
}

#pragma implementation_key(6080)
inline int femap::IView::GetStreamLineRungeKuttaOrder ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27cb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6081)
inline void femap::IView::PutStreamLineRungeKuttaOrder ( int _val ) {
    _com_dispatch_propput(this, 0x27cb, VT_I4, _val);
}

#pragma implementation_key(6082)
inline double femap::IView::GetStreamLineTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27cc, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6083)
inline void femap::IView::PutStreamLineTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x27cc, VT_R8, _val);
}

#pragma implementation_key(6084)
inline double femap::IView::GetStreamLineMaxLenFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27cd, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6085)
inline void femap::IView::PutStreamLineMaxLenFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27cd, VT_R8, _val);
}

#pragma implementation_key(6086)
inline double femap::IView::GetStreamLineMinSpeedPct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ce, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6087)
inline void femap::IView::PutStreamLineMinSpeedPct ( double _val ) {
    _com_dispatch_propput(this, 0x27ce, VT_R8, _val);
}

#pragma implementation_key(6088)
inline double femap::IView::GetStreamLineMaxTime ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27cf, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6089)
inline void femap::IView::PutStreamLineMaxTime ( double _val ) {
    _com_dispatch_propput(this, 0x27cf, VT_R8, _val);
}

#pragma implementation_key(6090)
inline _variant_t femap::IView::GetvStreamLineLocation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27d0, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6091)
inline void femap::IView::PutvStreamLineLocation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27d0, VT_VARIANT, &_val);
}

#pragma implementation_key(6092)
inline double femap::IView::GetContourLegendShrinkPct ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27d1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6093)
inline void femap::IView::PutContourLegendShrinkPct ( double _val ) {
    _com_dispatch_propput(this, 0x27d1, VT_R8, _val);
}

#pragma implementation_key(6094)
inline int femap::IView::GetTransparencyPercent ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6095)
inline void femap::IView::PutTransparencyPercent ( int _val ) {
    _com_dispatch_propput(this, 0x27d2, VT_I4, _val);
}

#pragma implementation_key(6096)
inline VARIANT_BOOL femap::IView::GetRotateAroundModelAxes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27d3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6097)
inline void femap::IView::PutRotateAroundModelAxes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27d3, VT_BOOL, _val);
}

#pragma implementation_key(6098)
inline VARIANT_BOOL femap::IView::GetRotateSingleAxis ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27d4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6099)
inline void femap::IView::PutRotateSingleAxis ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27d4, VT_BOOL, _val);
}

#pragma implementation_key(6100)
inline VARIANT_BOOL femap::IView::GetRotateUseAxis ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27d5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6101)
inline void femap::IView::PutRotateUseAxis ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27d5, VT_BOOL, _val);
}

#pragma implementation_key(6102)
inline int femap::IView::GetContourGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6103)
inline void femap::IView::PutContourGroup ( int _val ) {
    _com_dispatch_propput(this, 0x27d6, VT_I4, _val);
}

#pragma implementation_key(6104)
inline _variant_t femap::IView::GetvUserContourPalette ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27d7, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6105)
inline void femap::IView::PutvUserContourPalette ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27d7, VT_VARIANT, &_val);
}

#pragma implementation_key(6106)
inline int femap::IView::GetMaxUserContourPalette ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6107)
inline void femap::IView::PutMaxUserContourPalette ( int _val ) {
    _com_dispatch_propput(this, 0x27d8, VT_I4, _val);
}

#pragma implementation_key(6108)
inline _variant_t femap::IView::GetvPrevRotation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27d9, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6109)
inline void femap::IView::PutvPrevRotation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27d9, VT_VARIANT, &_val);
}

#pragma implementation_key(6110)
inline int femap::IView::GetRotateCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27da, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6111)
inline void femap::IView::PutRotateCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27da, VT_I4, _val);
}

#pragma implementation_key(6112)
inline enum femap::zOutputDestination femap::IView::GetTransformDeformMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x27db, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6113)
inline void femap::IView::PutTransformDeformMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x27db, VT_I4, _val);
}

#pragma implementation_key(6114)
inline int femap::IView::GetTransformDeformCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27dc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6115)
inline void femap::IView::PutTransformDeformCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27dc, VT_I4, _val);
}

#pragma implementation_key(6116)
inline VARIANT_BOOL femap::IView::GetTransformDeformX ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27dd, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6117)
inline void femap::IView::PutTransformDeformX ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27dd, VT_BOOL, _val);
}

#pragma implementation_key(6118)
inline VARIANT_BOOL femap::IView::GetTransformDeformY ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27de, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6119)
inline void femap::IView::PutTransformDeformY ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27de, VT_BOOL, _val);
}

#pragma implementation_key(6120)
inline VARIANT_BOOL femap::IView::GetTransformDeformZ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27df, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6121)
inline void femap::IView::PutTransformDeformZ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27df, VT_BOOL, _val);
}

#pragma implementation_key(6122)
inline enum femap::zOutputDestination femap::IView::GetTransformNodalMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x27e0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6123)
inline void femap::IView::PutTransformNodalMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x27e0, VT_I4, _val);
}

#pragma implementation_key(6124)
inline int femap::IView::GetTransformNodalCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6125)
inline void femap::IView::PutTransformNodalCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27e1, VT_I4, _val);
}

#pragma implementation_key(6126)
inline enum femap::zOutputDestination femap::IView::GetTransformPlateMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x27e2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6127)
inline void femap::IView::PutTransformPlateMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x27e2, VT_I4, _val);
}

#pragma implementation_key(6128)
inline int femap::IView::GetTransformPlateCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6129)
inline void femap::IView::PutTransformPlateCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27e3, VT_I4, _val);
}

#pragma implementation_key(6130)
inline int femap::IView::GetTransformPlateDOF ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6131)
inline void femap::IView::PutTransformPlateDOF ( int _val ) {
    _com_dispatch_propput(this, 0x27e4, VT_I4, _val);
}

#pragma implementation_key(6132)
inline _variant_t femap::IView::GetvTransformPlateVector ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27e5, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6133)
inline void femap::IView::PutvTransformPlateVector ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27e5, VT_VARIANT, &_val);
}

#pragma implementation_key(6134)
inline enum femap::zOutputDestination femap::IView::GetTransformSolidMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x27e6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6135)
inline void femap::IView::PutTransformSolidMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x27e6, VT_I4, _val);
}

#pragma implementation_key(6136)
inline int femap::IView::GetTransformSolidCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6137)
inline void femap::IView::PutTransformSolidCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27e7, VT_I4, _val);
}

#pragma implementation_key(6138)
inline int femap::IView::GetGlobalPlyLocation ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6139)
inline void femap::IView::PutGlobalPlyLocation ( int _val ) {
    _com_dispatch_propput(this, 0x27e8, VT_I4, _val);
}

#pragma implementation_key(6140)
inline int femap::IView::GetContourVecDigits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6141)
inline void femap::IView::PutContourVecDigits ( int _val ) {
    _com_dispatch_propput(this, 0x27e9, VT_I4, _val);
}

#pragma implementation_key(6142)
inline double femap::IView::GetContourVecLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ea, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6143)
inline void femap::IView::PutContourVecLength ( double _val ) {
    _com_dispatch_propput(this, 0x27ea, VT_R8, _val);
}

#pragma implementation_key(6144)
inline int femap::IView::GetDeformRelativeToNode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27eb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6145)
inline void femap::IView::PutDeformRelativeToNode ( int _val ) {
    _com_dispatch_propput(this, 0x27eb, VT_I4, _val);
}

#pragma implementation_key(6146)
inline _variant_t femap::IView::GetvClipPlaneOrigin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ec, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6147)
inline void femap::IView::PutvClipPlaneOrigin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ec, VT_VARIANT, &_val);
}

#pragma implementation_key(6148)
inline _variant_t femap::IView::GetvClipPlaneNormal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ed, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6149)
inline void femap::IView::PutvClipPlaneNormal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ed, VT_VARIANT, &_val);
}

#pragma implementation_key(6150)
inline int femap::IView::GetFreebodyDigits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ee, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6151)
inline void femap::IView::PutFreebodyDigits ( int _val ) {
    _com_dispatch_propput(this, 0x27ee, VT_I4, _val);
}

#pragma implementation_key(6152)
inline double femap::IView::GetFreebodyLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ef, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6153)
inline void femap::IView::PutFreebodyLength ( double _val ) {
    _com_dispatch_propput(this, 0x27ef, VT_R8, _val);
}

#pragma implementation_key(6154)
inline double femap::IView::GetFreebodyTotalForceFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27f0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6155)
inline void femap::IView::PutFreebodyTotalForceFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27f0, VT_R8, _val);
}

#pragma implementation_key(6156)
inline double femap::IView::GetFreebodyTotalMomentFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27f1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6157)
inline void femap::IView::PutFreebodyTotalMomentFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27f1, VT_R8, _val);
}

#pragma implementation_key(6158)
inline double femap::IView::GetFreebodyNodalForceFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27f2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6159)
inline void femap::IView::PutFreebodyNodalForceFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27f2, VT_R8, _val);
}

#pragma implementation_key(6160)
inline double femap::IView::GetFreebodyNodalMomentFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27f3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6161)
inline void femap::IView::PutFreebodyNodalMomentFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27f3, VT_R8, _val);
}

#pragma implementation_key(6162)
inline double femap::IView::GetFreebodyUnitsPerLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27f4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6163)
inline void femap::IView::PutFreebodyUnitsPerLength ( double _val ) {
    _com_dispatch_propput(this, 0x27f4, VT_R8, _val);
}

#pragma implementation_key(6164)
inline VARIANT_BOOL femap::IView::GetBlankNodesOff ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27f5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6165)
inline void femap::IView::PutBlankNodesOff ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27f5, VT_BOOL, _val);
}

#pragma implementation_key(6166)
inline int femap::IView::GetContourDataSelection ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6167)
inline void femap::IView::PutContourDataSelection ( int _val ) {
    _com_dispatch_propput(this, 0x27f6, VT_I4, _val);
}

#pragma implementation_key(6168)
inline int femap::IView::GetContourVector1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6169)
inline void femap::IView::PutContourVector1 ( int _val ) {
    _com_dispatch_propput(this, 0x27f7, VT_I4, _val);
}

#pragma implementation_key(6170)
inline int femap::IView::GetContourVector2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6171)
inline void femap::IView::PutContourVector2 ( int _val ) {
    _com_dispatch_propput(this, 0x27f8, VT_I4, _val);
}

#pragma implementation_key(6172)
inline int femap::IView::GetContourVector3 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27f9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6173)
inline void femap::IView::PutContourVector3 ( int _val ) {
    _com_dispatch_propput(this, 0x27f9, VT_I4, _val);
}

#pragma implementation_key(6174)
inline VARIANT_BOOL femap::IView::GetContourCornerData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27fa, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6175)
inline void femap::IView::PutContourCornerData ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27fa, VT_BOOL, _val);
}

#pragma implementation_key(6176)
inline int femap::IView::GetContourDataConversion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27fb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6177)
inline void femap::IView::PutContourDataConversion ( int _val ) {
    _com_dispatch_propput(this, 0x27fb, VT_I4, _val);
}

#pragma implementation_key(6178)
inline int femap::IView::GetComplexSyncMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27fc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6179)
inline void femap::IView::PutComplexSyncMethod ( int _val ) {
    _com_dispatch_propput(this, 0x27fc, VT_I4, _val);
}

#pragma implementation_key(6180)
inline double femap::IView::GetComplexSyncPhase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fd, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6181)
inline void femap::IView::PutComplexSyncPhase ( double _val ) {
    _com_dispatch_propput(this, 0x27fd, VT_R8, _val);
}

#pragma implementation_key(6182)
inline double femap::IView::GetComplexSyncIncrement ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fe, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6183)
inline void femap::IView::PutComplexSyncIncrement ( double _val ) {
    _com_dispatch_propput(this, 0x27fe, VT_R8, _val);
}

#pragma implementation_key(6184)
inline _variant_t femap::IView::GetvContourVecOn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x27ff, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6185)
inline void femap::IView::PutvContourVecOn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x27ff, VT_VARIANT, &_val);
}

#pragma implementation_key(6186)
inline VARIANT_BOOL femap::IView::GetContourVecAutoVec ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2800, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6187)
inline void femap::IView::PutContourVecAutoVec ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2800, VT_BOOL, _val);
}

#pragma implementation_key(6188)
inline VARIANT_BOOL femap::IView::GetContourVecAutoOrient ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2801, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6189)
inline void femap::IView::PutContourVecAutoOrient ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2801, VT_BOOL, _val);
}

#pragma implementation_key(6190)
inline VARIANT_BOOL femap::IView::GetTransformDeformXInput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2802, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6191)
inline void femap::IView::PutTransformDeformXInput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2802, VT_BOOL, _val);
}

#pragma implementation_key(6192)
inline VARIANT_BOOL femap::IView::GetTransformDeformYInput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2803, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6193)
inline void femap::IView::PutTransformDeformYInput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2803, VT_BOOL, _val);
}

#pragma implementation_key(6194)
inline VARIANT_BOOL femap::IView::GetTransformDeformZInput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2804, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6195)
inline void femap::IView::PutTransformDeformZInput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2804, VT_BOOL, _val);
}

#pragma implementation_key(6196)
inline double femap::IView::GetTransformPlateTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2805, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6197)
inline void femap::IView::PutTransformPlateTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2805, VT_R8, _val);
}

#pragma implementation_key(6198)
inline VARIANT_BOOL femap::IView::GetContourVecMinVecOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2806, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6199)
inline void femap::IView::PutContourVecMinVecOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2806, VT_BOOL, _val);
}

#pragma implementation_key(6200)
inline double femap::IView::GetContourVecMinVec ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2807, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6201)
inline void femap::IView::PutContourVecMinVec ( double _val ) {
    _com_dispatch_propput(this, 0x2807, VT_R8, _val);
}

#pragma implementation_key(6202)
inline double femap::IView::GetContourVecMinLen ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2808, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6203)
inline void femap::IView::PutContourVecMinLen ( double _val ) {
    _com_dispatch_propput(this, 0x2808, VT_R8, _val);
}

#pragma implementation_key(6204)
inline enum femap::zColor femap::IView::GetContourVecColor1 ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2809, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6205)
inline void femap::IView::PutContourVecColor1 ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2809, VT_I4, _val);
}

#pragma implementation_key(6206)
inline int femap::IView::GetLabelGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x280a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6207)
inline void femap::IView::PutLabelGroup ( int _val ) {
    _com_dispatch_propput(this, 0x280a, VT_I4, _val);
}

#pragma implementation_key(6208)
inline int femap::IView::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6209)
inline void femap::IView::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6210)
inline int femap::IView::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6211)
inline void femap::IView::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6212)
inline int femap::IView::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6213)
inline void femap::IView::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IViewOrient wrapper method implementations
//

#pragma implementation_key(6214)
inline double femap::IViewOrient::Getcenter ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6215)
inline void femap::IViewOrient::Putcenter ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6216)
inline double femap::IViewOrient::GetRotationCenter ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6217)
inline void femap::IViewOrient::PutRotationCenter ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6218)
inline double femap::IViewOrient::GetRotationVector ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6219)
inline void femap::IViewOrient::PutRotationVector ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6220)
inline enum femap::zReturnCode femap::IViewOrient::SetEyeDirection ( double dEyeX, double dEyeY, double dEyeZ, double dRightX, double dRightY, double dRightZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", dEyeX, dEyeY, dEyeZ, dRightX, dRightY, dRightZ);
    return _result;
}

#pragma implementation_key(6221)
inline enum femap::zReturnCode femap::IViewOrient::GetEyeDirection ( double * pdEyeX, double * pdEyeY, double * pdEyeZ, double * pdRightX, double * pdRightY, double * pdRightZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005", pdEyeX, pdEyeY, pdEyeZ, pdRightX, pdRightY, pdRightZ);
    return _result;
}

#pragma implementation_key(6222)
inline enum femap::zReturnCode femap::IViewOrient::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6223)
inline enum femap::zReturnCode femap::IViewOrient::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6224)
inline enum femap::zReturnCode femap::IViewOrient::ViewRotation ( VARIANT_BOOL qUseCenter, double dX, double dY, double dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005\x0005\x0005", qUseCenter, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(6225)
inline enum femap::zReturnCode femap::IViewOrient::ModelRotation ( VARIANT_BOOL qUseCenter, double dX, double dY, double dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005\x0005\x0005", qUseCenter, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(6226)
inline enum femap::zReturnCode femap::IViewOrient::CoordSysRotation ( int iCoordSys, VARIANT_BOOL qUseCenter, double dX, double dY, double dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x0005\x0005", iCoordSys, qUseCenter, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(6227)
inline enum femap::zReturnCode femap::IViewOrient::VectorRotation ( double dX, double dY, double dZ, double dVX, double dVY, double dVZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x0005\x0005\x0005", dX, dY, dZ, dVX, dVY, dVZ);
    return _result;
}

#pragma implementation_key(6228)
inline enum femap::zReturnCode femap::IViewOrient::RollThru ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6229)
inline enum femap::zReturnCode femap::IViewOrient::RecordStart ( int nMaxFrames, int iViewID, int iPathID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nMaxFrames, iViewID, iPathID);
    return _result;
}

#pragma implementation_key(6230)
inline enum femap::zReturnCode femap::IViewOrient::RecordEnd ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6231)
inline enum femap::zReturnCode femap::IViewOrient::PlaybackStart ( int iViewID, int iPathID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", iViewID, iPathID);
    return _result;
}

#pragma implementation_key(6232)
inline enum femap::zReturnCode femap::IViewOrient::PlaybackNext ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6233)
inline enum femap::zReturnCode femap::IViewOrient::PlaybackDelete ( int iPathID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iPathID);
    return _result;
}

#pragma implementation_key(6234)
inline enum femap::zReturnCode femap::IViewOrient::SnapToAxes ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6235)
inline enum femap::zReturnCode femap::IViewOrient::SetRotationAngles ( double dX, double dY, double dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005", dX, dY, dZ);
    return _result;
}

#pragma implementation_key(6236)
inline enum femap::zReturnCode femap::IViewOrient::GetRotationAngles ( double * pdX, double * pdY, double * pdZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005", pdX, pdY, pdZ);
    return _result;
}

#pragma implementation_key(6237)
inline enum femap::zReturnCode femap::IViewOrient::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6238)
inline enum femap::zReturnCode femap::IViewOrient::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6239)
inline enum femap::zReturnCode femap::IViewOrient::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6240)
inline enum femap::zReturnCode femap::IViewOrient::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6241)
inline enum femap::zReturnCode femap::IViewOrient::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6242)
inline enum femap::zReturnCode femap::IViewOrient::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6243)
inline enum femap::zReturnCode femap::IViewOrient::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6244)
inline enum femap::zReturnCode femap::IViewOrient::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6245)
inline enum femap::zReturnCode femap::IViewOrient::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6246)
inline enum femap::zReturnCode femap::IViewOrient::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6247)
inline enum femap::zReturnCode femap::IViewOrient::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6248)
inline enum femap::zReturnCode femap::IViewOrient::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6249)
inline int femap::IViewOrient::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6250)
inline int femap::IViewOrient::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6251)
inline int femap::IViewOrient::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6252)
inline int femap::IViewOrient::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6253)
inline enum femap::zReturnCode femap::IViewOrient::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6254)
inline enum femap::zReturnCode femap::IViewOrient::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6255)
inline enum femap::zReturnCode femap::IViewOrient::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6256)
inline enum femap::zReturnCode femap::IViewOrient::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6257)
inline enum femap::zReturnCode femap::IViewOrient::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6258)
inline int femap::IViewOrient::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6259)
inline enum femap::zReturnCode femap::IViewOrient::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6260)
inline enum femap::zReturnCode femap::IViewOrient::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6261)
inline enum femap::zReturnCode femap::IViewOrient::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6262)
inline int femap::IViewOrient::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6263)
inline enum femap::zReturnCode femap::IViewOrient::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6264)
inline enum femap::zReturnCode femap::IViewOrient::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6265)
inline _variant_t femap::IViewOrient::GetvCenter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2710, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6266)
inline void femap::IViewOrient::PutvCenter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2710, VT_VARIANT, &_val);
}

#pragma implementation_key(6267)
inline double femap::IViewOrient::GetMagnification ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6268)
inline void femap::IViewOrient::PutMagnification ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(6269)
inline VARIANT_BOOL femap::IViewOrient::GetModelAlwaysInFront ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6270)
inline void femap::IViewOrient::PutModelAlwaysInFront ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(6271)
inline VARIANT_BOOL femap::IViewOrient::GetAutoAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6272)
inline void femap::IViewOrient::PutAutoAspectRatio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(6273)
inline double femap::IViewOrient::GetAspectRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6274)
inline void femap::IViewOrient::PutAspectRatio ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(6275)
inline VARIANT_BOOL femap::IViewOrient::GetPerspective ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6276)
inline void femap::IViewOrient::PutPerspective ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(6277)
inline double femap::IViewOrient::GetPerspectiveAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6278)
inline void femap::IViewOrient::PutPerspectiveAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(6279)
inline int femap::IViewOrient::GetRotationAxesOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6280)
inline void femap::IViewOrient::PutRotationAxesOption ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(6281)
inline int femap::IViewOrient::GetRotationCenterOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6282)
inline void femap::IViewOrient::PutRotationCenterOption ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(6283)
inline int femap::IViewOrient::GetRotationCoordSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6284)
inline void femap::IViewOrient::PutRotationCoordSys ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(6285)
inline VARIANT_BOOL femap::IViewOrient::GetSingleAxis ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6286)
inline void femap::IViewOrient::PutSingleAxis ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(6287)
inline _variant_t femap::IViewOrient::GetvRotationCenter ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6288)
inline void femap::IViewOrient::PutvRotationCenter ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(6289)
inline _variant_t femap::IViewOrient::GetvRotationVector ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6290)
inline void femap::IViewOrient::PutvRotationVector ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(6291)
inline int femap::IViewOrient::GetSecondaryRotationAxesOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6292)
inline void femap::IViewOrient::PutSecondaryRotationAxesOption ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(6293)
inline int femap::IViewOrient::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6294)
inline void femap::IViewOrient::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6295)
inline int femap::IViewOrient::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6296)
inline void femap::IViewOrient::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6297)
inline int femap::IViewOrient::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6298)
inline void femap::IViewOrient::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IText wrapper method implementations
//

#pragma implementation_key(6299)
inline double femap::IText::GetTextPosition ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6300)
inline void femap::IText::PutTextPosition ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6301)
inline double femap::IText::GetPointerPosition ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6302)
inline void femap::IText::PutPointerPosition ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6303)
inline enum femap::zReturnCode femap::IText::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6304)
inline enum femap::zReturnCode femap::IText::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6305)
inline enum femap::zReturnCode femap::IText::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6306)
inline enum femap::zReturnCode femap::IText::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6307)
inline enum femap::zReturnCode femap::IText::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6308)
inline enum femap::zReturnCode femap::IText::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6309)
inline enum femap::zReturnCode femap::IText::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6310)
inline enum femap::zReturnCode femap::IText::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6311)
inline enum femap::zReturnCode femap::IText::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6312)
inline enum femap::zReturnCode femap::IText::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6313)
inline enum femap::zReturnCode femap::IText::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6314)
inline enum femap::zReturnCode femap::IText::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6315)
inline enum femap::zReturnCode femap::IText::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6316)
inline enum femap::zReturnCode femap::IText::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6317)
inline int femap::IText::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6318)
inline int femap::IText::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6319)
inline int femap::IText::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6320)
inline int femap::IText::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6321)
inline enum femap::zReturnCode femap::IText::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6322)
inline enum femap::zReturnCode femap::IText::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6323)
inline enum femap::zReturnCode femap::IText::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6324)
inline enum femap::zReturnCode femap::IText::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6325)
inline enum femap::zReturnCode femap::IText::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6326)
inline int femap::IText::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6327)
inline enum femap::zReturnCode femap::IText::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6328)
inline enum femap::zReturnCode femap::IText::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6329)
inline enum femap::zReturnCode femap::IText::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6330)
inline int femap::IText::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6331)
inline enum femap::zReturnCode femap::IText::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6332)
inline enum femap::zReturnCode femap::IText::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6333)
inline VARIANT_BOOL femap::IText::GetModelPosition ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6334)
inline void femap::IText::PutModelPosition ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BOOL, _val);
}

#pragma implementation_key(6335)
inline VARIANT_BOOL femap::IText::GetAllViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6336)
inline void femap::IText::PutAllViews ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(6337)
inline VARIANT_BOOL femap::IText::GetDrawPointer ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6338)
inline void femap::IText::PutDrawPointer ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(6339)
inline VARIANT_BOOL femap::IText::GetDrawBorder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6340)
inline void femap::IText::PutDrawBorder ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(6341)
inline int femap::IText::GetVisibleView ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6342)
inline void femap::IText::PutVisibleView ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(6343)
inline int femap::IText::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6344)
inline void femap::IText::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(6345)
inline enum femap::zColor femap::IText::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6346)
inline void femap::IText::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(6347)
inline enum femap::zColor femap::IText::GetBorderColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6348)
inline void femap::IText::PutBorderColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(6349)
inline enum femap::zColor femap::IText::GetBackColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6350)
inline void femap::IText::PutBackColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(6351)
inline int femap::IText::GetHorzJustify ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6352)
inline void femap::IText::PutHorzJustify ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(6353)
inline int femap::IText::GetVertJustify ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6354)
inline void femap::IText::PutVertJustify ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(6355)
inline int femap::IText::GetFontNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6356)
inline void femap::IText::PutFontNumber ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(6357)
inline _bstr_t femap::IText::Gettext ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6358)
inline void femap::IText::Puttext ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x271e, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(6359)
inline _variant_t femap::IText::GetvTextPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6360)
inline void femap::IText::PutvTextPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271f, VT_VARIANT, &_val);
}

#pragma implementation_key(6361)
inline _variant_t femap::IText::GetvPointerPosition ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2720, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6362)
inline void femap::IText::PutvPointerPosition ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2720, VT_VARIANT, &_val);
}

#pragma implementation_key(6363)
inline int femap::IText::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6364)
inline void femap::IText::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6365)
inline int femap::IText::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6366)
inline void femap::IText::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6367)
inline int femap::IText::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6368)
inline void femap::IText::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IConnectionProp wrapper method implementations
//

#pragma implementation_key(6369)
inline VARIANT_BOOL femap::IConnectionProp::Getflag ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6370)
inline void femap::IConnectionProp::Putflag ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(6371)
inline int femap::IConnectionProp::GetflagI ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6372)
inline void femap::IConnectionProp::PutflagI ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(6373)
inline double femap::IConnectionProp::Getpval ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6374)
inline void femap::IConnectionProp::Putpval ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6375)
inline int femap::IConnectionProp::Getplyval ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6376)
inline void femap::IConnectionProp::Putplyval ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(6377)
inline enum femap::zReturnCode femap::IConnectionProp::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6378)
inline enum femap::zReturnCode femap::IConnectionProp::SetDefaults ( double dContactTolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005", dContactTolerance);
    return _result;
}

#pragma implementation_key(6379)
inline enum femap::zReturnCode femap::IConnectionProp::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6380)
inline enum femap::zReturnCode femap::IConnectionProp::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6381)
inline enum femap::zReturnCode femap::IConnectionProp::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6382)
inline enum femap::zReturnCode femap::IConnectionProp::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6383)
inline enum femap::zReturnCode femap::IConnectionProp::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6384)
inline enum femap::zReturnCode femap::IConnectionProp::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6385)
inline enum femap::zReturnCode femap::IConnectionProp::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6386)
inline enum femap::zReturnCode femap::IConnectionProp::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6387)
inline enum femap::zReturnCode femap::IConnectionProp::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6388)
inline enum femap::zReturnCode femap::IConnectionProp::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6389)
inline enum femap::zReturnCode femap::IConnectionProp::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6390)
inline enum femap::zReturnCode femap::IConnectionProp::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6391)
inline enum femap::zReturnCode femap::IConnectionProp::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6392)
inline int femap::IConnectionProp::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6393)
inline int femap::IConnectionProp::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6394)
inline int femap::IConnectionProp::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6395)
inline int femap::IConnectionProp::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6396)
inline enum femap::zReturnCode femap::IConnectionProp::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6397)
inline enum femap::zReturnCode femap::IConnectionProp::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6398)
inline enum femap::zReturnCode femap::IConnectionProp::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6399)
inline enum femap::zReturnCode femap::IConnectionProp::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6400)
inline enum femap::zReturnCode femap::IConnectionProp::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6401)
inline int femap::IConnectionProp::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6402)
inline enum femap::zReturnCode femap::IConnectionProp::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6403)
inline enum femap::zReturnCode femap::IConnectionProp::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6404)
inline enum femap::zReturnCode femap::IConnectionProp::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6405)
inline int femap::IConnectionProp::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6406)
inline enum femap::zReturnCode femap::IConnectionProp::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6407)
inline enum femap::zReturnCode femap::IConnectionProp::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6408)
inline int femap::IConnectionProp::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6409)
inline void femap::IConnectionProp::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(6410)
inline enum femap::zColor femap::IConnectionProp::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6411)
inline void femap::IConnectionProp::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(6412)
inline enum femap::zConnectionPropType femap::IConnectionProp::Gettype ( ) {
    enum zConnectionPropType _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6413)
inline void femap::IConnectionProp::Puttype ( enum zConnectionPropType _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(6414)
inline _bstr_t femap::IConnectionProp::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6415)
inline void femap::IConnectionProp::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(6416)
inline _variant_t femap::IConnectionProp::Getplymat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6417)
inline void femap::IConnectionProp::Putplymat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271a, VT_VARIANT, &_val);
}

#pragma implementation_key(6418)
inline _variant_t femap::IConnectionProp::Getpmat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6419)
inline void femap::IConnectionProp::Putpmat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(6420)
inline _variant_t femap::IConnectionProp::Getvflag ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6421)
inline void femap::IConnectionProp::Putvflag ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271e, VT_VARIANT, &_val);
}

#pragma implementation_key(6422)
inline _variant_t femap::IConnectionProp::GetvflagI ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6423)
inline void femap::IConnectionProp::PutvflagI ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271f, VT_VARIANT, &_val);
}

#pragma implementation_key(6424)
inline _variant_t femap::IConnectionProp::Getvpval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2720, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6425)
inline void femap::IConnectionProp::Putvpval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2720, VT_VARIANT, &_val);
}

#pragma implementation_key(6426)
inline _variant_t femap::IConnectionProp::Getvplyval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2721, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6427)
inline void femap::IConnectionProp::Putvplyval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2721, VT_VARIANT, &_val);
}

#pragma implementation_key(6428)
inline int femap::IConnectionProp::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6429)
inline void femap::IConnectionProp::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6430)
inline int femap::IConnectionProp::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6431)
inline void femap::IConnectionProp::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6432)
inline int femap::IConnectionProp::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6433)
inline void femap::IConnectionProp::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IConnection wrapper method implementations
//

#pragma implementation_key(6434)
inline int femap::IConnection::GetContact ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6435)
inline void femap::IConnection::PutContact ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(6436)
inline enum femap::zReturnCode femap::IConnection::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6437)
inline femap::IConnectionPropPtr femap::IConnection::Prop ( ) {
    struct IConnectionProp * _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return IConnectionPropPtr(_result, false);
}

#pragma implementation_key(6438)
inline enum femap::zReturnCode femap::IConnection::Enable ( VARIANT_BOOL bEnable ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bEnable);
    return _result;
}

#pragma implementation_key(6439)
inline enum femap::zReturnCode femap::IConnection::IsEnabled ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6440)
inline enum femap::zReturnCode femap::IConnection::BoundingBox ( VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x400c", box);
    return _result;
}

#pragma implementation_key(6441)
inline enum femap::zReturnCode femap::IConnection::BoundingBoxInCSys ( int nCSysID, VARIANT * box ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", nCSysID, box);
    return _result;
}

#pragma implementation_key(6442)
inline enum femap::zReturnCode femap::IConnection::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6443)
inline enum femap::zReturnCode femap::IConnection::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6444)
inline enum femap::zReturnCode femap::IConnection::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6445)
inline enum femap::zReturnCode femap::IConnection::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6446)
inline enum femap::zReturnCode femap::IConnection::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6447)
inline enum femap::zReturnCode femap::IConnection::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6448)
inline enum femap::zReturnCode femap::IConnection::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6449)
inline enum femap::zReturnCode femap::IConnection::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6450)
inline enum femap::zReturnCode femap::IConnection::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6451)
inline enum femap::zReturnCode femap::IConnection::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6452)
inline enum femap::zReturnCode femap::IConnection::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6453)
inline enum femap::zReturnCode femap::IConnection::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6454)
inline enum femap::zReturnCode femap::IConnection::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6455)
inline int femap::IConnection::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6456)
inline int femap::IConnection::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6457)
inline int femap::IConnection::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6458)
inline int femap::IConnection::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6459)
inline enum femap::zReturnCode femap::IConnection::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6460)
inline enum femap::zReturnCode femap::IConnection::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6461)
inline enum femap::zReturnCode femap::IConnection::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6462)
inline enum femap::zReturnCode femap::IConnection::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6463)
inline enum femap::zReturnCode femap::IConnection::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6464)
inline int femap::IConnection::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6465)
inline enum femap::zReturnCode femap::IConnection::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6466)
inline enum femap::zReturnCode femap::IConnection::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6467)
inline enum femap::zReturnCode femap::IConnection::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6468)
inline int femap::IConnection::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6469)
inline enum femap::zReturnCode femap::IConnection::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6470)
inline enum femap::zReturnCode femap::IConnection::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6471)
inline enum femap::zColor femap::IConnection::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6472)
inline void femap::IConnection::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(6473)
inline int femap::IConnection::GetpropID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6474)
inline void femap::IConnection::PutpropID ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(6475)
inline int femap::IConnection::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6476)
inline void femap::IConnection::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(6477)
inline _bstr_t femap::IConnection::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6478)
inline void femap::IConnection::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2719, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(6479)
inline _variant_t femap::IConnection::Getvcontact ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2723, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6480)
inline void femap::IConnection::Putvcontact ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2723, VT_VARIANT, &_val);
}

#pragma implementation_key(6481)
inline int femap::IConnection::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6482)
inline void femap::IConnection::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6483)
inline int femap::IConnection::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6484)
inline void femap::IConnection::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6485)
inline int femap::IConnection::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6486)
inline void femap::IConnection::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IScratch wrapper method implementations
//

#pragma implementation_key(6487)
inline VARIANT_BOOL femap::IScratch::GetbData ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6488)
inline void femap::IScratch::PutbData ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(6489)
inline int femap::IScratch::GetnData ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6490)
inline void femap::IScratch::PutnData ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(6491)
inline double femap::IScratch::GetrData ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6492)
inline void femap::IScratch::PutrData ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6493)
inline enum femap::zReturnCode femap::IScratch::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6494)
inline enum femap::zReturnCode femap::IScratch::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6495)
inline enum femap::zReturnCode femap::IScratch::Exist ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6496)
inline enum femap::zReturnCode femap::IScratch::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6497)
inline enum femap::zReturnCode femap::IScratch::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6498)
inline enum femap::zReturnCode femap::IScratch::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6499)
inline enum femap::zReturnCode femap::IScratch::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6500)
inline enum femap::zReturnCode femap::IScratch::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6501)
inline enum femap::zReturnCode femap::IScratch::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6502)
inline enum femap::zReturnCode femap::IScratch::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6503)
inline enum femap::zReturnCode femap::IScratch::Debug ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6504)
inline int femap::IScratch::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6505)
inline void femap::IScratch::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6506)
inline int femap::IScratch::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6507)
inline void femap::IScratch::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6508)
inline int femap::IScratch::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6509)
inline void femap::IScratch::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ISelector wrapper method implementations
//

#pragma implementation_key(6510)
inline enum femap::zReturnCode femap::ISelector::ClearAll ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6511)
inline enum femap::zReturnCode femap::ISelector::clear ( enum zSelectorType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(6512)
inline enum femap::zReturnCode femap::ISelector::Count ( enum zSelectorType entityTYPE, int * nSelected ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", entityTYPE, nSelected);
    return _result;
}

#pragma implementation_key(6513)
inline enum femap::zReturnCode femap::ISelector::SelectBox ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6514)
inline enum femap::zReturnCode femap::ISelector::SelectCircle ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6515)
inline enum femap::zReturnCode femap::ISelector::SelectPolygon ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6516)
inline enum femap::zReturnCode femap::ISelector::SelectFreehand ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6517)
inline enum femap::zReturnCode femap::ISelector::Grow ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6518)
inline enum femap::zReturnCode femap::ISelector::Shrink ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6519)
inline enum femap::zReturnCode femap::ISelector::Show ( VARIANT_BOOL bShowAll ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bShowAll);
    return _result;
}

#pragma implementation_key(6520)
inline enum femap::zReturnCode femap::ISelector::SaveGroup ( int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", groupID);
    return _result;
}

#pragma implementation_key(6521)
inline enum femap::zReturnCode femap::ISelector::LoadGroup ( int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", groupID);
    return _result;
}

#pragma implementation_key(6522)
inline enum femap::zReturnCode femap::ISelector::UpdateDataTable ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6523)
inline enum femap::zReturnCode femap::ISelector::Add ( enum zSelectorType entityTYPE, int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, nID);
    return _result;
}

#pragma implementation_key(6524)
inline enum femap::zReturnCode femap::ISelector::AddSet ( enum zSelectorType entityTYPE, int nSetD, VARIANT_BOOL bUpdateDataTable ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", entityTYPE, nSetD, bUpdateDataTable);
    return _result;
}

#pragma implementation_key(6525)
inline femap::ISetPtr femap::ISelector::GetSelected ( enum zSelectorType entityTYPE ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", entityTYPE);
    return ISetPtr(_result, false);
}

#pragma implementation_key(6526)
inline enum femap::zReturnCode femap::ISelector::Copy ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6527)
inline enum femap::zReturnCode femap::ISelector::Paste ( VARIANT_BOOL bShowDlg ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bShowDlg);
    return _result;
}

#pragma implementation_key(6528)
inline enum femap::zReturnCode femap::ISelector::GetSelectedID ( enum zSelectorType entityTYPE, int * nNumSelected, VARIANT * pnSelectedID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", entityTYPE, nNumSelected, pnSelectedID);
    return _result;
}

#pragma implementation_key(6529)
inline enum femap::zReturnCode femap::ISelector::Tooltips ( VARIANT_BOOL bOn, VARIANT_BOOL bIncludeLayersAndGroups ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b", bOn, bIncludeLayersAndGroups);
    return _result;
}

#pragma implementation_key(6530)
inline VARIANT_BOOL femap::ISelector::GetMultipleMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6531)
inline void femap::ISelector::PutMultipleMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BOOL, _val);
}

#pragma implementation_key(6532)
inline VARIANT_BOOL femap::ISelector::GetAddMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6533)
inline void femap::ISelector::PutAddMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(6534)
inline enum femap::zSelectorDrill femap::ISelector::GetDrillMode ( ) {
    enum zSelectorDrill _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6535)
inline void femap::ISelector::PutDrillMode ( enum zSelectorDrill _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(6536)
inline VARIANT_BOOL femap::ISelector::GetRelatedMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6537)
inline void femap::ISelector::PutRelatedMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(6538)
inline enum femap::zSelectorType femap::ISelector::GetSelectEntity ( ) {
    enum zSelectorType _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6539)
inline void femap::ISelector::PutSelectEntity ( enum zSelectorType _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(6540)
inline VARIANT_BOOL femap::ISelector::GetActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6541)
inline void femap::ISelector::PutActive ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

//
// dispinterface ILoadDefinition wrapper method implementations
//

#pragma implementation_key(6542)
inline enum femap::zReturnCode femap::ILoadDefinition::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6543)
inline enum femap::zReturnCode femap::ILoadDefinition::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6544)
inline enum femap::zReturnCode femap::ILoadDefinition::PutAll ( int entID, enum zDataType enDataType, enum zLoadType enLoadType, _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008", entID, enDataType, enLoadType, (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6545)
inline enum femap::zReturnCode femap::ILoadDefinition::ResetNextLoad ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6546)
inline enum femap::zReturnCode femap::ILoadDefinition::NextLoad ( IDispatch * * pDispatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4009", pDispatch);
    return _result;
}

#pragma implementation_key(6547)
inline int femap::ILoadDefinition::CountLoads ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6548)
inline enum femap::zReturnCode femap::ILoadDefinition::IsTotalLoad ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6549)
inline enum femap::zReturnCode femap::ILoadDefinition::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6550)
inline enum femap::zReturnCode femap::ILoadDefinition::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6551)
inline enum femap::zReturnCode femap::ILoadDefinition::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6552)
inline enum femap::zReturnCode femap::ILoadDefinition::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6553)
inline enum femap::zReturnCode femap::ILoadDefinition::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6554)
inline enum femap::zReturnCode femap::ILoadDefinition::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6555)
inline enum femap::zReturnCode femap::ILoadDefinition::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6556)
inline enum femap::zReturnCode femap::ILoadDefinition::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6557)
inline enum femap::zReturnCode femap::ILoadDefinition::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6558)
inline enum femap::zReturnCode femap::ILoadDefinition::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6559)
inline enum femap::zReturnCode femap::ILoadDefinition::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6560)
inline enum femap::zReturnCode femap::ILoadDefinition::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6561)
inline int femap::ILoadDefinition::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6562)
inline int femap::ILoadDefinition::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6563)
inline int femap::ILoadDefinition::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6564)
inline int femap::ILoadDefinition::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6565)
inline enum femap::zReturnCode femap::ILoadDefinition::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6566)
inline enum femap::zReturnCode femap::ILoadDefinition::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6567)
inline enum femap::zReturnCode femap::ILoadDefinition::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6568)
inline enum femap::zReturnCode femap::ILoadDefinition::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6569)
inline enum femap::zReturnCode femap::ILoadDefinition::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6570)
inline int femap::ILoadDefinition::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6571)
inline enum femap::zReturnCode femap::ILoadDefinition::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6572)
inline enum femap::zReturnCode femap::ILoadDefinition::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6573)
inline enum femap::zReturnCode femap::ILoadDefinition::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6574)
inline int femap::ILoadDefinition::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6575)
inline enum femap::zReturnCode femap::ILoadDefinition::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6576)
inline enum femap::zReturnCode femap::ILoadDefinition::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6577)
inline _bstr_t femap::ILoadDefinition::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6578)
inline void femap::ILoadDefinition::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(6579)
inline enum femap::zLoadType femap::ILoadDefinition::GetloadType ( ) {
    enum zLoadType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6580)
inline void femap::ILoadDefinition::PutloadType ( enum zLoadType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(6581)
inline enum femap::zDataType femap::ILoadDefinition::GetdataType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6582)
inline void femap::ILoadDefinition::PutdataType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(6583)
inline int femap::ILoadDefinition::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6584)
inline void femap::ILoadDefinition::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6585)
inline int femap::ILoadDefinition::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6586)
inline void femap::ILoadDefinition::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6587)
inline int femap::ILoadDefinition::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6588)
inline void femap::ILoadDefinition::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IBCDefinition wrapper method implementations
//

#pragma implementation_key(6589)
inline enum femap::zReturnCode femap::IBCDefinition::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6590)
inline enum femap::zReturnCode femap::IBCDefinition::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6591)
inline enum femap::zReturnCode femap::IBCDefinition::PutAll ( int entID, enum zDataType enDataType, enum zDataType enOnType, _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008", entID, enDataType, enOnType, (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6592)
inline enum femap::zReturnCode femap::IBCDefinition::ResetNextBC ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6593)
inline enum femap::zReturnCode femap::IBCDefinition::NextBC ( IDispatch * * pDispatch ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4009", pDispatch);
    return _result;
}

#pragma implementation_key(6594)
inline enum femap::zReturnCode femap::IBCDefinition::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6595)
inline enum femap::zReturnCode femap::IBCDefinition::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6596)
inline enum femap::zReturnCode femap::IBCDefinition::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6597)
inline enum femap::zReturnCode femap::IBCDefinition::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6598)
inline enum femap::zReturnCode femap::IBCDefinition::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6599)
inline enum femap::zReturnCode femap::IBCDefinition::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6600)
inline enum femap::zReturnCode femap::IBCDefinition::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6601)
inline enum femap::zReturnCode femap::IBCDefinition::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6602)
inline enum femap::zReturnCode femap::IBCDefinition::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6603)
inline enum femap::zReturnCode femap::IBCDefinition::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6604)
inline enum femap::zReturnCode femap::IBCDefinition::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6605)
inline enum femap::zReturnCode femap::IBCDefinition::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6606)
inline int femap::IBCDefinition::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6607)
inline int femap::IBCDefinition::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6608)
inline int femap::IBCDefinition::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6609)
inline int femap::IBCDefinition::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6610)
inline enum femap::zReturnCode femap::IBCDefinition::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6611)
inline enum femap::zReturnCode femap::IBCDefinition::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6612)
inline enum femap::zReturnCode femap::IBCDefinition::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6613)
inline enum femap::zReturnCode femap::IBCDefinition::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6614)
inline enum femap::zReturnCode femap::IBCDefinition::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6615)
inline int femap::IBCDefinition::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6616)
inline enum femap::zReturnCode femap::IBCDefinition::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6617)
inline enum femap::zReturnCode femap::IBCDefinition::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6618)
inline enum femap::zReturnCode femap::IBCDefinition::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6619)
inline int femap::IBCDefinition::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6620)
inline enum femap::zReturnCode femap::IBCDefinition::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6621)
inline enum femap::zReturnCode femap::IBCDefinition::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6622)
inline _bstr_t femap::IBCDefinition::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6623)
inline void femap::IBCDefinition::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(6624)
inline enum femap::zDataType femap::IBCDefinition::GetOnType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6625)
inline void femap::IBCDefinition::PutOnType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(6626)
inline enum femap::zDataType femap::IBCDefinition::GetdataType ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6627)
inline void femap::IBCDefinition::PutdataType ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(6628)
inline int femap::IBCDefinition::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6629)
inline void femap::IBCDefinition::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6630)
inline int femap::IBCDefinition::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6631)
inline void femap::IBCDefinition::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6632)
inline int femap::IBCDefinition::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6633)
inline void femap::IBCDefinition::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGFXPoint wrapper method implementations
//

#pragma implementation_key(6634)
inline double femap::IGFXPoint::Getxyz ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6635)
inline void femap::IGFXPoint::Putxyz ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6636)
inline enum femap::zReturnCode femap::IGFXPoint::PutAll ( int entID, double x, double y, double z, int layer, enum zColor color, enum zGFXPointSymbol symbol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0003\x0003\x0003", entID, x, y, z, layer, color, symbol);
    return _result;
}

#pragma implementation_key(6637)
inline enum femap::zReturnCode femap::IGFXPoint::PutAllArray ( int numPoint, const _variant_t & entID, const _variant_t & xyz, const _variant_t & layer, const _variant_t & color, const _variant_t & symbol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c", numPoint, &entID, &xyz, &layer, &color, &symbol);
    return _result;
}

#pragma implementation_key(6638)
inline enum femap::zReturnCode femap::IGFXPoint::PutCoordArray ( int numPoint, const _variant_t & xyz, int layer, enum zColor color, enum zGFXPointSymbol symbol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0003\x0003", numPoint, &xyz, layer, color, symbol);
    return _result;
}

#pragma implementation_key(6639)
inline enum femap::zReturnCode femap::IGFXPoint::DeleteAll ( VARIANT_BOOL bAllSets, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllSets, nSetID);
    return _result;
}

#pragma implementation_key(6640)
inline enum femap::zReturnCode femap::IGFXPoint::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6641)
inline enum femap::zReturnCode femap::IGFXPoint::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6642)
inline enum femap::zReturnCode femap::IGFXPoint::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6643)
inline enum femap::zReturnCode femap::IGFXPoint::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6644)
inline enum femap::zReturnCode femap::IGFXPoint::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6645)
inline enum femap::zReturnCode femap::IGFXPoint::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6646)
inline enum femap::zReturnCode femap::IGFXPoint::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6647)
inline enum femap::zReturnCode femap::IGFXPoint::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6648)
inline enum femap::zReturnCode femap::IGFXPoint::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6649)
inline enum femap::zReturnCode femap::IGFXPoint::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6650)
inline enum femap::zReturnCode femap::IGFXPoint::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6651)
inline enum femap::zReturnCode femap::IGFXPoint::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6652)
inline enum femap::zReturnCode femap::IGFXPoint::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6653)
inline enum femap::zReturnCode femap::IGFXPoint::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6654)
inline int femap::IGFXPoint::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6655)
inline int femap::IGFXPoint::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6656)
inline int femap::IGFXPoint::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6657)
inline int femap::IGFXPoint::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6658)
inline enum femap::zReturnCode femap::IGFXPoint::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6659)
inline enum femap::zReturnCode femap::IGFXPoint::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6660)
inline enum femap::zReturnCode femap::IGFXPoint::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6661)
inline enum femap::zReturnCode femap::IGFXPoint::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6662)
inline enum femap::zReturnCode femap::IGFXPoint::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6663)
inline int femap::IGFXPoint::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6664)
inline enum femap::zReturnCode femap::IGFXPoint::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6665)
inline enum femap::zReturnCode femap::IGFXPoint::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6666)
inline enum femap::zReturnCode femap::IGFXPoint::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6667)
inline int femap::IGFXPoint::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6668)
inline enum femap::zReturnCode femap::IGFXPoint::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6669)
inline enum femap::zReturnCode femap::IGFXPoint::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6670)
inline double femap::IGFXPoint::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6671)
inline void femap::IGFXPoint::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(6672)
inline double femap::IGFXPoint::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6673)
inline void femap::IGFXPoint::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(6674)
inline double femap::IGFXPoint::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6675)
inline void femap::IGFXPoint::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(6676)
inline int femap::IGFXPoint::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6677)
inline void femap::IGFXPoint::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(6678)
inline enum femap::zColor femap::IGFXPoint::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6679)
inline void femap::IGFXPoint::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(6680)
inline enum femap::zGFXPointSymbol femap::IGFXPoint::Getsymbol ( ) {
    enum zGFXPointSymbol _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6681)
inline void femap::IGFXPoint::Putsymbol ( enum zGFXPointSymbol _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(6682)
inline _variant_t femap::IGFXPoint::GetvXYZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6683)
inline void femap::IGFXPoint::PutvXYZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(6684)
inline int femap::IGFXPoint::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6685)
inline void femap::IGFXPoint::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6686)
inline int femap::IGFXPoint::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6687)
inline void femap::IGFXPoint::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6688)
inline int femap::IGFXPoint::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6689)
inline void femap::IGFXPoint::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGFXLine wrapper method implementations
//

#pragma implementation_key(6690)
inline double femap::IGFXLine::Getxyz ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(6691)
inline void femap::IGFXLine::Putxyz ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(6692)
inline enum femap::zReturnCode femap::IGFXLine::PutAll ( int entID, double x1, double y1, double z1, double x2, double y2, double z2, int layer, enum zColor color ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0003", entID, x1, y1, z1, x2, y2, z2, layer, color);
    return _result;
}

#pragma implementation_key(6693)
inline enum femap::zReturnCode femap::IGFXLine::PutAllArray ( int numLine, const _variant_t & entID, const _variant_t & xyz, const _variant_t & layer, const _variant_t & color ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c", numLine, &entID, &xyz, &layer, &color);
    return _result;
}

#pragma implementation_key(6694)
inline enum femap::zReturnCode femap::IGFXLine::PutCoordArray ( int numLine, const _variant_t & xyz, int layer, enum zColor color ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0003", numLine, &xyz, layer, color);
    return _result;
}

#pragma implementation_key(6695)
inline enum femap::zReturnCode femap::IGFXLine::DeleteAll ( VARIANT_BOOL bAllSets, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllSets, nSetID);
    return _result;
}

#pragma implementation_key(6696)
inline enum femap::zReturnCode femap::IGFXLine::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6697)
inline enum femap::zReturnCode femap::IGFXLine::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6698)
inline enum femap::zReturnCode femap::IGFXLine::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6699)
inline enum femap::zReturnCode femap::IGFXLine::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6700)
inline enum femap::zReturnCode femap::IGFXLine::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6701)
inline enum femap::zReturnCode femap::IGFXLine::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6702)
inline enum femap::zReturnCode femap::IGFXLine::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6703)
inline enum femap::zReturnCode femap::IGFXLine::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6704)
inline enum femap::zReturnCode femap::IGFXLine::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6705)
inline enum femap::zReturnCode femap::IGFXLine::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6706)
inline enum femap::zReturnCode femap::IGFXLine::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6707)
inline enum femap::zReturnCode femap::IGFXLine::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6708)
inline enum femap::zReturnCode femap::IGFXLine::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6709)
inline enum femap::zReturnCode femap::IGFXLine::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6710)
inline int femap::IGFXLine::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6711)
inline int femap::IGFXLine::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6712)
inline int femap::IGFXLine::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6713)
inline int femap::IGFXLine::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6714)
inline enum femap::zReturnCode femap::IGFXLine::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6715)
inline enum femap::zReturnCode femap::IGFXLine::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6716)
inline enum femap::zReturnCode femap::IGFXLine::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6717)
inline enum femap::zReturnCode femap::IGFXLine::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6718)
inline enum femap::zReturnCode femap::IGFXLine::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6719)
inline int femap::IGFXLine::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6720)
inline enum femap::zReturnCode femap::IGFXLine::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6721)
inline enum femap::zReturnCode femap::IGFXLine::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6722)
inline enum femap::zReturnCode femap::IGFXLine::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6723)
inline int femap::IGFXLine::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6724)
inline enum femap::zReturnCode femap::IGFXLine::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6725)
inline enum femap::zReturnCode femap::IGFXLine::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6726)
inline double femap::IGFXLine::Getx1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6727)
inline void femap::IGFXLine::Putx1 ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(6728)
inline double femap::IGFXLine::Gety1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6729)
inline void femap::IGFXLine::Puty1 ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(6730)
inline double femap::IGFXLine::Getz1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6731)
inline void femap::IGFXLine::Putz1 ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(6732)
inline double femap::IGFXLine::Getx2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6733)
inline void femap::IGFXLine::Putx2 ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(6734)
inline double femap::IGFXLine::Gety2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6735)
inline void femap::IGFXLine::Puty2 ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(6736)
inline double femap::IGFXLine::Getz2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6737)
inline void femap::IGFXLine::Putz2 ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(6738)
inline int femap::IGFXLine::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6739)
inline void femap::IGFXLine::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(6740)
inline enum femap::zColor femap::IGFXLine::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6741)
inline void femap::IGFXLine::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(6742)
inline _variant_t femap::IGFXLine::GetvXYZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6743)
inline void femap::IGFXLine::PutvXYZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(6744)
inline int femap::IGFXLine::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6745)
inline void femap::IGFXLine::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6746)
inline int femap::IGFXLine::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6747)
inline void femap::IGFXLine::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6748)
inline int femap::IGFXLine::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6749)
inline void femap::IGFXLine::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGFXArrow wrapper method implementations
//

#pragma implementation_key(6750)
inline double femap::IGFXArrow::Getxyz ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6751)
inline void femap::IGFXArrow::Putxyz ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6752)
inline double femap::IGFXArrow::Getdxyz ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(6753)
inline void femap::IGFXArrow::Putdxyz ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(6754)
inline enum femap::zReturnCode femap::IGFXArrow::PutAll ( int entID, double x, double y, double z, double dX, double dY, double dZ, double Length, enum zGFXArrowMode lengthmode, int layer, enum zColor color, enum zGFXArrowStyle style ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0003\x0003\x0003\x0003", entID, x, y, z, dX, dY, dZ, Length, lengthmode, layer, color, style);
    return _result;
}

#pragma implementation_key(6755)
inline enum femap::zReturnCode femap::IGFXArrow::PutAllArray ( int numArrow, const _variant_t & entID, const _variant_t & xyz, const _variant_t & dxyz, const _variant_t & Length, const _variant_t & lengthmode, const _variant_t & layer, const _variant_t & color, const _variant_t & style ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", numArrow, &entID, &xyz, &dxyz, &Length, &lengthmode, &layer, &color, &style);
    return _result;
}

#pragma implementation_key(6756)
inline enum femap::zReturnCode femap::IGFXArrow::PutCoordArray ( int numArrow, const _variant_t & xyz, const _variant_t & dxyz, const _variant_t & Length, enum zGFXArrowMode lengthmode, int layer, enum zColor color, enum zGFXArrowStyle style ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x0003\x0003\x0003\x0003", numArrow, &xyz, &dxyz, &Length, lengthmode, layer, color, style);
    return _result;
}

#pragma implementation_key(6757)
inline enum femap::zReturnCode femap::IGFXArrow::DeleteAll ( VARIANT_BOOL bAllSets, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllSets, nSetID);
    return _result;
}

#pragma implementation_key(6758)
inline enum femap::zReturnCode femap::IGFXArrow::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6759)
inline enum femap::zReturnCode femap::IGFXArrow::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6760)
inline enum femap::zReturnCode femap::IGFXArrow::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6761)
inline enum femap::zReturnCode femap::IGFXArrow::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6762)
inline enum femap::zReturnCode femap::IGFXArrow::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6763)
inline enum femap::zReturnCode femap::IGFXArrow::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6764)
inline enum femap::zReturnCode femap::IGFXArrow::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6765)
inline enum femap::zReturnCode femap::IGFXArrow::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6766)
inline enum femap::zReturnCode femap::IGFXArrow::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6767)
inline enum femap::zReturnCode femap::IGFXArrow::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6768)
inline enum femap::zReturnCode femap::IGFXArrow::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6769)
inline enum femap::zReturnCode femap::IGFXArrow::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6770)
inline enum femap::zReturnCode femap::IGFXArrow::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6771)
inline enum femap::zReturnCode femap::IGFXArrow::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6772)
inline int femap::IGFXArrow::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6773)
inline int femap::IGFXArrow::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6774)
inline int femap::IGFXArrow::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6775)
inline int femap::IGFXArrow::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6776)
inline enum femap::zReturnCode femap::IGFXArrow::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6777)
inline enum femap::zReturnCode femap::IGFXArrow::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6778)
inline enum femap::zReturnCode femap::IGFXArrow::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6779)
inline enum femap::zReturnCode femap::IGFXArrow::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6780)
inline enum femap::zReturnCode femap::IGFXArrow::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6781)
inline int femap::IGFXArrow::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6782)
inline enum femap::zReturnCode femap::IGFXArrow::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6783)
inline enum femap::zReturnCode femap::IGFXArrow::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6784)
inline enum femap::zReturnCode femap::IGFXArrow::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6785)
inline int femap::IGFXArrow::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6786)
inline enum femap::zReturnCode femap::IGFXArrow::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6787)
inline enum femap::zReturnCode femap::IGFXArrow::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6788)
inline double femap::IGFXArrow::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6789)
inline void femap::IGFXArrow::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(6790)
inline double femap::IGFXArrow::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6791)
inline void femap::IGFXArrow::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(6792)
inline double femap::IGFXArrow::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6793)
inline void femap::IGFXArrow::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(6794)
inline double femap::IGFXArrow::GetdX ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6795)
inline void femap::IGFXArrow::PutdX ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(6796)
inline double femap::IGFXArrow::GetdY ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6797)
inline void femap::IGFXArrow::PutdY ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(6798)
inline double femap::IGFXArrow::GetdZ ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6799)
inline void femap::IGFXArrow::PutdZ ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(6800)
inline double femap::IGFXArrow::GetLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6801)
inline void femap::IGFXArrow::PutLength ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(6802)
inline enum femap::zGFXArrowMode femap::IGFXArrow::Getlengthmode ( ) {
    enum zGFXArrowMode _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6803)
inline void femap::IGFXArrow::Putlengthmode ( enum zGFXArrowMode _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(6804)
inline int femap::IGFXArrow::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6805)
inline void femap::IGFXArrow::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(6806)
inline enum femap::zColor femap::IGFXArrow::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6807)
inline void femap::IGFXArrow::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(6808)
inline enum femap::zGFXArrowStyle femap::IGFXArrow::Getstyle ( ) {
    enum zGFXArrowStyle _result;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6809)
inline void femap::IGFXArrow::Putstyle ( enum zGFXArrowStyle _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(6810)
inline _variant_t femap::IGFXArrow::GetvXYZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6811)
inline void femap::IGFXArrow::PutvXYZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(6812)
inline _variant_t femap::IGFXArrow::Getvdxyz ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6813)
inline void femap::IGFXArrow::Putvdxyz ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(6814)
inline int femap::IGFXArrow::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6815)
inline void femap::IGFXArrow::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6816)
inline int femap::IGFXArrow::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6817)
inline void femap::IGFXArrow::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6818)
inline int femap::IGFXArrow::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6819)
inline void femap::IGFXArrow::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGFXTria3 wrapper method implementations
//

#pragma implementation_key(6820)
inline double femap::IGFXTria3::Getxyz ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(6821)
inline void femap::IGFXTria3::Putxyz ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(6822)
inline double femap::IGFXTria3::Getnormal ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(6823)
inline void femap::IGFXTria3::Putnormal ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(6824)
inline enum femap::zReturnCode femap::IGFXTria3::PutAll ( int entID, const _variant_t & xyz, enum zGFXEdgeFlags edgeflags, const _variant_t & normal, VARIANT_BOOL autonormal, int layer, enum zColor fillcolor, enum zColor edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000c\x000b\x0003\x0003\x0003", entID, &xyz, edgeflags, &normal, autonormal, layer, fillcolor, edgecolor);
    return _result;
}

#pragma implementation_key(6825)
inline enum femap::zReturnCode femap::IGFXTria3::PutAllArray ( int numTria, const _variant_t & entID, const _variant_t & xyz, const _variant_t & edgeflags, const _variant_t & normal, const _variant_t & autonormal, const _variant_t & layer, const _variant_t & fillcolor, const _variant_t & edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", numTria, &entID, &xyz, &edgeflags, &normal, &autonormal, &layer, &fillcolor, &edgecolor);
    return _result;
}

#pragma implementation_key(6826)
inline enum femap::zReturnCode femap::IGFXTria3::PutCoordNormalArray ( int numTria, const _variant_t & xyz, const _variant_t & edgeflags, const _variant_t & normal, VARIANT_BOOL autonormal, int layer, enum zColor fillcolor, enum zColor edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000b\x0003\x0003\x0003", numTria, &xyz, &edgeflags, &normal, autonormal, layer, fillcolor, edgecolor);
    return _result;
}

#pragma implementation_key(6827)
inline enum femap::zReturnCode femap::IGFXTria3::PutCoordArray ( int numTria, const _variant_t & xyz, int layer, enum zColor fillcolor, enum zColor edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0003\x0003", numTria, &xyz, layer, fillcolor, edgecolor);
    return _result;
}

#pragma implementation_key(6828)
inline enum femap::zReturnCode femap::IGFXTria3::DeleteAll ( VARIANT_BOOL bAllSets, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllSets, nSetID);
    return _result;
}

#pragma implementation_key(6829)
inline enum femap::zReturnCode femap::IGFXTria3::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6830)
inline enum femap::zReturnCode femap::IGFXTria3::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6831)
inline enum femap::zReturnCode femap::IGFXTria3::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6832)
inline enum femap::zReturnCode femap::IGFXTria3::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6833)
inline enum femap::zReturnCode femap::IGFXTria3::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6834)
inline enum femap::zReturnCode femap::IGFXTria3::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6835)
inline enum femap::zReturnCode femap::IGFXTria3::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6836)
inline enum femap::zReturnCode femap::IGFXTria3::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6837)
inline enum femap::zReturnCode femap::IGFXTria3::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6838)
inline enum femap::zReturnCode femap::IGFXTria3::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6839)
inline enum femap::zReturnCode femap::IGFXTria3::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6840)
inline enum femap::zReturnCode femap::IGFXTria3::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6841)
inline enum femap::zReturnCode femap::IGFXTria3::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6842)
inline enum femap::zReturnCode femap::IGFXTria3::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6843)
inline int femap::IGFXTria3::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6844)
inline int femap::IGFXTria3::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6845)
inline int femap::IGFXTria3::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6846)
inline int femap::IGFXTria3::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6847)
inline enum femap::zReturnCode femap::IGFXTria3::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6848)
inline enum femap::zReturnCode femap::IGFXTria3::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6849)
inline enum femap::zReturnCode femap::IGFXTria3::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6850)
inline enum femap::zReturnCode femap::IGFXTria3::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6851)
inline enum femap::zReturnCode femap::IGFXTria3::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6852)
inline int femap::IGFXTria3::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6853)
inline enum femap::zReturnCode femap::IGFXTria3::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6854)
inline enum femap::zReturnCode femap::IGFXTria3::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6855)
inline enum femap::zReturnCode femap::IGFXTria3::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6856)
inline int femap::IGFXTria3::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6857)
inline enum femap::zReturnCode femap::IGFXTria3::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6858)
inline enum femap::zReturnCode femap::IGFXTria3::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6859)
inline _variant_t femap::IGFXTria3::GetvXYZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2710, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6860)
inline void femap::IGFXTria3::PutvXYZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2710, VT_VARIANT, &_val);
}

#pragma implementation_key(6861)
inline _variant_t femap::IGFXTria3::GetvNormal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2711, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6862)
inline void femap::IGFXTria3::PutvNormal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2711, VT_VARIANT, &_val);
}

#pragma implementation_key(6863)
inline int femap::IGFXTria3::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6864)
inline void femap::IGFXTria3::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(6865)
inline enum femap::zColor femap::IGFXTria3::Getfillcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6866)
inline void femap::IGFXTria3::Putfillcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(6867)
inline enum femap::zColor femap::IGFXTria3::Getedgecolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6868)
inline void femap::IGFXTria3::Putedgecolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(6869)
inline enum femap::zGFXEdgeFlags femap::IGFXTria3::Getedgeflags ( ) {
    enum zGFXEdgeFlags _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6870)
inline void femap::IGFXTria3::Putedgeflags ( enum zGFXEdgeFlags _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(6871)
inline VARIANT_BOOL femap::IGFXTria3::Getautonormal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6872)
inline void femap::IGFXTria3::Putautonormal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(6873)
inline int femap::IGFXTria3::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6874)
inline void femap::IGFXTria3::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6875)
inline int femap::IGFXTria3::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6876)
inline void femap::IGFXTria3::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6877)
inline int femap::IGFXTria3::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6878)
inline void femap::IGFXTria3::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGFXQuad4 wrapper method implementations
//

#pragma implementation_key(6879)
inline double femap::IGFXQuad4::Getxyz ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(6880)
inline void femap::IGFXQuad4::Putxyz ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(6881)
inline double femap::IGFXQuad4::Getnormal ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(6882)
inline void femap::IGFXQuad4::Putnormal ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(6883)
inline enum femap::zReturnCode femap::IGFXQuad4::PutAll ( int entID, const _variant_t & xyz, enum zGFXEdgeFlags edgeflags, const _variant_t & normal, VARIANT_BOOL autonormal, int layer, enum zColor fillcolor, enum zColor edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000c\x000b\x0003\x0003\x0003", entID, &xyz, edgeflags, &normal, autonormal, layer, fillcolor, edgecolor);
    return _result;
}

#pragma implementation_key(6884)
inline enum femap::zReturnCode femap::IGFXQuad4::PutAllArray ( int numQuad, const _variant_t & entID, const _variant_t & xyz, const _variant_t & edgeflags, const _variant_t & normal, const _variant_t & autonormal, const _variant_t & layer, const _variant_t & fillcolor, const _variant_t & edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", numQuad, &entID, &xyz, &edgeflags, &normal, &autonormal, &layer, &fillcolor, &edgecolor);
    return _result;
}

#pragma implementation_key(6885)
inline enum femap::zReturnCode femap::IGFXQuad4::PutCoordNormalArray ( int numQuad, const _variant_t & xyz, const _variant_t & edgeflags, const _variant_t & normal, VARIANT_BOOL autonormal, int layer, enum zColor fillcolor, enum zColor edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000b\x0003\x0003\x0003", numQuad, &xyz, &edgeflags, &normal, autonormal, layer, fillcolor, edgecolor);
    return _result;
}

#pragma implementation_key(6886)
inline enum femap::zReturnCode femap::IGFXQuad4::PutCoordArray ( int numQuad, const _variant_t & xyz, int layer, enum zColor fillcolor, enum zColor edgecolor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x0003\x0003", numQuad, &xyz, layer, fillcolor, edgecolor);
    return _result;
}

#pragma implementation_key(6887)
inline enum femap::zReturnCode femap::IGFXQuad4::DeleteAll ( VARIANT_BOOL bAllSets, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllSets, nSetID);
    return _result;
}

#pragma implementation_key(6888)
inline enum femap::zReturnCode femap::IGFXQuad4::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6889)
inline enum femap::zReturnCode femap::IGFXQuad4::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6890)
inline enum femap::zReturnCode femap::IGFXQuad4::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6891)
inline enum femap::zReturnCode femap::IGFXQuad4::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6892)
inline enum femap::zReturnCode femap::IGFXQuad4::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6893)
inline enum femap::zReturnCode femap::IGFXQuad4::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6894)
inline enum femap::zReturnCode femap::IGFXQuad4::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6895)
inline enum femap::zReturnCode femap::IGFXQuad4::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6896)
inline enum femap::zReturnCode femap::IGFXQuad4::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6897)
inline enum femap::zReturnCode femap::IGFXQuad4::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6898)
inline enum femap::zReturnCode femap::IGFXQuad4::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6899)
inline enum femap::zReturnCode femap::IGFXQuad4::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6900)
inline enum femap::zReturnCode femap::IGFXQuad4::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6901)
inline enum femap::zReturnCode femap::IGFXQuad4::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6902)
inline int femap::IGFXQuad4::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6903)
inline int femap::IGFXQuad4::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6904)
inline int femap::IGFXQuad4::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6905)
inline int femap::IGFXQuad4::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6906)
inline enum femap::zReturnCode femap::IGFXQuad4::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6907)
inline enum femap::zReturnCode femap::IGFXQuad4::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6908)
inline enum femap::zReturnCode femap::IGFXQuad4::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6909)
inline enum femap::zReturnCode femap::IGFXQuad4::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6910)
inline enum femap::zReturnCode femap::IGFXQuad4::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6911)
inline int femap::IGFXQuad4::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6912)
inline enum femap::zReturnCode femap::IGFXQuad4::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6913)
inline enum femap::zReturnCode femap::IGFXQuad4::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6914)
inline enum femap::zReturnCode femap::IGFXQuad4::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6915)
inline int femap::IGFXQuad4::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6916)
inline enum femap::zReturnCode femap::IGFXQuad4::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6917)
inline enum femap::zReturnCode femap::IGFXQuad4::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6918)
inline _variant_t femap::IGFXQuad4::GetvXYZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2710, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6919)
inline void femap::IGFXQuad4::PutvXYZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2710, VT_VARIANT, &_val);
}

#pragma implementation_key(6920)
inline _variant_t femap::IGFXQuad4::GetvNormal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2711, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(6921)
inline void femap::IGFXQuad4::PutvNormal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2711, VT_VARIANT, &_val);
}

#pragma implementation_key(6922)
inline int femap::IGFXQuad4::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6923)
inline void femap::IGFXQuad4::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(6924)
inline enum femap::zColor femap::IGFXQuad4::Getfillcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6925)
inline void femap::IGFXQuad4::Putfillcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(6926)
inline enum femap::zColor femap::IGFXQuad4::Getedgecolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6927)
inline void femap::IGFXQuad4::Putedgecolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(6928)
inline enum femap::zGFXEdgeFlags femap::IGFXQuad4::Getedgeflags ( ) {
    enum zGFXEdgeFlags _result;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6929)
inline void femap::IGFXQuad4::Putedgeflags ( enum zGFXEdgeFlags _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(6930)
inline VARIANT_BOOL femap::IGFXQuad4::Getautonormal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(6931)
inline void femap::IGFXQuad4::Putautonormal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(6932)
inline int femap::IGFXQuad4::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6933)
inline void femap::IGFXQuad4::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6934)
inline int femap::IGFXQuad4::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6935)
inline void femap::IGFXQuad4::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6936)
inline int femap::IGFXQuad4::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6937)
inline void femap::IGFXQuad4::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IGlobalPly wrapper method implementations
//

#pragma implementation_key(6938)
inline enum femap::zReturnCode femap::IGlobalPly::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6939)
inline enum femap::zReturnCode femap::IGlobalPly::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6940)
inline enum femap::zReturnCode femap::IGlobalPly::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6941)
inline enum femap::zReturnCode femap::IGlobalPly::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6942)
inline enum femap::zReturnCode femap::IGlobalPly::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6943)
inline enum femap::zReturnCode femap::IGlobalPly::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6944)
inline enum femap::zReturnCode femap::IGlobalPly::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6945)
inline enum femap::zReturnCode femap::IGlobalPly::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6946)
inline enum femap::zReturnCode femap::IGlobalPly::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6947)
inline enum femap::zReturnCode femap::IGlobalPly::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6948)
inline enum femap::zReturnCode femap::IGlobalPly::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6949)
inline enum femap::zReturnCode femap::IGlobalPly::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6950)
inline enum femap::zReturnCode femap::IGlobalPly::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6951)
inline enum femap::zReturnCode femap::IGlobalPly::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6952)
inline int femap::IGlobalPly::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6953)
inline int femap::IGlobalPly::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6954)
inline int femap::IGlobalPly::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6955)
inline int femap::IGlobalPly::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6956)
inline enum femap::zReturnCode femap::IGlobalPly::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6957)
inline enum femap::zReturnCode femap::IGlobalPly::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6958)
inline enum femap::zReturnCode femap::IGlobalPly::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6959)
inline enum femap::zReturnCode femap::IGlobalPly::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6960)
inline enum femap::zReturnCode femap::IGlobalPly::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(6961)
inline int femap::IGlobalPly::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(6962)
inline enum femap::zReturnCode femap::IGlobalPly::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6963)
inline enum femap::zReturnCode femap::IGlobalPly::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6964)
inline enum femap::zReturnCode femap::IGlobalPly::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6965)
inline int femap::IGlobalPly::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6966)
inline enum femap::zReturnCode femap::IGlobalPly::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(6967)
inline enum femap::zReturnCode femap::IGlobalPly::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(6968)
inline _bstr_t femap::IGlobalPly::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(6969)
inline void femap::IGlobalPly::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(6970)
inline double femap::IGlobalPly::Getthickness ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(6971)
inline void femap::IGlobalPly::Putthickness ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(6972)
inline int femap::IGlobalPly::GetmatlID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6973)
inline void femap::IGlobalPly::PutmatlID ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(6974)
inline int femap::IGlobalPly::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6975)
inline void femap::IGlobalPly::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(6976)
inline int femap::IGlobalPly::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6977)
inline void femap::IGlobalPly::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(6978)
inline int femap::IGlobalPly::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(6979)
inline void femap::IGlobalPly::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ILoadBolt wrapper method implementations
//

#pragma implementation_key(6980)
inline enum femap::zReturnCode femap::ILoadBolt::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6981)
inline enum femap::zReturnCode femap::ILoadBolt::Delete ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(6982)
inline enum femap::zReturnCode femap::ILoadBolt::AddArray ( int Count, const _variant_t & RegionID, const _variant_t & values ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", Count, &RegionID, &values);
    return _result;
}

#pragma implementation_key(6983)
inline enum femap::zReturnCode femap::ILoadBolt::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6984)
inline enum femap::zReturnCode femap::ILoadBolt::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6985)
inline enum femap::zReturnCode femap::ILoadBolt::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6986)
inline enum femap::zReturnCode femap::ILoadBolt::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6987)
inline enum femap::zReturnCode femap::ILoadBolt::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6988)
inline enum femap::zReturnCode femap::ILoadBolt::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6989)
inline enum femap::zReturnCode femap::ILoadBolt::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(6990)
inline enum femap::zReturnCode femap::ILoadBolt::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6991)
inline enum femap::zReturnCode femap::ILoadBolt::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6992)
inline enum femap::zReturnCode femap::ILoadBolt::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6993)
inline enum femap::zReturnCode femap::ILoadBolt::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6994)
inline enum femap::zReturnCode femap::ILoadBolt::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6995)
inline int femap::ILoadBolt::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6996)
inline int femap::ILoadBolt::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6997)
inline int femap::ILoadBolt::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6998)
inline int femap::ILoadBolt::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(6999)
inline enum femap::zReturnCode femap::ILoadBolt::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7000)
inline enum femap::zReturnCode femap::ILoadBolt::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7001)
inline enum femap::zReturnCode femap::ILoadBolt::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7002)
inline enum femap::zReturnCode femap::ILoadBolt::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7003)
inline enum femap::zReturnCode femap::ILoadBolt::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7004)
inline int femap::ILoadBolt::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7005)
inline enum femap::zReturnCode femap::ILoadBolt::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7006)
inline enum femap::zReturnCode femap::ILoadBolt::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7007)
inline enum femap::zReturnCode femap::ILoadBolt::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7008)
inline int femap::ILoadBolt::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7009)
inline enum femap::zReturnCode femap::ILoadBolt::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7010)
inline enum femap::zReturnCode femap::ILoadBolt::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7011)
inline double femap::ILoadBolt::Getpreload ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7012)
inline void femap::ILoadBolt::Putpreload ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(7013)
inline int femap::ILoadBolt::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7014)
inline void femap::ILoadBolt::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7015)
inline enum femap::zColor femap::ILoadBolt::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7016)
inline void femap::ILoadBolt::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(7017)
inline int femap::ILoadBolt::GetLoadDefinitionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7018)
inline void femap::ILoadBolt::PutLoadDefinitionID ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(7019)
inline int femap::ILoadBolt::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7020)
inline void femap::ILoadBolt::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(7021)
inline int femap::ILoadBolt::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7022)
inline void femap::ILoadBolt::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(7023)
inline int femap::ILoadBolt::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7024)
inline void femap::ILoadBolt::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IMapOutput wrapper method implementations
//

#pragma implementation_key(7025)
inline enum femap::zReturnCode femap::IMapOutput::MapFromModelToSet ( __int64 outModelID, int nGroup, int nOutSet, int nOutVect ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014\x0003\x0003\x0003", outModelID, nGroup, nOutSet, nOutVect);
    return _result;
}

#pragma implementation_key(7026)
inline enum femap::zReturnCode femap::IMapOutput::MapFromModelToSet2 ( __int64 outModelID, int nGroup, int nOutSet, int nOutVect, const _variant_t & ID, const _variant_t & elFace ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014\x0003\x0003\x0003\x000c\x000c", outModelID, nGroup, nOutSet, nOutVect, &ID, &elFace);
    return _result;
}

#pragma implementation_key(7027)
inline enum femap::zReturnCode femap::IMapOutput::MapFromModelToLocation ( __int64 outModelID, int nGroup, int nOutSet, int nOutVect, const _variant_t & vLocationX, const _variant_t & vLocationY, const _variant_t & vLocationZ, VARIANT * vLocationP, VARIANT * vLoadX, VARIANT * vLoadY, VARIANT * vLoadZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014\x0003\x0003\x0003\x000c\x000c\x000c\x400c\x400c\x400c\x400c", outModelID, nGroup, nOutSet, nOutVect, &vLocationX, &vLocationY, &vLocationZ, vLocationP, vLoadX, vLoadY, vLoadZ);
    return _result;
}

#pragma implementation_key(7028)
inline enum femap::zReturnCode femap::IMapOutput::GetOutputDataSurface ( int dataSurfID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", dataSurfID);
    return _result;
}

#pragma implementation_key(7029)
inline enum femap::zReturnCode femap::IMapOutput::MapOutputDataToLocation ( int Count, const _variant_t & vXYx, VARIANT * vValXYZ, VARIANT * qValid ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c", Count, &vXYx, vValXYZ, qValid);
    return _result;
}

#pragma implementation_key(7030)
inline enum femap::zReturnCode femap::IMapOutput::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7031)
inline enum femap::zReturnCode femap::IMapOutput::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7032)
inline enum femap::zReturnCode femap::IMapOutput::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7033)
inline enum femap::zReturnCode femap::IMapOutput::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7034)
inline enum femap::zReturnCode femap::IMapOutput::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7035)
inline enum femap::zReturnCode femap::IMapOutput::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7036)
inline enum femap::zReturnCode femap::IMapOutput::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7037)
inline enum femap::zReturnCode femap::IMapOutput::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7038)
inline enum femap::zReturnCode femap::IMapOutput::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7039)
inline int femap::IMapOutput::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7040)
inline enum femap::zReturnCode femap::IMapOutput::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7041)
inline enum femap::zReturnCode femap::IMapOutput::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7042)
inline enum femap::zReturnCode femap::IMapOutput::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7043)
inline enum femap::zReturnCode femap::IMapOutput::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7044)
inline enum femap::zMapOption femap::IMapOutput::GetMapOption ( ) {
    enum zMapOption _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7045)
inline void femap::IMapOutput::PutMapOption ( enum zMapOption _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7046)
inline double femap::IMapOutput::GetDefaultMapValue1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7047)
inline void femap::IMapOutput::PutDefaultMapValue1 ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(7048)
inline double femap::IMapOutput::GetDefaultMapValue2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7049)
inline void femap::IMapOutput::PutDefaultMapValue2 ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(7050)
inline double femap::IMapOutput::GetDefaultMapValue3 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7051)
inline void femap::IMapOutput::PutDefaultMapValue3 ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(7052)
inline int femap::IMapOutput::GetTargetSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7053)
inline void femap::IMapOutput::PutTargetSet ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(7054)
inline enum femap::zMapLoadType femap::IMapOutput::GetloadType ( ) {
    enum zMapLoadType _result;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7055)
inline void femap::IMapOutput::PutloadType ( enum zMapLoadType _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(7056)
inline enum femap::zMapType femap::IMapOutput::GetMapToType ( ) {
    enum zMapType _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7057)
inline void femap::IMapOutput::PutMapToType ( enum zMapType _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(7058)
inline double femap::IMapOutput::GetMapOffsetTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7059)
inline void femap::IMapOutput::PutMapOffsetTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(7060)
inline enum femap::zDataConvert femap::IMapOutput::GetDataConversion ( ) {
    enum zDataConvert _result;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7061)
inline void femap::IMapOutput::PutDataConversion ( enum zDataConvert _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(7062)
inline int femap::IMapOutput::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7063)
inline void femap::IMapOutput::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(7064)
inline int femap::IMapOutput::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7065)
inline void femap::IMapOutput::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(7066)
inline int femap::IMapOutput::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7067)
inline void femap::IMapOutput::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IDataSurf wrapper method implementations
//

#pragma implementation_key(7068)
inline enum femap::zReturnCode femap::IDataSurf::GetDataSurf ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7069)
inline enum femap::zReturnCode femap::IDataSurf::PutDataSurf ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7070)
inline enum femap::zReturnCode femap::IDataSurf::VarBetween2Pts ( const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c", &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7071)
inline enum femap::zReturnCode femap::IDataSurf::VarAlongCoord ( int projID, const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", projID, &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7072)
inline enum femap::zReturnCode femap::IDataSurf::VarBetween4Pts ( const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c", &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7073)
inline enum femap::zReturnCode femap::IDataSurf::VarBetween8Pts ( const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c", &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7074)
inline enum femap::zReturnCode femap::IDataSurf::VarArbitrary3DCoord ( int projID, const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", projID, &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7075)
inline enum femap::zReturnCode femap::IDataSurf::VarEquation ( _bstr_t Equation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)Equation);
    return _result;
}

#pragma implementation_key(7076)
inline enum femap::zReturnCode femap::IDataSurf::VarOutputMap ( __int64 ModelID, int groupID, int outSetID, int outVecID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014\x0003\x0003\x0003", ModelID, groupID, outSetID, outVecID);
    return _result;
}

#pragma implementation_key(7077)
inline enum femap::zReturnCode femap::IDataSurf::VarMeshSurface ( int setID, enum zDataType enOnType, _bstr_t sX, _bstr_t sY, _bstr_t sZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008\x0008\x0008", setID, enOnType, (BSTR)sX, (BSTR)sY, (BSTR)sZ);
    return _result;
}

#pragma implementation_key(7078)
inline enum femap::zReturnCode femap::IDataSurf::VarSpatialUVtable ( int uDiv, int vDiv ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", uDiv, vDiv);
    return _result;
}

#pragma implementation_key(7079)
inline enum femap::zReturnCode femap::IDataSurf::VarSpatialXYZTable ( int xDiv, int yDiv, int zDiv ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", xDiv, yDiv, zDiv);
    return _result;
}

#pragma implementation_key(7080)
inline enum femap::zReturnCode femap::IDataSurf::VarParametric2Pt ( const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c", &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7081)
inline enum femap::zReturnCode femap::IDataSurf::GetCellValue ( int nPage, int nRow, int nCol, int nComponent, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x4005", nPage, nRow, nCol, nComponent, dValue);
    return _result;
}

#pragma implementation_key(7082)
inline enum femap::zReturnCode femap::IDataSurf::SetCellValue ( int nPage, int nRow, int nCol, int nComponent, double dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0005", nPage, nRow, nCol, nComponent, dValue);
    return _result;
}

#pragma implementation_key(7083)
inline enum femap::zReturnCode femap::IDataSurf::SetCellEquation ( int nPage, int nRow, int nCol, int nComponent, _bstr_t sEquation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0008", nPage, nRow, nCol, nComponent, (BSTR)sEquation);
    return _result;
}

#pragma implementation_key(7084)
inline enum femap::zReturnCode femap::IDataSurf::GetColumnTitle ( int nPage, int nCol, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008", nPage, nCol, sTitle);
    return _result;
}

#pragma implementation_key(7085)
inline enum femap::zReturnCode femap::IDataSurf::GetColumnValue ( int nPage, int nCol, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4005", nPage, nCol, dValue);
    return _result;
}

#pragma implementation_key(7086)
inline enum femap::zReturnCode femap::IDataSurf::GetRowTitle ( int nPage, int nCol, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008", nPage, nCol, sTitle);
    return _result;
}

#pragma implementation_key(7087)
inline enum femap::zReturnCode femap::IDataSurf::GetRowValue ( int nPage, int nCol, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4005", nPage, nCol, dValue);
    return _result;
}

#pragma implementation_key(7088)
inline enum femap::zReturnCode femap::IDataSurf::GetPageTitle ( int nPage, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", nPage, sTitle);
    return _result;
}

#pragma implementation_key(7089)
inline enum femap::zReturnCode femap::IDataSurf::GetPageValue ( int nPage, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", nPage, dValue);
    return _result;
}

#pragma implementation_key(7090)
inline enum femap::zReturnCode femap::IDataSurf::SetColumnTitle ( int nPage, int nCol, _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", nPage, nCol, (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7091)
inline enum femap::zReturnCode femap::IDataSurf::SetColumnValue ( int nPage, int nCol, double rVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nPage, nCol, rVal);
    return _result;
}

#pragma implementation_key(7092)
inline enum femap::zReturnCode femap::IDataSurf::SetRowTitle ( int nPage, int nRow, _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", nPage, nRow, (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7093)
inline enum femap::zReturnCode femap::IDataSurf::SetRowValue ( int nPage, int nRow, double rVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nPage, nRow, rVal);
    return _result;
}

#pragma implementation_key(7094)
inline enum femap::zReturnCode femap::IDataSurf::SetPageTitle ( int nPage, _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", nPage, (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7095)
inline enum femap::zReturnCode femap::IDataSurf::SetPageValue ( int nPage, double rVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", nPage, rVal);
    return _result;
}

#pragma implementation_key(7096)
inline enum femap::zReturnCode femap::IDataSurf::SetCellBlank ( int nPage, int nRow, int nCol, int nComponent ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nPage, nRow, nCol, nComponent);
    return _result;
}

#pragma implementation_key(7097)
inline enum femap::zReturnCode femap::IDataSurf::GetDataSurfInfo ( int * nPages, int * nComponent, BSTR * sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4008", nPages, nComponent, sTitle);
    return _result;
}

#pragma implementation_key(7098)
inline enum femap::zReturnCode femap::IDataSurf::GetPageInfo ( int nPage, int * nRow, int * nCol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003", nPage, nRow, nCol);
    return _result;
}

#pragma implementation_key(7099)
inline enum femap::zReturnCode femap::IDataSurf::Resize ( int nPage, int nRow, int nCol, VARIANT_BOOL bVector ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", nPage, nRow, nCol, bVector);
    return _result;
}

#pragma implementation_key(7100)
inline enum femap::zReturnCode femap::IDataSurf::VarParametric4Pt ( const _variant_t & xyz, const _variant_t & val_xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c", &xyz, &val_xyz);
    return _result;
}

#pragma implementation_key(7101)
inline enum femap::zReturnCode femap::IDataSurf::Evaluate ( int geomID, enum zDataType enOnType, int mapSetID, VARIANT_BOOL isElemental ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", geomID, enOnType, mapSetID, isElemental);
    return _result;
}

#pragma implementation_key(7102)
inline enum femap::zReturnCode femap::IDataSurf::GetData ( int geomID, int feaID, const _variant_t & Coord, double * sVal, VARIANT * cgXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x4005\x400c", geomID, feaID, &Coord, sVal, cgXYZ);
    return _result;
}

#pragma implementation_key(7103)
inline enum femap::zReturnCode femap::IDataSurf::GetDataSurfType ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7104)
inline enum femap::zReturnCode femap::IDataSurf::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7105)
inline enum femap::zReturnCode femap::IDataSurf::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7106)
inline enum femap::zReturnCode femap::IDataSurf::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7107)
inline enum femap::zReturnCode femap::IDataSurf::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7108)
inline enum femap::zReturnCode femap::IDataSurf::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7109)
inline enum femap::zReturnCode femap::IDataSurf::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7110)
inline enum femap::zReturnCode femap::IDataSurf::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7111)
inline enum femap::zReturnCode femap::IDataSurf::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7112)
inline enum femap::zReturnCode femap::IDataSurf::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7113)
inline enum femap::zReturnCode femap::IDataSurf::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7114)
inline enum femap::zReturnCode femap::IDataSurf::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7115)
inline enum femap::zReturnCode femap::IDataSurf::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7116)
inline enum femap::zReturnCode femap::IDataSurf::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7117)
inline enum femap::zReturnCode femap::IDataSurf::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7118)
inline int femap::IDataSurf::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7119)
inline int femap::IDataSurf::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7120)
inline int femap::IDataSurf::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7121)
inline int femap::IDataSurf::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7122)
inline enum femap::zReturnCode femap::IDataSurf::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7123)
inline enum femap::zReturnCode femap::IDataSurf::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7124)
inline enum femap::zReturnCode femap::IDataSurf::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7125)
inline enum femap::zReturnCode femap::IDataSurf::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7126)
inline enum femap::zReturnCode femap::IDataSurf::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7127)
inline int femap::IDataSurf::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7128)
inline enum femap::zReturnCode femap::IDataSurf::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7129)
inline enum femap::zReturnCode femap::IDataSurf::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7130)
inline enum femap::zReturnCode femap::IDataSurf::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7131)
inline int femap::IDataSurf::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7132)
inline enum femap::zReturnCode femap::IDataSurf::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7133)
inline enum femap::zReturnCode femap::IDataSurf::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7134)
inline _bstr_t femap::IDataSurf::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7135)
inline void femap::IDataSurf::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7136)
inline VARIANT_BOOL femap::IDataSurf::GetVector ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7137)
inline void femap::IDataSurf::PutVector ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(7138)
inline int femap::IDataSurf::GetAlongCoordProjectID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7139)
inline void femap::IDataSurf::PutAlongCoordProjectID ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(7140)
inline enum femap::zMapOption femap::IDataSurf::GetOutMapOption ( ) {
    enum zMapOption _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7141)
inline void femap::IDataSurf::PutOutMapOption ( enum zMapOption _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(7142)
inline double femap::IDataSurf::GetTabularUdefVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7143)
inline void femap::IDataSurf::PutTabularUdefVal ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(7144)
inline int femap::IDataSurf::GetCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7145)
inline void femap::IDataSurf::PutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(7146)
inline double femap::IDataSurf::GetDefOutMapValue1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7147)
inline void femap::IDataSurf::PutDefOutMapValue1 ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(7148)
inline double femap::IDataSurf::GetDefOutMapValue2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7149)
inline void femap::IDataSurf::PutDefOutMapValue2 ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(7150)
inline double femap::IDataSurf::GetDefOutMapValue3 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7151)
inline void femap::IDataSurf::PutDefOutMapValue3 ( double _val ) {
    _com_dispatch_propput(this, 0x2719, VT_R8, _val);
}

#pragma implementation_key(7152)
inline int femap::IDataSurf::GetParamCurveSurfID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7153)
inline void femap::IDataSurf::PutParamCurveSurfID ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(7154)
inline int femap::IDataSurf::GetInterpMin ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7155)
inline void femap::IDataSurf::PutInterpMin ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(7156)
inline double femap::IDataSurf::GetInterpPercent ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7157)
inline void femap::IDataSurf::PutInterpPercent ( double _val ) {
    _com_dispatch_propput(this, 0x271c, VT_R8, _val);
}

#pragma implementation_key(7158)
inline int femap::IDataSurf::GetTabularUdefOption ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7159)
inline void femap::IDataSurf::PutTabularUdefOption ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(7160)
inline double femap::IDataSurf::GetMapOffsetTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7161)
inline void femap::IDataSurf::PutMapOffsetTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(7162)
inline VARIANT_BOOL femap::IDataSurf::GetExtendEdgeValues ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7163)
inline void femap::IDataSurf::PutExtendEdgeValues ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271f, VT_BOOL, _val);
}

#pragma implementation_key(7164)
inline enum femap::zDataConvert femap::IDataSurf::GetDataConversion ( ) {
    enum zDataConvert _result;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7165)
inline void femap::IDataSurf::PutDataConversion ( enum zDataConvert _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(7166)
inline int femap::IDataSurf::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7167)
inline void femap::IDataSurf::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(7168)
inline int femap::IDataSurf::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7169)
inline void femap::IDataSurf::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(7170)
inline int femap::IDataSurf::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7171)
inline void femap::IDataSurf::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IDataTable wrapper method implementations
//

#pragma implementation_key(7172)
inline int femap::IDataTable::FindRow ( int ModelID, int setID, int ID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", ModelID, setID, ID);
    return _result;
}

#pragma implementation_key(7173)
inline enum femap::zReturnCode femap::IDataTable::GetRowInfo ( int * numRows, VARIANT * ModelID, VARIANT * setID, VARIANT * ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c", numRows, ModelID, setID, ID);
    return _result;
}

#pragma implementation_key(7174)
inline enum femap::zReturnCode femap::IDataTable::GetRowVisible ( int nRow, VARIANT_BOOL * bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400b", nRow, bVisible);
    return _result;
}

#pragma implementation_key(7175)
inline enum femap::zReturnCode femap::IDataTable::SetRowVisible ( int nRowOrAll, VARIANT_BOOL bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nRowOrAll, bVisible);
    return _result;
}

#pragma implementation_key(7176)
inline int femap::IDataTable::FindColumn ( _bstr_t colTitle ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)colTitle);
    return _result;
}

#pragma implementation_key(7177)
inline enum femap::zReturnCode femap::IDataTable::GetColumnInfo ( int * numColumns, VARIANT * ColType, VARIANT * colTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c", numColumns, ColType, colTitle);
    return _result;
}

#pragma implementation_key(7178)
inline enum femap::zReturnCode femap::IDataTable::GetColumnVisible ( int nColumn, VARIANT_BOOL * bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400b", nColumn, bVisible);
    return _result;
}

#pragma implementation_key(7179)
inline enum femap::zReturnCode femap::IDataTable::SetColumnVisible ( int nColumnOrAll, VARIANT_BOOL bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nColumnOrAll, bVisible);
    return _result;
}

#pragma implementation_key(7180)
inline enum femap::zReturnCode femap::IDataTable::GetColumnWidth ( int nColumn, int * nWidth ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nColumn, nWidth);
    return _result;
}

#pragma implementation_key(7181)
inline enum femap::zReturnCode femap::IDataTable::SetColumnWidth ( int nColumnOrAll, int nWidth ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nColumnOrAll, nWidth);
    return _result;
}

#pragma implementation_key(7182)
inline enum femap::zReturnCode femap::IDataTable::GetColumnTitle ( int nColumn, BSTR * colTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", nColumn, colTitle);
    return _result;
}

#pragma implementation_key(7183)
inline enum femap::zReturnCode femap::IDataTable::SetColumnTitle ( int nColumn, _bstr_t colTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", nColumn, (BSTR)colTitle);
    return _result;
}

#pragma implementation_key(7184)
inline enum femap::zReturnCode femap::IDataTable::SetColumnPosition ( int nColumn, int nNewIndex, VARIANT_BOOL bAfter ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nColumn, nNewIndex, bAfter);
    return _result;
}

#pragma implementation_key(7185)
inline enum femap::zReturnCode femap::IDataTable::SetColumnAlignment ( int nColumnOrAll, enum zAlignment nAlign ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nColumnOrAll, nAlign);
    return _result;
}

#pragma implementation_key(7186)
inline enum femap::zReturnCode femap::IDataTable::AddSelection ( int numRows, const _variant_t & Rows, VARIANT_BOOL bSelect ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000b", numRows, &Rows, bSelect);
    return _result;
}

#pragma implementation_key(7187)
inline enum femap::zReturnCode femap::IDataTable::ClearSelection ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7188)
inline enum femap::zReturnCode femap::IDataTable::GetSelection ( int * numRows, VARIANT * Rows ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numRows, Rows);
    return _result;
}

#pragma implementation_key(7189)
inline enum femap::zReturnCode femap::IDataTable::GetRowValues ( int numRowsOrAll, const _variant_t & Rows, int * numData, VARIANT * RowData ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x4003\x400c", numRowsOrAll, &Rows, numData, RowData);
    return _result;
}

#pragma implementation_key(7190)
inline enum femap::zReturnCode femap::IDataTable::UpdateColumn ( int nColumn, enum zDataTableColumnType ColType, int nRows, const _variant_t & Rows, const _variant_t & value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c", nColumn, ColType, nRows, &Rows, &value);
    return _result;
}

#pragma implementation_key(7191)
inline enum femap::zReturnCode femap::IDataTable::GetColumnValue ( int nColumn, int numRowsOrAll, const _variant_t & Rows, int * numData, VARIANT * ColumnData ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x4003\x400c", nColumn, numRowsOrAll, &Rows, numData, ColumnData);
    return _result;
}

#pragma implementation_key(7192)
inline enum femap::zReturnCode femap::IDataTable::GetColumnText ( int nColumn, int numRowsOrAll, const _variant_t & Rows, int * numData, VARIANT * ColumnText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x4003\x400c", nColumn, numRowsOrAll, &Rows, numData, ColumnText);
    return _result;
}

#pragma implementation_key(7193)
inline enum femap::zReturnCode femap::IDataTable::AddColumn ( VARIANT_BOOL bClear, VARIANT_BOOL bHidden, enum zDataType entityTYPE, int entitySetID, _bstr_t colTitle, enum zDataTableColumnType ColType, int nRows, const _variant_t & ID, const _variant_t & value, int * nNewColumnID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x0003\x0008\x0003\x0003\x000c\x000c\x4003", bClear, bHidden, entityTYPE, entitySetID, (BSTR)colTitle, ColType, nRows, &ID, &value, nNewColumnID);
    return _result;
}

#pragma implementation_key(7194)
inline enum femap::zReturnCode femap::IDataTable::UpdateColumnByID ( int nColumn, int entitySetID, enum zDataTableColumnType ColType, int nRows, const _variant_t & ID, const _variant_t & value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c", nColumn, entitySetID, ColType, nRows, &ID, &value);
    return _result;
}

#pragma implementation_key(7195)
inline enum femap::zReturnCode femap::IDataTable::AddEntityData ( VARIANT_BOOL bClear, enum zDataType entityTYPE, int entitySetID, int entityIDSet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x0003", bClear, entityTYPE, entitySetID, entityIDSet);
    return _result;
}

#pragma implementation_key(7196)
inline enum femap::zReturnCode femap::IDataTable::AddMassProperties ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7197)
inline enum femap::zReturnCode femap::IDataTable::AddElementChecks ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7198)
inline enum femap::zReturnCode femap::IDataTable::AddMeshAssociativity ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7199)
inline enum femap::zReturnCode femap::IDataTable::SetTextColor ( int nColumn, int numRows, const _variant_t & Rows, int nRed, int nGreen, int nBlue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x0003\x0003", nColumn, numRows, &Rows, nRed, nGreen, nBlue);
    return _result;
}

#pragma implementation_key(7200)
inline enum femap::zReturnCode femap::IDataTable::SetBackgroundColor ( int nColumn, int numRows, const _variant_t & Rows, int nRed, int nGreen, int nBlue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x0003\x0003", nColumn, numRows, &Rows, nRed, nGreen, nBlue);
    return _result;
}

#pragma implementation_key(7201)
inline enum femap::zReturnCode femap::IDataTable::AddGroup ( int nColumn, VARIANT_BOOL bShowInGroupOnly, VARIANT_BOOL bSortAscending ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b", nColumn, bShowInGroupOnly, bSortAscending);
    return _result;
}

#pragma implementation_key(7202)
inline enum femap::zReturnCode femap::IDataTable::ClearGroup ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7203)
inline enum femap::zReturnCode femap::IDataTable::GetGroup ( int * numColumns, VARIANT * Columns ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numColumns, Columns);
    return _result;
}

#pragma implementation_key(7204)
inline enum femap::zReturnCode femap::IDataTable::ShowGroup ( VARIANT_BOOL bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bVisible);
    return _result;
}

#pragma implementation_key(7205)
inline enum femap::zReturnCode femap::IDataTable::AddSort ( int nColumn, VARIANT_BOOL bSortAscending ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nColumn, bSortAscending);
    return _result;
}

#pragma implementation_key(7206)
inline enum femap::zReturnCode femap::IDataTable::ClearSort ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7207)
inline enum femap::zReturnCode femap::IDataTable::GetSort ( int * numColumns, VARIANT * Columns ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numColumns, Columns);
    return _result;
}

#pragma implementation_key(7208)
inline enum femap::zReturnCode femap::IDataTable::Lock ( VARIANT_BOOL bLock ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bLock);
    return _result;
}

#pragma implementation_key(7209)
inline enum femap::zReturnCode femap::IDataTable::Copy ( VARIANT_BOOL bCopyAll ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bCopyAll);
    return _result;
}

#pragma implementation_key(7210)
inline enum femap::zReturnCode femap::IDataTable::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7211)
inline enum femap::zReturnCode femap::IDataTable::DeleteRows ( int numRows, const _variant_t & Rows ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", numRows, &Rows);
    return _result;
}

#pragma implementation_key(7212)
inline enum femap::zReturnCode femap::IDataTable::Show ( VARIANT_BOOL bShowAll ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bShowAll);
    return _result;
}

#pragma implementation_key(7213)
inline enum femap::zReturnCode femap::IDataTable::Print ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7214)
inline enum femap::zReturnCode femap::IDataTable::AddOutput ( int nOutputSet, int nOutputVector, int * nNewColumnID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nOutputSet, nOutputVector, nNewColumnID);
    return _result;
}

#pragma implementation_key(7215)
inline enum femap::zReturnCode femap::IDataTable::Save ( VARIANT_BOOL bCopyAll, _bstr_t fName, enum zDataTableSaveFormat nFormat ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e63, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0003", bCopyAll, (BSTR)fName, nFormat);
    return _result;
}

#pragma implementation_key(7216)
inline enum femap::zReturnCode femap::IDataTable::AddNastranElementChecks ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e64, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7217)
inline int femap::IDataTable::GetNumberOfRows ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7218)
inline void femap::IDataTable::PutNumberOfRows ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(7219)
inline int femap::IDataTable::GetNumberOfColumns ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7220)
inline void femap::IDataTable::PutNumberOfColumns ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7221)
inline enum femap::zDataType femap::IDataTable::Gettype ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7222)
inline void femap::IDataTable::Puttype ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(7223)
inline VARIANT_BOOL femap::IDataTable::GetVisibleRowsOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7224)
inline void femap::IDataTable::PutVisibleRowsOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(7225)
inline VARIANT_BOOL femap::IDataTable::GetVisibleColsOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7226)
inline void femap::IDataTable::PutVisibleColsOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(7227)
inline VARIANT_BOOL femap::IDataTable::GetVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7228)
inline void femap::IDataTable::PutVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(7229)
inline VARIANT_BOOL femap::IDataTable::GetLocked ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7230)
inline void femap::IDataTable::PutLocked ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

//
// dispinterface IReference wrapper method implementations
//

#pragma implementation_key(7231)
inline enum femap::zReturnCode femap::IReference::DeleteAll ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7232)
inline enum femap::zReturnCode femap::IReference::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7233)
inline enum femap::zReturnCode femap::IReference::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7234)
inline enum femap::zReturnCode femap::IReference::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7235)
inline enum femap::zReturnCode femap::IReference::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7236)
inline enum femap::zReturnCode femap::IReference::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7237)
inline enum femap::zReturnCode femap::IReference::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7238)
inline enum femap::zReturnCode femap::IReference::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7239)
inline enum femap::zReturnCode femap::IReference::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7240)
inline enum femap::zReturnCode femap::IReference::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7241)
inline enum femap::zReturnCode femap::IReference::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7242)
inline enum femap::zReturnCode femap::IReference::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7243)
inline enum femap::zReturnCode femap::IReference::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7244)
inline enum femap::zReturnCode femap::IReference::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7245)
inline enum femap::zReturnCode femap::IReference::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7246)
inline int femap::IReference::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7247)
inline int femap::IReference::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7248)
inline int femap::IReference::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7249)
inline int femap::IReference::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7250)
inline enum femap::zReturnCode femap::IReference::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7251)
inline enum femap::zReturnCode femap::IReference::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7252)
inline enum femap::zReturnCode femap::IReference::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7253)
inline enum femap::zReturnCode femap::IReference::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7254)
inline enum femap::zReturnCode femap::IReference::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7255)
inline int femap::IReference::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7256)
inline enum femap::zReturnCode femap::IReference::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7257)
inline enum femap::zReturnCode femap::IReference::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7258)
inline enum femap::zReturnCode femap::IReference::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7259)
inline int femap::IReference::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7260)
inline enum femap::zReturnCode femap::IReference::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7261)
inline enum femap::zReturnCode femap::IReference::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7262)
inline _bstr_t femap::IReference::Getfilename ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7263)
inline void femap::IReference::Putfilename ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7264)
inline _bstr_t femap::IReference::GetParentFileName ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7265)
inline void femap::IReference::PutParentFileName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7266)
inline int femap::IReference::GetReadFrom ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7267)
inline void femap::IReference::PutReadFrom ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(7268)
inline int femap::IReference::GetReadTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7269)
inline void femap::IReference::PutReadTime ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(7270)
inline int femap::IReference::GetReadFileTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7271)
inline void femap::IReference::PutReadFileTime ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(7272)
inline int femap::IReference::GetReadType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7273)
inline void femap::IReference::PutReadType ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(7274)
inline int femap::IReference::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7275)
inline void femap::IReference::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(7276)
inline int femap::IReference::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7277)
inline void femap::IReference::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(7278)
inline int femap::IReference::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7279)
inline void femap::IReference::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IAeroPanel wrapper method implementations
//

#pragma implementation_key(7280)
inline double femap::IAeroPanel::GetPt1 ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7281)
inline void femap::IAeroPanel::PutPt1 ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7282)
inline double femap::IAeroPanel::GetPt4 ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7283)
inline void femap::IAeroPanel::PutPt4 ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7284)
inline enum femap::zReturnCode femap::IAeroPanel::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7285)
inline enum femap::zReturnCode femap::IAeroPanel::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7286)
inline enum femap::zReturnCode femap::IAeroPanel::GetDivisionList ( int * nChord, VARIANT * cval, int * nSpan, VARIANT * sVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x4003\x400c", nChord, cval, nSpan, sVal);
    return _result;
}

#pragma implementation_key(7287)
inline enum femap::zReturnCode femap::IAeroPanel::PutDivisionList ( int nChord, const _variant_t & cval, int nSpan, const _variant_t & sVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000c", nChord, &cval, nSpan, &sVal);
    return _result;
}

#pragma implementation_key(7288)
inline int femap::IAeroPanel::SlenderBodyCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7289)
inline int femap::IAeroPanel::InterferenceBodyCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7290)
inline int femap::IAeroPanel::PanelSpanCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7291)
inline int femap::IAeroPanel::PanelChordCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7292)
inline femap::ISetPtr femap::IAeroPanel::GetBoxSet ( int iBox1, int iBox2 ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003\x0003", iBox1, iBox2);
    return ISetPtr(_result, false);
}

#pragma implementation_key(7293)
inline int femap::IAeroPanel::AeroChordXYZ ( int * nNumChord, VARIANT * dChordLoc ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", nNumChord, dChordLoc);
    return _result;
}

#pragma implementation_key(7294)
inline int femap::IAeroPanel::AeroSpanXYZ ( int * nNumSpan, VARIANT * dSpanLoc ) {
    int _result = 0;
    _com_dispatch_method(this, 0x30d4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", nNumSpan, dSpanLoc);
    return _result;
}

#pragma implementation_key(7295)
inline enum femap::zReturnCode femap::IAeroPanel::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7296)
inline enum femap::zReturnCode femap::IAeroPanel::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7297)
inline enum femap::zReturnCode femap::IAeroPanel::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7298)
inline enum femap::zReturnCode femap::IAeroPanel::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7299)
inline enum femap::zReturnCode femap::IAeroPanel::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7300)
inline enum femap::zReturnCode femap::IAeroPanel::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7301)
inline enum femap::zReturnCode femap::IAeroPanel::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7302)
inline enum femap::zReturnCode femap::IAeroPanel::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7303)
inline enum femap::zReturnCode femap::IAeroPanel::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7304)
inline enum femap::zReturnCode femap::IAeroPanel::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7305)
inline enum femap::zReturnCode femap::IAeroPanel::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7306)
inline enum femap::zReturnCode femap::IAeroPanel::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7307)
inline int femap::IAeroPanel::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7308)
inline int femap::IAeroPanel::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7309)
inline int femap::IAeroPanel::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7310)
inline int femap::IAeroPanel::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7311)
inline enum femap::zReturnCode femap::IAeroPanel::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7312)
inline enum femap::zReturnCode femap::IAeroPanel::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7313)
inline enum femap::zReturnCode femap::IAeroPanel::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7314)
inline enum femap::zReturnCode femap::IAeroPanel::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7315)
inline enum femap::zReturnCode femap::IAeroPanel::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7316)
inline int femap::IAeroPanel::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7317)
inline enum femap::zReturnCode femap::IAeroPanel::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7318)
inline enum femap::zReturnCode femap::IAeroPanel::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7319)
inline enum femap::zReturnCode femap::IAeroPanel::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7320)
inline int femap::IAeroPanel::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7321)
inline enum femap::zReturnCode femap::IAeroPanel::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7322)
inline enum femap::zReturnCode femap::IAeroPanel::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7323)
inline enum femap::zColor femap::IAeroPanel::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7324)
inline void femap::IAeroPanel::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(7325)
inline int femap::IAeroPanel::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7326)
inline void femap::IAeroPanel::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7327)
inline _bstr_t femap::IAeroPanel::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7328)
inline void femap::IAeroPanel::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7329)
inline int femap::IAeroPanel::Getpid ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7330)
inline void femap::IAeroPanel::Putpid ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(7331)
inline int femap::IAeroPanel::Geticp ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7332)
inline void femap::IAeroPanel::Puticp ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(7333)
inline int femap::IAeroPanel::GetnSpan ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7334)
inline void femap::IAeroPanel::PutnSpan ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(7335)
inline int femap::IAeroPanel::GetnChord ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7336)
inline void femap::IAeroPanel::PutnChord ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(7337)
inline int femap::IAeroPanel::GetnIgid ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7338)
inline void femap::IAeroPanel::PutnIgid ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(7339)
inline _variant_t femap::IAeroPanel::GetvPt1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7340)
inline void femap::IAeroPanel::PutvPt1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(7341)
inline _variant_t femap::IAeroPanel::GetvPt4 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2719, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7342)
inline void femap::IAeroPanel::PutvPt4 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2719, VT_VARIANT, &_val);
}

#pragma implementation_key(7343)
inline double femap::IAeroPanel::GetdChord12 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7344)
inline void femap::IAeroPanel::PutdChord12 ( double _val ) {
    _com_dispatch_propput(this, 0x271a, VT_R8, _val);
}

#pragma implementation_key(7345)
inline double femap::IAeroPanel::GetdChord34 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7346)
inline void femap::IAeroPanel::PutdChord34 ( double _val ) {
    _com_dispatch_propput(this, 0x271b, VT_R8, _val);
}

#pragma implementation_key(7347)
inline int femap::IAeroPanel::GetnLspanID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7348)
inline void femap::IAeroPanel::PutnLspanID ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(7349)
inline int femap::IAeroPanel::GetnLchordID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7350)
inline void femap::IAeroPanel::PutnLchordID ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(7351)
inline enum femap::zAeroPanelType femap::IAeroPanel::Gettype ( ) {
    enum zAeroPanelType _result;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7352)
inline void femap::IAeroPanel::Puttype ( enum zAeroPanelType _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

//
// dispinterface IAeroProp wrapper method implementations
//

#pragma implementation_key(7353)
inline enum femap::zReturnCode femap::IAeroProp::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7354)
inline enum femap::zReturnCode femap::IAeroProp::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7355)
inline enum femap::zReturnCode femap::IAeroProp::GetThetaList ( int nListID, int * nCount, VARIANT * nVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nListID, nCount, nVal);
    return _result;
}

#pragma implementation_key(7356)
inline enum femap::zReturnCode femap::IAeroProp::PutThetaList ( int nListID, int nCount, const _variant_t & nVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", nListID, nCount, &nVal);
    return _result;
}

#pragma implementation_key(7357)
inline enum femap::zReturnCode femap::IAeroProp::GetRadiList ( int nListID, int * nCount, VARIANT * nVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c", nListID, nCount, nVal);
    return _result;
}

#pragma implementation_key(7358)
inline enum femap::zReturnCode femap::IAeroProp::PutRadiList ( int nListID, int nCount, const _variant_t & nVal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", nListID, nCount, &nVal);
    return _result;
}

#pragma implementation_key(7359)
inline enum femap::zReturnCode femap::IAeroProp::ClearSbList ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7360)
inline enum femap::zReturnCode femap::IAeroProp::ClearIbList ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7361)
inline enum femap::zReturnCode femap::IAeroProp::ClearTheta1List ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7362)
inline enum femap::zReturnCode femap::IAeroProp::ClearTheta2List ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7363)
inline int femap::IAeroProp::SlenderBodyDivisionByProp ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7364)
inline int femap::IAeroProp::InterferenceBodyDivisionByProp ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7365)
inline int femap::IAeroProp::GetSBRadiCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7366)
inline int femap::IAeroProp::GetIBRadiCount ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7367)
inline enum femap::zReturnCode femap::IAeroProp::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7368)
inline enum femap::zReturnCode femap::IAeroProp::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7369)
inline enum femap::zReturnCode femap::IAeroProp::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7370)
inline enum femap::zReturnCode femap::IAeroProp::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7371)
inline enum femap::zReturnCode femap::IAeroProp::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7372)
inline enum femap::zReturnCode femap::IAeroProp::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7373)
inline enum femap::zReturnCode femap::IAeroProp::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7374)
inline enum femap::zReturnCode femap::IAeroProp::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7375)
inline enum femap::zReturnCode femap::IAeroProp::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7376)
inline enum femap::zReturnCode femap::IAeroProp::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7377)
inline enum femap::zReturnCode femap::IAeroProp::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7378)
inline enum femap::zReturnCode femap::IAeroProp::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7379)
inline int femap::IAeroProp::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7380)
inline int femap::IAeroProp::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7381)
inline int femap::IAeroProp::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7382)
inline int femap::IAeroProp::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7383)
inline enum femap::zReturnCode femap::IAeroProp::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7384)
inline enum femap::zReturnCode femap::IAeroProp::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7385)
inline enum femap::zReturnCode femap::IAeroProp::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7386)
inline enum femap::zReturnCode femap::IAeroProp::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7387)
inline enum femap::zReturnCode femap::IAeroProp::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7388)
inline int femap::IAeroProp::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7389)
inline enum femap::zReturnCode femap::IAeroProp::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7390)
inline enum femap::zReturnCode femap::IAeroProp::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7391)
inline enum femap::zReturnCode femap::IAeroProp::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7392)
inline int femap::IAeroProp::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7393)
inline enum femap::zReturnCode femap::IAeroProp::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7394)
inline enum femap::zReturnCode femap::IAeroProp::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7395)
inline enum femap::zColor femap::IAeroProp::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7396)
inline void femap::IAeroProp::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(7397)
inline int femap::IAeroProp::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7398)
inline void femap::IAeroProp::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7399)
inline _bstr_t femap::IAeroProp::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7400)
inline void femap::IAeroProp::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7401)
inline _variant_t femap::IAeroProp::Getvpdval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2713, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7402)
inline void femap::IAeroProp::Putvpdval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2713, VT_VARIANT, &_val);
}

#pragma implementation_key(7403)
inline _variant_t femap::IAeroProp::Getvpnval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7404)
inline void femap::IAeroProp::Putvpnval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(7405)
inline double femap::IAeroProp::Getap_d_width ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7406)
inline void femap::IAeroProp::Putap_d_width ( double _val ) {
    _com_dispatch_propput(this, 0x2715, VT_R8, _val);
}

#pragma implementation_key(7407)
inline double femap::IAeroProp::Getap_d_ar ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7408)
inline void femap::IAeroProp::Putap_d_ar ( double _val ) {
    _com_dispatch_propput(this, 0x2716, VT_R8, _val);
}

#pragma implementation_key(7409)
inline int femap::IAeroProp::Getap_i_orient ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7410)
inline void femap::IAeroProp::Putap_i_orient ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(7411)
inline int femap::IAeroProp::Getap_i_lrsb ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7412)
inline void femap::IAeroProp::Putap_i_lrsb ( int _val ) {
    _com_dispatch_propput(this, 0x2718, VT_I4, _val);
}

#pragma implementation_key(7413)
inline int femap::IAeroProp::Getap_i_lrib ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7414)
inline void femap::IAeroProp::Putap_i_lrib ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(7415)
inline int femap::IAeroProp::Getap_i_lth1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7416)
inline void femap::IAeroProp::Putap_i_lth1 ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(7417)
inline int femap::IAeroProp::Getap_i_lth2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7418)
inline void femap::IAeroProp::Putap_i_lth2 ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(7419)
inline int femap::IAeroProp::Getap_i_thi1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7420)
inline void femap::IAeroProp::Putap_i_thi1 ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(7421)
inline int femap::IAeroProp::Getap_i_thi2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7422)
inline void femap::IAeroProp::Putap_i_thi2 ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(7423)
inline int femap::IAeroProp::Getap_i_thi3 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7424)
inline void femap::IAeroProp::Putap_i_thi3 ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(7425)
inline int femap::IAeroProp::Getap_i_thn1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7426)
inline void femap::IAeroProp::Putap_i_thn1 ( int _val ) {
    _com_dispatch_propput(this, 0x271f, VT_I4, _val);
}

#pragma implementation_key(7427)
inline int femap::IAeroProp::Getap_i_thn2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7428)
inline void femap::IAeroProp::Putap_i_thn2 ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(7429)
inline int femap::IAeroProp::Getap_i_thn3 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7430)
inline void femap::IAeroProp::Putap_i_thn3 ( int _val ) {
    _com_dispatch_propput(this, 0x2721, VT_I4, _val);
}

#pragma implementation_key(7431)
inline enum femap::zAeroPanelType femap::IAeroProp::Gettype ( ) {
    enum zAeroPanelType _result;
    _com_dispatch_propget(this, 0x2722, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7432)
inline void femap::IAeroProp::Puttype ( enum zAeroPanelType _val ) {
    _com_dispatch_propput(this, 0x2722, VT_I4, _val);
}

//
// dispinterface IAeroSpline wrapper method implementations
//

#pragma implementation_key(7433)
inline enum femap::zReturnCode femap::IAeroSpline::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7434)
inline enum femap::zReturnCode femap::IAeroSpline::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7435)
inline femap::ISetPtr femap::IAeroSpline::GetNodeSet ( ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ISetPtr(_result, false);
}

#pragma implementation_key(7436)
inline femap::ISetPtr femap::IAeroSpline::GetBoxSet ( ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ISetPtr(_result, false);
}

#pragma implementation_key(7437)
inline enum femap::zReturnCode femap::IAeroSpline::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7438)
inline enum femap::zReturnCode femap::IAeroSpline::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7439)
inline enum femap::zReturnCode femap::IAeroSpline::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7440)
inline enum femap::zReturnCode femap::IAeroSpline::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7441)
inline enum femap::zReturnCode femap::IAeroSpline::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7442)
inline enum femap::zReturnCode femap::IAeroSpline::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7443)
inline enum femap::zReturnCode femap::IAeroSpline::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7444)
inline enum femap::zReturnCode femap::IAeroSpline::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7445)
inline enum femap::zReturnCode femap::IAeroSpline::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7446)
inline enum femap::zReturnCode femap::IAeroSpline::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7447)
inline enum femap::zReturnCode femap::IAeroSpline::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7448)
inline enum femap::zReturnCode femap::IAeroSpline::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7449)
inline int femap::IAeroSpline::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7450)
inline int femap::IAeroSpline::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7451)
inline int femap::IAeroSpline::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7452)
inline int femap::IAeroSpline::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7453)
inline enum femap::zReturnCode femap::IAeroSpline::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7454)
inline enum femap::zReturnCode femap::IAeroSpline::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7455)
inline enum femap::zReturnCode femap::IAeroSpline::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7456)
inline enum femap::zReturnCode femap::IAeroSpline::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7457)
inline enum femap::zReturnCode femap::IAeroSpline::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7458)
inline int femap::IAeroSpline::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7459)
inline enum femap::zReturnCode femap::IAeroSpline::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7460)
inline enum femap::zReturnCode femap::IAeroSpline::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7461)
inline enum femap::zReturnCode femap::IAeroSpline::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7462)
inline int femap::IAeroSpline::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7463)
inline enum femap::zReturnCode femap::IAeroSpline::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7464)
inline enum femap::zReturnCode femap::IAeroSpline::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7465)
inline enum femap::zColor femap::IAeroSpline::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7466)
inline void femap::IAeroSpline::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(7467)
inline int femap::IAeroSpline::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7468)
inline void femap::IAeroSpline::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7469)
inline _bstr_t femap::IAeroSpline::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7470)
inline void femap::IAeroSpline::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7471)
inline int femap::IAeroSpline::Gettype ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7472)
inline void femap::IAeroSpline::Puttype ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(7473)
inline int femap::IAeroSpline::Geticaero ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7474)
inline void femap::IAeroSpline::Puticaero ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(7475)
inline int femap::IAeroSpline::GetiBox1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7476)
inline void femap::IAeroSpline::PutiBox1 ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(7477)
inline int femap::IAeroSpline::GetiBox2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7478)
inline void femap::IAeroSpline::PutiBox2 ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(7479)
inline int femap::IAeroSpline::Getisetg ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7480)
inline void femap::IAeroSpline::Putisetg ( int _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(7481)
inline double femap::IAeroSpline::GetdZ ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7482)
inline void femap::IAeroSpline::PutdZ ( double _val ) {
    _com_dispatch_propput(this, 0x2718, VT_R8, _val);
}

#pragma implementation_key(7483)
inline int femap::IAeroSpline::Getmeth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7484)
inline void femap::IAeroSpline::Putmeth ( int _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(7485)
inline int femap::IAeroSpline::Getnelem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7486)
inline void femap::IAeroSpline::Putnelem ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(7487)
inline int femap::IAeroSpline::Getmelem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7488)
inline void femap::IAeroSpline::Putmelem ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(7489)
inline int femap::IAeroSpline::Getusage ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7490)
inline void femap::IAeroSpline::Putusage ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(7491)
inline double femap::IAeroSpline::Getdtor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7492)
inline void femap::IAeroSpline::Putdtor ( double _val ) {
    _com_dispatch_propput(this, 0x271d, VT_R8, _val);
}

#pragma implementation_key(7493)
inline int femap::IAeroSpline::Getcid ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7494)
inline void femap::IAeroSpline::Putcid ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(7495)
inline double femap::IAeroSpline::Getdthx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7496)
inline void femap::IAeroSpline::Putdthx ( double _val ) {
    _com_dispatch_propput(this, 0x271f, VT_R8, _val);
}

#pragma implementation_key(7497)
inline double femap::IAeroSpline::Getdthy ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7498)
inline void femap::IAeroSpline::Putdthy ( double _val ) {
    _com_dispatch_propput(this, 0x2720, VT_R8, _val);
}

//
// dispinterface IAeroSurf wrapper method implementations
//

#pragma implementation_key(7499)
inline enum femap::zReturnCode femap::IAeroSurf::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7500)
inline enum femap::zReturnCode femap::IAeroSurf::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7501)
inline enum femap::zReturnCode femap::IAeroSurf::PutSurfaceSet1 ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7502)
inline enum femap::zReturnCode femap::IAeroSurf::PutSurfaceSet2 ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7503)
inline femap::ISetPtr femap::IAeroSurf::GetSurfaceSet1 ( ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ISetPtr(_result, false);
}

#pragma implementation_key(7504)
inline femap::ISetPtr femap::IAeroSurf::GetSurfaceSet2 ( ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, NULL);
    return ISetPtr(_result, false);
}

#pragma implementation_key(7505)
inline enum femap::zReturnCode femap::IAeroSurf::ClearSurfaceSet1 ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7506)
inline enum femap::zReturnCode femap::IAeroSurf::ClearSurfaceSet2 ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7507)
inline enum femap::zReturnCode femap::IAeroSurf::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7508)
inline enum femap::zReturnCode femap::IAeroSurf::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7509)
inline enum femap::zReturnCode femap::IAeroSurf::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7510)
inline enum femap::zReturnCode femap::IAeroSurf::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7511)
inline enum femap::zReturnCode femap::IAeroSurf::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7512)
inline enum femap::zReturnCode femap::IAeroSurf::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7513)
inline enum femap::zReturnCode femap::IAeroSurf::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7514)
inline enum femap::zReturnCode femap::IAeroSurf::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7515)
inline enum femap::zReturnCode femap::IAeroSurf::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7516)
inline enum femap::zReturnCode femap::IAeroSurf::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7517)
inline enum femap::zReturnCode femap::IAeroSurf::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7518)
inline enum femap::zReturnCode femap::IAeroSurf::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7519)
inline int femap::IAeroSurf::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7520)
inline int femap::IAeroSurf::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7521)
inline int femap::IAeroSurf::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7522)
inline int femap::IAeroSurf::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7523)
inline enum femap::zReturnCode femap::IAeroSurf::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7524)
inline enum femap::zReturnCode femap::IAeroSurf::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7525)
inline enum femap::zReturnCode femap::IAeroSurf::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7526)
inline enum femap::zReturnCode femap::IAeroSurf::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7527)
inline enum femap::zReturnCode femap::IAeroSurf::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7528)
inline int femap::IAeroSurf::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7529)
inline enum femap::zReturnCode femap::IAeroSurf::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7530)
inline enum femap::zReturnCode femap::IAeroSurf::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7531)
inline enum femap::zReturnCode femap::IAeroSurf::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7532)
inline int femap::IAeroSurf::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7533)
inline enum femap::zReturnCode femap::IAeroSurf::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7534)
inline enum femap::zReturnCode femap::IAeroSurf::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7535)
inline enum femap::zColor femap::IAeroSurf::Getcolor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7536)
inline void femap::IAeroSurf::Putcolor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(7537)
inline int femap::IAeroSurf::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7538)
inline void femap::IAeroSurf::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7539)
inline _bstr_t femap::IAeroSurf::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7540)
inline void femap::IAeroSurf::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7541)
inline int femap::IAeroSurf::GetCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7542)
inline void femap::IAeroSurf::PutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(7543)
inline int femap::IAeroSurf::Getcsys1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7544)
inline void femap::IAeroSurf::Putcsys1 ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(7545)
inline int femap::IAeroSurf::Getaeid ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7546)
inline void femap::IAeroSurf::Putaeid ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(7547)
inline int femap::IAeroSurf::Getaeid1 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7548)
inline void femap::IAeroSurf::Putaeid1 ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(7549)
inline double femap::IAeroSurf::Geteff ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7550)
inline void femap::IAeroSurf::Puteff ( double _val ) {
    _com_dispatch_propput(this, 0x2717, VT_R8, _val);
}

#pragma implementation_key(7551)
inline VARIANT_BOOL femap::IAeroSurf::Getldw ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7552)
inline void femap::IAeroSurf::Putldw ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BOOL, _val);
}

#pragma implementation_key(7553)
inline double femap::IAeroSurf::Getcrefc ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7554)
inline void femap::IAeroSurf::Putcrefc ( double _val ) {
    _com_dispatch_propput(this, 0x2719, VT_R8, _val);
}

#pragma implementation_key(7555)
inline double femap::IAeroSurf::Getcrefs ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7556)
inline void femap::IAeroSurf::Putcrefs ( double _val ) {
    _com_dispatch_propput(this, 0x271a, VT_R8, _val);
}

#pragma implementation_key(7557)
inline double femap::IAeroSurf::Getpllim ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7558)
inline void femap::IAeroSurf::Putpllim ( double _val ) {
    _com_dispatch_propput(this, 0x271b, VT_R8, _val);
}

#pragma implementation_key(7559)
inline double femap::IAeroSurf::Getpulim ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7560)
inline void femap::IAeroSurf::Putpulim ( double _val ) {
    _com_dispatch_propput(this, 0x271c, VT_R8, _val);
}

#pragma implementation_key(7561)
inline double femap::IAeroSurf::Gethmllim ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7562)
inline void femap::IAeroSurf::Puthmllim ( double _val ) {
    _com_dispatch_propput(this, 0x271d, VT_R8, _val);
}

#pragma implementation_key(7563)
inline double femap::IAeroSurf::Gethmulim ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7564)
inline void femap::IAeroSurf::Puthmulim ( double _val ) {
    _com_dispatch_propput(this, 0x271e, VT_R8, _val);
}

#pragma implementation_key(7565)
inline int femap::IAeroSurf::Gettqllim ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7566)
inline void femap::IAeroSurf::Puttqllim ( int _val ) {
    _com_dispatch_propput(this, 0x271f, VT_I4, _val);
}

#pragma implementation_key(7567)
inline int femap::IAeroSurf::Gettqulim ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7568)
inline void femap::IAeroSurf::Puttqulim ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(7569)
inline _bstr_t femap::IAeroSurf::GetLabel ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7570)
inline void femap::IAeroSurf::PutLabel ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2721, VT_BSTR, (BSTR)_val);
}

//
// dispinterface IFreebody wrapper method implementations
//

#pragma implementation_key(7571)
inline VARIANT_BOOL femap::IFreebody::GetSumComponents ( enum zFbdComponent nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7572)
inline void femap::IFreebody::PutSumComponents ( enum zFbdComponent nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7573)
inline VARIANT_BOOL femap::IFreebody::GetSumContributions ( enum zFbdContribution nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7574)
inline void femap::IFreebody::PutSumContributions ( enum zFbdContribution nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7575)
inline VARIANT_BOOL femap::IFreebody::GetShowTotalVec ( enum zFbdComponent nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7576)
inline void femap::IFreebody::PutShowTotalVec ( enum zFbdComponent nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7577)
inline enum femap::zColor femap::IFreebody::GetTotalVecColor ( enum zColor nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7578)
inline void femap::IFreebody::PutTotalVecColor ( enum zColor nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7579)
inline VARIANT_BOOL femap::IFreebody::GetShowNodalVec ( enum zFbdComponent nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7580)
inline void femap::IFreebody::PutShowNodalVec ( enum zFbdComponent nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7581)
inline enum femap::zColor femap::IFreebody::GetNodalVecColor ( enum zColor nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7582)
inline void femap::IFreebody::PutNodalVecColor ( enum zColor nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7583)
inline enum femap::zFbdVecMode femap::IFreebody::GetTotalVectorMode ( enum zFbdVecMode nVectorIndex ) {
    enum zFbdVecMode _result;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7584)
inline void femap::IFreebody::PutTotalVectorMode ( enum zFbdVecMode nVectorIndex, enum zFbdVecMode _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7585)
inline enum femap::zFbdVecMode femap::IFreebody::GetNodalVectorMode ( enum zFbdVecMode nVectorIndex ) {
    enum zFbdVecMode _result;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7586)
inline void femap::IFreebody::PutNodalVectorMode ( enum zFbdVecMode nVectorIndex, enum zFbdVecMode _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7587)
inline double femap::IFreebody::GetSectionPlaneBase ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7588)
inline void femap::IFreebody::PutSectionPlaneBase ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7589)
inline double femap::IFreebody::GetSectionPlaneNormal ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7590)
inline void femap::IFreebody::PutSectionPlaneNormal ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7591)
inline double femap::IFreebody::GetSectionVectorBase ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7592)
inline void femap::IFreebody::PutSectionVectorBase ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7593)
inline double femap::IFreebody::GetSectionVectorTip ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7594)
inline void femap::IFreebody::PutSectionVectorTip ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7595)
inline enum femap::zReturnCode femap::IFreebody::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7596)
inline enum femap::zReturnCode femap::IFreebody::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7597)
inline enum femap::zReturnCode femap::IFreebody::GetElements ( int * NumElem, VARIANT * elemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", NumElem, elemID);
    return _result;
}

#pragma implementation_key(7598)
inline enum femap::zReturnCode femap::IFreebody::SetElements ( VARIANT_BOOL bClear, int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bClear, setID);
    return _result;
}

#pragma implementation_key(7599)
inline enum femap::zReturnCode femap::IFreebody::GetNodes ( int * numNode, VARIANT * NodeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numNode, NodeID);
    return _result;
}

#pragma implementation_key(7600)
inline enum femap::zReturnCode femap::IFreebody::SetNodes ( VARIANT_BOOL bClear, int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bClear, setID);
    return _result;
}

#pragma implementation_key(7601)
inline enum femap::zReturnCode femap::IFreebody::ClearElements ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7602)
inline enum femap::zReturnCode femap::IFreebody::ClearNodes ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7603)
inline enum femap::zReturnCode femap::IFreebody::CalculateNodalCenter ( VARIANT_BOOL bUpdate, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x400c", bUpdate, xyz);
    return _result;
}

#pragma implementation_key(7604)
inline enum femap::zReturnCode femap::IFreebody::CalculateSummation ( int outSetID, VARIANT * calculations ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", outSetID, calculations);
    return _result;
}

#pragma implementation_key(7605)
inline enum femap::zReturnCode femap::IFreebody::CalculateSummation2 ( int nSetID, VARIANT_BOOL bUseFBCSys, int * nNumSets, VARIANT * outsetIDs, VARIANT * calculations ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x4003\x400c\x400c", nSetID, bUseFBCSys, nNumSets, outsetIDs, calculations);
    return _result;
}

#pragma implementation_key(7606)
inline enum femap::zReturnCode femap::IFreebody::GetNodalSums ( int nSetID, int * nNumNodes, VARIANT * nNodeIDs, VARIANT * dVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c", nSetID, nNumNodes, nNodeIDs, dVals);
    return _result;
}

#pragma implementation_key(7607)
inline enum femap::zReturnCode femap::IFreebody::GetSumAtNode ( int nNodeID, int nSetID, VARIANT * dVals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x400c", nNodeID, nSetID, dVals);
    return _result;
}

#pragma implementation_key(7608)
inline enum femap::zReturnCode femap::IFreebody::GetSectionCutSums ( int nOutSetSetID, int nCuts, int * pnNumCuts, VARIANT * pCutLocs, VARIANT * pSumLocs, VARIANT * pSums ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c\x400c", nOutSetSetID, nCuts, pnNumCuts, pCutLocs, pSumLocs, pSums);
    return _result;
}

#pragma implementation_key(7609)
inline enum femap::zReturnCode femap::IFreebody::SetLocationFromCoord ( double x, double y, double z, double * pLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0005\x4005", x, y, z, pLoc);
    return _result;
}

#pragma implementation_key(7610)
inline enum femap::zReturnCode femap::IFreebody::Show ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7611)
inline enum femap::zReturnCode femap::IFreebody::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7612)
inline enum femap::zReturnCode femap::IFreebody::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7613)
inline enum femap::zReturnCode femap::IFreebody::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7614)
inline enum femap::zReturnCode femap::IFreebody::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7615)
inline enum femap::zReturnCode femap::IFreebody::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7616)
inline enum femap::zReturnCode femap::IFreebody::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7617)
inline enum femap::zReturnCode femap::IFreebody::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7618)
inline enum femap::zReturnCode femap::IFreebody::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7619)
inline enum femap::zReturnCode femap::IFreebody::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7620)
inline enum femap::zReturnCode femap::IFreebody::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7621)
inline enum femap::zReturnCode femap::IFreebody::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7622)
inline enum femap::zReturnCode femap::IFreebody::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7623)
inline int femap::IFreebody::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7624)
inline int femap::IFreebody::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7625)
inline int femap::IFreebody::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7626)
inline int femap::IFreebody::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7627)
inline enum femap::zReturnCode femap::IFreebody::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7628)
inline enum femap::zReturnCode femap::IFreebody::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7629)
inline enum femap::zReturnCode femap::IFreebody::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7630)
inline enum femap::zReturnCode femap::IFreebody::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7631)
inline enum femap::zReturnCode femap::IFreebody::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7632)
inline int femap::IFreebody::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7633)
inline enum femap::zReturnCode femap::IFreebody::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7634)
inline enum femap::zReturnCode femap::IFreebody::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7635)
inline enum femap::zReturnCode femap::IFreebody::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7636)
inline int femap::IFreebody::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7637)
inline enum femap::zReturnCode femap::IFreebody::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7638)
inline enum femap::zReturnCode femap::IFreebody::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7639)
inline _bstr_t femap::IFreebody::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7640)
inline void femap::IFreebody::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7641)
inline double femap::IFreebody::Getx ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7642)
inline void femap::IFreebody::Putx ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(7643)
inline double femap::IFreebody::Gety ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7644)
inline void femap::IFreebody::Puty ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(7645)
inline double femap::IFreebody::Getz ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7646)
inline void femap::IFreebody::Putz ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(7647)
inline _variant_t femap::IFreebody::GetvSumComponents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7648)
inline void femap::IFreebody::PutvSumComponents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(7649)
inline _variant_t femap::IFreebody::GetvSumContributions ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7650)
inline void femap::IFreebody::PutvSumContributions ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(7651)
inline _variant_t femap::IFreebody::GetvShowTotalVec ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2716, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7652)
inline void femap::IFreebody::PutvShowTotalVec ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2716, VT_VARIANT, &_val);
}

#pragma implementation_key(7653)
inline _variant_t femap::IFreebody::GetvTotalVecColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7654)
inline void femap::IFreebody::PutvTotalVecColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(7655)
inline _variant_t femap::IFreebody::GetvShowNodalVec ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7656)
inline void femap::IFreebody::PutvShowNodalVec ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(7657)
inline _variant_t femap::IFreebody::GetvNodalVecColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2719, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7658)
inline void femap::IFreebody::PutvNodalVecColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2719, VT_VARIANT, &_val);
}

#pragma implementation_key(7659)
inline enum femap::zColor femap::IFreebody::GetNodeMarkerColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7660)
inline void femap::IFreebody::PutNodeMarkerColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(7661)
inline _variant_t femap::IFreebody::GetvTotalVectorMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7662)
inline void femap::IFreebody::PutvTotalVectorMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271b, VT_VARIANT, &_val);
}

#pragma implementation_key(7663)
inline _variant_t femap::IFreebody::GetvNodalVectorMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x271c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7664)
inline void femap::IFreebody::PutvNodalVectorMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x271c, VT_VARIANT, &_val);
}

#pragma implementation_key(7665)
inline int femap::IFreebody::GetCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7666)
inline void femap::IFreebody::PutCSys ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(7667)
inline int femap::IFreebody::GetGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7668)
inline void femap::IFreebody::PutGroup ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(7669)
inline enum femap::zFbdDisplayMode femap::IFreebody::GetDisplayMode ( ) {
    enum zFbdDisplayMode _result;
    _com_dispatch_propget(this, 0x271f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7670)
inline void femap::IFreebody::PutDisplayMode ( enum zFbdDisplayMode _val ) {
    _com_dispatch_propput(this, 0x271f, VT_I4, _val);
}

#pragma implementation_key(7671)
inline int femap::IFreebody::Getlayer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7672)
inline void femap::IFreebody::Putlayer ( int _val ) {
    _com_dispatch_propput(this, 0x2720, VT_I4, _val);
}

#pragma implementation_key(7673)
inline VARIANT_BOOL femap::IFreebody::GetAlternateApplied ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7674)
inline void femap::IFreebody::PutAlternateApplied ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2721, VT_BOOL, _val);
}

#pragma implementation_key(7675)
inline VARIANT_BOOL femap::IFreebody::GetAlternateSPC ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7676)
inline void femap::IFreebody::PutAlternateSPC ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2722, VT_BOOL, _val);
}

#pragma implementation_key(7677)
inline VARIANT_BOOL femap::IFreebody::GetAlternateMPC ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7678)
inline void femap::IFreebody::PutAlternateMPC ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2723, VT_BOOL, _val);
}

#pragma implementation_key(7679)
inline VARIANT_BOOL femap::IFreebody::GetUseNodalOuputCS ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7680)
inline void femap::IFreebody::PutUseNodalOuputCS ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2724, VT_BOOL, _val);
}

#pragma implementation_key(7681)
inline _variant_t femap::IFreebody::GetvSectionPlaneBase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2725, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7682)
inline void femap::IFreebody::PutvSectionPlaneBase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2725, VT_VARIANT, &_val);
}

#pragma implementation_key(7683)
inline _variant_t femap::IFreebody::GetvSectionPlaneNormal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2726, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7684)
inline void femap::IFreebody::PutvSectionPlaneNormal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2726, VT_VARIANT, &_val);
}

#pragma implementation_key(7685)
inline int femap::IFreebody::GetSectionCurve ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7686)
inline void femap::IFreebody::PutSectionCurve ( int _val ) {
    _com_dispatch_propput(this, 0x2728, VT_I4, _val);
}

#pragma implementation_key(7687)
inline _variant_t femap::IFreebody::GetvSectionVectorBase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2729, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7688)
inline void femap::IFreebody::PutvSectionVectorBase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2729, VT_VARIANT, &_val);
}

#pragma implementation_key(7689)
inline _variant_t femap::IFreebody::GetvSectionVectorTip ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x272a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7690)
inline void femap::IFreebody::PutvSectionVectorTip ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x272a, VT_VARIANT, &_val);
}

#pragma implementation_key(7691)
inline VARIANT_BOOL femap::IFreebody::GetSectionRotateSums ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7692)
inline void femap::IFreebody::PutSectionRotateSums ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272b, VT_BOOL, _val);
}

#pragma implementation_key(7693)
inline VARIANT_BOOL femap::IFreebody::GetSectionIncludeClippedElem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7694)
inline void femap::IFreebody::PutSectionIncludeClippedElem ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272c, VT_BOOL, _val);
}

#pragma implementation_key(7695)
inline double femap::IFreebody::GetSectionTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7696)
inline void femap::IFreebody::PutSectionTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x272d, VT_R8, _val);
}

#pragma implementation_key(7697)
inline enum femap::zFbdSectionSumLoc femap::IFreebody::GetSectionSumLocation ( ) {
    enum zFbdSectionSumLoc _result;
    _com_dispatch_propget(this, 0x272e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7698)
inline void femap::IFreebody::PutSectionSumLocation ( enum zFbdSectionSumLoc _val ) {
    _com_dispatch_propput(this, 0x272e, VT_I4, _val);
}

#pragma implementation_key(7699)
inline VARIANT_BOOL femap::IFreebody::GetSectionLimitToGroup ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7700)
inline void femap::IFreebody::PutSectionLimitToGroup ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272f, VT_BOOL, _val);
}

#pragma implementation_key(7701)
inline int femap::IFreebody::GetSectionGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7702)
inline void femap::IFreebody::PutSectionGroup ( int _val ) {
    _com_dispatch_propput(this, 0x2730, VT_I4, _val);
}

#pragma implementation_key(7703)
inline VARIANT_BOOL femap::IFreebody::GetReverseTotalValues ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7704)
inline void femap::IFreebody::PutReverseTotalValues ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2731, VT_BOOL, _val);
}

#pragma implementation_key(7705)
inline enum femap::zFbdSectionMode femap::IFreebody::GetSectionMode ( ) {
    enum zFbdSectionMode _result;
    _com_dispatch_propget(this, 0x2733, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7706)
inline void femap::IFreebody::PutSectionMode ( enum zFbdSectionMode _val ) {
    _com_dispatch_propput(this, 0x2733, VT_I4, _val);
}

#pragma implementation_key(7707)
inline double femap::IFreebody::GetSectionRadius ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7708)
inline void femap::IFreebody::PutSectionRadius ( double _val ) {
    _com_dispatch_propput(this, 0x2734, VT_R8, _val);
}

#pragma implementation_key(7709)
inline VARIANT_BOOL femap::IFreebody::GetSectionReverse ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7710)
inline void femap::IFreebody::PutSectionReverse ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2735, VT_BOOL, _val);
}

#pragma implementation_key(7711)
inline double femap::IFreebody::GetSectionLocation ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7712)
inline void femap::IFreebody::PutSectionLocation ( double _val ) {
    _com_dispatch_propput(this, 0x2738, VT_R8, _val);
}

#pragma implementation_key(7713)
inline int femap::IFreebody::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7714)
inline void femap::IFreebody::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(7715)
inline int femap::IFreebody::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7716)
inline void femap::IFreebody::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(7717)
inline int femap::IFreebody::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7718)
inline void femap::IFreebody::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ISEReference wrapper method implementations
//

#pragma implementation_key(7719)
inline enum femap::zReturnCode femap::ISEReference::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7720)
inline enum femap::zReturnCode femap::ISEReference::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7721)
inline enum femap::zReturnCode femap::ISEReference::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7722)
inline enum femap::zReturnCode femap::ISEReference::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7723)
inline enum femap::zReturnCode femap::ISEReference::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7724)
inline enum femap::zReturnCode femap::ISEReference::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7725)
inline enum femap::zReturnCode femap::ISEReference::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7726)
inline enum femap::zReturnCode femap::ISEReference::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7727)
inline enum femap::zReturnCode femap::ISEReference::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7728)
inline enum femap::zReturnCode femap::ISEReference::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7729)
inline enum femap::zReturnCode femap::ISEReference::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7730)
inline enum femap::zReturnCode femap::ISEReference::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7731)
inline enum femap::zReturnCode femap::ISEReference::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7732)
inline enum femap::zReturnCode femap::ISEReference::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7733)
inline int femap::ISEReference::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7734)
inline int femap::ISEReference::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7735)
inline int femap::ISEReference::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7736)
inline int femap::ISEReference::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7737)
inline enum femap::zReturnCode femap::ISEReference::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7738)
inline enum femap::zReturnCode femap::ISEReference::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7739)
inline enum femap::zReturnCode femap::ISEReference::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7740)
inline enum femap::zReturnCode femap::ISEReference::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7741)
inline enum femap::zReturnCode femap::ISEReference::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7742)
inline int femap::ISEReference::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7743)
inline enum femap::zReturnCode femap::ISEReference::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7744)
inline enum femap::zReturnCode femap::ISEReference::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7745)
inline enum femap::zReturnCode femap::ISEReference::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7746)
inline int femap::ISEReference::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7747)
inline enum femap::zReturnCode femap::ISEReference::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7748)
inline enum femap::zReturnCode femap::ISEReference::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7749)
inline _bstr_t femap::ISEReference::GetReferenceFile ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7750)
inline void femap::ISEReference::PutReferenceFile ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7751)
inline enum femap::zAnalysisExtSERef femap::ISEReference::GetReferenceType ( ) {
    enum zAnalysisExtSERef _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7752)
inline void femap::ISEReference::PutReferenceType ( enum zAnalysisExtSERef _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7753)
inline int femap::ISEReference::GetReferenceID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7754)
inline void femap::ISEReference::PutReferenceID ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(7755)
inline _bstr_t femap::ISEReference::GetASMFile ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7756)
inline void femap::ISEReference::PutASMFile ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7757)
inline VARIANT_BOOL femap::ISEReference::GetStiffness ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7758)
inline void femap::ISEReference::PutStiffness ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(7759)
inline VARIANT_BOOL femap::ISEReference::GetMass ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7760)
inline void femap::ISEReference::PutMass ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(7761)
inline VARIANT_BOOL femap::ISEReference::GetViscousDamping ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7762)
inline void femap::ISEReference::PutViscousDamping ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(7763)
inline VARIANT_BOOL femap::ISEReference::GetStructuralDaming ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7764)
inline void femap::ISEReference::PutStructuralDaming ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BOOL, _val);
}

#pragma implementation_key(7765)
inline VARIANT_BOOL femap::ISEReference::GetLoadsMatrix ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7766)
inline void femap::ISEReference::PutLoadsMatrix ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BOOL, _val);
}

#pragma implementation_key(7767)
inline enum femap::zAnalysisAssignForm femap::ISEReference::GetAssignForm ( ) {
    enum zAnalysisAssignForm _result;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7768)
inline void femap::ISEReference::PutAssignForm ( enum zAnalysisAssignForm _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(7769)
inline int femap::ISEReference::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7770)
inline void femap::ISEReference::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(7771)
inline int femap::ISEReference::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7772)
inline void femap::ISEReference::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(7773)
inline int femap::ISEReference::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7774)
inline void femap::ISEReference::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IChart wrapper method implementations
//

#pragma implementation_key(7775)
inline double femap::IChart::GetAxisRange ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(7776)
inline void femap::IChart::PutAxisRange ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(7777)
inline VARIANT_BOOL femap::IChart::GetAxisVisible ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7778)
inline void femap::IChart::PutAxisVisible ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7779)
inline VARIANT_BOOL femap::IChart::GetAxisZoom ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7780)
inline void femap::IChart::PutAxisZoom ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7781)
inline double femap::IChart::GetAxisMajorInterval ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7782)
inline void femap::IChart::PutAxisMajorInterval ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7783)
inline int femap::IChart::GetAxisMinorCount ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7784)
inline void femap::IChart::PutAxisMinorCount ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7785)
inline VARIANT_BOOL femap::IChart::GetAxisMajorGridlineVisible ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7786)
inline void femap::IChart::PutAxisMajorGridlineVisible ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7787)
inline VARIANT_BOOL femap::IChart::GetAxisMinorGridlineVisible ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7788)
inline void femap::IChart::PutAxisMinorGridlineVisible ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7789)
inline VARIANT_BOOL femap::IChart::GetAxisAutoscale ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7790)
inline void femap::IChart::PutAxisAutoscale ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7791)
inline enum femap::zChartAxisStyle femap::IChart::GetAxisStyle ( int nVectorIndex ) {
    enum zChartAxisStyle _result;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7792)
inline void femap::IChart::PutAxisStyle ( int nVectorIndex, enum zChartAxisStyle _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7793)
inline VARIANT_BOOL femap::IChart::GetAxisMajorTickmarkVisible ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7794)
inline void femap::IChart::PutAxisMajorTickmarkVisible ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7795)
inline VARIANT_BOOL femap::IChart::GetAxisMinorTickmarkVisible ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7796)
inline void femap::IChart::PutAxisMinorTickmarkVisible ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7797)
inline VARIANT_BOOL femap::IChart::GetAxisTitleVisible ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7798)
inline void femap::IChart::PutAxisTitleVisible ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7799)
inline enum femap::zChartTextJustification femap::IChart::GetAxisTitleJustification ( int nVectorIndex ) {
    enum zChartTextJustification _result;
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7800)
inline void femap::IChart::PutAxisTitleJustification ( int nVectorIndex, enum zChartTextJustification _arg2 ) {
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7801)
inline double femap::IChart::GetAxisTitleFontSize ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7802)
inline void femap::IChart::PutAxisTitleFontSize ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(7803)
inline VARIANT_BOOL femap::IChart::GetAxisTitleBold ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7804)
inline void femap::IChart::PutAxisTitleBold ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7805)
inline VARIANT_BOOL femap::IChart::GetAxisTitleItalic ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7806)
inline void femap::IChart::PutAxisTitleItalic ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7807)
inline VARIANT_BOOL femap::IChart::GetAxisTitleUnderline ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7808)
inline void femap::IChart::PutAxisTitleUnderline ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7809)
inline enum femap::zColor femap::IChart::GetAxisTitleColor ( int nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x4661, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7810)
inline void femap::IChart::PutAxisTitleColor ( int nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x4661, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7811)
inline int femap::IChart::GetAxisLabelDecimal ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4662, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7812)
inline void femap::IChart::PutAxisLabelDecimal ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4662, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7813)
inline enum femap::zChartNumberFormat femap::IChart::GetAxisLabelFormat ( int nVectorIndex ) {
    enum zChartNumberFormat _result;
    _com_dispatch_method(this, 0x4663, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7814)
inline void femap::IChart::PutAxisLabelFormat ( int nVectorIndex, enum zChartNumberFormat _arg2 ) {
    _com_dispatch_method(this, 0x4663, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7815)
inline enum femap::zChartLegendLocation femap::IChart::GetLegendLocation ( int nVectorIndex ) {
    enum zChartLegendLocation _result;
    _com_dispatch_method(this, 0x4664, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7816)
inline void femap::IChart::PutLegendLocation ( int nVectorIndex, enum zChartLegendLocation _arg2 ) {
    _com_dispatch_method(this, 0x4664, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7817)
inline int femap::IChart::GetAxisMinorCountLog ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4665, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7818)
inline void femap::IChart::PutAxisMinorCountLog ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4665, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7819)
inline VARIANT_BOOL femap::IChart::GetAxisRangePad ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4666, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7820)
inline void femap::IChart::PutAxisRangePad ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4666, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7821)
inline VARIANT_BOOL femap::IChart::GetAxisAutoscale2 ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7822)
inline void femap::IChart::PutAxisAutoscale2 ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7823)
inline double femap::IChart::GetAxisRange2 ( int nRowIndex, int nColIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003\x0003", nRowIndex, nColIndex);
    return _result;
}

#pragma implementation_key(7824)
inline void femap::IChart::PutAxisRange2 ( int nRowIndex, int nColIndex, double _arg3 ) {
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003\x0005", nRowIndex, nColIndex, _arg3);
}

#pragma implementation_key(7825)
inline VARIANT_BOOL femap::IChart::GetAxisRangePad2 ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7826)
inline void femap::IChart::PutAxisRangePad2 ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(7827)
inline enum femap::zChartAxisStyle femap::IChart::GetAxisStyle2 ( int nVectorIndex ) {
    enum zChartAxisStyle _result;
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7828)
inline void femap::IChart::PutAxisStyle2 ( int nVectorIndex, enum zChartAxisStyle _arg2 ) {
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7829)
inline enum femap::zChartNumberFormat femap::IChart::GetAxisLabelFormat2 ( int nVectorIndex ) {
    enum zChartNumberFormat _result;
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7830)
inline void femap::IChart::PutAxisLabelFormat2 ( int nVectorIndex, enum zChartNumberFormat _arg2 ) {
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7831)
inline int femap::IChart::GetAxisLabelDecimal2 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x466c, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(7832)
inline void femap::IChart::PutAxisLabelDecimal2 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x466c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(7833)
inline enum femap::zReturnCode femap::IChart::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7834)
inline enum femap::zReturnCode femap::IChart::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(7835)
inline enum femap::zReturnCode femap::IChart::AddDataSeries ( int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", setID);
    return _result;
}

#pragma implementation_key(7836)
inline enum femap::zReturnCode femap::IChart::RemoveDataSeries ( int setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", setID);
    return _result;
}

#pragma implementation_key(7837)
inline enum femap::zReturnCode femap::IChart::GetDataSeries ( int * numDS, VARIANT * dsID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numDS, dsID);
    return _result;
}

#pragma implementation_key(7838)
inline enum femap::zReturnCode femap::IChart::ShowPane ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7839)
inline enum femap::zReturnCode femap::IChart::RemoveAllDataSeries ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7840)
inline enum femap::zReturnCode femap::IChart::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7841)
inline enum femap::zReturnCode femap::IChart::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7842)
inline enum femap::zReturnCode femap::IChart::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7843)
inline enum femap::zReturnCode femap::IChart::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7844)
inline enum femap::zReturnCode femap::IChart::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7845)
inline enum femap::zReturnCode femap::IChart::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7846)
inline enum femap::zReturnCode femap::IChart::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7847)
inline enum femap::zReturnCode femap::IChart::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7848)
inline enum femap::zReturnCode femap::IChart::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7849)
inline enum femap::zReturnCode femap::IChart::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7850)
inline enum femap::zReturnCode femap::IChart::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7851)
inline enum femap::zReturnCode femap::IChart::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7852)
inline int femap::IChart::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7853)
inline int femap::IChart::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7854)
inline int femap::IChart::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7855)
inline int femap::IChart::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7856)
inline enum femap::zReturnCode femap::IChart::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7857)
inline enum femap::zReturnCode femap::IChart::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7858)
inline enum femap::zReturnCode femap::IChart::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(7859)
inline enum femap::zReturnCode femap::IChart::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7860)
inline enum femap::zReturnCode femap::IChart::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(7861)
inline int femap::IChart::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(7862)
inline enum femap::zReturnCode femap::IChart::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7863)
inline enum femap::zReturnCode femap::IChart::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7864)
inline enum femap::zReturnCode femap::IChart::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7865)
inline int femap::IChart::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(7866)
inline enum femap::zReturnCode femap::IChart::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(7867)
inline enum femap::zReturnCode femap::IChart::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(7868)
inline _bstr_t femap::IChart::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7869)
inline void femap::IChart::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7870)
inline enum femap::zChartStyle femap::IChart::Getstyle ( ) {
    enum zChartStyle _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7871)
inline void femap::IChart::Putstyle ( enum zChartStyle _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(7872)
inline _bstr_t femap::IChart::GetAxisTitleX ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7873)
inline void femap::IChart::PutAxisTitleX ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7874)
inline _bstr_t femap::IChart::GetAxisTitleY ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7875)
inline void femap::IChart::PutAxisTitleY ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7876)
inline _variant_t femap::IChart::GetvAxisAutoscale ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2714, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7877)
inline void femap::IChart::PutvAxisAutoscale ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2714, VT_VARIANT, &_val);
}

#pragma implementation_key(7878)
inline _variant_t femap::IChart::GetvAxisStyle ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7879)
inline void femap::IChart::PutvAxisStyle ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(7880)
inline _variant_t femap::IChart::GetvAxisRange ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2716, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7881)
inline void femap::IChart::PutvAxisRange ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2716, VT_VARIANT, &_val);
}

#pragma implementation_key(7882)
inline _variant_t femap::IChart::GetvAxisVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2717, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7883)
inline void femap::IChart::PutvAxisVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2717, VT_VARIANT, &_val);
}

#pragma implementation_key(7884)
inline _variant_t femap::IChart::GetvAxisMajorTickmarkVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2718, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7885)
inline void femap::IChart::PutvAxisMajorTickmarkVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2718, VT_VARIANT, &_val);
}

#pragma implementation_key(7886)
inline _variant_t femap::IChart::GetvAxisMinorTickmarkVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2719, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7887)
inline void femap::IChart::PutvAxisMinorTickmarkVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2719, VT_VARIANT, &_val);
}

#pragma implementation_key(7888)
inline VARIANT_BOOL femap::IChart::GetOutputSetInherit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7889)
inline void femap::IChart::PutOutputSetInherit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271a, VT_BOOL, _val);
}

#pragma implementation_key(7890)
inline int femap::IChart::GetOutputSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7891)
inline void femap::IChart::PutOutputSet ( int _val ) {
    _com_dispatch_propput(this, 0x271b, VT_I4, _val);
}

#pragma implementation_key(7892)
inline int femap::IChart::GetOutputSetEnd ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7893)
inline void femap::IChart::PutOutputSetEnd ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(7894)
inline VARIANT_BOOL femap::IChart::GetOutputSetAll ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7895)
inline void femap::IChart::PutOutputSetAll ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271e, VT_BOOL, _val);
}

#pragma implementation_key(7896)
inline VARIANT_BOOL femap::IChart::GetMarkerFromChart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7897)
inline void femap::IChart::PutMarkerFromChart ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271f, VT_BOOL, _val);
}

#pragma implementation_key(7898)
inline VARIANT_BOOL femap::IChart::GetMarkerVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7899)
inline void femap::IChart::PutMarkerVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2720, VT_BOOL, _val);
}

#pragma implementation_key(7900)
inline int femap::IChart::GetMarkerSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7901)
inline void femap::IChart::PutMarkerSize ( int _val ) {
    _com_dispatch_propput(this, 0x2721, VT_I4, _val);
}

#pragma implementation_key(7902)
inline enum femap::zChartMarkerStyle femap::IChart::GetMarkerStyle ( ) {
    enum zChartMarkerStyle _result;
    _com_dispatch_propget(this, 0x2722, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7903)
inline void femap::IChart::PutMarkerStyle ( enum zChartMarkerStyle _val ) {
    _com_dispatch_propput(this, 0x2722, VT_I4, _val);
}

#pragma implementation_key(7904)
inline VARIANT_BOOL femap::IChart::GetLabelFromChart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7905)
inline void femap::IChart::PutLabelFromChart ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2723, VT_BOOL, _val);
}

#pragma implementation_key(7906)
inline VARIANT_BOOL femap::IChart::GetLabelVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7907)
inline void femap::IChart::PutLabelVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2724, VT_BOOL, _val);
}

#pragma implementation_key(7908)
inline VARIANT_BOOL femap::IChart::GetShowLabelX ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7909)
inline void femap::IChart::PutShowLabelX ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2725, VT_BOOL, _val);
}

#pragma implementation_key(7910)
inline VARIANT_BOOL femap::IChart::GetShowLabelY ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7911)
inline void femap::IChart::PutShowLabelY ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2726, VT_BOOL, _val);
}

#pragma implementation_key(7912)
inline VARIANT_BOOL femap::IChart::GetShowLabelMaxMin ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7913)
inline void femap::IChart::PutShowLabelMaxMin ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2727, VT_BOOL, _val);
}

#pragma implementation_key(7914)
inline VARIANT_BOOL femap::IChart::GetPaletteFromChart ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7915)
inline void femap::IChart::PutPaletteFromChart ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2728, VT_BOOL, _val);
}

#pragma implementation_key(7916)
inline enum femap::zChartPalette femap::IChart::GetPalette ( ) {
    enum zChartPalette _result;
    _com_dispatch_propget(this, 0x2729, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7917)
inline void femap::IChart::PutPalette ( enum zChartPalette _val ) {
    _com_dispatch_propput(this, 0x2729, VT_I4, _val);
}

#pragma implementation_key(7918)
inline VARIANT_BOOL femap::IChart::GetDarkBackground ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7919)
inline void femap::IChart::PutDarkBackground ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272a, VT_BOOL, _val);
}

#pragma implementation_key(7920)
inline VARIANT_BOOL femap::IChart::GetLegendVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7921)
inline void femap::IChart::PutLegendVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272b, VT_BOOL, _val);
}

#pragma implementation_key(7922)
inline _variant_t femap::IChart::GetvLegendLocation ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x272c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7923)
inline void femap::IChart::PutvLegendLocation ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x272c, VT_VARIANT, &_val);
}

#pragma implementation_key(7924)
inline enum femap::zChartLegendDirection femap::IChart::GetLegendDirection ( ) {
    enum zChartLegendDirection _result;
    _com_dispatch_propget(this, 0x272d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7925)
inline void femap::IChart::PutLegendDirection ( enum zChartLegendDirection _val ) {
    _com_dispatch_propput(this, 0x272d, VT_I4, _val);
}

#pragma implementation_key(7926)
inline VARIANT_BOOL femap::IChart::GetTitleVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7927)
inline void femap::IChart::PutTitleVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272e, VT_BOOL, _val);
}

#pragma implementation_key(7928)
inline enum femap::zChartTitleLocation femap::IChart::GetTitleLocation ( ) {
    enum zChartTitleLocation _result;
    _com_dispatch_propget(this, 0x272f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7929)
inline void femap::IChart::PutTitleLocation ( enum zChartTitleLocation _val ) {
    _com_dispatch_propput(this, 0x272f, VT_I4, _val);
}

#pragma implementation_key(7930)
inline enum femap::zChartTextJustification femap::IChart::GetTitleJustification ( ) {
    enum zChartTextJustification _result;
    _com_dispatch_propget(this, 0x2730, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7931)
inline void femap::IChart::PutTitleJustification ( enum zChartTextJustification _val ) {
    _com_dispatch_propput(this, 0x2730, VT_I4, _val);
}

#pragma implementation_key(7932)
inline double femap::IChart::GetTitleFontSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7933)
inline void femap::IChart::PutTitleFontSize ( double _val ) {
    _com_dispatch_propput(this, 0x2731, VT_R8, _val);
}

#pragma implementation_key(7934)
inline VARIANT_BOOL femap::IChart::GetTitleFontBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7935)
inline void femap::IChart::PutTitleFontBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2732, VT_BOOL, _val);
}

#pragma implementation_key(7936)
inline VARIANT_BOOL femap::IChart::GetTitleFontItalic ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7937)
inline void femap::IChart::PutTitleFontItalic ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2733, VT_BOOL, _val);
}

#pragma implementation_key(7938)
inline VARIANT_BOOL femap::IChart::GetTitleFontUnderline ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7939)
inline void femap::IChart::PutTitleFontUnderline ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2734, VT_BOOL, _val);
}

#pragma implementation_key(7940)
inline enum femap::zColor femap::IChart::GetTitleFontColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x2735, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7941)
inline void femap::IChart::PutTitleFontColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x2735, VT_I4, _val);
}

#pragma implementation_key(7942)
inline _variant_t femap::IChart::GetvAxisMajorInterval ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2736, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7943)
inline void femap::IChart::PutvAxisMajorInterval ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2736, VT_VARIANT, &_val);
}

#pragma implementation_key(7944)
inline _variant_t femap::IChart::GetvAxisMinorCount ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2737, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7945)
inline void femap::IChart::PutvAxisMinorCount ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2737, VT_VARIANT, &_val);
}

#pragma implementation_key(7946)
inline _variant_t femap::IChart::GetvAxisMajorGridlineVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2738, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7947)
inline void femap::IChart::PutvAxisMajorGridlineVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2738, VT_VARIANT, &_val);
}

#pragma implementation_key(7948)
inline _variant_t femap::IChart::GetvAxisMinorGridlineVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2739, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7949)
inline void femap::IChart::PutvAxisMinorGridlineVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2739, VT_VARIANT, &_val);
}

#pragma implementation_key(7950)
inline _variant_t femap::IChart::GetvAxisZoom ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7951)
inline void femap::IChart::PutvAxisZoom ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273a, VT_VARIANT, &_val);
}

#pragma implementation_key(7952)
inline _variant_t femap::IChart::GetvAxisTitleVisible ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7953)
inline void femap::IChart::PutvAxisTitleVisible ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273b, VT_VARIANT, &_val);
}

#pragma implementation_key(7954)
inline _variant_t femap::IChart::GetvAxisTitleJustification ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7955)
inline void femap::IChart::PutvAxisTitleJustification ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273c, VT_VARIANT, &_val);
}

#pragma implementation_key(7956)
inline _variant_t femap::IChart::GetvAxisTitleFontSize ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7957)
inline void femap::IChart::PutvAxisTitleFontSize ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273d, VT_VARIANT, &_val);
}

#pragma implementation_key(7958)
inline _variant_t femap::IChart::GetvAxisTitleBold ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7959)
inline void femap::IChart::PutvAxisTitleBold ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273e, VT_VARIANT, &_val);
}

#pragma implementation_key(7960)
inline _variant_t femap::IChart::GetvAxisTitleItalic ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x273f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7961)
inline void femap::IChart::PutvAxisTitleItalic ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x273f, VT_VARIANT, &_val);
}

#pragma implementation_key(7962)
inline _variant_t femap::IChart::GetvAxisTitleUnderline ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2740, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7963)
inline void femap::IChart::PutvAxisTitleUnderline ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2740, VT_VARIANT, &_val);
}

#pragma implementation_key(7964)
inline _variant_t femap::IChart::GetvAxisTitleFontColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2741, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7965)
inline void femap::IChart::PutvAxisTitleFontColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2741, VT_VARIANT, &_val);
}

#pragma implementation_key(7966)
inline _variant_t femap::IChart::GetvAxisLabelDecimal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2742, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7967)
inline void femap::IChart::PutvAxisLabelDecimal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2742, VT_VARIANT, &_val);
}

#pragma implementation_key(7968)
inline _variant_t femap::IChart::GetvAxisLabelFormat ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2743, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7969)
inline void femap::IChart::PutvAxisLabelFormat ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2743, VT_VARIANT, &_val);
}

#pragma implementation_key(7970)
inline _bstr_t femap::IChart::GetFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(7971)
inline void femap::IChart::PutFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2744, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(7972)
inline double femap::IChart::GetLabelFontSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7973)
inline void femap::IChart::PutLabelFontSize ( double _val ) {
    _com_dispatch_propput(this, 0x2746, VT_R8, _val);
}

#pragma implementation_key(7974)
inline double femap::IChart::GetAxisValueFontSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7975)
inline void femap::IChart::PutAxisValueFontSize ( double _val ) {
    _com_dispatch_propput(this, 0x2748, VT_R8, _val);
}

#pragma implementation_key(7976)
inline double femap::IChart::GetLegendFontSize ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7977)
inline void femap::IChart::PutLegendFontSize ( double _val ) {
    _com_dispatch_propput(this, 0x274b, VT_R8, _val);
}

#pragma implementation_key(7978)
inline _variant_t femap::IChart::GetvAxisMinorCountLog ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7979)
inline void femap::IChart::PutvAxisMinorCountLog ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274c, VT_VARIANT, &_val);
}

#pragma implementation_key(7980)
inline _variant_t femap::IChart::GetvAxisRangePad ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x274d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7981)
inline void femap::IChart::PutvAxisRangePad ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x274d, VT_VARIANT, &_val);
}

#pragma implementation_key(7982)
inline enum femap::zColor femap::IChart::GetAxisMajorColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x274e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7983)
inline void femap::IChart::PutAxisMajorColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x274e, VT_I4, _val);
}

#pragma implementation_key(7984)
inline VARIANT_BOOL femap::IChart::GetAxisMajorColorAutoDim ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7985)
inline void femap::IChart::PutAxisMajorColorAutoDim ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x274f, VT_BOOL, _val);
}

#pragma implementation_key(7986)
inline VARIANT_BOOL femap::IChart::GetScaleInherit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(7987)
inline void femap::IChart::PutScaleInherit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2750, VT_BOOL, _val);
}

#pragma implementation_key(7988)
inline double femap::IChart::GetMasterScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2751, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(7989)
inline void femap::IChart::PutMasterScale ( double _val ) {
    _com_dispatch_propput(this, 0x2751, VT_R8, _val);
}

#pragma implementation_key(7990)
inline enum femap::zChartComplexLocation femap::IChart::GetComplexPlotLocation ( ) {
    enum zChartComplexLocation _result;
    _com_dispatch_propget(this, 0x2754, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(7991)
inline void femap::IChart::PutComplexPlotLocation ( enum zChartComplexLocation _val ) {
    _com_dispatch_propput(this, 0x2754, VT_I4, _val);
}

#pragma implementation_key(7992)
inline _variant_t femap::IChart::GetvAxisAutoscale2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2755, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7993)
inline void femap::IChart::PutvAxisAutoscale2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2755, VT_VARIANT, &_val);
}

#pragma implementation_key(7994)
inline _variant_t femap::IChart::GetvAxisRange2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2756, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7995)
inline void femap::IChart::PutvAxisRange2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2756, VT_VARIANT, &_val);
}

#pragma implementation_key(7996)
inline _variant_t femap::IChart::GetvAxisRangePad2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2757, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7997)
inline void femap::IChart::PutvAxisRangePad2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2757, VT_VARIANT, &_val);
}

#pragma implementation_key(7998)
inline _variant_t femap::IChart::GetvAxisStyle2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2758, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(7999)
inline void femap::IChart::PutvAxisStyle2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2758, VT_VARIANT, &_val);
}

#pragma implementation_key(8000)
inline _variant_t femap::IChart::GetvAxisLabelFormat2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2759, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8001)
inline void femap::IChart::PutvAxisLabelFormat2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2759, VT_VARIANT, &_val);
}

#pragma implementation_key(8002)
inline _variant_t femap::IChart::GetvAxisLabelDecimal2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x275a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8003)
inline void femap::IChart::PutvAxisLabelDecimal2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x275a, VT_VARIANT, &_val);
}

#pragma implementation_key(8004)
inline int femap::IChart::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8005)
inline void femap::IChart::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8006)
inline int femap::IChart::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8007)
inline void femap::IChart::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8008)
inline int femap::IChart::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8009)
inline void femap::IChart::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IChartSeries wrapper method implementations
//

#pragma implementation_key(8010)
inline double femap::IChartSeries::GetTransformPlateVector ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8011)
inline void femap::IChartSeries::PutTransformPlateVector ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8012)
inline double femap::IChartSeries::GetTransformPlateVector2 ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8013)
inline void femap::IChartSeries::PutTransformPlateVector2 ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8014)
inline enum femap::zReturnCode femap::IChartSeries::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(8015)
inline enum femap::zReturnCode femap::IChartSeries::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(8016)
inline enum femap::zReturnCode femap::IChartSeries::GetXY ( int * numPoints, VARIANT * xyValues, VARIANT * xRange, VARIANT * yRange ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c", numPoints, xyValues, xRange, yRange);
    return _result;
}

#pragma implementation_key(8017)
inline enum femap::zReturnCode femap::IChartSeries::CopyToClipboard ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8018)
inline enum femap::zReturnCode femap::IChartSeries::GetEntityType ( int chartID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", chartID);
    return _result;
}

#pragma implementation_key(8019)
inline enum femap::zReturnCode femap::IChartSeries::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8020)
inline enum femap::zReturnCode femap::IChartSeries::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8021)
inline enum femap::zReturnCode femap::IChartSeries::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8022)
inline enum femap::zReturnCode femap::IChartSeries::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8023)
inline enum femap::zReturnCode femap::IChartSeries::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8024)
inline enum femap::zReturnCode femap::IChartSeries::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8025)
inline enum femap::zReturnCode femap::IChartSeries::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8026)
inline enum femap::zReturnCode femap::IChartSeries::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8027)
inline enum femap::zReturnCode femap::IChartSeries::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8028)
inline enum femap::zReturnCode femap::IChartSeries::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8029)
inline enum femap::zReturnCode femap::IChartSeries::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8030)
inline enum femap::zReturnCode femap::IChartSeries::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8031)
inline int femap::IChartSeries::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8032)
inline int femap::IChartSeries::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8033)
inline int femap::IChartSeries::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8034)
inline int femap::IChartSeries::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8035)
inline enum femap::zReturnCode femap::IChartSeries::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8036)
inline enum femap::zReturnCode femap::IChartSeries::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8037)
inline enum femap::zReturnCode femap::IChartSeries::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8038)
inline enum femap::zReturnCode femap::IChartSeries::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8039)
inline enum femap::zReturnCode femap::IChartSeries::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8040)
inline int femap::IChartSeries::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(8041)
inline enum femap::zReturnCode femap::IChartSeries::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8042)
inline enum femap::zReturnCode femap::IChartSeries::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8043)
inline enum femap::zReturnCode femap::IChartSeries::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8044)
inline int femap::IChartSeries::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8045)
inline enum femap::zReturnCode femap::IChartSeries::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8046)
inline enum femap::zReturnCode femap::IChartSeries::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8047)
inline _bstr_t femap::IChartSeries::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8048)
inline void femap::IChartSeries::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(8049)
inline enum femap::zChartSeriesType femap::IChartSeries::GetSeriesType ( ) {
    enum zChartSeriesType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8050)
inline void femap::IChartSeries::PutSeriesType ( enum zChartSeriesType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(8051)
inline int femap::IChartSeries::GetOutputSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8052)
inline void femap::IChartSeries::PutOutputSet ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(8053)
inline int femap::IChartSeries::GetOutputVector ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8054)
inline void femap::IChartSeries::PutOutputVector ( int _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(8055)
inline int femap::IChartSeries::GetPosition ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8056)
inline void femap::IChartSeries::PutPosition ( int _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(8057)
inline int femap::IChartSeries::GetPositionCoordSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8058)
inline void femap::IChartSeries::PutPositionCoordSys ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(8059)
inline int femap::IChartSeries::Getlocation ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8060)
inline void femap::IChartSeries::Putlocation ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(8061)
inline VARIANT_BOOL femap::IChartSeries::GetMarkerInherit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8062)
inline void femap::IChartSeries::PutMarkerInherit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BOOL, _val);
}

#pragma implementation_key(8063)
inline VARIANT_BOOL femap::IChartSeries::GetMarkerVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8064)
inline void femap::IChartSeries::PutMarkerVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BOOL, _val);
}

#pragma implementation_key(8065)
inline enum femap::zChartMarkerStyle femap::IChartSeries::GetMarkerStyle ( ) {
    enum zChartMarkerStyle _result;
    _com_dispatch_propget(this, 0x2719, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8066)
inline void femap::IChartSeries::PutMarkerStyle ( enum zChartMarkerStyle _val ) {
    _com_dispatch_propput(this, 0x2719, VT_I4, _val);
}

#pragma implementation_key(8067)
inline int femap::IChartSeries::GetMarkerSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8068)
inline void femap::IChartSeries::PutMarkerSize ( int _val ) {
    _com_dispatch_propput(this, 0x271a, VT_I4, _val);
}

#pragma implementation_key(8069)
inline VARIANT_BOOL femap::IChartSeries::GetColorInherit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8070)
inline void femap::IChartSeries::PutColorInherit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x271b, VT_BOOL, _val);
}

#pragma implementation_key(8071)
inline int femap::IChartSeries::Getcolor ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8072)
inline void femap::IChartSeries::Putcolor ( int _val ) {
    _com_dispatch_propput(this, 0x271c, VT_I4, _val);
}

#pragma implementation_key(8073)
inline int femap::IChartSeries::GetInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8074)
inline void femap::IChartSeries::PutInterval ( int _val ) {
    _com_dispatch_propput(this, 0x271d, VT_I4, _val);
}

#pragma implementation_key(8075)
inline int femap::IChartSeries::GetFunctionID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8076)
inline void femap::IChartSeries::PutFunctionID ( int _val ) {
    _com_dispatch_propput(this, 0x271e, VT_I4, _val);
}

#pragma implementation_key(8077)
inline int femap::IChartSeries::GetOutputSetEnd ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8078)
inline void femap::IChartSeries::PutOutputSetEnd ( int _val ) {
    _com_dispatch_propput(this, 0x271f, VT_I4, _val);
}

#pragma implementation_key(8079)
inline VARIANT_BOOL femap::IChartSeries::GetOutputSetAll ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8080)
inline void femap::IChartSeries::PutOutputSetAll ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2720, VT_BOOL, _val);
}

#pragma implementation_key(8081)
inline VARIANT_BOOL femap::IChartSeries::GetLabelInherit ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8082)
inline void femap::IChartSeries::PutLabelInherit ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2721, VT_BOOL, _val);
}

#pragma implementation_key(8083)
inline VARIANT_BOOL femap::IChartSeries::GetLabelVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8084)
inline void femap::IChartSeries::PutLabelVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2722, VT_BOOL, _val);
}

#pragma implementation_key(8085)
inline VARIANT_BOOL femap::IChartSeries::GetShowLabelX ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8086)
inline void femap::IChartSeries::PutShowLabelX ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2723, VT_BOOL, _val);
}

#pragma implementation_key(8087)
inline VARIANT_BOOL femap::IChartSeries::GetShowLabelY ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8088)
inline void femap::IChartSeries::PutShowLabelY ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2724, VT_BOOL, _val);
}

#pragma implementation_key(8089)
inline VARIANT_BOOL femap::IChartSeries::GetShowLabelMaxMin ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8090)
inline void femap::IChartSeries::PutShowLabelMaxMin ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2725, VT_BOOL, _val);
}

#pragma implementation_key(8091)
inline double femap::IChartSeries::GetScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8092)
inline void femap::IChartSeries::PutScale ( double _val ) {
    _com_dispatch_propput(this, 0x2726, VT_R8, _val);
}

#pragma implementation_key(8093)
inline int femap::IChartSeries::GetGroup ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8094)
inline void femap::IChartSeries::PutGroup ( int _val ) {
    _com_dispatch_propput(this, 0x2727, VT_I4, _val);
}

#pragma implementation_key(8095)
inline int femap::IChartSeries::GetOutputVector2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8096)
inline void femap::IChartSeries::PutOutputVector2 ( int _val ) {
    _com_dispatch_propput(this, 0x2728, VT_I4, _val);
}

#pragma implementation_key(8097)
inline int femap::IChartSeries::GetLocation2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8098)
inline void femap::IChartSeries::PutLocation2 ( int _val ) {
    _com_dispatch_propput(this, 0x2729, VT_I4, _val);
}

#pragma implementation_key(8099)
inline VARIANT_BOOL femap::IChartSeries::GetSortData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8100)
inline void femap::IChartSeries::PutSortData ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272a, VT_BOOL, _val);
}

#pragma implementation_key(8101)
inline VARIANT_BOOL femap::IChartSeries::GetPositionIsRelative ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8102)
inline void femap::IChartSeries::PutPositionIsRelative ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x272b, VT_BOOL, _val);
}

#pragma implementation_key(8103)
inline int femap::IChartSeries::GetStudyID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8104)
inline void femap::IChartSeries::PutStudyID ( int _val ) {
    _com_dispatch_propput(this, 0x272c, VT_I4, _val);
}

#pragma implementation_key(8105)
inline enum femap::zResultsConvert femap::IChartSeries::GetConvertMethod ( ) {
    enum zResultsConvert _result;
    _com_dispatch_propget(this, 0x272f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8106)
inline void femap::IChartSeries::PutConvertMethod ( enum zResultsConvert _val ) {
    _com_dispatch_propput(this, 0x272f, VT_I4, _val);
}

#pragma implementation_key(8107)
inline enum femap::zResultsConvert femap::IChartSeries::GetConvertMethod2 ( ) {
    enum zResultsConvert _result;
    _com_dispatch_propget(this, 0x2730, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8108)
inline void femap::IChartSeries::PutConvertMethod2 ( enum zResultsConvert _val ) {
    _com_dispatch_propput(this, 0x2730, VT_I4, _val);
}

#pragma implementation_key(8109)
inline enum femap::zOutputDestination femap::IChartSeries::GetTransformNodalMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x2734, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8110)
inline void femap::IChartSeries::PutTransformNodalMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x2734, VT_I4, _val);
}

#pragma implementation_key(8111)
inline int femap::IChartSeries::GetTransformNodalCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8112)
inline void femap::IChartSeries::PutTransformNodalCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2735, VT_I4, _val);
}

#pragma implementation_key(8113)
inline enum femap::zOutputDestination femap::IChartSeries::GetTransformPlateMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x2736, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8114)
inline void femap::IChartSeries::PutTransformPlateMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x2736, VT_I4, _val);
}

#pragma implementation_key(8115)
inline int femap::IChartSeries::GetTransformPlateCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8116)
inline void femap::IChartSeries::PutTransformPlateCSys ( int _val ) {
    _com_dispatch_propput(this, 0x2737, VT_I4, _val);
}

#pragma implementation_key(8117)
inline int femap::IChartSeries::GetTransformPlateDOF ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8118)
inline void femap::IChartSeries::PutTransformPlateDOF ( int _val ) {
    _com_dispatch_propput(this, 0x2738, VT_I4, _val);
}

#pragma implementation_key(8119)
inline _variant_t femap::IChartSeries::GetvTransformPlateVector ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2739, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8120)
inline void femap::IChartSeries::PutvTransformPlateVector ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2739, VT_VARIANT, &_val);
}

#pragma implementation_key(8121)
inline enum femap::zOutputDestination femap::IChartSeries::GetTransformSolidMode ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x273a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8122)
inline void femap::IChartSeries::PutTransformSolidMode ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x273a, VT_I4, _val);
}

#pragma implementation_key(8123)
inline int femap::IChartSeries::GetTransformSolidCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8124)
inline void femap::IChartSeries::PutTransformSolidCSys ( int _val ) {
    _com_dispatch_propput(this, 0x273b, VT_I4, _val);
}

#pragma implementation_key(8125)
inline enum femap::zOutputDestination femap::IChartSeries::GetTransformNodalMode2 ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x273d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8126)
inline void femap::IChartSeries::PutTransformNodalMode2 ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x273d, VT_I4, _val);
}

#pragma implementation_key(8127)
inline int femap::IChartSeries::GetTransformNodalCSys2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8128)
inline void femap::IChartSeries::PutTransformNodalCSys2 ( int _val ) {
    _com_dispatch_propput(this, 0x273e, VT_I4, _val);
}

#pragma implementation_key(8129)
inline enum femap::zOutputDestination femap::IChartSeries::GetTransformPlateMode2 ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x273f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8130)
inline void femap::IChartSeries::PutTransformPlateMode2 ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x273f, VT_I4, _val);
}

#pragma implementation_key(8131)
inline int femap::IChartSeries::GetTransformPlateCSys2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8132)
inline void femap::IChartSeries::PutTransformPlateCSys2 ( int _val ) {
    _com_dispatch_propput(this, 0x2740, VT_I4, _val);
}

#pragma implementation_key(8133)
inline int femap::IChartSeries::GetTransformPlateDOF2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8134)
inline void femap::IChartSeries::PutTransformPlateDOF2 ( int _val ) {
    _com_dispatch_propput(this, 0x2741, VT_I4, _val);
}

#pragma implementation_key(8135)
inline _variant_t femap::IChartSeries::GetvTransformPlateVector2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2742, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8136)
inline void femap::IChartSeries::PutvTransformPlateVector2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2742, VT_VARIANT, &_val);
}

#pragma implementation_key(8137)
inline enum femap::zOutputDestination femap::IChartSeries::GetTransformSolidMode2 ( ) {
    enum zOutputDestination _result;
    _com_dispatch_propget(this, 0x2743, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8138)
inline void femap::IChartSeries::PutTransformSolidMode2 ( enum zOutputDestination _val ) {
    _com_dispatch_propput(this, 0x2743, VT_I4, _val);
}

#pragma implementation_key(8139)
inline int femap::IChartSeries::GetTransformSolidCSys2 ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8140)
inline void femap::IChartSeries::PutTransformSolidCSys2 ( int _val ) {
    _com_dispatch_propput(this, 0x2744, VT_I4, _val);
}

#pragma implementation_key(8141)
inline enum femap::zChartSeriesComplexMethod femap::IChartSeries::GetComplexMethod ( ) {
    enum zChartSeriesComplexMethod _result;
    _com_dispatch_propget(this, 0x2745, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8142)
inline void femap::IChartSeries::PutComplexMethod ( enum zChartSeriesComplexMethod _val ) {
    _com_dispatch_propput(this, 0x2745, VT_I4, _val);
}

#pragma implementation_key(8143)
inline double femap::IChartSeries::GetComplexPhase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8144)
inline void femap::IChartSeries::PutComplexPhase ( double _val ) {
    _com_dispatch_propput(this, 0x2746, VT_R8, _val);
}

#pragma implementation_key(8145)
inline double femap::IChartSeries::GetComplexStart ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8146)
inline void femap::IChartSeries::PutComplexStart ( double _val ) {
    _com_dispatch_propput(this, 0x2747, VT_R8, _val);
}

#pragma implementation_key(8147)
inline double femap::IChartSeries::GetComplexEnd ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8148)
inline void femap::IChartSeries::PutComplexEnd ( double _val ) {
    _com_dispatch_propput(this, 0x2748, VT_R8, _val);
}

#pragma implementation_key(8149)
inline double femap::IChartSeries::GetTransformPlateTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8150)
inline void femap::IChartSeries::PutTransformPlateTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2749, VT_R8, _val);
}

#pragma implementation_key(8151)
inline double femap::IChartSeries::GetTransformPlateTolerance2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8152)
inline void femap::IChartSeries::PutTransformPlateTolerance2 ( double _val ) {
    _com_dispatch_propput(this, 0x274a, VT_R8, _val);
}

#pragma implementation_key(8153)
inline int femap::IChartSeries::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8154)
inline void femap::IChartSeries::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8155)
inline int femap::IChartSeries::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8156)
inline void femap::IChartSeries::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8157)
inline int femap::IChartSeries::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8158)
inline void femap::IChartSeries::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface ITableData wrapper method implementations
//

#pragma implementation_key(8159)
inline enum femap::zReturnCode femap::ITableData::Get ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(8160)
inline enum femap::zReturnCode femap::ITableData::Put ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(8161)
inline enum femap::zReturnCode femap::ITableData::GetFunction ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(8162)
inline enum femap::zReturnCode femap::ITableData::PutFunction ( int entID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entID);
    return _result;
}

#pragma implementation_key(8163)
inline enum femap::zReturnCode femap::ITableData::CellRange ( int * nMinRow, int * nMaxRow, int * nMinCol, int * nMaxCol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003\x4003\x4003", nMinRow, nMaxRow, nMinCol, nMaxCol);
    return _result;
}

#pragma implementation_key(8164)
inline enum femap::zReturnCode femap::ITableData::SaveToFile ( _bstr_t sFilename, VARIANT_BOOL bAppend ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)sFilename, bAppend);
    return _result;
}

#pragma implementation_key(8165)
inline enum femap::zReturnCode femap::ITableData::Initialize ( int nNumRow, int nNumCol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nNumRow, nNumCol);
    return _result;
}

#pragma implementation_key(8166)
inline enum femap::zReturnCode femap::ITableData::Resize ( int nNumRow, int nNumCol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nNumRow, nNumCol);
    return _result;
}

#pragma implementation_key(8167)
inline enum femap::zReturnCode femap::ITableData::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8168)
inline enum femap::zReturnCode femap::ITableData::SetCellDouble ( int nRow, int nCol, double dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nRow, nCol, dValue);
    return _result;
}

#pragma implementation_key(8169)
inline enum femap::zReturnCode femap::ITableData::SetCellInteger ( int nRow, int nCol, int nValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nRow, nCol, nValue);
    return _result;
}

#pragma implementation_key(8170)
inline enum femap::zReturnCode femap::ITableData::SetCellText ( int nRow, int nCol, _bstr_t sText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", nRow, nCol, (BSTR)sText);
    return _result;
}

#pragma implementation_key(8171)
inline enum femap::zReturnCode femap::ITableData::SetCellEquation ( int nRow, int nCol, _bstr_t sEqn ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", nRow, nCol, (BSTR)sEqn);
    return _result;
}

#pragma implementation_key(8172)
inline enum femap::zReturnCode femap::ITableData::SetCellEntity ( int nRow, int nCol, enum zDataType ntype, int nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nRow, nCol, ntype, nID);
    return _result;
}

#pragma implementation_key(8173)
inline enum femap::zReturnCode femap::ITableData::GetCellDouble ( int nRow, int nCol, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4005", nRow, nCol, dValue);
    return _result;
}

#pragma implementation_key(8174)
inline enum femap::zReturnCode femap::ITableData::GetCellInteger ( int nRow, int nCol, int * nValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003", nRow, nCol, nValue);
    return _result;
}

#pragma implementation_key(8175)
inline enum femap::zReturnCode femap::ITableData::GetCellText ( int nRow, int nCol, BSTR * sText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4008", nRow, nCol, sText);
    return _result;
}

#pragma implementation_key(8176)
inline enum femap::zReturnCode femap::ITableData::GetCellEntity ( int nRow, int nCol, enum zDataType * ntype, int * nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4003", nRow, nCol, ntype, nID);
    return _result;
}

#pragma implementation_key(8177)
inline enum femap::zReturnCode femap::ITableData::SetMultiCellDouble ( int nFirstRow, int nLastRow, int nFirstCol, int nLastCol, const _variant_t & dValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c", nFirstRow, nLastRow, nFirstCol, nLastCol, &dValues);
    return _result;
}

#pragma implementation_key(8178)
inline enum femap::zReturnCode femap::ITableData::SetMultiCellInteger ( int nFirstRow, int nLastRow, int nFirstCol, int nLastCol, const _variant_t & nValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c", nFirstRow, nLastRow, nFirstCol, nLastCol, &nValues);
    return _result;
}

#pragma implementation_key(8179)
inline enum femap::zReturnCode femap::ITableData::SetMultiCellText ( int nFirstRow, int nLastRow, int nFirstCol, int nLastCol, const _variant_t & sValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c", nFirstRow, nLastRow, nFirstCol, nLastCol, &sValues);
    return _result;
}

#pragma implementation_key(8180)
inline enum femap::zReturnCode femap::ITableData::GetMultiCellDouble ( int nFirstRow, int nLastRow, int nFirstCol, int nLastCol, VARIANT * dValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x400c", nFirstRow, nLastRow, nFirstCol, nLastCol, dValues);
    return _result;
}

#pragma implementation_key(8181)
inline enum femap::zReturnCode femap::ITableData::GetMultiCellInteger ( int nFirstRow, int nLastRow, int nFirstCol, int nLastCol, VARIANT * nValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x400c", nFirstRow, nLastRow, nFirstCol, nLastCol, nValues);
    return _result;
}

#pragma implementation_key(8182)
inline enum femap::zReturnCode femap::ITableData::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8183)
inline enum femap::zReturnCode femap::ITableData::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8184)
inline enum femap::zReturnCode femap::ITableData::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8185)
inline enum femap::zReturnCode femap::ITableData::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8186)
inline enum femap::zReturnCode femap::ITableData::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8187)
inline enum femap::zReturnCode femap::ITableData::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8188)
inline enum femap::zReturnCode femap::ITableData::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8189)
inline enum femap::zReturnCode femap::ITableData::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8190)
inline enum femap::zReturnCode femap::ITableData::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8191)
inline enum femap::zReturnCode femap::ITableData::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8192)
inline enum femap::zReturnCode femap::ITableData::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8193)
inline enum femap::zReturnCode femap::ITableData::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8194)
inline int femap::ITableData::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8195)
inline int femap::ITableData::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8196)
inline int femap::ITableData::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8197)
inline int femap::ITableData::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8198)
inline enum femap::zReturnCode femap::ITableData::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8199)
inline enum femap::zReturnCode femap::ITableData::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8200)
inline enum femap::zReturnCode femap::ITableData::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8201)
inline enum femap::zReturnCode femap::ITableData::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8202)
inline enum femap::zReturnCode femap::ITableData::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8203)
inline int femap::ITableData::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(8204)
inline enum femap::zReturnCode femap::ITableData::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8205)
inline enum femap::zReturnCode femap::ITableData::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8206)
inline enum femap::zReturnCode femap::ITableData::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8207)
inline int femap::ITableData::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8208)
inline enum femap::zReturnCode femap::ITableData::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8209)
inline enum femap::zReturnCode femap::ITableData::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8210)
inline _bstr_t femap::ITableData::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8211)
inline void femap::ITableData::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(8212)
inline enum femap::zTableType femap::ITableData::Gettype ( ) {
    enum zTableType _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8213)
inline void femap::ITableData::Puttype ( enum zTableType _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(8214)
inline int femap::ITableData::Getsubtype ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8215)
inline void femap::ITableData::Putsubtype ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(8216)
inline enum femap::zFunctionType femap::ITableData::GetFunctionType ( ) {
    enum zFunctionType _result;
    _com_dispatch_propget(this, 0x2713, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8217)
inline void femap::ITableData::PutFunctionType ( enum zFunctionType _val ) {
    _com_dispatch_propput(this, 0x2713, VT_I4, _val);
}

#pragma implementation_key(8218)
inline enum femap::zVectorFunctionType femap::ITableData::GetVectorFunctionType ( ) {
    enum zVectorFunctionType _result;
    _com_dispatch_propget(this, 0x2714, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8219)
inline void femap::ITableData::PutVectorFunctionType ( enum zVectorFunctionType _val ) {
    _com_dispatch_propput(this, 0x2714, VT_I4, _val);
}

#pragma implementation_key(8220)
inline int femap::ITableData::GetRows ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8221)
inline void femap::ITableData::PutRows ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(8222)
inline int femap::ITableData::GetColumns ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8223)
inline void femap::ITableData::PutColumns ( int _val ) {
    _com_dispatch_propput(this, 0x2716, VT_I4, _val);
}

#pragma implementation_key(8224)
inline int femap::ITableData::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8225)
inline void femap::ITableData::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8226)
inline int femap::ITableData::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8227)
inline void femap::ITableData::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8228)
inline int femap::ITableData::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8229)
inline void femap::ITableData::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IInterpolate wrapper method implementations
//

#pragma implementation_key(8230)
inline double femap::IInterpolate::GetAmbientVector ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8231)
inline void femap::IInterpolate::PutAmbientVector ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8232)
inline double femap::IInterpolate::GetAmbientTensor ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8233)
inline void femap::IInterpolate::PutAmbientTensor ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8234)
inline enum femap::zReturnCode femap::IInterpolate::clear ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8235)
inline enum femap::zReturnCode femap::IInterpolate::ClearResults ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8236)
inline enum femap::zReturnCode femap::IInterpolate::AddElements ( int nElemSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nElemSetID);
    return _result;
}

#pragma implementation_key(8237)
inline enum femap::zReturnCode femap::IInterpolate::AddScalar ( int nSetID, int nVecID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nSetID, nVecID);
    return _result;
}

#pragma implementation_key(8238)
inline enum femap::zReturnCode femap::IInterpolate::AddVector ( int nSetID, int nVecX, int nVecY, int nVecZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nSetID, nVecX, nVecY, nVecZ);
    return _result;
}

#pragma implementation_key(8239)
inline enum femap::zReturnCode femap::IInterpolate::AddTensor2D ( int nSetID, int nVecX, int nVecY, int nVecXY ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nSetID, nVecX, nVecY, nVecXY);
    return _result;
}

#pragma implementation_key(8240)
inline enum femap::zReturnCode femap::IInterpolate::AddTensor ( int nSetID, int nVecX, int nVecY, int nVecZ, int nVecXY, int nVecYZ, int nVecZX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0003", nSetID, nVecX, nVecY, nVecZ, nVecXY, nVecYZ, nVecZX);
    return _result;
}

#pragma implementation_key(8241)
inline enum femap::zReturnCode femap::IInterpolate::AddNodal ( int nSetID, int nX, int nY, int nZ, int nRX, int nRY, int nRZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0003", nSetID, nX, nY, nZ, nRX, nRY, nRZ);
    return _result;
}

#pragma implementation_key(8242)
inline enum femap::zReturnCode femap::IInterpolate::FindElement ( const _variant_t & vCoord, int * nElemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003", &vCoord, nElemID);
    return _result;
}

#pragma implementation_key(8243)
inline enum femap::zReturnCode femap::IInterpolate::FindScalar ( const _variant_t & vCoord, int * nElemID, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005", &vCoord, nElemID, dValue);
    return _result;
}

#pragma implementation_key(8244)
inline enum femap::zReturnCode femap::IInterpolate::FindVector ( const _variant_t & vCoord, int * nElemID, double * dX, double * dY, double * dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005\x4005\x4005", &vCoord, nElemID, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(8245)
inline enum femap::zReturnCode femap::IInterpolate::FindVectorTotal ( const _variant_t & vCoord, int * nElemID, double * dTotal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005", &vCoord, nElemID, dTotal);
    return _result;
}

#pragma implementation_key(8246)
inline enum femap::zReturnCode femap::IInterpolate::FindTensor2D ( const _variant_t & vCoord, int * nElemID, double * dX, double * dY, double * dXY ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005\x4005\x4005", &vCoord, nElemID, dX, dY, dXY);
    return _result;
}

#pragma implementation_key(8247)
inline enum femap::zReturnCode femap::IInterpolate::FindTensor ( const _variant_t & vCoord, int * nElemID, double * dX, double * dY, double * dZ, double * dXY, double * dYZ, double * dZX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005\x4005\x4005\x4005\x4005\x4005", &vCoord, nElemID, dX, dY, dZ, dXY, dYZ, dZX);
    return _result;
}

#pragma implementation_key(8248)
inline enum femap::zReturnCode femap::IInterpolate::FindInvariant ( const _variant_t & vCoord, enum zInvariantResultType nInvariantType, int * nElemID, double * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x0003\x4003\x4005", &vCoord, nInvariantType, nElemID, dValue);
    return _result;
}

#pragma implementation_key(8249)
inline enum femap::zReturnCode femap::IInterpolate::FindNodal ( const _variant_t & vCoord, int * nElemID, double * dX, double * dY, double * dZ, double * dRX, double * dRY, double * dRZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005\x4005\x4005\x4005\x4005\x4005", &vCoord, nElemID, dX, dY, dZ, dRX, dRY, dRZ);
    return _result;
}

#pragma implementation_key(8250)
inline enum femap::zReturnCode femap::IInterpolate::MultiElement ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", nNumCoord, &vCoord, nElemID);
    return _result;
}

#pragma implementation_key(8251)
inline enum femap::zReturnCode femap::IInterpolate::MultiScalar ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID, VARIANT * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c", nNumCoord, &vCoord, nElemID, dValue);
    return _result;
}

#pragma implementation_key(8252)
inline enum femap::zReturnCode femap::IInterpolate::MultiVector ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID, VARIANT * dX, VARIANT * dY, VARIANT * dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c\x400c\x400c", nNumCoord, &vCoord, nElemID, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(8253)
inline enum femap::zReturnCode femap::IInterpolate::MultiVectorTotal ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID, VARIANT * dTotal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c", nNumCoord, &vCoord, nElemID, dTotal);
    return _result;
}

#pragma implementation_key(8254)
inline enum femap::zReturnCode femap::IInterpolate::MultiTensor2D ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID, VARIANT * dX, VARIANT * dY, VARIANT * dXY ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c\x400c\x400c", nNumCoord, &vCoord, nElemID, dX, dY, dXY);
    return _result;
}

#pragma implementation_key(8255)
inline enum femap::zReturnCode femap::IInterpolate::MultiTensor ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID, VARIANT * dX, VARIANT * dY, VARIANT * dZ, VARIANT * dXY, VARIANT * dYZ, VARIANT * dZX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", nNumCoord, &vCoord, nElemID, dX, dY, dZ, dXY, dYZ, dZX);
    return _result;
}

#pragma implementation_key(8256)
inline enum femap::zReturnCode femap::IInterpolate::MultiInvariant ( int nNumCoord, const _variant_t & vCoord, enum zInvariantResultType nInvariantType, VARIANT * nElemID, VARIANT * dValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x400c\x400c", nNumCoord, &vCoord, nInvariantType, nElemID, dValue);
    return _result;
}

#pragma implementation_key(8257)
inline enum femap::zReturnCode femap::IInterpolate::MultiNodal ( int nNumCoord, const _variant_t & vCoord, VARIANT * nElemID, VARIANT * dX, VARIANT * dY, VARIANT * dZ, VARIANT * dRX, VARIANT * dRY, VARIANT * dRZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c\x400c\x400c\x400c\x400c\x400c\x400c", nNumCoord, &vCoord, nElemID, dX, dY, dZ, dRX, dRY, dRZ);
    return _result;
}

#pragma implementation_key(8258)
inline enum femap::zReturnCode femap::IInterpolate::SetNodalTransform ( enum zOutputDestination nTransformMode, int nCSysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nTransformMode, nCSysID);
    return _result;
}

#pragma implementation_key(8259)
inline enum femap::zReturnCode femap::IInterpolate::SetPlateTransform ( enum zOutputDestination nTransformMode, int nCSysID, int nDOF, const _variant_t & vAlongVector, double dToleranceAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x0005", nTransformMode, nCSysID, nDOF, &vAlongVector, dToleranceAngle);
    return _result;
}

#pragma implementation_key(8260)
inline enum femap::zReturnCode femap::IInterpolate::SetSolidTransform ( enum zOutputDestination nTransformMode, int nCSysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nTransformMode, nCSysID);
    return _result;
}

#pragma implementation_key(8261)
inline enum femap::zReturnCode femap::IInterpolate::SetOutputOrientTri3 ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(8262)
inline enum femap::zReturnCode femap::IInterpolate::SetOutputOrientTri6 ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(8263)
inline enum femap::zReturnCode femap::IInterpolate::SetOutputOrientQuad4 ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(8264)
inline enum femap::zReturnCode femap::IInterpolate::SetOutputOrientQuad8 ( int nStress, int nStrain, int nForce ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nStress, nStrain, nForce);
    return _result;
}

#pragma implementation_key(8265)
inline enum femap::zReturnCode femap::IInterpolate::SetOutputOrientSolid ( int nIsotropic, int nAnisotropic, int nHyperelastic ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nIsotropic, nAnisotropic, nHyperelastic);
    return _result;
}

#pragma implementation_key(8266)
inline enum femap::zReturnCode femap::IInterpolate::SetOutputMode ( enum zResultsConvert nConvertMode, VARIANT_BOOL bAverageCorners, VARIANT_BOOL bBreakProp, VARIANT_BOOL bBreakMatl, VARIANT_BOOL bBreakLayer, VARIANT_BOOL bBreakColor, VARIANT_BOOL bBreakGeom, double dBreakAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x0005", nConvertMode, bAverageCorners, bBreakProp, bBreakMatl, bBreakLayer, bBreakColor, bBreakGeom, dBreakAngle);
    return _result;
}

#pragma implementation_key(8267)
inline enum femap::zReturnCode femap::IInterpolate::SetGlobalPly ( int nGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nGlobalPly);
    return _result;
}

#pragma implementation_key(8268)
inline enum femap::zReturnCode femap::IInterpolate::FindVector2 ( const _variant_t & vCoord, int * nElemID, double * dX, double * dY, double * dZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4003\x4005\x4005\x4005", &vCoord, nElemID, dX, dY, dZ);
    return _result;
}

#pragma implementation_key(8269)
inline enum femap::zReturnCode femap::IInterpolate::SetComplexOptions ( VARIANT_BOOL bExpandComplex, double dComplexPhase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0005", bExpandComplex, dComplexPhase);
    return _result;
}

#pragma implementation_key(8270)
inline VARIANT_BOOL femap::IInterpolate::GetCentroidAveraging ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8271)
inline void femap::IInterpolate::PutCentroidAveraging ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BOOL, _val);
}

#pragma implementation_key(8272)
inline VARIANT_BOOL femap::IInterpolate::GetUseSolidFreeFacesOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8273)
inline void femap::IInterpolate::PutUseSolidFreeFacesOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(8274)
inline VARIANT_BOOL femap::IInterpolate::GetEngineeringShearStrain ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8275)
inline void femap::IInterpolate::PutEngineeringShearStrain ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(8276)
inline double femap::IInterpolate::GetDistanceTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8277)
inline void femap::IInterpolate::PutDistanceTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(8278)
inline double femap::IInterpolate::GetAmbientScalar ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8279)
inline void femap::IInterpolate::PutAmbientScalar ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(8280)
inline _variant_t femap::IInterpolate::GetvAmbientVector ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2715, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8281)
inline void femap::IInterpolate::PutvAmbientVector ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2715, VT_VARIANT, &_val);
}

#pragma implementation_key(8282)
inline _variant_t femap::IInterpolate::GetvAmbientTensor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2716, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8283)
inline void femap::IInterpolate::PutvAmbientTensor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2716, VT_VARIANT, &_val);
}

//
// dispinterface IBeamCalculator wrapper method implementations
//

#pragma implementation_key(8284)
inline enum femap::zReturnCode femap::IBeamCalculator::GetElementProperties ( double * dArea, double * dIzz, double * dIyy, double * dIyz, double * dfJ, double * dShearAreaY, double * dShearAreaZ, double * dWarp, double * dNeutralAxisOffsetY, double * dNeutralAxisOffsetZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", dArea, dIzz, dIyy, dIyz, dfJ, dShearAreaY, dShearAreaZ, dWarp, dNeutralAxisOffsetY, dNeutralAxisOffsetZ);
    return _result;
}

#pragma implementation_key(8285)
inline enum femap::zReturnCode femap::IBeamCalculator::GetMeshInfo ( int * nNumNode, VARIANT * dNodeYZ, int * nNumElem, VARIANT * nElemNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x4003\x400c", nNumNode, dNodeYZ, nNumElem, nElemNodes);
    return _result;
}

#pragma implementation_key(8286)
inline enum femap::zReturnCode femap::IBeamCalculator::CalculateStress ( int nOutputSetID, enum zBeamCalculatorStressComponent enStressComponent, int * pnNumNodes, VARIANT * pdCoordinates, VARIANT * pdStresses, VARIANT * pdMaxStress, VARIANT * pnMaxStressIndex, VARIANT * pdMinStress, VARIANT * pnMinIndexStress ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c", nOutputSetID, enStressComponent, pnNumNodes, pdCoordinates, pdStresses, pdMaxStress, pnMaxStressIndex, pdMinStress, pnMinIndexStress);
    return _result;
}

#pragma implementation_key(8287)
inline enum femap::zReturnCode femap::IBeamCalculator::CalculateStressFromForces ( const _variant_t & dEndAForces, const _variant_t & dEndBForces, enum zBeamCalculatorStressComponent enStressComponent, int * pnNumNodes, VARIANT * pdCoordinates, VARIANT * pdStresses, VARIANT * pdMaxStress, VARIANT * pnMaxStressInfo, VARIANT * pdMinStress, VARIANT * pnMinStressInfo ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x0003\x4003\x400c\x400c\x400c\x400c\x400c\x400c", &dEndAForces, &dEndBForces, enStressComponent, pnNumNodes, pdCoordinates, pdStresses, pdMaxStress, pnMaxStressInfo, pdMinStress, pnMinStressInfo);
    return _result;
}

#pragma implementation_key(8288)
inline enum femap::zReturnCode femap::IBeamCalculator::FindMaxMinStress ( int nOutputSetID, enum zBeamCalculatorStressComponent enStressComponent, int * nMaxSetID, enum zBeamCalculatorStressComponent * enMaxComponent, double * dMaxLocation, double * dMaxStress, int * nMinSetID, enum zBeamCalculatorStressComponent * enMinComponent, double * dMinLocation, double * dMinStress ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x4003\x4005\x4005\x4003\x4003\x4005\x4005", nOutputSetID, enStressComponent, nMaxSetID, enMaxComponent, dMaxLocation, dMaxStress, nMinSetID, enMinComponent, dMinLocation, dMinStress);
    return _result;
}

#pragma implementation_key(8289)
inline int femap::IBeamCalculator::GetElement ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8290)
inline void femap::IBeamCalculator::PutElement ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(8291)
inline double femap::IBeamCalculator::GetPosition ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8292)
inline void femap::IBeamCalculator::PutPosition ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(8293)
inline int femap::IBeamCalculator::GetMeshFactor ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8294)
inline void femap::IBeamCalculator::PutMeshFactor ( int _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(8295)
inline VARIANT_BOOL femap::IBeamCalculator::GetIncludeAxialForce ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8296)
inline void femap::IBeamCalculator::PutIncludeAxialForce ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(8297)
inline VARIANT_BOOL femap::IBeamCalculator::GetIncludeShearForceY ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8298)
inline void femap::IBeamCalculator::PutIncludeShearForceY ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(8299)
inline VARIANT_BOOL femap::IBeamCalculator::GetIncludeShearForceZ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8300)
inline void femap::IBeamCalculator::PutIncludeShearForceZ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(8301)
inline VARIANT_BOOL femap::IBeamCalculator::GetIncludeMomentY ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8302)
inline void femap::IBeamCalculator::PutIncludeMomentY ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

#pragma implementation_key(8303)
inline VARIANT_BOOL femap::IBeamCalculator::GetIncludeMomentZ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8304)
inline void femap::IBeamCalculator::PutIncludeMomentZ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2717, VT_BOOL, _val);
}

#pragma implementation_key(8305)
inline VARIANT_BOOL femap::IBeamCalculator::GetIncludeTorque ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8306)
inline void femap::IBeamCalculator::PutIncludeTorque ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2718, VT_BOOL, _val);
}

//
// dispinterface IAnalysisStudy wrapper method implementations
//

#pragma implementation_key(8307)
inline int femap::IAnalysisStudy::CountOutputSets ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8308)
inline enum femap::zReturnCode femap::IAnalysisStudy::OutputSets ( int nOutputSetSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nOutputSetSetID);
    return _result;
}

#pragma implementation_key(8309)
inline VARIANT_BOOL femap::IAnalysisStudy::HasOutputSet ( int nSetID ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_BOOL, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8310)
inline enum femap::zReturnCode femap::IAnalysisStudy::AddOutputSets ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8311)
inline enum femap::zReturnCode femap::IAnalysisStudy::RemoveOutputSets ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8312)
inline enum femap::zReturnCode femap::IAnalysisStudy::RemoveAllOutputSets ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8313)
inline enum femap::zReturnCode femap::IAnalysisStudy::Delete ( int nSetID, VARIANT_BOOL bDeleteOutput ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nSetID, bDeleteOutput);
    return _result;
}

#pragma implementation_key(8314)
inline enum femap::zReturnCode femap::IAnalysisStudy::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8315)
inline enum femap::zReturnCode femap::IAnalysisStudy::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8316)
inline enum femap::zReturnCode femap::IAnalysisStudy::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8317)
inline enum femap::zReturnCode femap::IAnalysisStudy::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8318)
inline enum femap::zReturnCode femap::IAnalysisStudy::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8319)
inline enum femap::zReturnCode femap::IAnalysisStudy::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8320)
inline enum femap::zReturnCode femap::IAnalysisStudy::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8321)
inline enum femap::zReturnCode femap::IAnalysisStudy::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8322)
inline enum femap::zReturnCode femap::IAnalysisStudy::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8323)
inline enum femap::zReturnCode femap::IAnalysisStudy::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8324)
inline enum femap::zReturnCode femap::IAnalysisStudy::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8325)
inline enum femap::zReturnCode femap::IAnalysisStudy::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8326)
inline enum femap::zReturnCode femap::IAnalysisStudy::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8327)
inline int femap::IAnalysisStudy::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8328)
inline int femap::IAnalysisStudy::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8329)
inline int femap::IAnalysisStudy::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8330)
inline int femap::IAnalysisStudy::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8331)
inline enum femap::zReturnCode femap::IAnalysisStudy::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8332)
inline enum femap::zReturnCode femap::IAnalysisStudy::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8333)
inline int femap::IAnalysisStudy::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(8334)
inline enum femap::zReturnCode femap::IAnalysisStudy::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8335)
inline enum femap::zReturnCode femap::IAnalysisStudy::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8336)
inline enum femap::zReturnCode femap::IAnalysisStudy::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8337)
inline int femap::IAnalysisStudy::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8338)
inline enum femap::zReturnCode femap::IAnalysisStudy::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8339)
inline enum femap::zReturnCode femap::IAnalysisStudy::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8340)
inline int femap::IAnalysisStudy::GetFileTime ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8341)
inline void femap::IAnalysisStudy::PutFileTime ( int _val ) {
    _com_dispatch_propput(this, 0x2710, VT_I4, _val);
}

#pragma implementation_key(8342)
inline enum femap::zAnalysisProgram femap::IAnalysisStudy::GetAnalysisProg ( ) {
    enum zAnalysisProgram _result;
    _com_dispatch_propget(this, 0x2711, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8343)
inline void femap::IAnalysisStudy::PutAnalysisProg ( enum zAnalysisProgram _val ) {
    _com_dispatch_propput(this, 0x2711, VT_I4, _val);
}

#pragma implementation_key(8344)
inline enum femap::zAnalysisType femap::IAnalysisStudy::GetAnalysisType ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x2712, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8345)
inline void femap::IAnalysisStudy::PutAnalysisType ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x2712, VT_I4, _val);
}

#pragma implementation_key(8346)
inline _bstr_t femap::IAnalysisStudy::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8347)
inline void femap::IAnalysisStudy::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(8348)
inline _bstr_t femap::IAnalysisStudy::Getnotes ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8349)
inline void femap::IAnalysisStudy::Putnotes ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(8350)
inline int femap::IAnalysisStudy::GetAnalysisSet ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8351)
inline void femap::IAnalysisStudy::PutAnalysisSet ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(8352)
inline int femap::IAnalysisStudy::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8353)
inline void femap::IAnalysisStudy::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8354)
inline int femap::IAnalysisStudy::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8355)
inline void femap::IAnalysisStudy::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8356)
inline int femap::IAnalysisStudy::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8357)
inline void femap::IAnalysisStudy::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IDrawErase wrapper method implementations
//

#pragma implementation_key(8358)
inline enum femap::zReturnCode femap::IDrawErase::ClearAll ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8359)
inline enum femap::zReturnCode femap::IDrawErase::clear ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(8360)
inline enum femap::zReturnCode femap::IDrawErase::SaveGroup ( int groupID, _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", groupID, (BSTR)title);
    return _result;
}

#pragma implementation_key(8361)
inline enum femap::zReturnCode femap::IDrawErase::LoadGroup ( int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", groupID);
    return _result;
}

#pragma implementation_key(8362)
inline enum femap::zReturnCode femap::IDrawErase::Grow ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8363)
inline enum femap::zReturnCode femap::IDrawErase::Shrink ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8364)
inline enum femap::zReturnCode femap::IDrawErase::HasErased ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8365)
inline enum femap::zReturnCode femap::IDrawErase::HasErasedType ( enum zDataType entityTYPE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entityTYPE);
    return _result;
}

#pragma implementation_key(8366)
inline enum femap::zReturnCode femap::IDrawErase::EraseSet ( enum zDataType entityTYPE, int nSetD, VARIANT_BOOL bAddToEraseList, VARIANT_BOOL bClear, VARIANT_BOOL bRedraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x000b", entityTYPE, nSetD, bAddToEraseList, bClear, bRedraw);
    return _result;
}

#pragma implementation_key(8367)
inline femap::ISetPtr femap::IDrawErase::GetErased ( enum zDataType entityTYPE ) {
    struct ISet * _result = 0;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_DISPATCH, (void*)&_result, 
        L"\x0003", entityTYPE);
    return ISetPtr(_result, false);
}

#pragma implementation_key(8368)
inline VARIANT_BOOL femap::IDrawErase::GetEnable ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8369)
inline void femap::IDrawErase::PutEnable ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BOOL, _val);
}

#pragma implementation_key(8370)
inline VARIANT_BOOL femap::IDrawErase::GetEraseMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8371)
inline void femap::IDrawErase::PutEraseMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2711, VT_BOOL, _val);
}

#pragma implementation_key(8372)
inline VARIANT_BOOL femap::IDrawErase::GetAutoSelectMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8373)
inline void femap::IDrawErase::PutAutoSelectMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2712, VT_BOOL, _val);
}

#pragma implementation_key(8374)
inline VARIANT_BOOL femap::IDrawErase::GetExclusiveDrawMode ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8375)
inline void femap::IDrawErase::PutExclusiveDrawMode ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2713, VT_BOOL, _val);
}

#pragma implementation_key(8376)
inline VARIANT_BOOL femap::IDrawErase::GetEraseGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8377)
inline void femap::IDrawErase::PutEraseGeometry ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2714, VT_BOOL, _val);
}

#pragma implementation_key(8378)
inline VARIANT_BOOL femap::IDrawErase::GetEraseMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8379)
inline void femap::IDrawErase::PutEraseMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2715, VT_BOOL, _val);
}

#pragma implementation_key(8380)
inline VARIANT_BOOL femap::IDrawErase::GetDrawModeSelectFromAll ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(8381)
inline void femap::IDrawErase::PutDrawModeSelectFromAll ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2716, VT_BOOL, _val);
}

//
// dispinterface IFreq wrapper method implementations
//

#pragma implementation_key(8382)
inline enum femap::zReturnCode femap::IFreq::AddFreq ( int NF, const _variant_t & Fi, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000b", NF, &Fi, asetID, on);
    return _result;
}

#pragma implementation_key(8383)
inline enum femap::zReturnCode femap::IFreq::AddFreq1 ( double F1, double DF, int NDF, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000b", F1, DF, NDF, asetID, on);
    return _result;
}

#pragma implementation_key(8384)
inline enum femap::zReturnCode femap::IFreq::AddFreq2 ( double F1, double F2, int NF, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000b", F1, F2, NF, asetID, on);
    return _result;
}

#pragma implementation_key(8385)
inline enum femap::zReturnCode femap::IFreq::AddFreq3 ( double F1, double F2, int NEF, VARIANT_BOOL LOG, double CLUSTER, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x000b\x0005\x0003\x000b", F1, F2, NEF, LOG, CLUSTER, asetID, on);
    return _result;
}

#pragma implementation_key(8386)
inline enum femap::zReturnCode femap::IFreq::AddFreq4 ( double F1, double F2, int NFM, double FPSD, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0005\x0003\x000b", F1, F2, NFM, FPSD, asetID, on);
    return _result;
}

#pragma implementation_key(8387)
inline enum femap::zReturnCode femap::IFreq::AddFreq5 ( double F1, double F2, int NFR, const _variant_t & FRi, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x000c\x0003\x000b", F1, F2, NFR, &FRi, asetID, on);
    return _result;
}

#pragma implementation_key(8388)
inline enum femap::zReturnCode femap::IFreq::UpdFreq ( int NF, const _variant_t & Fi, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000b", NF, &Fi, asetID, on);
    return _result;
}

#pragma implementation_key(8389)
inline enum femap::zReturnCode femap::IFreq::UpdFreq1 ( double F1, double DF, int NDF, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000b", F1, DF, NDF, asetID, on);
    return _result;
}

#pragma implementation_key(8390)
inline enum femap::zReturnCode femap::IFreq::UpdFreq2 ( double F1, double F2, int NF, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000b", F1, F2, NF, asetID, on);
    return _result;
}

#pragma implementation_key(8391)
inline enum femap::zReturnCode femap::IFreq::UpdFreq3 ( double F1, double F2, int NEF, VARIANT_BOOL LOG, double CLUSTER, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x000b\x0005\x0003\x000b", F1, F2, NEF, LOG, CLUSTER, asetID, on);
    return _result;
}

#pragma implementation_key(8392)
inline enum femap::zReturnCode femap::IFreq::UpdFreq4 ( double F1, double F2, int NFM, double FPSD, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0005\x0003\x000b", F1, F2, NFM, FPSD, asetID, on);
    return _result;
}

#pragma implementation_key(8393)
inline enum femap::zReturnCode femap::IFreq::UpdFreq5 ( double F1, double F2, int NFR, const _variant_t & FRi, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x000c\x0003\x000b", F1, F2, NFR, &FRi, asetID, on);
    return _result;
}

#pragma implementation_key(8394)
inline enum femap::zReturnCode femap::IFreq::AddFreqByFuncID ( int funcID, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", funcID, asetID, on);
    return _result;
}

#pragma implementation_key(8395)
inline enum femap::zReturnCode femap::IFreq::AddFreq5ByFuncID ( double F1, double F2, int funcID, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000b", F1, F2, funcID, asetID, on);
    return _result;
}

#pragma implementation_key(8396)
inline enum femap::zReturnCode femap::IFreq::UpdFreqByFuncID ( int funcID, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", funcID, asetID, on);
    return _result;
}

#pragma implementation_key(8397)
inline enum femap::zReturnCode femap::IFreq::UpdFreq5ByFuncID ( double F1, double F2, int funcID, int asetID, VARIANT_BOOL on ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000b", F1, F2, funcID, asetID, on);
    return _result;
}

#pragma implementation_key(8398)
inline enum femap::zReturnCode femap::IFreq::AllOn ( int asetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e84, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", asetID);
    return _result;
}

#pragma implementation_key(8399)
inline enum femap::zReturnCode femap::IFreq::AllOff ( int asetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e85, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", asetID);
    return _result;
}

#pragma implementation_key(8400)
inline enum femap::zReturnCode femap::IFreq::TurnOn ( int asetID, int freqID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e86, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", asetID, freqID);
    return _result;
}

#pragma implementation_key(8401)
inline enum femap::zReturnCode femap::IFreq::TurnOff ( int asetID, int freqID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e87, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", asetID, freqID);
    return _result;
}

#pragma implementation_key(8402)
inline enum femap::zReturnCode femap::IFreq::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8403)
inline enum femap::zReturnCode femap::IFreq::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8404)
inline enum femap::zReturnCode femap::IFreq::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8405)
inline enum femap::zReturnCode femap::IFreq::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8406)
inline enum femap::zReturnCode femap::IFreq::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8407)
inline enum femap::zReturnCode femap::IFreq::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8408)
inline enum femap::zReturnCode femap::IFreq::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8409)
inline enum femap::zReturnCode femap::IFreq::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8410)
inline enum femap::zReturnCode femap::IFreq::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8411)
inline enum femap::zReturnCode femap::IFreq::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8412)
inline enum femap::zReturnCode femap::IFreq::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8413)
inline enum femap::zReturnCode femap::IFreq::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8414)
inline enum femap::zReturnCode femap::IFreq::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8415)
inline int femap::IFreq::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8416)
inline int femap::IFreq::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8417)
inline int femap::IFreq::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8418)
inline int femap::IFreq::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8419)
inline enum femap::zReturnCode femap::IFreq::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8420)
inline enum femap::zReturnCode femap::IFreq::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8421)
inline int femap::IFreq::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(8422)
inline enum femap::zReturnCode femap::IFreq::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8423)
inline enum femap::zReturnCode femap::IFreq::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8424)
inline enum femap::zReturnCode femap::IFreq::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8425)
inline int femap::IFreq::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8426)
inline enum femap::zReturnCode femap::IFreq::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8427)
inline enum femap::zReturnCode femap::IFreq::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8428)
inline double femap::IFreq::GetF1 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8429)
inline void femap::IFreq::PutF1 ( double _val ) {
    _com_dispatch_propput(this, 0x2710, VT_R8, _val);
}

#pragma implementation_key(8430)
inline double femap::IFreq::GetF2 ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8431)
inline void femap::IFreq::PutF2 ( double _val ) {
    _com_dispatch_propput(this, 0x2711, VT_R8, _val);
}

#pragma implementation_key(8432)
inline double femap::IFreq::GetDF ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8433)
inline void femap::IFreq::PutDF ( double _val ) {
    _com_dispatch_propput(this, 0x2712, VT_R8, _val);
}

#pragma implementation_key(8434)
inline double femap::IFreq::GetFSPD ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8435)
inline void femap::IFreq::PutFSPD ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(8436)
inline double femap::IFreq::GetCLUSTER ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8437)
inline void femap::IFreq::PutCLUSTER ( double _val ) {
    _com_dispatch_propput(this, 0x2714, VT_R8, _val);
}

#pragma implementation_key(8438)
inline int femap::IFreq::GetNF ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8439)
inline void femap::IFreq::PutNF ( int _val ) {
    _com_dispatch_propput(this, 0x2715, VT_I4, _val);
}

#pragma implementation_key(8440)
inline unsigned char femap::IFreq::GetLOG ( ) {
    unsigned char _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_UI1, (void*)&_result);
    return _result;
}

#pragma implementation_key(8441)
inline void femap::IFreq::PutLOG ( unsigned char _val ) {
    _com_dispatch_propput(this, 0x2716, VT_UI1, _val);
}

#pragma implementation_key(8442)
inline enum femap::zFreqType femap::IFreq::Gettype ( ) {
    enum zFreqType _result;
    _com_dispatch_propget(this, 0x2717, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8443)
inline void femap::IFreq::Puttype ( enum zFreqType _val ) {
    _com_dispatch_propput(this, 0x2717, VT_I4, _val);
}

#pragma implementation_key(8444)
inline int femap::IFreq::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8445)
inline void femap::IFreq::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8446)
inline int femap::IFreq::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8447)
inline void femap::IFreq::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8448)
inline int femap::IFreq::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8449)
inline void femap::IFreq::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IMidFaceCentroidModel wrapper method implementations
//

#pragma implementation_key(8450)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::KeepNodes ( VARIANT_BOOL qKeepNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qKeepNodes);
    return _result;
}

#pragma implementation_key(8451)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetCentroidNodeColor ( int iColor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iColor);
    return _result;
}

#pragma implementation_key(8452)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetFaceNodeColor ( int iColor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iColor);
    return _result;
}

#pragma implementation_key(8453)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetNodeStartIDs ( int iFirstFaceNodeID, int iFirstCentroidNodeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", iFirstFaceNodeID, iFirstCentroidNodeID);
    return _result;
}

#pragma implementation_key(8454)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetLoadAndConstraintSet ( int ILoadSet, int IBCSet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", ILoadSet, IBCSet);
    return _result;
}

#pragma implementation_key(8455)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetMappingTria6 ( int iDefaultMapping, int iGroupTri6, int iGroupTri7 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", iDefaultMapping, iGroupTri6, iGroupTri7);
    return _result;
}

#pragma implementation_key(8456)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetMappingQuad8 ( int iDefaultMapping, int iGroupQuad8, int iGroupQuad9 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", iDefaultMapping, iGroupQuad8, iGroupQuad9);
    return _result;
}

#pragma implementation_key(8457)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetMappingTetra10 ( int iDefaultMapping, int iGroupTet10, int iGroupTet14, int iGroupTet15 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", iDefaultMapping, iGroupTet10, iGroupTet14, iGroupTet15);
    return _result;
}

#pragma implementation_key(8458)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetMappingWedge15 ( int iDefaultMapping, int iGroupWedge15, int iGroupWedge20, int iGroupWedge21 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", iDefaultMapping, iGroupWedge15, iGroupWedge20, iGroupWedge21);
    return _result;
}

#pragma implementation_key(8459)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetMappingBrick20 ( int iDefaultMapping, int iGroupHex20, int iGroupHex26, int iGroupHex27 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", iDefaultMapping, iGroupHex20, iGroupHex26, iGroupHex27);
    return _result;
}

#pragma implementation_key(8460)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetMappingPyramid13 ( int iDefaultMapping, int iGroupPyramid14, int iGroupPyramid18, int iGroupPyramid19 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", iDefaultMapping, iGroupPyramid14, iGroupPyramid18, iGroupPyramid19);
    return _result;
}

#pragma implementation_key(8461)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowTri_3 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8462)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowTri_6 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8463)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowTri_7 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8464)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowQuad_4 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8465)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowQuad_8 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8466)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowQuad_9 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8467)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowTet_4 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8468)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::Show_Tet_10 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8469)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowTet_14 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8470)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowTet_15 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8471)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowWedge_6 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8472)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowWedge_15 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8473)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowWedge_20 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8474)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowWedge_21 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8475)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowPyramid_5 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8476)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowPyramid_14 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8477)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowPyramid_18 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8478)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowPyramid_19 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8479)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowHex_8 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8480)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowHex_20 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8481)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowHex_26 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8482)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::ShowHex_27 ( VARIANT_BOOL qNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qNodes);
    return _result;
}

#pragma implementation_key(8483)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::GenerateMidFaceCentroidNodes ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8484)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::WriteNeutralFile ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8485)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::Rotate ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8486)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetTitle ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8487)
inline enum femap::zReturnCode femap::IMidFaceCentroidModel::SetPointGroup ( int IGroup ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", IGroup);
    return _result;
}

//
// dispinterface IUserDefinedGraphics wrapper method implementations
//

#pragma implementation_key(8488)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SetView ( int iViewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iViewID);
    return _result;
}

#pragma implementation_key(8489)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::GetView ( int * piViewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", piViewID);
    return _result;
}

#pragma implementation_key(8490)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SetName ( _bstr_t pName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)pName);
    return _result;
}

#pragma implementation_key(8491)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::Publish ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8492)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::Blank ( VARIANT_BOOL qBlanked ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", qBlanked);
    return _result;
}

#pragma implementation_key(8493)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorPoints ( _bstr_t pName, int nAppearances, double dDepthOffset, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x4003", (BSTR)pName, nAppearances, dDepthOffset, piCollectorID);
    return _result;
}

#pragma implementation_key(8494)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorBitmap ( _bstr_t pName, int nAppearances, int iBitmapID, double dXOffset, double dYOffset, double dDepthOffset, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0005\x0005\x0005\x4003", (BSTR)pName, nAppearances, iBitmapID, dXOffset, dYOffset, dDepthOffset, piCollectorID);
    return _result;
}

#pragma implementation_key(8495)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorSymbol ( _bstr_t pName, int nAppearances, int iSymbolID, VARIANT_BOOL qScreenScale, double dScreenScale, double dDepthOffset, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x000b\x0005\x0005\x4003", (BSTR)pName, nAppearances, iSymbolID, qScreenScale, dScreenScale, dDepthOffset, piCollectorID);
    return _result;
}

#pragma implementation_key(8496)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorSymbolREAL8 ( _bstr_t pName, int nAppearances, int iSymbolID, VARIANT_BOOL qScreenScale, double dMaxScale, double dMinScale, double dXOffset, double dYOffset, double dZOffset, double dDepthOffset, _bstr_t pFormat, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x000b\x0005\x0005\x0005\x0005\x0005\x0005\x0008\x4003", (BSTR)pName, nAppearances, iSymbolID, qScreenScale, dMaxScale, dMinScale, dXOffset, dYOffset, dZOffset, dDepthOffset, (BSTR)pFormat, piCollectorID);
    return _result;
}

#pragma implementation_key(8497)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorText ( _bstr_t pName, int nAppearances, double dXOffset, double dYOffset, double dZOffset, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005\x0005\x4003", (BSTR)pName, nAppearances, dXOffset, dYOffset, dZOffset, piCollectorID);
    return _result;
}

#pragma implementation_key(8498)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorTextINT4 ( _bstr_t pName, int nAppearances, double dXOffset, double dYOffset, double dZOffset, _bstr_t pFormat, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005\x0005\x0008\x4003", (BSTR)pName, nAppearances, dXOffset, dYOffset, dZOffset, (BSTR)pFormat, piCollectorID);
    return _result;
}

#pragma implementation_key(8499)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorTextREAL8 ( _bstr_t pName, int nAppearances, double dXOffset, double dYOffset, double dZOffset, _bstr_t pFormat, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x0005\x0005\x0008\x4003", (BSTR)pName, nAppearances, dXOffset, dYOffset, dZOffset, (BSTR)pFormat, piCollectorID);
    return _result;
}

#pragma implementation_key(8500)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorLines ( _bstr_t pName, int nAppearances, double dDepthOffset, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x4003", (BSTR)pName, nAppearances, dDepthOffset, piCollectorID);
    return _result;
}

#pragma implementation_key(8501)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorTriangles ( _bstr_t pName, int nAppearances, double dDepthOffset, int * piCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0005\x4003", (BSTR)pName, nAppearances, dDepthOffset, piCollectorID);
    return _result;
}

#pragma implementation_key(8502)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorBlank ( int iCollectorID, VARIANT_BOOL qBlanked ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", iCollectorID, qBlanked);
    return _result;
}

#pragma implementation_key(8503)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorLabels ( int iCollectorID, VARIANT_BOOL qLabels ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", iCollectorID, qLabels);
    return _result;
}

#pragma implementation_key(8504)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorMarkForDeletion ( int iCollectorID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iCollectorID);
    return _result;
}

#pragma implementation_key(8505)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAppearance ( int iCollectorID, int iAppearanceID, const _variant_t & dColor1, const _variant_t & dColor2, double dLineWidth, int iLineStyle, int iFillPattern, VARIANT_BOOL qLighting, int iCullMode, int iFont, double dPointSize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x0003\x0003\x000b\x0003\x0003\x0005", iCollectorID, iAppearanceID, &dColor1, &dColor2, dLineWidth, iLineStyle, iFillPattern, qLighting, iCullMode, iFont, dPointSize);
    return _result;
}

#pragma implementation_key(8506)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddPointLocations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints);
    return _result;
}

#pragma implementation_key(8507)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddPointEntityLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs);
    return _result;
}

#pragma implementation_key(8508)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddPointEntityFaceLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piFaceIDs);
    return _result;
}

#pragma implementation_key(8509)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolLocations ( int iCollectorID, int iAppearanceID, int nSymbols, const _variant_t & pdPoints, const _variant_t & pfDirections, const _variant_t & pdOrthogonals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c\x000c", iCollectorID, iAppearanceID, nSymbols, &pdPoints, &pfDirections, &pdOrthogonals);
    return _result;
}

#pragma implementation_key(8510)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolEntityLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & pdDirections, const _variant_t & pdOrthogonals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &pdDirections, &pdOrthogonals);
    return _result;
}

#pragma implementation_key(8511)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolEntityFaceLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & pdDirections, const _variant_t & pdOrthogonals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &pdDirections, &pdOrthogonals);
    return _result;
}

#pragma implementation_key(8512)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolEntityFaceNormalLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & pdOrthogonals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &pdOrthogonals);
    return _result;
}

#pragma implementation_key(8513)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolREAL8Locations ( int iCollectorID, int iSymbolAppearanceID, int iLabelAppearanceID, int nSymbols, const _variant_t & pdPoints, const _variant_t & pfDirections, const _variant_t & pdOrthogonals, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x000c", iCollectorID, iSymbolAppearanceID, iLabelAppearanceID, nSymbols, &pdPoints, &pfDirections, &pdOrthogonals, &pdValues);
    return _result;
}

#pragma implementation_key(8514)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolREAL8EntityLocations ( int iCollectorID, int iSymbolAppearanceID, int iLabelAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & pdDirections, const _variant_t & pdOrthogonals, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x000c", iCollectorID, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, &piIDs, &pdDirections, &pdOrthogonals, &pdValues);
    return _result;
}

#pragma implementation_key(8515)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolREAL8EntityFaceLocations ( int iCollectorID, int iSymbolAppearanceID, int iLabelAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & pdDirections, const _variant_t & pdOrthogonals, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x000c\x000c", iCollectorID, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &pdDirections, &pdOrthogonals, &pdValues);
    return _result;
}

#pragma implementation_key(8516)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddSymbolREAL8EntityFaceNormalLocations ( int iCollectorID, int iSymbolAppearanceID, int iLabelAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & pdOrthogonals, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x000c", iCollectorID, iSymbolAppearanceID, iLabelAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &pdOrthogonals, &pdValues);
    return _result;
}

#pragma implementation_key(8517)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextLocations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints, const _variant_t & ppText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints, &ppText);
    return _result;
}

#pragma implementation_key(8518)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextEntityLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & ppText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &ppText);
    return _result;
}

#pragma implementation_key(8519)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextEntityFaceLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & ppText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &ppText);
    return _result;
}

#pragma implementation_key(8520)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextINT4Locations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints, const _variant_t & piValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints, &piValues);
    return _result;
}

#pragma implementation_key(8521)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextINT4EntityLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piValues);
    return _result;
}

#pragma implementation_key(8522)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextINT4EntityFaceLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & piValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &piValues);
    return _result;
}

#pragma implementation_key(8523)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextREAL8Locations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints, &pdValues);
    return _result;
}

#pragma implementation_key(8524)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextREAL8EntityLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &pdValues);
    return _result;
}

#pragma implementation_key(8525)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTextREAL8EntityFaceLocations ( int iCollectorID, int iAppearanceID, enum zDataType eType, int nIDs, const _variant_t & piIDs, const _variant_t & piFaceIDs, const _variant_t & pdValues ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c", iCollectorID, iAppearanceID, eType, nIDs, &piIDs, &piFaceIDs, &pdValues);
    return _result;
}

#pragma implementation_key(8526)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddLineLocations ( int iCollectorID, int iAppearanceID, int nLines, const _variant_t & pdPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", iCollectorID, iAppearanceID, nLines, &pdPoints);
    return _result;
}

#pragma implementation_key(8527)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddPolyLineLocations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints);
    return _result;
}

#pragma implementation_key(8528)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddMeshLineLocations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints, int nLines, const _variant_t & piLines ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x0003\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints, nLines, &piLines);
    return _result;
}

#pragma implementation_key(8529)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddTriangleLocations ( int iCollectorID, int iAppearanceID, int nTriangles, const _variant_t & pdPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", iCollectorID, iAppearanceID, nTriangles, &pdPoints);
    return _result;
}

#pragma implementation_key(8530)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddMeshTriangleLocations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints, int nTriangles, const _variant_t & piTriangles ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x0003\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints, nTriangles, &piTriangles);
    return _result;
}

#pragma implementation_key(8531)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::CollectorAddMeshTriangleNormalLocations ( int iCollectorID, int iAppearanceID, int nPoints, const _variant_t & pdPoints, const _variant_t & pdNormals, int nTriangles, const _variant_t & piTriangles ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c\x0003\x000c", iCollectorID, iAppearanceID, nPoints, &pdPoints, &pdNormals, nTriangles, &piTriangles);
    return _result;
}

#pragma implementation_key(8532)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::BitmapCreate ( int iWidth, int iHeight, const _variant_t & pqBits, int * piBitmapID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x4003", iWidth, iHeight, &pqBits, piBitmapID);
    return _result;
}

#pragma implementation_key(8533)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::BitmapMarkForDeletion ( int iBitmapID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iBitmapID);
    return _result;
}

#pragma implementation_key(8534)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolCreate ( int nAppearances, const _variant_t & dLabelLocation, VARIANT_BOOL qScreenOrient, int * piSymbolID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000b\x4003", nAppearances, &dLabelLocation, qScreenOrient, piSymbolID);
    return _result;
}

#pragma implementation_key(8535)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolMarkForDeletion ( int iSymbolID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iSymbolID);
    return _result;
}

#pragma implementation_key(8536)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolSetAddInScreen ( int iSymbolID, int iInScreenMode ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", iSymbolID, iInScreenMode);
    return _result;
}

#pragma implementation_key(8537)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddPoints ( int iSymbolID, int iAppearanceOffset, int nPoints, const _variant_t & pdPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", iSymbolID, iAppearanceOffset, nPoints, &pdPoints);
    return _result;
}

#pragma implementation_key(8538)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLineStraight ( int iSymbolID, int iAppearanceOffset, const _variant_t & dPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", iSymbolID, iAppearanceOffset, &dPoints);
    return _result;
}

#pragma implementation_key(8539)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLinePoly ( int iSymbolID, int iAppearanceOffset, int nPoints, const _variant_t & pdPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", iSymbolID, iAppearanceOffset, nPoints, &pdPoints);
    return _result;
}

#pragma implementation_key(8540)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLineCircle ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dNormal, int nDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dNormal, nDividers);
    return _result;
}

#pragma implementation_key(8541)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLineBrick ( int iSymbolID, int iAppearanceOffset, const _variant_t & dPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", iSymbolID, iAppearanceOffset, &dPoints);
    return _result;
}

#pragma implementation_key(8542)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLineCylinder ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dDirection, double dHeight, int nDividers, int nSubDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0003\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dDirection, dHeight, nDividers, nSubDividers);
    return _result;
}

#pragma implementation_key(8543)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLineCone ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dDirection, double dHeight, int nDividers, int nSubDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0003\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dDirection, dHeight, nDividers, nSubDividers);
    return _result;
}

#pragma implementation_key(8544)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddLineSphere ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnEquator, const _variant_t & dDirection, double dAngle, int nLongDividers, int nLongSubDividers, int nLatDividers, int nLatSubDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e58, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0003\x0003\x0003\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnEquator, &dDirection, dAngle, nLongDividers, nLongSubDividers, nLatDividers, nLatSubDividers);
    return _result;
}

#pragma implementation_key(8545)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillTriangle ( int iSymbolID, int iAppearanceOffset, const _variant_t & dPoints, const _variant_t & dNormals ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", iSymbolID, iAppearanceOffset, &dPoints, &dNormals);
    return _result;
}

#pragma implementation_key(8546)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillCircle ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dNormal, int nDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dNormal, nDividers);
    return _result;
}

#pragma implementation_key(8547)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillBrick ( int iSymbolID, int iAppearanceOffset, const _variant_t & dPoints, VARIANT_BOOL qEndCap ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000b", iSymbolID, iAppearanceOffset, &dPoints, qEndCap);
    return _result;
}

#pragma implementation_key(8548)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillCylinder ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dDirection, double dHeight, int nDividers, int nSubDividers, VARIANT_BOOL qEndCap ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0003\x0003\x000b", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dDirection, dHeight, nDividers, nSubDividers, qEndCap);
    return _result;
}

#pragma implementation_key(8549)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillCone ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dDirection, double dHeight, int nDividers, int nSubDividers, VARIANT_BOOL qEndCap ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0003\x0003\x000b", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dDirection, dHeight, nDividers, nSubDividers, qEndCap);
    return _result;
}

#pragma implementation_key(8550)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillTubeBrick ( int iSymbolID, int iAppearanceOffset, const _variant_t & dOuterPoints, const _variant_t & dInnerPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", iSymbolID, iAppearanceOffset, &dOuterPoints, &dInnerPoints);
    return _result;
}

#pragma implementation_key(8551)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillTubeCylinder ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnCircle, const _variant_t & dDirection, double dHeight, double dInnerProportion, int nDividers, int nSubDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0005\x0003\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnCircle, &dDirection, dHeight, dInnerProportion, nDividers, nSubDividers);
    return _result;
}

#pragma implementation_key(8552)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::SymbolAddFillSphere ( int iSymbolID, int iAppearanceOffset, const _variant_t & dCenter, const _variant_t & dPointOnEquator, const _variant_t & dDirection, double dAngle, int nLongDividers, int nLongSubDividers, int nLatDividers, int nLatSubDividers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0005\x0003\x0003\x0003\x0003", iSymbolID, iAppearanceOffset, &dCenter, &dPointOnEquator, &dDirection, dAngle, nLongDividers, nLongSubDividers, nLatDividers, nLatSubDividers);
    return _result;
}

#pragma implementation_key(8553)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::Detach ( _bstr_t pDetachedName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)pDetachedName);
    return _result;
}

#pragma implementation_key(8554)
inline enum femap::zReturnCode femap::IUserDefinedGraphics::Attach ( _bstr_t pDetachedName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)pDetachedName);
    return _result;
}

//
// dispinterface IVector wrapper method implementations
//

#pragma implementation_key(8555)
inline double femap::IVector::Getbase ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8556)
inline void femap::IVector::Putbase ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8557)
inline double femap::IVector::Getdir ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8558)
inline void femap::IVector::Putdir ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8559)
inline enum femap::zReturnCode femap::IVector::PutAll ( int ID, _bstr_t sTitle, const _variant_t & vBase, const _variant_t & vDir, double dLen ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000c\x000c\x0005", ID, (BSTR)sTitle, &vBase, &vDir, dLen);
    return _result;
}

#pragma implementation_key(8560)
inline enum femap::zReturnCode femap::IVector::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8561)
inline enum femap::zReturnCode femap::IVector::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8562)
inline enum femap::zReturnCode femap::IVector::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8563)
inline enum femap::zReturnCode femap::IVector::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8564)
inline enum femap::zReturnCode femap::IVector::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8565)
inline enum femap::zReturnCode femap::IVector::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8566)
inline enum femap::zReturnCode femap::IVector::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8567)
inline enum femap::zReturnCode femap::IVector::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8568)
inline enum femap::zReturnCode femap::IVector::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8569)
inline enum femap::zReturnCode femap::IVector::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8570)
inline enum femap::zReturnCode femap::IVector::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8571)
inline enum femap::zReturnCode femap::IVector::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8572)
inline enum femap::zReturnCode femap::IVector::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8573)
inline enum femap::zReturnCode femap::IVector::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8574)
inline int femap::IVector::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8575)
inline int femap::IVector::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8576)
inline int femap::IVector::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8577)
inline int femap::IVector::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8578)
inline enum femap::zReturnCode femap::IVector::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8579)
inline enum femap::zReturnCode femap::IVector::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8580)
inline enum femap::zReturnCode femap::IVector::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8581)
inline enum femap::zReturnCode femap::IVector::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8582)
inline enum femap::zReturnCode femap::IVector::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8583)
inline int femap::IVector::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(8584)
inline enum femap::zReturnCode femap::IVector::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8585)
inline enum femap::zReturnCode femap::IVector::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8586)
inline enum femap::zReturnCode femap::IVector::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8587)
inline int femap::IVector::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8588)
inline enum femap::zReturnCode femap::IVector::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8589)
inline enum femap::zReturnCode femap::IVector::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8590)
inline _bstr_t femap::IVector::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8591)
inline void femap::IVector::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(8592)
inline _variant_t femap::IVector::GetvBase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2711, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8593)
inline void femap::IVector::PutvBase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2711, VT_VARIANT, &_val);
}

#pragma implementation_key(8594)
inline _variant_t femap::IVector::GetvDir ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2712, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8595)
inline void femap::IVector::PutvDir ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2712, VT_VARIANT, &_val);
}

#pragma implementation_key(8596)
inline double femap::IVector::GetLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(8597)
inline void femap::IVector::PutLength ( double _val ) {
    _com_dispatch_propput(this, 0x2713, VT_R8, _val);
}

#pragma implementation_key(8598)
inline int femap::IVector::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8599)
inline void femap::IVector::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8600)
inline int femap::IVector::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8601)
inline void femap::IVector::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8602)
inline int femap::IVector::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8603)
inline void femap::IVector::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface IPlane wrapper method implementations
//

#pragma implementation_key(8604)
inline double femap::IPlane::Getbase ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8605)
inline void femap::IPlane::Putbase ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8606)
inline double femap::IPlane::Getnorm ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8607)
inline void femap::IPlane::Putnorm ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8608)
inline double femap::IPlane::GetAxis ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8609)
inline void femap::IPlane::PutAxis ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8610)
inline enum femap::zReturnCode femap::IPlane::PutAll ( int ID, _bstr_t sTitle, const _variant_t & vBase, const _variant_t & vNorm, const _variant_t & vAxis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000c\x000c\x000c", ID, (BSTR)sTitle, &vBase, &vNorm, &vAxis);
    return _result;
}

#pragma implementation_key(8611)
inline enum femap::zReturnCode femap::IPlane::NextSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7148, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8612)
inline enum femap::zReturnCode femap::IPlane::PrevSet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7149, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8613)
inline enum femap::zReturnCode femap::IPlane::NextEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8614)
inline enum femap::zReturnCode femap::IPlane::PrevEmptySet ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8615)
inline enum femap::zReturnCode femap::IPlane::Get ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8616)
inline enum femap::zReturnCode femap::IPlane::Put ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8617)
inline enum femap::zReturnCode femap::IPlane::Exist ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8618)
inline enum femap::zReturnCode femap::IPlane::Deletable ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x714f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8619)
inline enum femap::zReturnCode femap::IPlane::Delete ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7150, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8620)
inline enum femap::zReturnCode femap::IPlane::Reset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7151, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8621)
inline enum femap::zReturnCode femap::IPlane::Next ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7152, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8622)
inline enum femap::zReturnCode femap::IPlane::Prev ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7153, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8623)
inline enum femap::zReturnCode femap::IPlane::First ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7154, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8624)
inline enum femap::zReturnCode femap::IPlane::Last ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7155, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8625)
inline int femap::IPlane::NextID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7156, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8626)
inline int femap::IPlane::PrevID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7157, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8627)
inline int femap::IPlane::NextEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7158, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8628)
inline int femap::IPlane::PrevEmptyID ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7159, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8629)
inline enum femap::zReturnCode femap::IPlane::GetLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8630)
inline enum femap::zReturnCode femap::IPlane::PutLibrary ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8631)
inline enum femap::zReturnCode femap::IPlane::DeleteLibrary ( int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ID);
    return _result;
}

#pragma implementation_key(8632)
inline enum femap::zReturnCode femap::IPlane::GetTitleList ( int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4003\x400c\x400c", minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8633)
inline enum femap::zReturnCode femap::IPlane::GetTitleIDList ( VARIANT_BOOL bIncludeID, int minID, int maxID, int * Count, VARIANT * listID, VARIANT * listTITLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x715e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x4003\x400c\x400c", bIncludeID, minID, maxID, Count, listID, listTITLE);
    return _result;
}

#pragma implementation_key(8634)
inline int femap::IPlane::ParseTitleID ( _bstr_t sTitleIDStr ) {
    int _result = 0;
    _com_dispatch_method(this, 0x715f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitleIDStr);
    return _result;
}

#pragma implementation_key(8635)
inline enum femap::zReturnCode femap::IPlane::SelectID ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7160, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8636)
inline enum femap::zReturnCode femap::IPlane::NextInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7161, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8637)
inline enum femap::zReturnCode femap::IPlane::FirstInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7162, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8638)
inline int femap::IPlane::CountSet ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x7163, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8639)
inline enum femap::zReturnCode femap::IPlane::NextExistingInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7164, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(8640)
inline enum femap::zReturnCode femap::IPlane::SelectIDWithNew ( _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x7165, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(8641)
inline _bstr_t femap::IPlane::Gettitle ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(8642)
inline void femap::IPlane::Puttitle ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2710, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(8643)
inline _variant_t femap::IPlane::GetvBase ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2711, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8644)
inline void femap::IPlane::PutvBase ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2711, VT_VARIANT, &_val);
}

#pragma implementation_key(8645)
inline _variant_t femap::IPlane::GetvNorm ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2712, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8646)
inline void femap::IPlane::PutvNorm ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2712, VT_VARIANT, &_val);
}

#pragma implementation_key(8647)
inline _variant_t femap::IPlane::GetvAxis ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2713, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(8648)
inline void femap::IPlane::PutvAxis ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2713, VT_VARIANT, &_val);
}

#pragma implementation_key(8649)
inline int femap::IPlane::GetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4268, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8650)
inline void femap::IPlane::PutID ( int _val ) {
    _com_dispatch_propput(this, 0x4268, VT_I4, _val);
}

#pragma implementation_key(8651)
inline int femap::IPlane::GetsetID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x4269, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8652)
inline void femap::IPlane::PutsetID ( int _val ) {
    _com_dispatch_propput(this, 0x4269, VT_I4, _val);
}

#pragma implementation_key(8653)
inline int femap::IPlane::GetActive ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x426a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(8654)
inline void femap::IPlane::PutActive ( int _val ) {
    _com_dispatch_propput(this, 0x426a, VT_I4, _val);
}

//
// dispinterface Imodel wrapper method implementations
//

#pragma implementation_key(8655)
inline double femap::Imodel::GetPref_AngleDimetric ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8656)
inline void femap::Imodel::PutPref_AngleDimetric ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4650, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8657)
inline double femap::Imodel::GetPref_AngleIsometric ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8658)
inline void femap::Imodel::PutPref_AngleIsometric ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4651, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8659)
inline double femap::Imodel::GetPref_AngleTrimetric ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8660)
inline void femap::Imodel::PutPref_AngleTrimetric ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4652, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8661)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderRotate ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8662)
inline void femap::Imodel::PutPref_RenderRotate ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4653, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(8663)
inline VARIANT_BOOL femap::Imodel::GetInfo_PermBC ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8664)
inline void femap::Imodel::PutInfo_PermBC ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4654, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(8665)
inline VARIANT_BOOL femap::Imodel::GetInfo_WorkplaneRuler ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8666)
inline void femap::Imodel::PutInfo_WorkplaneRuler ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4655, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(8667)
inline int femap::Imodel::GetInfo_MaxID ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8668)
inline void femap::Imodel::PutInfo_MaxID ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4656, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8669)
inline int femap::Imodel::GetInfo_MinID ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8670)
inline void femap::Imodel::PutInfo_MinID ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4657, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8671)
inline int femap::Imodel::GetInfo_Count ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8672)
inline void femap::Imodel::PutInfo_Count ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4658, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8673)
inline int femap::Imodel::GetInfo_ElemFormulation1 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8674)
inline void femap::Imodel::PutInfo_ElemFormulation1 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4659, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8675)
inline int femap::Imodel::GetInfo_ElemFormulation2 ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8676)
inline void femap::Imodel::PutInfo_ElemFormulation2 ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x465a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8677)
inline double femap::Imodel::GetInfo_WorkplaneOrigin ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8678)
inline void femap::Imodel::PutInfo_WorkplaneOrigin ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8679)
inline double femap::Imodel::GetInfo_WorkplaneX ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8680)
inline void femap::Imodel::PutInfo_WorkplaneX ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8681)
inline double femap::Imodel::GetInfo_WorkplaneY ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8682)
inline void femap::Imodel::PutInfo_WorkplaneY ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8683)
inline double femap::Imodel::GetInfo_WorkplaneZ ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8684)
inline void femap::Imodel::PutInfo_WorkplaneZ ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8685)
inline double femap::Imodel::GetInfo_WorkplanePrevOrigin ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8686)
inline void femap::Imodel::PutInfo_WorkplanePrevOrigin ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x465f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8687)
inline double femap::Imodel::GetInfo_WorkplanePrevX ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8688)
inline void femap::Imodel::PutInfo_WorkplanePrevX ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4660, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8689)
inline double femap::Imodel::GetInfo_WorkplanePrevY ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4661, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8690)
inline void femap::Imodel::PutInfo_WorkplanePrevY ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4661, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8691)
inline double femap::Imodel::GetInfo_WorkplanePrevZ ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4662, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8692)
inline void femap::Imodel::PutInfo_WorkplanePrevZ ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4662, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8693)
inline double femap::Imodel::GetInfo_SnapSpacing ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4663, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8694)
inline void femap::Imodel::PutInfo_SnapSpacing ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4663, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8695)
inline double femap::Imodel::GetInfo_WorkplaneSizeX ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4664, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8696)
inline void femap::Imodel::PutInfo_WorkplaneSizeX ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4664, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8697)
inline double femap::Imodel::GetInfo_WorkplaneSizeY ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4665, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8698)
inline void femap::Imodel::PutInfo_WorkplaneSizeY ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4665, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8699)
inline double femap::Imodel::GetInfo_MatlAngleVec ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4666, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8700)
inline void femap::Imodel::PutInfo_MatlAngleVec ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4666, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8701)
inline int femap::Imodel::GetTool_CursorXYZ ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8702)
inline void femap::Imodel::PutTool_CursorXYZ ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4667, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8703)
inline double femap::Imodel::GetInfo_ModelSizeX ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8704)
inline void femap::Imodel::PutInfo_ModelSizeX ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4668, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8705)
inline double femap::Imodel::GetInfo_ModelSizeY ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8706)
inline void femap::Imodel::PutInfo_ModelSizeY ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4669, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8707)
inline double femap::Imodel::GetInfo_ModelSizeZ ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8708)
inline void femap::Imodel::PutInfo_ModelSizeZ ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x466a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8709)
inline enum femap::zColor femap::Imodel::GetPref_EntityColor ( int nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8710)
inline void femap::Imodel::PutPref_EntityColor ( int nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x466b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8711)
inline int femap::Imodel::GetInfo_Increment ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x466e, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8712)
inline void femap::Imodel::PutInfo_Increment ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x466e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8713)
inline int femap::Imodel::GetInfo_NextID ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x466f, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8714)
inline void femap::Imodel::PutInfo_NextID ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x466f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8715)
inline int femap::Imodel::GetInfo_ActiveID ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4670, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8716)
inline void femap::Imodel::PutInfo_ActiveID ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4670, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8717)
inline int femap::Imodel::GetInfo_ActiveType ( enum zDataType nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4671, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8718)
inline void femap::Imodel::PutInfo_ActiveType ( enum zDataType nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4671, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8719)
inline enum femap::zColor femap::Imodel::GetInfo_Color ( enum zDataType nVectorIndex ) {
    enum zColor _result;
    _com_dispatch_method(this, 0x4672, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8720)
inline void femap::Imodel::PutInfo_Color ( enum zDataType nVectorIndex, enum zColor _arg2 ) {
    _com_dispatch_method(this, 0x4672, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8721)
inline int femap::Imodel::GetInfo_SurfDivisionsLinear ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4673, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8722)
inline void femap::Imodel::PutInfo_SurfDivisionsLinear ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4673, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8723)
inline int femap::Imodel::GetInfo_SurfDivisionsCurved ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4674, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8724)
inline void femap::Imodel::PutInfo_SurfDivisionsCurved ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4674, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8725)
inline VARIANT_BOOL femap::Imodel::GetPref_NasQstOn ( int nVectorIndex ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_method(this, 0x4676, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8726)
inline void femap::Imodel::PutPref_NasQstOn ( int nVectorIndex, VARIANT_BOOL _arg2 ) {
    _com_dispatch_method(this, 0x4676, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x000b", nVectorIndex, _arg2);
}

#pragma implementation_key(8727)
inline int femap::Imodel::GetPref_NasQstVal ( int nVectorIndex ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4677, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8728)
inline void femap::Imodel::PutPref_NasQstVal ( int nVectorIndex, int _arg2 ) {
    _com_dispatch_method(this, 0x4677, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8729)
inline double femap::Imodel::GetPref_SpaceballFactors ( int nVectorIndex ) {
    double _result = 0;
    _com_dispatch_method(this, 0x4678, DISPATCH_PROPERTYGET, VT_R8, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8730)
inline void femap::Imodel::PutPref_SpaceballFactors ( int nVectorIndex, double _arg2 ) {
    _com_dispatch_method(this, 0x4678, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0005", nVectorIndex, _arg2);
}

#pragma implementation_key(8731)
inline unsigned char femap::Imodel::GetPref_FBDefContributions ( enum zFbdContribution nVectorIndex ) {
    unsigned char _result = 0;
    _com_dispatch_method(this, 0x4679, DISPATCH_PROPERTYGET, VT_UI1, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8732)
inline void femap::Imodel::PutPref_FBDefContributions ( enum zFbdContribution nVectorIndex, unsigned char _arg2 ) {
    _com_dispatch_method(this, 0x4679, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0011", nVectorIndex, _arg2);
}

#pragma implementation_key(8733)
inline enum femap::zFbdVecMode femap::Imodel::GetPref_FBDefNodalVectorMode ( int nVectorIndex ) {
    enum zFbdVecMode _result;
    _com_dispatch_method(this, 0x467a, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8734)
inline void femap::Imodel::PutPref_FBDefNodalVectorMode ( int nVectorIndex, enum zFbdVecMode _arg2 ) {
    _com_dispatch_method(this, 0x467a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8735)
inline enum femap::zFbdVecMode femap::Imodel::GetPref_FBDefTotalVectorMode ( int nVectorIndex ) {
    enum zFbdVecMode _result;
    _com_dispatch_method(this, 0x467b, DISPATCH_PROPERTYGET, VT_I4, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8736)
inline void femap::Imodel::PutPref_FBDefTotalVectorMode ( int nVectorIndex, enum zFbdVecMode _arg2 ) {
    _com_dispatch_method(this, 0x467b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0003", nVectorIndex, _arg2);
}

#pragma implementation_key(8737)
inline unsigned char femap::Imodel::GetPref_FBDefComponents ( enum zFbdComponent nVectorIndex ) {
    unsigned char _result = 0;
    _com_dispatch_method(this, 0x467c, DISPATCH_PROPERTYGET, VT_UI1, (void*)&_result, 
        L"\x0003", nVectorIndex);
    return _result;
}

#pragma implementation_key(8738)
inline void femap::Imodel::PutPref_FBDefComponents ( enum zFbdComponent nVectorIndex, unsigned char _arg2 ) {
    _com_dispatch_method(this, 0x467c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, 
        L"\x0003\x0011", nVectorIndex, _arg2);
}

#pragma implementation_key(8739)
inline enum femap::zReturnCode femap::Imodel::feUnlockApiOnly ( int nCode ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nCode);
    return _result;
}

#pragma implementation_key(8740)
inline enum femap::zReturnCode femap::Imodel::feAppBringToTop ( VARIANT_BOOL toTop, int underWindow ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", toTop, underWindow);
    return _result;
}

#pragma implementation_key(8741)
inline enum femap::zReturnCode femap::Imodel::feAppPosition ( VARIANT_BOOL move, VARIANT_BOOL Size, double x, double y, double cx, double cy ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0005\x0005\x0005\x0005", move, Size, x, y, cx, cy);
    return _result;
}

#pragma implementation_key(8742)
inline enum femap::zReturnCode femap::Imodel::feAppShowWindow ( VARIANT_BOOL maximize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e22, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", maximize);
    return _result;
}

#pragma implementation_key(8743)
inline enum femap::zReturnCode femap::Imodel::feAppStatusRedraw ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e23, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8744)
inline enum femap::zReturnCode femap::Imodel::feAppStatusShow ( VARIANT_BOOL Enable, int max_status ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", Enable, max_status);
    return _result;
}

#pragma implementation_key(8745)
inline enum femap::zReturnCode femap::Imodel::feAppStatusUpdate ( int current_status ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", current_status);
    return _result;
}

#pragma implementation_key(8746)
inline enum femap::zReturnCode femap::Imodel::feAppRegisterAddIn ( VARIANT_BOOL regster, int windowID, int messageID, VARIANT_BOOL tile, int location ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000b\x0003", regster, windowID, messageID, tile, location);
    return _result;
}

#pragma implementation_key(8747)
inline enum femap::zReturnCode femap::Imodel::feAppMessage ( enum zMessageColor color, _bstr_t message ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", color, (BSTR)message);
    return _result;
}

#pragma implementation_key(8748)
inline int femap::Imodel::feAppLock ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e28, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8749)
inline int femap::Imodel::feAppUnlock ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e29, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8750)
inline enum femap::zReturnCode femap::Imodel::feFileNew ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8751)
inline enum femap::zReturnCode femap::Imodel::feFileOpen ( VARIANT_BOOL useDlg, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008", useDlg, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8752)
inline enum femap::zReturnCode femap::Imodel::feFileSaveAs ( VARIANT_BOOL useDlg, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008", useDlg, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8753)
inline enum femap::zReturnCode femap::Imodel::feFileSave ( VARIANT_BOOL useDlg ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", useDlg);
    return _result;
}

#pragma implementation_key(8754)
inline enum femap::zReturnCode femap::Imodel::feFileExit ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8755)
inline enum femap::zReturnCode femap::Imodel::feFileTimedSave ( VARIANT_BOOL useDlg, VARIANT_BOOL saving, VARIANT_BOOL notify, int Interval, int commands ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x0003\x0003", useDlg, saving, notify, Interval, commands);
    return _result;
}

#pragma implementation_key(8756)
inline enum femap::zReturnCode femap::Imodel::feFileReadDxf ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL read_TEXT, VARIANT_BOOL read_3DFACE, VARIANT_BOOL read_BLOCKS, VARIANT_BOOL read_POLYELEM, VARIANT_BOOL read_TRACE_boundary, VARIANT_BOOL read_TRACE_centerline, VARIANT_BOOL read_LAYER, int first_layer, VARIANT_BOOL merge_points, double merge_distance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0003\x000b\x0005", useDlg, (BSTR)fName, read_TEXT, read_3DFACE, read_BLOCKS, read_POLYELEM, read_TRACE_boundary, read_TRACE_centerline, read_LAYER, first_layer, merge_points, merge_distance);
    return _result;
}

#pragma implementation_key(8757)
inline enum femap::zReturnCode femap::Imodel::feFileReadAcisOpt ( VARIANT_BOOL useDlg, _bstr_t fName, _bstr_t title, int layer, enum zColor color, VARIANT_BOOL increment_layer, VARIANT_BOOL increment_color, VARIANT_BOOL assign_color, VARIANT_BOOL convert_to_splines, VARIANT_BOOL convert_format, VARIANT_BOOL clean, VARIANT_BOOL heal, VARIANT_BOOL check, VARIANT_BOOL stringent, VARIANT_BOOL delete_invalid, VARIANT_BOOL faces, double Scale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0008\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0005", useDlg, (BSTR)fName, (BSTR)title, layer, color, increment_layer, increment_color, assign_color, convert_to_splines, convert_format, clean, heal, check, stringent, delete_invalid, faces, Scale);
    return _result;
}

#pragma implementation_key(8758)
inline enum femap::zReturnCode femap::Imodel::feFileReadAcis ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8759)
inline enum femap::zReturnCode femap::Imodel::feFileReadParasolidOpt ( VARIANT_BOOL useDlg, _bstr_t fName, _bstr_t title, int layer, enum zColor color, VARIANT_BOOL increment_layer, VARIANT_BOOL increment_color, VARIANT_BOOL assign_color, VARIANT_BOOL convert_format, VARIANT_BOOL clean, VARIANT_BOOL heal, VARIANT_BOOL check, VARIANT_BOOL stringent, VARIANT_BOOL delete_invalid, VARIANT_BOOL faces, double Scale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0008\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0005", useDlg, (BSTR)fName, (BSTR)title, layer, color, increment_layer, increment_color, assign_color, convert_format, clean, heal, check, stringent, delete_invalid, faces, Scale);
    return _result;
}

#pragma implementation_key(8760)
inline enum femap::zReturnCode femap::Imodel::feFileReadParasolid ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8761)
inline enum femap::zReturnCode femap::Imodel::feFileReadStep ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8762)
inline enum femap::zReturnCode femap::Imodel::feFileReadCatia ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL rdAnalytical, VARIANT_BOOL rdTopology, VARIANT_BOOL rdCurves, VARIANT_BOOL stitch, VARIANT_BOOL heal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x000b", useDlg, (BSTR)fName, rdAnalytical, rdTopology, rdCurves, stitch, heal);
    return _result;
}

#pragma implementation_key(8763)
inline enum femap::zReturnCode femap::Imodel::feFileReadUg ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL rdBlanked, VARIANT_BOOL rdLayers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b", useDlg, (BSTR)fName, rdBlanked, rdLayers);
    return _result;
}

#pragma implementation_key(8764)
inline enum femap::zReturnCode femap::Imodel::feFileReadCatiaV5 ( VARIANT_BOOL useDlg, _bstr_t fName, _bstr_t fPath, VARIANT_BOOL rdNoShow, VARIANT_BOOL rdInactiveLayers, VARIANT_BOOL rdPoints, VARIANT_BOOL rdCurves, VARIANT_BOOL rdSurfaces, VARIANT_BOOL rdBodies, VARIANT_BOOL simplify ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b", useDlg, (BSTR)fName, (BSTR)fPath, rdNoShow, rdInactiveLayers, rdPoints, rdCurves, rdSurfaces, rdBodies, simplify);
    return _result;
}

#pragma implementation_key(8765)
inline enum femap::zReturnCode femap::Imodel::feFileReadProe ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8766)
inline enum femap::zReturnCode femap::Imodel::feFileReadSolidEdge ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8767)
inline enum femap::zReturnCode femap::Imodel::feFileReadIdeas ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8768)
inline enum femap::zReturnCode femap::Imodel::feFileReadStl ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL skip_short_edges, VARIANT_BOOL merge_nodes, VARIANT_BOOL close_gaps, VARIANT_BOOL PATRAN_file, double min_distance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x0005", useDlg, (BSTR)fName, skip_short_edges, merge_nodes, close_gaps, PATRAN_file, min_distance);
    return _result;
}

#pragma implementation_key(8769)
inline enum femap::zReturnCode femap::Imodel::feFileReadIgesAdv ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL read_curves, VARIANT_BOOL read_untrimmed_surfaces, VARIANT_BOOL read_trimmed_surfaces, VARIANT_BOOL read_solids, int flavor, int trim_curve_option ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x0003\x0003", useDlg, (BSTR)fName, read_curves, read_untrimmed_surfaces, read_trimmed_surfaces, read_solids, flavor, trim_curve_option);
    return _result;
}

#pragma implementation_key(8770)
inline enum femap::zReturnCode femap::Imodel::feFileReadIges ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL merge_points, VARIANT_BOOL read_LAYER, VARIANT_BOOL read_geom_only, VARIANT_BOOL read_surface_data, int trim_preference, double min_resolution ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x0003\x0005", useDlg, (BSTR)fName, merge_points, read_LAYER, read_geom_only, read_surface_data, trim_preference, min_resolution);
    return _result;
}

#pragma implementation_key(8771)
inline enum femap::zReturnCode femap::Imodel::feFileWriteParasolid ( VARIANT_BOOL useDlg, _bstr_t fName, double version, int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0005\x0003", useDlg, (BSTR)fName, version, solidSET);
    return _result;
}

#pragma implementation_key(8772)
inline enum femap::zReturnCode femap::Imodel::feFileWriteAcis ( VARIANT_BOOL useDlg, _bstr_t fName, double version, int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0005\x0003", useDlg, (BSTR)fName, version, solidSET);
    return _result;
}

#pragma implementation_key(8773)
inline enum femap::zReturnCode femap::Imodel::feFileWriteStl ( _bstr_t fName, int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)fName, elemSET);
    return _result;
}

#pragma implementation_key(8774)
inline enum femap::zReturnCode femap::Imodel::feFileWriteVrml ( _bstr_t fName, double version, VARIANT_BOOL write_solid, VARIANT_BOOL single_color, VARIANT_BOOL write_deformed, VARIANT_BOOL write_contour, VARIANT_BOOL write_background, enum zColor background_color, enum zColor color, int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x000b\x000b\x000b\x000b\x000b\x0003\x0003\x0003", (BSTR)fName, version, write_solid, single_color, write_deformed, write_contour, write_background, background_color, color, solidSET);
    return _result;
}

#pragma implementation_key(8775)
inline enum femap::zReturnCode femap::Imodel::feFileWriteStep ( _bstr_t fName, int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)fName, solidSET);
    return _result;
}

#pragma implementation_key(8776)
inline enum femap::zReturnCode femap::Imodel::feFileWriteIges ( _bstr_t fName, VARIANT_BOOL spline_curves, VARIANT_BOOL spline_surfaces, VARIANT_BOOL bounded_surfaces, int customization, int surface_options, int export_as, int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x000b\x000b\x0003\x0003\x0003\x0003", (BSTR)fName, spline_curves, spline_surfaces, bounded_surfaces, customization, surface_options, export_as, solidSET);
    return _result;
}

#pragma implementation_key(8777)
inline enum femap::zReturnCode femap::Imodel::feFileReadNastran ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8778)
inline enum femap::zReturnCode femap::Imodel::feFileReadAnsys ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8779)
inline enum femap::zReturnCode femap::Imodel::feFileReadAbaqus ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8780)
inline enum femap::zReturnCode femap::Imodel::feFileReadDyna ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8781)
inline enum femap::zReturnCode femap::Imodel::feFileReadMarc ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8782)
inline enum femap::zReturnCode femap::Imodel::feFileWriteNastran ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8783)
inline enum femap::zReturnCode femap::Imodel::feFileWriteAnsys ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8784)
inline enum femap::zReturnCode femap::Imodel::feFileWriteAbaqus ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8785)
inline enum femap::zReturnCode femap::Imodel::feFileWriteDyna ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8786)
inline enum femap::zReturnCode femap::Imodel::feFileWriteMarc ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8787)
inline enum femap::zReturnCode femap::Imodel::feFileWriteNeutral ( int brand, _bstr_t fName, VARIANT_BOOL write_geometry_model, VARIANT_BOOL write_analysis_model, VARIANT_BOOL write_output, VARIANT_BOOL write_addl_info, VARIANT_BOOL expand_geometric, VARIANT_BOOL minimize_size, int digits, double version, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x0003\x0005\x0003", brand, (BSTR)fName, write_geometry_model, write_analysis_model, write_output, write_addl_info, expand_geometric, minimize_size, digits, version, groupID);
    return _result;
}

#pragma implementation_key(8788)
inline enum femap::zReturnCode femap::Imodel::feFileReadNeutral ( int brand, _bstr_t fName, VARIANT_BOOL read_geometry, VARIANT_BOOL read_model, VARIANT_BOOL read_output, VARIANT_BOOL status_messages, int offsetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b\x000b\x000b\x000b\x0003", brand, (BSTR)fName, read_geometry, read_model, read_output, status_messages, offsetID);
    return _result;
}

#pragma implementation_key(8789)
inline enum femap::zReturnCode femap::Imodel::feFileReadNastranResults ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8790)
inline enum femap::zReturnCode femap::Imodel::feFileReadAnsysResults ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8791)
inline enum femap::zReturnCode femap::Imodel::feFileReadAbaqusResults ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8792)
inline enum femap::zReturnCode femap::Imodel::feFileReadDynaResults ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8793)
inline enum femap::zReturnCode femap::Imodel::feFileReadMarcResults ( int brand, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", brand, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8794)
inline enum femap::zReturnCode femap::Imodel::feFilePageSetupSave ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e57, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8795)
inline enum femap::zReturnCode femap::Imodel::feFilePageSetupReset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e58, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8796)
inline enum femap::zReturnCode femap::Imodel::feFilePrint ( VARIANT_BOOL useDlg, VARIANT_BOOL asBitmap, enum zPrintSource source, _bstr_t fromFile, _bstr_t toFile ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x0008\x0008", useDlg, asBitmap, source, (BSTR)fromFile, (BSTR)toFile);
    return _result;
}

#pragma implementation_key(8797)
inline enum femap::zReturnCode femap::Imodel::feFilePictureCopy ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5a, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8798)
inline enum femap::zReturnCode femap::Imodel::feFilePictureSave ( VARIANT_BOOL useDlg, VARIANT_BOOL saveDesktop, enum zPictFormat format, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x0008", useDlg, saveDesktop, format, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8799)
inline enum femap::zReturnCode femap::Imodel::feFilePictureReplay ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(8800)
inline enum femap::zReturnCode femap::Imodel::feFileMessageCopy ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8801)
inline enum femap::zReturnCode femap::Imodel::feFileMessageSave ( VARIANT_BOOL useDlg, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008", useDlg, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8802)
inline enum femap::zReturnCode femap::Imodel::feFileMessageSelect ( int firstLine, int lastLine ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", firstLine, lastLine);
    return _result;
}

#pragma implementation_key(8803)
inline enum femap::zReturnCode femap::Imodel::feFileProgramRun ( VARIANT_BOOL useDlg, VARIANT_BOOL init, VARIANT_BOOL isFile, _bstr_t buff ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x0008", useDlg, init, isFile, (BSTR)buff);
    return _result;
}

#pragma implementation_key(8804)
inline enum femap::zReturnCode femap::Imodel::feFileMessageLineNumber ( int * CurrentLine ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", CurrentLine);
    return _result;
}

#pragma implementation_key(8805)
inline enum femap::zReturnCode femap::Imodel::feFilePictureSave2 ( VARIANT_BOOL useDlg, enum zPictRegion saveRegion, enum zPictFormat format, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x0008", useDlg, saveRegion, format, (BSTR)fName);
    return _result;
}

#pragma implementation_key(8806)
inline enum femap::zReturnCode femap::Imodel::feFileRebuild ( VARIANT_BOOL useDlg, VARIANT_BOOL fullRebuild ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e63, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b", useDlg, fullRebuild);
    return _result;
}

#pragma implementation_key(8807)
inline enum femap::zReturnCode femap::Imodel::feFilePreferencesSave ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e64, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8808)
inline enum femap::zReturnCode femap::Imodel::feFilePreferencesReset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e65, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8809)
inline enum femap::zReturnCode femap::Imodel::feFileGetName ( _bstr_t title, _bstr_t filterName, _bstr_t filterStr, VARIANT_BOOL openForRead, BSTR * fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e66, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x000b\x4008", (BSTR)title, (BSTR)filterName, (BSTR)filterStr, openForRead, fName);
    return _result;
}

#pragma implementation_key(8810)
inline enum femap::zReturnCode femap::Imodel::feFileExecute ( _bstr_t cmdline, VARIANT_BOOL waitForCompletion ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e67, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)cmdline, waitForCompletion);
    return _result;
}

#pragma implementation_key(8811)
inline enum femap::zReturnCode femap::Imodel::feNotesGet ( int noteSET, BSTR * notes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e68, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4008", noteSET, notes);
    return _result;
}

#pragma implementation_key(8812)
inline enum femap::zReturnCode femap::Imodel::feNotesPut ( int noteSET, VARIANT_BOOL clear, _bstr_t notes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e69, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0008", noteSET, clear, (BSTR)notes);
    return _result;
}

#pragma implementation_key(8813)
inline enum femap::zReturnCode femap::Imodel::feFilePictureCopy2 ( enum zPictRegion saveRegion ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", saveRegion);
    return _result;
}

#pragma implementation_key(8814)
inline enum femap::zReturnCode femap::Imodel::feToolUnitConvertFactors ( const _variant_t & baseMult, const _variant_t & baseAdd, VARIANT * factorMult, VARIANT * factorAdd ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x400c\x400c", &baseMult, &baseAdd, factorMult, factorAdd);
    return _result;
}

#pragma implementation_key(8815)
inline enum femap::zReturnCode femap::Imodel::feToolUnitConvert ( const _variant_t & baseMult, const _variant_t & baseAdd, const _variant_t & factorMult, const _variant_t & factorAdd ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c", &baseMult, &baseAdd, &factorMult, &factorAdd);
    return _result;
}

#pragma implementation_key(8816)
inline enum femap::zReturnCode femap::Imodel::feVarPut ( _bstr_t varname, VARIANT_BOOL evalEqn, VARIANT_BOOL setConst, double varvalue, _bstr_t vareqn ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x000b\x0005\x0008", (BSTR)varname, evalEqn, setConst, varvalue, (BSTR)vareqn);
    return _result;
}

#pragma implementation_key(8817)
inline enum femap::zReturnCode femap::Imodel::feVarGet ( _bstr_t varname, double * varvalue, BSTR * vareqn ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005\x4008", (BSTR)varname, varvalue, vareqn);
    return _result;
}

#pragma implementation_key(8818)
inline enum femap::zReturnCode femap::Imodel::feVarEval ( _bstr_t vareqn, double * varvalue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e6f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)vareqn, varvalue);
    return _result;
}

#pragma implementation_key(8819)
inline enum femap::zReturnCode femap::Imodel::feLayerPut ( int layID, enum zColor layColor, _bstr_t layTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e70, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", layID, layColor, (BSTR)layTitle);
    return _result;
}

#pragma implementation_key(8820)
inline enum femap::zReturnCode femap::Imodel::feLayerGet ( int layID, enum zColor * layColor, BSTR * layTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e71, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4008", layID, layColor, layTitle);
    return _result;
}

#pragma implementation_key(8821)
inline enum femap::zReturnCode femap::Imodel::feTextPut ( int textID, VARIANT_BOOL DrawPointer, VARIANT_BOOL DrawBorder, VARIANT_BOOL modelPos, int horzJust, int vertJust, int visView, int layer, int fontID, enum zColor BackColor, enum zColor bordColor, enum zColor textColor, const _variant_t & textLoc, const _variant_t & pointerLoc, _bstr_t tText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e72, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x0008", textID, DrawPointer, DrawBorder, modelPos, horzJust, vertJust, visView, layer, fontID, BackColor, bordColor, textColor, &textLoc, &pointerLoc, (BSTR)tText);
    return _result;
}

#pragma implementation_key(8822)
inline enum femap::zReturnCode femap::Imodel::feTextGet ( int textID, VARIANT_BOOL * DrawPointer, VARIANT_BOOL * DrawBorder, VARIANT_BOOL * modelPos, int * horzJust, int * vertJust, int * visView, int * layer, int * fontID, enum zColor * BackColor, enum zColor * bordColor, enum zColor * textColor, VARIANT * textLoc, VARIANT * pointerLoc, BSTR * text ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e73, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400b\x400b\x400b\x4003\x4003\x4003\x4003\x4003\x4003\x4003\x4003\x400c\x400c\x4008", textID, DrawPointer, DrawBorder, modelPos, horzJust, vertJust, visView, layer, fontID, BackColor, bordColor, textColor, textLoc, pointerLoc, text);
    return _result;
}

#pragma implementation_key(8823)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistance ( const _variant_t & p1, const _variant_t & p2, double * dist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e74, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x4005", &p1, &p2, dist);
    return _result;
}

#pragma implementation_key(8824)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistanceToPlane ( const _variant_t & p1, const _variant_t & planePt, const _variant_t & planeNorm, double * dist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e75, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x4005", &p1, &planePt, &planeNorm, dist);
    return _result;
}

#pragma implementation_key(8825)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistanceBetweenLines ( const _variant_t & pA1, const _variant_t & pA2, const _variant_t & pB1, const _variant_t & pB2, double * dist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e76, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x4005", &pA1, &pA2, &pB1, &pB2, dist);
    return _result;
}

#pragma implementation_key(8826)
inline enum femap::zReturnCode femap::Imodel::feMeasureAngle ( const _variant_t & center, const _variant_t & p1, const _variant_t & p2, double * angle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e77, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x4005", &center, &p1, &p2, angle);
    return _result;
}

#pragma implementation_key(8827)
inline enum femap::zReturnCode femap::Imodel::feMeasureCurve ( int curveSET, double * totalLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e78, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", curveSET, totalLength);
    return _result;
}

#pragma implementation_key(8828)
inline enum femap::zReturnCode femap::Imodel::feMeasureSurfaceArea ( int surfaceSET, double * totalArea ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e79, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005", surfaceSET, totalArea);
    return _result;
}

#pragma implementation_key(8829)
inline enum femap::zReturnCode femap::Imodel::feMeasureSolidMassProp ( int solidID, double * Area, double * volume, VARIANT * cg, VARIANT * Inertia ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x400c\x400c", solidID, Area, volume, cg, Inertia);
    return _result;
}

#pragma implementation_key(8830)
inline enum femap::zReturnCode femap::Imodel::feMeasureMeshMassProp ( int elemSET, int csysID, VARIANT_BOOL printResults, VARIANT_BOOL printDetails, double * len, double * Area, double * volume, double * structMass, double * nonstructMass, double * totalMass, VARIANT * structCG, VARIANT * nonstructCG, VARIANT * totalCG, VARIANT * Inertia, VARIANT * inertiaCG ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x4005\x4005\x4005\x4005\x4005\x4005\x400c\x400c\x400c\x400c\x400c", elemSET, csysID, printResults, printDetails, len, Area, volume, structMass, nonstructMass, totalMass, structCG, nonstructCG, totalCG, Inertia, inertiaCG);
    return _result;
}

#pragma implementation_key(8831)
inline enum femap::zReturnCode femap::Imodel::feMeasureSurfSectionProp ( int surfID, const _variant_t & vecBASE, const _variant_t & vecDIR, VARIANT * sectProp ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x400c", surfID, &vecBASE, &vecDIR, sectProp);
    return _result;
}

#pragma implementation_key(8832)
inline enum femap::zReturnCode femap::Imodel::feMeasureMeshSectionProp ( int elemSET, const _variant_t & vecBASE, const _variant_t & vecDIR, VARIANT * sectProp ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x400c", elemSET, &vecBASE, &vecDIR, sectProp);
    return _result;
}

#pragma implementation_key(8833)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentNode ( int keepSET, int mergeSET, double tolerance, VARIANT_BOOL merge, VARIANT_BOOL messages, int * coinCount, VARIANT * coinNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x000b\x000b\x4003\x400c", keepSET, mergeSET, tolerance, merge, messages, coinCount, coinNodes);
    return _result;
}

#pragma implementation_key(8834)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentPoint ( int keepSET, int mergeSET, double tolerance, VARIANT_BOOL merge, VARIANT_BOOL messages, int * coinCount, VARIANT * coinPoints ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e7f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x000b\x000b\x4003\x400c", keepSET, mergeSET, tolerance, merge, messages, coinCount, coinPoints);
    return _result;
}

#pragma implementation_key(8835)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentCurve ( int curveSET, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e80, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", curveSET, tolerance);
    return _result;
}

#pragma implementation_key(8836)
inline enum femap::zReturnCode femap::Imodel::feCheckPlanarNodes ( int nodeSET, VARIANT_BOOL messages, VARIANT_BOOL Project, double tolerance, VARIANT_BOOL askPlane, const _variant_t & planeBase, const _variant_t & planeNormal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e81, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x0005\x000b\x000c\x000c", nodeSET, messages, Project, tolerance, askPlane, &planeBase, &planeNormal);
    return _result;
}

#pragma implementation_key(8837)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentElem ( int elemSET, VARIANT_BOOL chkTYPE, VARIANT_BOOL chkSHAPE, VARIANT_BOOL chkMASS, VARIANT_BOOL doLIST, VARIANT_BOOL makeGROUP1, VARIANT_BOOL makeGROUP2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e82, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000b\x000b\x000b", elemSET, chkTYPE, chkSHAPE, chkMASS, doLIST, makeGROUP1, makeGROUP2);
    return _result;
}

#pragma implementation_key(8838)
inline enum femap::zReturnCode femap::Imodel::feCheckElemFixup ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e83, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(8839)
inline enum femap::zReturnCode femap::Imodel::feCheckElemDistortion ( int elemSET, VARIANT_BOOL doLIST, VARIANT_BOOL makeGROUP, VARIANT_BOOL chkASPECT, VARIANT_BOOL chkTAPER, VARIANT_BOOL chkANGLE, VARIANT_BOOL chkWARP, VARIANT_BOOL chkNasWARP, VARIANT_BOOL chkALTTAPER, VARIANT_BOOL chkTET, VARIANT_BOOL chkJDet, VARIANT_BOOL chkComb, double maxASPECT, double maxTAPER, double maxANGLE, double maxWARP, double maxNasWARP, double maxALTTAPER, double maxTET, double minJDet, double minComb ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e84, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005", elemSET, doLIST, makeGROUP, chkASPECT, chkTAPER, chkANGLE, chkWARP, chkNasWARP, chkALTTAPER, chkTET, chkJDet, chkComb, maxASPECT, maxTAPER, maxANGLE, maxWARP, maxNasWARP, maxALTTAPER, maxTET, minJDet, minComb);
    return _result;
}

#pragma implementation_key(8840)
inline enum femap::zReturnCode femap::Imodel::feGetElemDistortion ( int elemID, double * valASPECT, double * valTAPER, double * valANGLE, double * valWARP, double * valNasWARP, double * valALTTAPER, double * valTET, double * valJDet, double * valComb ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e85, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", elemID, valASPECT, valTAPER, valANGLE, valWARP, valNasWARP, valALTTAPER, valTET, valJDet, valComb);
    return _result;
}

#pragma implementation_key(8841)
inline enum femap::zReturnCode femap::Imodel::feCheckElemNormal ( int elemSET, int csysID, VARIANT_BOOL doLIST, VARIANT_BOOL swapNORMAL, VARIANT_BOOL autonormal, const _variant_t & manNORMAL ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e86, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x000b\x000c", elemSET, csysID, doLIST, swapNORMAL, autonormal, &manNORMAL);
    return _result;
}

#pragma implementation_key(8842)
inline enum femap::zReturnCode femap::Imodel::feCheckConstraints ( VARIANT_BOOL doPERM, VARIANT_BOOL doLIST, VARIANT * bcSUM, VARIANT * bcSEP ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e87, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x400c\x400c", doPERM, doLIST, bcSUM, bcSEP);
    return _result;
}

#pragma implementation_key(8843)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentLoads ( int LoadSet, VARIANT_BOOL mergeLOADS ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e88, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", LoadSet, mergeLOADS);
    return _result;
}

#pragma implementation_key(8844)
inline enum femap::zReturnCode femap::Imodel::feCheckSumForces ( VARIANT_BOOL expandGEOM, VARIANT_BOOL doLIST, VARIANT_BOOL useSETS, int nodeSET, int elemSET, const _variant_t & basePOINT, int csysID, VARIANT * summedFORCES ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e89, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x0003\x0003\x000c\x0003\x400c", expandGEOM, doLIST, useSETS, nodeSET, elemSET, &basePOINT, csysID, summedFORCES);
    return _result;
}

#pragma implementation_key(8845)
inline enum femap::zReturnCode femap::Imodel::feCoordPick ( _bstr_t dlgTITLE, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e8a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400c", (BSTR)dlgTITLE, xyz);
    return _result;
}

#pragma implementation_key(8846)
inline enum femap::zReturnCode femap::Imodel::feCoordFromWorkplane ( const _variant_t & wpXYZ, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e8b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &wpXYZ, xyz);
    return _result;
}

#pragma implementation_key(8847)
inline enum femap::zReturnCode femap::Imodel::feCoordToWorkplane ( const _variant_t & xyz, VARIANT * wpXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e8c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &xyz, wpXYZ);
    return _result;
}

#pragma implementation_key(8848)
inline enum femap::zReturnCode femap::Imodel::feCoordIntersectCurves ( int cuID1, int cuID2, const _variant_t & nearXYZ, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e8d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x400c", cuID1, cuID2, &nearXYZ, xyz);
    return _result;
}

#pragma implementation_key(8849)
inline enum femap::zReturnCode femap::Imodel::feCoordIntersectLines ( VARIANT_BOOL infLine, const _variant_t & pA1, const _variant_t & pA2, const _variant_t & pB1, const _variant_t & pB2, VARIANT * pIntersect ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e8e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x000c\x000c\x000c\x400c", infLine, &pA1, &pA2, &pB1, &pB2, pIntersect);
    return _result;
}

#pragma implementation_key(8850)
inline enum femap::zReturnCode femap::Imodel::feCoordOntoCurve ( int cuID, const _variant_t & fromxyz, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e8f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", cuID, &fromxyz, xyz);
    return _result;
}

#pragma implementation_key(8851)
inline enum femap::zReturnCode femap::Imodel::feCoordAlongCurve ( int cuID, VARIANT_BOOL fromstart, double cuLENGTH, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e90, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x400c", cuID, fromstart, cuLENGTH, xyz);
    return _result;
}

#pragma implementation_key(8852)
inline enum femap::zReturnCode femap::Imodel::feCoordCurveMidpoint ( int cuID, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e91, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", cuID, xyz);
    return _result;
}

#pragma implementation_key(8853)
inline enum femap::zReturnCode femap::Imodel::feCoordCurveCenter ( int cuID, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e92, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", cuID, xyz);
    return _result;
}

#pragma implementation_key(8854)
inline enum femap::zReturnCode femap::Imodel::feCoordOntoSurface ( int suID, const _variant_t & fromxyz, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e93, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", suID, &fromxyz, xyz);
    return _result;
}

#pragma implementation_key(8855)
inline enum femap::zReturnCode femap::Imodel::feCoordInSurface ( int suID, const _variant_t & suXY, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e94, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", suID, &suXY, xyz);
    return _result;
}

#pragma implementation_key(8856)
inline enum femap::zReturnCode femap::Imodel::feCoordSurfaceIntersect ( int cuID, int suID, const _variant_t & nearXYZ, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e95, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x400c", cuID, suID, &nearXYZ, xyz);
    return _result;
}

#pragma implementation_key(8857)
inline enum femap::zReturnCode femap::Imodel::feCoordOnPoint ( int ptID, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e96, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", ptID, xyz);
    return _result;
}

#pragma implementation_key(8858)
inline enum femap::zReturnCode femap::Imodel::feCoordOnNode ( int ndID, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e97, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", ndID, xyz);
    return _result;
}

#pragma implementation_key(8859)
inline enum femap::zReturnCode femap::Imodel::feCoordTransform ( int fromCSYS, const _variant_t & fromxyz, int toCSYS, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e98, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x400c", fromCSYS, &fromxyz, toCSYS, xyz);
    return _result;
}

#pragma implementation_key(8860)
inline enum femap::zReturnCode femap::Imodel::feCoordArrayTransform ( int Count, int fromCSYS, int toCSYS, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e99, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x400c", Count, fromCSYS, toCSYS, xyz);
    return _result;
}

#pragma implementation_key(8861)
inline enum femap::zReturnCode femap::Imodel::feCoordColinear ( const _variant_t & xyz1, const _variant_t & xyz2, const _variant_t & xyz3, VARIANT_BOOL * isColinear ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e9a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x400b", &xyz1, &xyz2, &xyz3, isColinear);
    return _result;
}

#pragma implementation_key(8862)
inline enum femap::zReturnCode femap::Imodel::feCoordToDirCos ( const _variant_t & origin, const _variant_t & xaxis, const _variant_t & xyplane, VARIANT * dircos ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e9b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x400c", &origin, &xaxis, &xyplane, dircos);
    return _result;
}

#pragma implementation_key(8863)
inline enum femap::zReturnCode femap::Imodel::feCoordRotate ( const _variant_t & xyz, double angle, const _variant_t & origin, const _variant_t & Axis, VARIANT * xyzROT ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e9c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x0005\x000c\x000c\x400c", &xyz, angle, &origin, &Axis, xyzROT);
    return _result;
}

#pragma implementation_key(8864)
inline enum femap::zReturnCode femap::Imodel::feCoordOntoPlane ( const _variant_t & xyz, const _variant_t & projDir, const _variant_t & planePt, const _variant_t & planeNorm, VARIANT * xyzPlane ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e9d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x400c", &xyz, &projDir, &planePt, &planeNorm, xyzPlane);
    return _result;
}

#pragma implementation_key(8865)
inline enum femap::zReturnCode femap::Imodel::feCoordOntoLine ( const _variant_t & xyz, const _variant_t & p1, const _variant_t & p2, VARIANT * xyzLine ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e9e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x400c", &xyz, &p1, &p2, xyzLine);
    return _result;
}

#pragma implementation_key(8866)
inline enum femap::zReturnCode femap::Imodel::feCoordPlaneIntersect ( const _variant_t & baseA, const _variant_t & normA, const _variant_t & baseB, const _variant_t & normB, const _variant_t & baseC, const _variant_t & normC, VARIANT * baseV ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4e9f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x000c\x000c\x400c", &baseA, &normA, &baseB, &normB, &baseC, &normC, baseV);
    return _result;
}

#pragma implementation_key(8867)
inline enum femap::zReturnCode femap::Imodel::feRotationTransform ( int fromCSYS, const _variant_t & fromROT, int toCSYS, VARIANT * rot ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x400c", fromCSYS, &fromROT, toCSYS, rot);
    return _result;
}

#pragma implementation_key(8868)
inline enum femap::zReturnCode femap::Imodel::feRotationToDirCos ( const _variant_t & rot, VARIANT * dircos ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &rot, dircos);
    return _result;
}

#pragma implementation_key(8869)
inline enum femap::zReturnCode femap::Imodel::feRotationFromDirCos ( const _variant_t & dircos, VARIANT * rot ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &dircos, rot);
    return _result;
}

#pragma implementation_key(8870)
inline enum femap::zReturnCode femap::Imodel::feVectorTransform ( int fromCSYS, const _variant_t & baseXYZ, const _variant_t & fromxyz, int toCSYS, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x0003\x400c", fromCSYS, &baseXYZ, &fromxyz, toCSYS, xyz);
    return _result;
}

#pragma implementation_key(8871)
inline enum femap::zReturnCode femap::Imodel::feVectorFromBeam ( int elemID, const _variant_t & bmXYZ, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", elemID, &bmXYZ, xyz);
    return _result;
}

#pragma implementation_key(8872)
inline enum femap::zReturnCode femap::Imodel::feVectorToBeam ( int elemID, const _variant_t & xyz, VARIANT * bmXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", elemID, &xyz, bmXYZ);
    return _result;
}

#pragma implementation_key(8873)
inline enum femap::zReturnCode femap::Imodel::feVectorLength ( const _variant_t & xyz, double * vecLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x4005", &xyz, vecLength);
    return _result;
}

#pragma implementation_key(8874)
inline enum femap::zReturnCode femap::Imodel::feVectorCrossProduct ( const _variant_t & VecA, const _variant_t & VecB, VARIANT * vecAxB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x400c", &VecA, &VecB, vecAxB);
    return _result;
}

#pragma implementation_key(8875)
inline enum femap::zReturnCode femap::Imodel::feVectorDotProduct ( const _variant_t & VecA, const _variant_t & VecB, double * dot ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x4005", &VecA, &VecB, dot);
    return _result;
}

#pragma implementation_key(8876)
inline enum femap::zReturnCode femap::Imodel::feVectorAngle ( const _variant_t & VecA, const _variant_t & VecB, double * angle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ea9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x4005", &VecA, &VecB, angle);
    return _result;
}

#pragma implementation_key(8877)
inline enum femap::zReturnCode femap::Imodel::feVectorAngleAxis ( const _variant_t & VecA, const _variant_t & VecB, const _variant_t & vecAXIS, double * angle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eaa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x4005", &VecA, &VecB, &vecAXIS, angle);
    return _result;
}

#pragma implementation_key(8878)
inline enum femap::zReturnCode femap::Imodel::feVectorUnit ( const _variant_t & vecIN, VARIANT * vecOUT ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eab, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &vecIN, vecOUT);
    return _result;
}

#pragma implementation_key(8879)
inline enum femap::zReturnCode femap::Imodel::feVectorPlaneIntersect ( const _variant_t & baseA, const _variant_t & normA, const _variant_t & baseB, const _variant_t & normB, VARIANT * ptV, VARIANT * dirV ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eac, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x400c\x400c", &baseA, &normA, &baseB, &normB, ptV, dirV);
    return _result;
}

#pragma implementation_key(8880)
inline enum femap::zReturnCode femap::Imodel::feVectorPick ( _bstr_t dlgTITLE, VARIANT_BOOL unitVector, double * vecLength, VARIANT * vecBASE, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ead, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b\x4005\x400c\x400c", (BSTR)dlgTITLE, unitVector, vecLength, vecBASE, vecDIR);
    return _result;
}

#pragma implementation_key(8881)
inline enum femap::zReturnCode femap::Imodel::feVectorAxis ( int csysID, int Axis, VARIANT_BOOL positive, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eae, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x400c", csysID, Axis, positive, vecDIR);
    return _result;
}

#pragma implementation_key(8882)
inline enum femap::zReturnCode femap::Imodel::feVectorTangentToCurve ( int cuID, const _variant_t & baseXYZ, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eaf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", cuID, &baseXYZ, vecDIR);
    return _result;
}

#pragma implementation_key(8883)
inline enum femap::zReturnCode femap::Imodel::feVectorNormalToSurface ( int suID, const _variant_t & baseXYZ, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x400c", suID, &baseXYZ, vecDIR);
    return _result;
}

#pragma implementation_key(8884)
inline enum femap::zReturnCode femap::Imodel::feVectorNormalToView ( int vuID, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c", vuID, vecDIR);
    return _result;
}

#pragma implementation_key(8885)
inline enum femap::zReturnCode femap::Imodel::fePlanePick ( _bstr_t dlgTITLE, VARIANT * plBase, VARIANT * plNormal, VARIANT * plAxis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x400c\x400c\x400c", (BSTR)dlgTITLE, plBase, plNormal, plAxis);
    return _result;
}

#pragma implementation_key(8886)
inline enum femap::zReturnCode femap::Imodel::fePlaneLocation ( const _variant_t & p1, const _variant_t & p2, const _variant_t & p3, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x400c\x400c\x400c", &p1, &p2, &p3, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8887)
inline enum femap::zReturnCode femap::Imodel::fePlaneNodes ( int n1, int n2, int n3, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x400c\x400c\x400c", n1, n2, n3, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8888)
inline enum femap::zReturnCode femap::Imodel::fePlanePoints ( int p1, int p2, int p3, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x400c\x400c\x400c", p1, p2, p3, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8889)
inline enum femap::zReturnCode femap::Imodel::fePlaneBisect ( const _variant_t & p1, const _variant_t & p2, const _variant_t & p3, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x400c\x400c\x400c", &p1, &p2, &p3, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8890)
inline enum femap::zReturnCode femap::Imodel::fePlaneCSys ( const _variant_t & p1, int csysID, int planeID, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x0003\x0003\x400c\x400c\x400c", &p1, csysID, planeID, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8891)
inline enum femap::zReturnCode femap::Imodel::fePlaneSurfaceNormal ( int surfID, int ptID1, int ptID2, VARIANT_BOOL reversed, VARIANT_BOOL align, double offset, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x0005\x400c\x400c\x400c", surfID, ptID1, ptID2, reversed, align, offset, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8892)
inline enum femap::zReturnCode femap::Imodel::fePlaneViewAlign ( int viewID, VARIANT_BOOL intoView, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eb9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x400c\x400c", viewID, intoView, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8893)
inline enum femap::zReturnCode femap::Imodel::fePlaneCurveNormal ( int cuID, VARIANT * planeBase, VARIANT * planeNormal, VARIANT * planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eba, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c\x400c", cuID, planeBase, planeNormal, planeX);
    return _result;
}

#pragma implementation_key(8894)
inline enum femap::zReturnCode femap::Imodel::feGetReal ( _bstr_t title, double lowerlimit, double upperlimit, double * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ebb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0005\x0005\x4005", (BSTR)title, lowerlimit, upperlimit, value);
    return _result;
}

#pragma implementation_key(8895)
inline enum femap::zReturnCode femap::Imodel::feGetInt ( _bstr_t title, int lowerlimit, int upperlimit, int * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ebc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x4003", (BSTR)title, lowerlimit, upperlimit, value);
    return _result;
}

#pragma implementation_key(8896)
inline enum femap::zReturnCode femap::Imodel::feViewRedraw ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ebd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(8897)
inline enum femap::zReturnCode femap::Imodel::feViewRegenerate ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ebe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(8898)
inline enum femap::zReturnCode femap::Imodel::feViewAllViews ( VARIANT_BOOL on_off ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ebf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", on_off);
    return _result;
}

#pragma implementation_key(8899)
inline enum femap::zReturnCode femap::Imodel::feViewShow ( enum zDataType dTYPE, int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", dTYPE, ID);
    return _result;
}

#pragma implementation_key(8900)
inline enum femap::zReturnCode femap::Imodel::feViewVisible ( int vuID, VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", vuID, Visible);
    return _result;
}

#pragma implementation_key(8901)
inline enum femap::zReturnCode femap::Imodel::feViewTile ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8902)
inline enum femap::zReturnCode femap::Imodel::feViewCascade ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec3, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(8903)
inline enum femap::zReturnCode femap::Imodel::feGroupBoolean ( int opperation, int grID1, int grID2, int grCreate, _bstr_t grTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0008", opperation, grID1, grID2, grCreate, (BSTR)grTitle);
    return _result;
}

#pragma implementation_key(8904)
inline enum femap::zReturnCode femap::Imodel::feGroupGenerate ( int elemSET, VARIANT_BOOL planer, int brkPropMatl, int brkLayer, enum zColor brkColor, double brkAngle, VARIANT_BOOL addLayers ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x0003\x0003\x0005\x000b", elemSET, planer, brkPropMatl, brkLayer, brkColor, brkAngle, addLayers);
    return _result;
}

#pragma implementation_key(8905)
inline enum femap::zReturnCode femap::Imodel::feGroupGenSolid ( int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", solidSET);
    return _result;
}

#pragma implementation_key(8906)
inline enum femap::zReturnCode femap::Imodel::feGroupGenProp ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(8907)
inline enum femap::zReturnCode femap::Imodel::feGroupGenMatl ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(8908)
inline enum femap::zReturnCode femap::Imodel::feGroupGenElemType ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ec9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(8909)
inline enum femap::zReturnCode femap::Imodel::feGroupPeel ( int elemSET, int peelLayers, VARIANT_BOOL keepPeel, VARIANT_BOOL keepCore ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eca, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b", elemSET, peelLayers, keepPeel, keepCore);
    return _result;
}

#pragma implementation_key(8910)
inline enum femap::zReturnCode femap::Imodel::feDeleteAll ( VARIANT_BOOL geometry, VARIANT_BOOL Mesh, VARIANT_BOOL Output, VARIANT_BOOL confirm ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ecb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x000b", geometry, Mesh, Output, confirm);
    return _result;
}

#pragma implementation_key(8911)
inline enum femap::zReturnCode femap::Imodel::feDelete ( enum zDataType entityTYPE, int entitySET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ecc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, entitySET);
    return _result;
}

#pragma implementation_key(8912)
inline enum femap::zReturnCode femap::Imodel::feDeleteOutput ( int outputSetID, int vectorSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ecd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", outputSetID, vectorSET);
    return _result;
}

#pragma implementation_key(8913)
inline enum femap::zReturnCode femap::Imodel::feDeleteLoads ( int loadSetID, enum zDataType entityTYPE, int entitySET, enum zLoadSelectType loadType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ece, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", loadSetID, entityTYPE, entitySET, loadType);
    return _result;
}

#pragma implementation_key(8914)
inline enum femap::zReturnCode femap::Imodel::feDeleteConstraints ( int bcSetID, enum zDataType entityTYPE, int entitySET, VARIANT_BOOL deleteBC, VARIANT_BOOL deleteBE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ecf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b", bcSetID, entityTYPE, entitySET, deleteBC, deleteBE);
    return _result;
}

#pragma implementation_key(8915)
inline enum femap::zReturnCode femap::Imodel::feLinePoints ( VARIANT_BOOL ontoWorkplane, const _variant_t & p1, const _variant_t & p2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x000c\x000b", ontoWorkplane, &p1, &p2, messages);
    return _result;
}

#pragma implementation_key(8916)
inline enum femap::zReturnCode femap::Imodel::feLineHorzVert ( VARIANT_BOOL horizontal, const _variant_t & p1, double Length, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x0005\x000b", horizontal, &p1, Length, messages);
    return _result;
}

#pragma implementation_key(8917)
inline enum femap::zReturnCode femap::Imodel::feLineAtAngle ( double angle, int curveID, const _variant_t & p1, const _variant_t & p2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x000c\x000c\x000b", angle, curveID, &p1, &p2, messages);
    return _result;
}

#pragma implementation_key(8918)
inline enum femap::zReturnCode femap::Imodel::feLineParallel ( double offset, int curveID, const _variant_t & p1, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x000c\x000b", offset, curveID, &p1, messages);
    return _result;
}

#pragma implementation_key(8919)
inline enum femap::zReturnCode femap::Imodel::feLineMidline ( int curve1, int curve2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", curve1, curve2, messages);
    return _result;
}

#pragma implementation_key(8920)
inline enum femap::zReturnCode femap::Imodel::feLinePointTangent ( int curveID, const _variant_t & p1, const _variant_t & p2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000b", curveID, &p1, &p2, messages);
    return _result;
}

#pragma implementation_key(8921)
inline enum femap::zReturnCode femap::Imodel::feLine2Tangent ( int curve1, int curve2, const _variant_t & p1, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000b", curve1, curve2, &p1, messages);
    return _result;
}

#pragma implementation_key(8922)
inline enum femap::zReturnCode femap::Imodel::feLineRectangle ( const _variant_t & p1, const _variant_t & p2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000b", &p1, &p2, messages);
    return _result;
}

#pragma implementation_key(8923)
inline enum femap::zReturnCode femap::Imodel::feLinePointIDs ( int p1, int p2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", p1, p2, messages);
    return _result;
}

#pragma implementation_key(8924)
inline enum femap::zReturnCode femap::Imodel::feArcCenterStartEnd ( const _variant_t & center, const _variant_t & Start, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ed9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000b", &center, &Start, &end, messages);
    return _result;
}

#pragma implementation_key(8925)
inline enum femap::zReturnCode femap::Imodel::feArcRadiusStartEnd ( double radius, const _variant_t & Start, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eda, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x000c\x000c\x000b", radius, &Start, &end, messages);
    return _result;
}

#pragma implementation_key(8926)
inline enum femap::zReturnCode femap::Imodel::feArcAngleStartEnd ( double angle, const _variant_t & Start, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4edb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x000c\x000c\x000b", angle, &Start, &end, messages);
    return _result;
}

#pragma implementation_key(8927)
inline enum femap::zReturnCode femap::Imodel::feArcAngleCenterStart ( double angle, const _variant_t & center, const _variant_t & Start, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4edc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x000c\x000c\x000b", angle, &center, &Start, messages);
    return _result;
}

#pragma implementation_key(8928)
inline enum femap::zReturnCode femap::Imodel::feArcChordCenterStart ( double Length, const _variant_t & center, const _variant_t & Start, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4edd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x000c\x000c\x000b", Length, &center, &Start, messages);
    return _result;
}

#pragma implementation_key(8929)
inline enum femap::zReturnCode femap::Imodel::feArcPoints ( const _variant_t & Start, const _variant_t & mid, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ede, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000b", &Start, &mid, &end, messages);
    return _result;
}

#pragma implementation_key(8930)
inline enum femap::zReturnCode femap::Imodel::feArcCenterPoints ( const _variant_t & center, const _variant_t & Start, const _variant_t & mid, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4edf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x000b", &center, &Start, &mid, &end, messages);
    return _result;
}

#pragma implementation_key(8931)
inline enum femap::zReturnCode femap::Imodel::feArcTangentStartEnd ( const _variant_t & Tangent, const _variant_t & Start, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000b", &Tangent, &Start, &end, messages);
    return _result;
}

#pragma implementation_key(8932)
inline enum femap::zReturnCode femap::Imodel::feCircleRadius ( const _variant_t & center, const _variant_t & Start, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000b", &center, &Start, messages);
    return _result;
}

#pragma implementation_key(8933)
inline enum femap::zReturnCode femap::Imodel::feCircleDiameter ( const _variant_t & Start, const _variant_t & dia, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000b", &Start, &dia, messages);
    return _result;
}

#pragma implementation_key(8934)
inline enum femap::zReturnCode femap::Imodel::feCircleCenter ( double radius, const _variant_t & center, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x000c\x000b", radius, &center, messages);
    return _result;
}

#pragma implementation_key(8935)
inline enum femap::zReturnCode femap::Imodel::feCircle2Point ( double radius, const _variant_t & Start, const _variant_t & mid, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x000c\x000c\x000b", radius, &Start, &mid, messages);
    return _result;
}

#pragma implementation_key(8936)
inline enum femap::zReturnCode femap::Imodel::feCircleConcentric ( double radius, int curveID, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x000b", radius, curveID, messages);
    return _result;
}

#pragma implementation_key(8937)
inline enum femap::zReturnCode femap::Imodel::feCircle3Point ( const _variant_t & Start, const _variant_t & mid, const _variant_t & end, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000b", &Start, &mid, &end, messages);
    return _result;
}

#pragma implementation_key(8938)
inline enum femap::zReturnCode femap::Imodel::feCircleCenterPoints ( const _variant_t & center, const _variant_t & Start, const _variant_t & mid, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000b", &center, &Start, &mid, messages);
    return _result;
}

#pragma implementation_key(8939)
inline enum femap::zReturnCode femap::Imodel::feCircleCenterTangent ( int curveID, const _variant_t & center, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000b", curveID, &center, messages);
    return _result;
}

#pragma implementation_key(8940)
inline enum femap::zReturnCode femap::Imodel::feCircleTangentTangent ( int curve1, int curve2, double radius, const _variant_t & nearloc, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ee9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x000c\x000b", curve1, curve2, radius, &nearloc, messages);
    return _result;
}

#pragma implementation_key(8941)
inline enum femap::zReturnCode femap::Imodel::feSplinePoints ( VARIANT_BOOL propject, VARIANT_BOOL controlpoints, int Count, const _variant_t & xyz, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eea, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x000c\x000b", propject, controlpoints, Count, &xyz, messages);
    return _result;
}

#pragma implementation_key(8942)
inline enum femap::zReturnCode femap::Imodel::feSplineTangent ( const _variant_t & x1, const _variant_t & v1, const _variant_t & x2, const _variant_t & v2, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eeb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x000b", &x1, &v1, &x2, &v2, messages);
    return _result;
}

#pragma implementation_key(8943)
inline enum femap::zReturnCode femap::Imodel::feSplineEllipse ( const _variant_t & center, const _variant_t & Vector, double a, double b, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eec, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x0005\x0005\x000b", &center, &Vector, a, b, messages);
    return _result;
}

#pragma implementation_key(8944)
inline enum femap::zReturnCode femap::Imodel::feSplineParabola ( const _variant_t & center, const _variant_t & focus, const _variant_t & trim, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eed, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000b", &center, &focus, &trim, messages);
    return _result;
}

#pragma implementation_key(8945)
inline enum femap::zReturnCode femap::Imodel::feSplineHyperbola ( const _variant_t & center, const _variant_t & towardfocus, double angle, double height, const _variant_t & trim, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eee, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x0005\x0005\x000c\x000b", &center, &towardfocus, angle, height, &trim, messages);
    return _result;
}

#pragma implementation_key(8946)
inline enum femap::zReturnCode femap::Imodel::feCurveUpdateSurfaces ( VARIANT_BOOL update, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eef, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b", update, messages);
    return _result;
}

#pragma implementation_key(8947)
inline enum femap::zReturnCode femap::Imodel::feCurveIntersectSolids ( int solid1, int solid2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", solid1, solid2);
    return _result;
}

#pragma implementation_key(8948)
inline enum femap::zReturnCode femap::Imodel::feCurveProjectOntoSolid ( VARIANT_BOOL projectNormal, const _variant_t & along, int solidID, int curveSET, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x0003\x0003\x000b", projectNormal, &along, solidID, curveSET, messages);
    return _result;
}

#pragma implementation_key(8949)
inline enum femap::zReturnCode femap::Imodel::feCurveParametricOnSurface ( int surfID, VARIANT_BOOL uDir, const _variant_t & location, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000c\x000b", surfID, uDir, &location, messages);
    return _result;
}

#pragma implementation_key(8950)
inline enum femap::zReturnCode femap::Imodel::feCurveSlice ( int solidID, const _variant_t & planeBase, const _variant_t & planeNormal, const _variant_t & planeX ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", solidID, &planeBase, &planeNormal, &planeX);
    return _result;
}

#pragma implementation_key(8951)
inline enum femap::zReturnCode femap::Imodel::feCurveTrim ( int curveID, int TrimID, const _variant_t & nearloc, VARIANT_BOOL extend ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000b", curveID, TrimID, &nearloc, extend);
    return _result;
}

#pragma implementation_key(8952)
inline enum femap::zReturnCode femap::Imodel::feCurveExtend ( int curveID, const _variant_t & nearloc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", curveID, &nearloc);
    return _result;
}

#pragma implementation_key(8953)
inline enum femap::zReturnCode femap::Imodel::feCurveBreak ( int curveID, const _variant_t & nearloc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", curveID, &nearloc);
    return _result;
}

#pragma implementation_key(8954)
inline enum femap::zReturnCode femap::Imodel::feCurveJoin ( int curve1, int curve2, const _variant_t & nearloc, VARIANT_BOOL update1, VARIANT_BOOL update2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000b\x000b", curve1, curve2, &nearloc, update1, update2);
    return _result;
}

#pragma implementation_key(8955)
inline enum femap::zReturnCode femap::Imodel::feCurveFillet ( double radius, int curve1, int curve2, const _variant_t & nearloc, VARIANT_BOOL update1, VARIANT_BOOL update2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x0003\x000c\x000b\x000b", radius, curve1, curve2, &nearloc, update1, update2);
    return _result;
}

#pragma implementation_key(8956)
inline enum femap::zReturnCode femap::Imodel::feCurveChamfer ( double len1, double len2, int curve1, int curve2, const _variant_t & nearloc, VARIANT_BOOL update1, VARIANT_BOOL update2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ef9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0005\x0003\x0003\x000c\x000b\x000b", len1, len2, curve1, curve2, &nearloc, update1, update2);
    return _result;
}

#pragma implementation_key(8957)
inline enum femap::zReturnCode femap::Imodel::feBoundaryFromCurves ( int curveSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4efa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", curveSET);
    return _result;
}

#pragma implementation_key(8958)
inline enum femap::zReturnCode femap::Imodel::feBoundaryFromSurfaces ( int surfaceSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4efb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", surfaceSET);
    return _result;
}

#pragma implementation_key(8959)
inline enum femap::zReturnCode femap::Imodel::feBoundaryUpdateSurfaces ( int boundaryID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4efc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", boundaryID);
    return _result;
}

#pragma implementation_key(8960)
inline enum femap::zReturnCode femap::Imodel::feSurfaceCorners ( VARIANT_BOOL fourCorners, const _variant_t & c1, const _variant_t & c2, const _variant_t & c3, const _variant_t & c4 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4efd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x000c\x000c\x000c", fourCorners, &c1, &c2, &c3, &c4);
    return _result;
}

#pragma implementation_key(8961)
inline enum femap::zReturnCode femap::Imodel::feSurfaceEdgeCurves ( int curve1, int curve2, int curve3, int curve4 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4efe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", curve1, curve2, curve3, curve4);
    return _result;
}

#pragma implementation_key(8962)
inline enum femap::zReturnCode femap::Imodel::feSurfaceAlignedCurves ( int curveCOUNT, const _variant_t & curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4eff, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", curveCOUNT, &curveID);
    return _result;
}

#pragma implementation_key(8963)
inline enum femap::zReturnCode femap::Imodel::feSurfaceRuled ( int cu1, int cu2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f00, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", cu1, cu2);
    return _result;
}

#pragma implementation_key(8964)
inline enum femap::zReturnCode femap::Imodel::feSurfaceExtrude ( int curveSET, double axisLEN, const _variant_t & axisVEC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f01, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000c", curveSET, axisLEN, &axisVEC);
    return _result;
}

#pragma implementation_key(8965)
inline enum femap::zReturnCode femap::Imodel::feSurfaceRevolve ( int curveSET, double axisANGLE, const _variant_t & axisBASE, const _variant_t & axisVEC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f02, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000c\x000c", curveSET, axisANGLE, &axisBASE, &axisVEC);
    return _result;
}

#pragma implementation_key(8966)
inline enum femap::zReturnCode femap::Imodel::feSurfaceSweep ( int curveSET, int pathSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f03, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", curveSET, pathSET);
    return _result;
}

#pragma implementation_key(8967)
inline enum femap::zReturnCode femap::Imodel::feSurfaceMidSingle ( VARIANT_BOOL trim, int surfID1, int surfID2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f04, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003", trim, surfID1, surfID2);
    return _result;
}

#pragma implementation_key(8968)
inline enum femap::zReturnCode femap::Imodel::feSurfaceMidAuto ( int surfSET, double thick ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f05, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", surfSET, thick);
    return _result;
}

#pragma implementation_key(8969)
inline enum femap::zReturnCode femap::Imodel::feSurfaceMidAttrib ( int surfSET, int matlID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f06, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", surfSET, matlID);
    return _result;
}

#pragma implementation_key(8970)
inline enum femap::zReturnCode femap::Imodel::feSurfaceTrimToSolid ( int sheetID, int solidID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f07, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", sheetID, solidID);
    return _result;
}

#pragma implementation_key(8971)
inline enum femap::zReturnCode femap::Imodel::feSurfaceTrimWithCurves ( int surfID, int curveSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f08, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", surfID, curveSET);
    return _result;
}

#pragma implementation_key(8972)
inline enum femap::zReturnCode femap::Imodel::feSolidPrimitive ( int operation, int shape, VARIANT_BOOL positive, const _variant_t & origin, const _variant_t & Size, _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f09, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000c\x000c\x0008", operation, shape, positive, &origin, &Size, (BSTR)title);
    return _result;
}

#pragma implementation_key(8973)
inline enum femap::zReturnCode femap::Imodel::feSolidExtrude ( int operation, int surfID, int dirmode, int depthMode, const _variant_t & dirVec, const _variant_t & depthVec ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f0a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c", operation, surfID, dirmode, depthMode, &dirVec, &depthVec);
    return _result;
}

#pragma implementation_key(8974)
inline enum femap::zReturnCode femap::Imodel::feSolidRevolve ( int operation, int surfID, int dirmode, int angleMode, const _variant_t & axisBASE, const _variant_t & axisVEC, const _variant_t & angleVec ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f0b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x000c\x000c", operation, surfID, dirmode, angleMode, &axisBASE, &axisVEC, &angleVec);
    return _result;
}

#pragma implementation_key(8975)
inline enum femap::zReturnCode femap::Imodel::feSolidExplode ( int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f0c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", solidSET);
    return _result;
}

#pragma implementation_key(8976)
inline enum femap::zReturnCode femap::Imodel::feSolidStitch ( int surfaceSET, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f0d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", surfaceSET, tolerance);
    return _result;
}

#pragma implementation_key(8977)
inline enum femap::zReturnCode femap::Imodel::feSolidFillet ( int curveSET, double radius ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f0e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", curveSET, radius);
    return _result;
}

#pragma implementation_key(8978)
inline enum femap::zReturnCode femap::Imodel::feSolidChamfer ( int curveSET, double radius ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f0f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", curveSET, radius);
    return _result;
}

#pragma implementation_key(8979)
inline enum femap::zReturnCode femap::Imodel::feSolidAdd ( int solidSET, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f10, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", solidSET, Redraw);
    return _result;
}

#pragma implementation_key(8980)
inline enum femap::zReturnCode femap::Imodel::feSolidRemove ( int baseID, int solidSET, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f11, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", baseID, solidSET, Redraw);
    return _result;
}

#pragma implementation_key(8981)
inline enum femap::zReturnCode femap::Imodel::feSolidCommon ( int baseID, int toolID, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f12, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", baseID, toolID, Redraw);
    return _result;
}

#pragma implementation_key(8982)
inline enum femap::zReturnCode femap::Imodel::feSolidEmbed ( int baseID, int toolID, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f13, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", baseID, toolID, Redraw);
    return _result;
}

#pragma implementation_key(8983)
inline enum femap::zReturnCode femap::Imodel::feSolidIntersect ( int solidSET, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f14, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", solidSET, Redraw);
    return _result;
}

#pragma implementation_key(8984)
inline enum femap::zReturnCode femap::Imodel::feSolidShell ( int baseID, int surfaceSET, double thickness, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f15, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x000b", baseID, surfaceSET, thickness, Redraw);
    return _result;
}

#pragma implementation_key(8985)
inline enum femap::zReturnCode femap::Imodel::feSolidSlice ( int solidSET, const _variant_t & planeBase, const _variant_t & planeNormal, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f16, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000b", solidSET, &planeBase, &planeNormal, Redraw);
    return _result;
}

#pragma implementation_key(8986)
inline enum femap::zReturnCode femap::Imodel::feSolidSliceMatch ( int solidSET, const _variant_t & planeBase, const _variant_t & planeNormal, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f17, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000b", solidSET, &planeBase, &planeNormal, Redraw);
    return _result;
}

#pragma implementation_key(8987)
inline enum femap::zReturnCode femap::Imodel::feSolidSliceAlongFace ( int surfaceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f18, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", surfaceID);
    return _result;
}

#pragma implementation_key(8988)
inline enum femap::zReturnCode femap::Imodel::feSolidCleanup ( int solidSET, VARIANT_BOOL redundant, VARIANT_BOOL sliver, VARIANT_BOOL check ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f19, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b", solidSET, redundant, sliver, check);
    return _result;
}

#pragma implementation_key(8989)
inline enum femap::zReturnCode femap::Imodel::feSolidEmbedFace ( int surfID, int directionMode, int curveOpt, const _variant_t & dirVec, double offset, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f1a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x0005\x000b", surfID, directionMode, curveOpt, &dirVec, offset, Redraw);
    return _result;
}

#pragma implementation_key(8990)
inline enum femap::zReturnCode femap::Imodel::feGenerateCopy ( enum zDataType entityTYPE, int entitySET, const _variant_t & alongVEC, int nodeINC, VARIANT_BOOL Match ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f1b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x000b", entityTYPE, entitySET, &alongVEC, nodeINC, Match);
    return _result;
}

#pragma implementation_key(8991)
inline enum femap::zReturnCode femap::Imodel::feGenerateScale ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, const _variant_t & scaleVEC, int csysID, VARIANT_BOOL Match ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f1c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0003\x000b", entityTYPE, entitySET, &origVEC, &scaleVEC, csysID, Match);
    return _result;
}

#pragma implementation_key(8992)
inline enum femap::zReturnCode femap::Imodel::feGenerateRadialCopy ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, double Length, VARIANT_BOOL Match ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f1d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0005\x000b", entityTYPE, entitySET, &origVEC, Length, Match);
    return _result;
}

#pragma implementation_key(8993)
inline enum femap::zReturnCode femap::Imodel::feGenerateRotate ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, const _variant_t & axisVEC, double rotANGLE, double transDIST, VARIANT_BOOL Match ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f1e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x0005\x000b", entityTYPE, entitySET, &origVEC, &axisVEC, rotANGLE, transDIST, Match);
    return _result;
}

#pragma implementation_key(8994)
inline enum femap::zReturnCode femap::Imodel::feGenerateReflect ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, const _variant_t & normVEC, double trapWIDTH, VARIANT_BOOL Match ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f1f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x000b", entityTYPE, entitySET, &origVEC, &normVEC, trapWIDTH, Match);
    return _result;
}

#pragma implementation_key(8995)
inline enum femap::zReturnCode femap::Imodel::feOutputProcess ( int Count, VARIANT_BOOL full_set, int processing_method, const _variant_t & approach, const _variant_t & from_setID, const _variant_t & from_vectorID, const _variant_t & to_setID, const _variant_t & to_vectorID, const _variant_t & groupID, const _variant_t & factor, const _variant_t & overwrite, const _variant_t & ply_summary, const _variant_t & set_info ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f20, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c\x000c", Count, full_set, processing_method, &approach, &from_setID, &from_vectorID, &to_setID, &to_vectorID, &groupID, &factor, &overwrite, &ply_summary, &set_info);
    return _result;
}

#pragma implementation_key(8996)
inline enum femap::zReturnCode femap::Imodel::feOutputFromLoad ( int setID, enum zLoadSelectType loadType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f21, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", setID, loadType);
    return _result;
}

#pragma implementation_key(8997)
inline enum femap::zReturnCode femap::Imodel::feOutputCalculate ( int outSET, enum zDataType dTYPE, int entSET, _bstr_t title, _bstr_t IDvar, _bstr_t SETvar, _bstr_t formula ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f23, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008\x0008\x0008\x0008", outSET, dTYPE, entSET, (BSTR)title, (BSTR)IDvar, (BSTR)SETvar, (BSTR)formula);
    return _result;
}

#pragma implementation_key(8998)
inline enum femap::zReturnCode femap::Imodel::feMeshSizePoint ( int pointSET, double MeshSize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f24, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", pointSET, MeshSize);
    return _result;
}

#pragma implementation_key(8999)
inline enum femap::zReturnCode femap::Imodel::feMeshSizeCurve ( int curveSET, int NumElem, double MeshSize, int minLine, int minClosed, int minOther, int spacing, int biasMethod, double bias, int biasLoc, VARIANT_BOOL CustomSize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f25, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x0003\x0003\x0003\x0003\x0003\x0005\x0003\x000b", curveSET, NumElem, MeshSize, minLine, minClosed, minOther, spacing, biasMethod, bias, biasLoc, CustomSize);
    return _result;
}

#pragma implementation_key(9000)
inline enum femap::zReturnCode femap::Imodel::feMeshSizeSurface ( int surfSET, VARIANT_BOOL replaceAll, double MeshSize, int minEdge, double maxANGLE, int maxOnSmall, double smallSize, double vertexAspect, VARIANT_BOOL mappedRefinement, double growthFactor, double refineRatio, VARIANT_BOOL refineSurf ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f26, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x0003\x0005\x0003\x0005\x0005\x000b\x0005\x0005\x000b", surfSET, replaceAll, MeshSize, minEdge, maxANGLE, maxOnSmall, smallSize, vertexAspect, mappedRefinement, growthFactor, refineRatio, refineSurf);
    return _result;
}

#pragma implementation_key(9001)
inline enum femap::zReturnCode femap::Imodel::feMeshSizeSolid ( int surfSET, VARIANT_BOOL replaceAll, double MeshSize, int minEdge, double maxANGLE, int maxOnSmall, double smallSize, double vertexAspect, VARIANT_BOOL mappedRefinement, double growthFactor, double refineRatio, VARIANT_BOOL refineSurf, VARIANT_BOOL matchAdjacent, VARIANT_BOOL hexMesh, VARIANT_BOOL adjustColor, VARIANT_BOOL removeSlaving ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f27, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x0003\x0005\x0003\x0005\x0005\x000b\x0005\x0005\x000b\x000b\x000b\x000b\x000b", surfSET, replaceAll, MeshSize, minEdge, maxANGLE, maxOnSmall, smallSize, vertexAspect, mappedRefinement, growthFactor, refineRatio, refineSurf, matchAdjacent, hexMesh, adjustColor, removeSlaving);
    return _result;
}

#pragma implementation_key(9002)
inline enum femap::zReturnCode femap::Imodel::feMeshAttrPoint ( int pointSET, int propID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f28, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", pointSET, propID);
    return _result;
}

#pragma implementation_key(9003)
inline enum femap::zReturnCode femap::Imodel::feMeshAttrCurve ( int curveSET, int propID, const _variant_t & orient, const _variant_t & offset1, const _variant_t & offset2, enum zCurveOrientType orient_type, enum zCurveOffsetType offset_type, const _variant_t & release1, const _variant_t & release2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f29, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x0003\x0003\x000c\x000c", curveSET, propID, &orient, &offset1, &offset2, orient_type, offset_type, &release1, &release2);
    return _result;
}

#pragma implementation_key(9004)
inline enum femap::zReturnCode femap::Imodel::feMeshAttrSurface ( int surfaceSET, int propID, double offset ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f2a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", surfaceSET, propID, offset);
    return _result;
}

#pragma implementation_key(9005)
inline enum femap::zReturnCode femap::Imodel::feMeshAttrSolid ( int solidSET, int propID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f2b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", solidSET, propID);
    return _result;
}

#pragma implementation_key(9006)
inline enum femap::zReturnCode femap::Imodel::feMeshApproachSurface ( int surfaceSET, int approach, const _variant_t & approachData ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f2c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", surfaceSET, approach, &approachData);
    return _result;
}

#pragma implementation_key(9007)
inline enum femap::zReturnCode femap::Imodel::feMeshPoint ( int pointSET, VARIANT_BOOL MeshElem, int propID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f2d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003", pointSET, MeshElem, propID);
    return _result;
}

#pragma implementation_key(9008)
inline enum femap::zReturnCode femap::Imodel::feMeshCurve ( int curveSET, VARIANT_BOOL MeshElem, int propID, const _variant_t & orient ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f2e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x000c", curveSET, MeshElem, propID, &orient);
    return _result;
}

#pragma implementation_key(9009)
inline enum femap::zReturnCode femap::Imodel::feMeshSurface ( int surfaceSET, int propID, int minBetween, double maxASPECT, int maxQuickNodes, int meshApproach, double quadAngle, VARIANT_BOOL midsideGeom, double midsideAngle, VARIANT_BOOL smoothLaplacian, int smoothIter, double smoothTol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f2f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0005\x0003\x0003\x0005\x000b\x0005\x000b\x0003\x0005", surfaceSET, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach, quadAngle, midsideGeom, midsideAngle, smoothLaplacian, smoothIter, smoothTol);
    return _result;
}

#pragma implementation_key(9010)
inline enum femap::zReturnCode femap::Imodel::feMeshTetSolid ( enum zDataType entityTYPE, int entitySET, int propID, VARIANT_BOOL surfaceMeshOnly, VARIANT_BOOL makeMidside, double tetGrowth, VARIANT_BOOL checkSurfElem, VARIANT_BOOL deleteSurfElem, VARIANT_BOOL midsideGeom, double midsideAngle, int allocateElem ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f30, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x0005\x000b\x000b\x000b\x0005\x0003", entityTYPE, entitySET, propID, surfaceMeshOnly, makeMidside, tetGrowth, checkSurfElem, deleteSurfElem, midsideGeom, midsideAngle, allocateElem);
    return _result;
}

#pragma implementation_key(9011)
inline enum femap::zReturnCode femap::Imodel::feMeshHexSolid ( int solidSET, int propID, VARIANT_BOOL surfaceMeshOnly, VARIANT_BOOL makeMidside, VARIANT_BOOL checkSurfElem, VARIANT_BOOL deleteSurfElem, VARIANT_BOOL midsideGeom, double midsideAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f31, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x0005", solidSET, propID, surfaceMeshOnly, makeMidside, checkSurfElem, deleteSurfElem, midsideGeom, midsideAngle);
    return _result;
}

#pragma implementation_key(9012)
inline enum femap::zReturnCode femap::Imodel::feMeshHexSolidFromElement ( int baseSET, int topSET, int propID, int numLayer, int match1, int match2, VARIANT_BOOL makeMidside, VARIANT_BOOL checkSurfElem, VARIANT_BOOL deleteSurfElem ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f32, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x000b\x000b\x000b", baseSET, topSET, propID, numLayer, match1, match2, makeMidside, checkSurfElem, deleteSurfElem);
    return _result;
}

#pragma implementation_key(9013)
inline enum femap::zReturnCode femap::Imodel::feMeshBetween ( int propID, int genMode, int shape, VARIANT_BOOL rightSplit, VARIANT_BOOL alternate, VARIANT_BOOL allQuad, VARIANT_BOOL logSpacing, int numCorners, const _variant_t & numNodes, const _variant_t & bias, const _variant_t & nodeINC, const _variant_t & cornerXYZ ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f33, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x000b\x000b\x0003\x000c\x000c\x000c\x000c", propID, genMode, shape, rightSplit, alternate, allQuad, logSpacing, numCorners, &numNodes, &bias, &nodeINC, &cornerXYZ);
    return _result;
}

#pragma implementation_key(9014)
inline enum femap::zReturnCode femap::Imodel::feMeshClosestLink ( int fromSET, int toSET, int connectWith, const _variant_t & orient, const _variant_t & dof, VARIANT_BOOL Reverse ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f34, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c\x000b", fromSET, toSET, connectWith, &orient, &dof, Reverse);
    return _result;
}

#pragma implementation_key(9015)
inline enum femap::zReturnCode femap::Imodel::feMeshCoincidentLink ( int fromSET, int connectWith, const _variant_t & orient, const _variant_t & dof, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005", fromSET, connectWith, &orient, &dof, tolerance);
    return _result;
}

#pragma implementation_key(9016)
inline enum femap::zReturnCode femap::Imodel::feMeshUnzip ( int fromSET, int toSET, int connectWith, const _variant_t & orient, const _variant_t & dof ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f36, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c", fromSET, toSET, connectWith, &orient, &dof);
    return _result;
}

#pragma implementation_key(9017)
inline enum femap::zReturnCode femap::Imodel::feMeshTransition ( VARIANT_BOOL useNodes, int entCOUNT, const _variant_t & entID, const _variant_t & edgeNUM, const _variant_t & edgeBIAS, const _variant_t & edgeSIZE, int propID, int minBetween, double maxASPECT, int maxQuickNodes, int meshApproach, double quadAngle, VARIANT_BOOL smoothLaplacian, int smoothIter, double smoothTol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f37, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x000c\x000c\x000c\x000c\x0003\x0003\x0005\x0003\x0003\x0005\x000b\x0003\x0005", useNodes, entCOUNT, &entID, &edgeNUM, &edgeBIAS, &edgeSIZE, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach, quadAngle, smoothLaplacian, smoothIter, smoothTol);
    return _result;
}

#pragma implementation_key(9018)
inline enum femap::zReturnCode femap::Imodel::feMeshRemesh ( int elemSET, int nodeSET, int remeshMode, int refineRatio, double breakAngle, VARIANT_BOOL deleteOrig, int propID, int minBetween, double maxASPECT, int maxQuickNodes, int meshApproach, double quadAngle, VARIANT_BOOL smoothLaplacian, int smoothIter, double smoothTol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f38, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0005\x000b\x0003\x0003\x0005\x0003\x0003\x0005\x000b\x0003\x0005", elemSET, nodeSET, remeshMode, refineRatio, breakAngle, deleteOrig, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach, quadAngle, smoothLaplacian, smoothIter, smoothTol);
    return _result;
}

#pragma implementation_key(9019)
inline enum femap::zReturnCode femap::Imodel::feMeshConvertFacets ( int solidID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f39, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", solidID);
    return _result;
}

#pragma implementation_key(9020)
inline enum femap::zReturnCode femap::Imodel::feMeshCleanupSlivers ( int elemSET, double minAngle, double minLength ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f3a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005", elemSET, minAngle, minLength);
    return _result;
}

#pragma implementation_key(9021)
inline enum femap::zReturnCode femap::Imodel::feMeshEdgeRemoval ( int elemSET, int nd1, int nd2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f3b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", elemSET, nd1, nd2);
    return _result;
}

#pragma implementation_key(9022)
inline enum femap::zReturnCode femap::Imodel::feMeshBuildRemeshRegions ( int elemSET, double breakAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f3c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", elemSET, breakAngle);
    return _result;
}

#pragma implementation_key(9023)
inline enum femap::zReturnCode femap::Imodel::feMeshEditRemeshRegions ( int el1, int el2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f3d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", el1, el2);
    return _result;
}

#pragma implementation_key(9024)
inline enum femap::zReturnCode femap::Imodel::feMeshRemeshRegions ( double MeshSize, int propID, int minBetween, double maxASPECT, int maxQuickNodes, int meshApproach, double quadAngle, VARIANT_BOOL smoothLaplacian, int smoothIter, double smoothTol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f3e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x0003\x0005\x0003\x0003\x0005\x000b\x0003\x0005", MeshSize, propID, minBetween, maxASPECT, maxQuickNodes, meshApproach, quadAngle, smoothLaplacian, smoothIter, smoothTol);
    return _result;
}

#pragma implementation_key(9025)
inline enum femap::zReturnCode femap::Imodel::feMeshEdgeMembers ( int elemSET, int nodeSET, int propID, const _variant_t & orient ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f3f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", elemSET, nodeSET, propID, &orient);
    return _result;
}

#pragma implementation_key(9026)
inline enum femap::zReturnCode femap::Imodel::feMeshSmooth ( int elemSET, VARIANT_BOOL laplaceSmooth, int iter, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f40, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x0005", elemSET, laplaceSmooth, iter, tolerance);
    return _result;
}

#pragma implementation_key(9027)
inline enum femap::zReturnCode femap::Imodel::feMeshExtrudeElem ( int elemSET, double axisLEN, const _variant_t & axisVEC, int propID, int NumElem, int method, VARIANT_BOOL matchCurrent, VARIANT_BOOL deleteOrig ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f41, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000c\x0003\x0003\x0003\x000b\x000b", elemSET, axisLEN, &axisVEC, propID, NumElem, method, matchCurrent, deleteOrig);
    return _result;
}

#pragma implementation_key(9028)
inline enum femap::zReturnCode femap::Imodel::feMeshExtrudeCurve ( int curveSET, double axisLEN, const _variant_t & axisVEC, int propID, int NumElem ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f42, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000c\x0003\x0003", curveSET, axisLEN, &axisVEC, propID, NumElem);
    return _result;
}

#pragma implementation_key(9029)
inline enum femap::zReturnCode femap::Imodel::feMeshRevolveElem ( int elemSET, double rotANGLE, double rotThrust, const _variant_t & axisOrig, const _variant_t & axisVEC, int propID, int NumElem, VARIANT_BOOL matchCurrent, VARIANT_BOOL deleteOrig ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f43, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x000c\x000c\x0003\x0003\x000b\x000b", elemSET, rotANGLE, rotThrust, &axisOrig, &axisVEC, propID, NumElem, matchCurrent, deleteOrig);
    return _result;
}

#pragma implementation_key(9030)
inline enum femap::zReturnCode femap::Imodel::feMeshRevolveCurve ( int curveSET, double rotANGLE, double rotThrust, const _variant_t & axisOrig, const _variant_t & axisVEC, int propID, int NumElem ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f44, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x000c\x000c\x0003\x0003", curveSET, rotANGLE, rotThrust, &axisOrig, &axisVEC, propID, NumElem);
    return _result;
}

#pragma implementation_key(9031)
inline enum femap::zReturnCode femap::Imodel::feMeshSweepElem ( int elemSET, int numPath, const _variant_t & curvePath, int numAlign, const _variant_t & curveAlign, const _variant_t & alignLoc, int propID, VARIANT_BOOL matchCurrent, VARIANT_BOOL deleteOrig ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f45, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x000c\x000c\x0003\x000b\x000b", elemSET, numPath, &curvePath, numAlign, &curveAlign, &alignLoc, propID, matchCurrent, deleteOrig);
    return _result;
}

#pragma implementation_key(9032)
inline enum femap::zReturnCode femap::Imodel::feMeshSweepCurve ( int curveSET, int numPath, const _variant_t & curvePath, int numAlign, const _variant_t & curveAlign, const _variant_t & alignLoc, int propID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f46, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x000c\x000c\x0003", curveSET, numPath, &curvePath, numAlign, &curveAlign, &alignLoc, propID);
    return _result;
}

#pragma implementation_key(9033)
inline enum femap::zReturnCode femap::Imodel::feProjectOntoCurve ( enum zDataType entityTYPE, int entitySET, int curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f47, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entitySET, curveID);
    return _result;
}

#pragma implementation_key(9034)
inline enum femap::zReturnCode femap::Imodel::feProjectOntoSurface ( enum zDataType entityTYPE, int entitySET, int surfaceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f48, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entitySET, surfaceID);
    return _result;
}

#pragma implementation_key(9035)
inline enum femap::zReturnCode femap::Imodel::feProjectOntoSolid ( int nodeSET, int elemSET, int solidID, int surfCount, const _variant_t & surfID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f49, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c", nodeSET, elemSET, solidID, surfCount, &surfID);
    return _result;
}

#pragma implementation_key(9036)
inline enum femap::zReturnCode femap::Imodel::feMoveTo ( enum zDataType entityTYPE, int entitySET, double x, double y, double z, VARIANT_BOOL doX, VARIANT_BOOL doY, VARIANT_BOOL doZ, int inCsys, VARIANT_BOOL moveRef ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x0005\x0005\x000b\x000b\x000b\x0003\x000b", entityTYPE, entitySET, x, y, z, doX, doY, doZ, inCsys, moveRef);
    return _result;
}

#pragma implementation_key(9037)
inline enum femap::zReturnCode femap::Imodel::feMoveBy ( enum zDataType entityTYPE, int entitySET, VARIANT_BOOL radial, double Length, const _variant_t & vecLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x0005\x000c", entityTYPE, entitySET, radial, Length, &vecLoc);
    return _result;
}

#pragma implementation_key(9038)
inline enum femap::zReturnCode femap::Imodel::feMoveOffset ( int elemSET, int method, double Length, const _variant_t & alongVEC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x000c", elemSET, method, Length, &alongVEC);
    return _result;
}

#pragma implementation_key(9039)
inline enum femap::zReturnCode femap::Imodel::feRotateTo ( enum zDataType entityTYPE, int entitySET, const _variant_t & axisLoc, const _variant_t & axisVEC, const _variant_t & fromLoc, const _variant_t & toLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x000c", entityTYPE, entitySET, &axisLoc, &axisVEC, &fromLoc, &toLoc);
    return _result;
}

#pragma implementation_key(9040)
inline enum femap::zReturnCode femap::Imodel::feRotateBy ( enum zDataType entityTYPE, int entitySET, const _variant_t & axisLoc, const _variant_t & axisVEC, double angle, double thrust ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x0005", entityTYPE, entitySET, &axisLoc, &axisVEC, angle, thrust);
    return _result;
}

#pragma implementation_key(9041)
inline enum femap::zReturnCode femap::Imodel::feAlignTo ( enum zDataType entityTYPE, int entitySET, const _variant_t & fromLoc, const _variant_t & fromVec, const _variant_t & toLoc, const _variant_t & toVec ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f4f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x000c\x000c", entityTYPE, entitySET, &fromLoc, &fromVec, &toLoc, &toVec);
    return _result;
}

#pragma implementation_key(9042)
inline enum femap::zReturnCode femap::Imodel::feScale ( enum zDataType entityTYPE, int entitySET, const _variant_t & fromLoc, int csysID, double xScale, double yScale, double zScale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f50, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x0005\x0005\x0005", entityTYPE, entitySET, &fromLoc, csysID, xScale, yScale, zScale);
    return _result;
}

#pragma implementation_key(9043)
inline enum femap::zReturnCode femap::Imodel::feModifyColor ( enum zDataType entityTYPE, int entitySET, enum zColor color, VARIANT_BOOL randomize ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f51, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", entityTYPE, entitySET, color, randomize);
    return _result;
}

#pragma implementation_key(9044)
inline enum femap::zReturnCode femap::Imodel::feModifyLayer ( enum zDataType entityTYPE, int entitySET, int layer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f52, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entitySET, layer);
    return _result;
}

#pragma implementation_key(9045)
inline enum femap::zReturnCode femap::Imodel::feModifyTransparency ( enum zDataType entityTYPE, int entitySET, double transparency ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f53, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", entityTYPE, entitySET, transparency);
    return _result;
}

#pragma implementation_key(9046)
inline enum femap::zReturnCode femap::Imodel::feRenumber ( enum zDataType entityTYPE, int entitySET, int startID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f54, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entitySET, startID);
    return _result;
}

#pragma implementation_key(9047)
inline enum femap::zReturnCode femap::Imodel::feMeshAttach ( enum zDataType entityTYPE, int entitySET, enum zDataType attachTYPE, int attachID, VARIANT_BOOL doNodes ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f55, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000b", entityTYPE, entitySET, attachTYPE, attachID, doNodes);
    return _result;
}

#pragma implementation_key(9048)
inline enum femap::zReturnCode femap::Imodel::feMeshDetach ( enum zDataType entityTYPE, int entitySET, enum zDataType attachTYPE, int attachID, VARIANT_BOOL interior ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f56, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000b", entityTYPE, entitySET, attachTYPE, attachID, interior);
    return _result;
}

#pragma implementation_key(9049)
inline enum femap::zReturnCode femap::Imodel::feModifyDefCSys ( enum zDataType entityTYPE, int entitySET, int csysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f57, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entitySET, csysID);
    return _result;
}

#pragma implementation_key(9050)
inline enum femap::zReturnCode femap::Imodel::feModifyOutCSys ( enum zDataType entityTYPE, int entitySET, int ssysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f58, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", entityTYPE, entitySET, ssysID);
    return _result;
}

#pragma implementation_key(9051)
inline enum femap::zReturnCode femap::Imodel::feModifyPermBC ( int entitySET, VARIANT_BOOL t1, VARIANT_BOOL t2, VARIANT_BOOL t3, VARIANT_BOOL r1, VARIANT_BOOL r2, VARIANT_BOOL r3 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f59, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000b\x000b\x000b", entitySET, t1, t2, t3, r1, r2, r3);
    return _result;
}

#pragma implementation_key(9052)
inline enum femap::zReturnCode femap::Imodel::feModifySplineOrder ( int entitySET, int order ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f5a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entitySET, order);
    return _result;
}

#pragma implementation_key(9053)
inline enum femap::zReturnCode femap::Imodel::feModifySplineKnots ( int entitySET, const _variant_t & knotLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f5b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c", entitySET, &knotLoc);
    return _result;
}

#pragma implementation_key(9054)
inline enum femap::zReturnCode femap::Imodel::feModifyReverseCurve ( int entitySET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f5c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entitySET);
    return _result;
}

#pragma implementation_key(9055)
inline enum femap::zReturnCode femap::Imodel::feModifySurfaceDivisions ( int entitySET, int sDiv, int tDiv, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f5d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0005", entitySET, sDiv, tDiv, tolerance);
    return _result;
}

#pragma implementation_key(9056)
inline enum femap::zReturnCode femap::Imodel::feModifyLoadPhase ( enum zDataType entityTYPE, int entitySET, double phase ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f5e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", entityTYPE, entitySET, phase);
    return _result;
}

#pragma implementation_key(9057)
inline enum femap::zReturnCode femap::Imodel::feModifyElemPropID ( int entitySET, int propID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f5f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entitySET, propID);
    return _result;
}

#pragma implementation_key(9058)
inline enum femap::zReturnCode femap::Imodel::feModifyPropMatlID ( int entitySET, int matlID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f60, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entitySET, matlID);
    return _result;
}

#pragma implementation_key(9059)
inline enum femap::zReturnCode femap::Imodel::feModifyMaterialAngle ( int entitySET, int method, const _variant_t & vecDIR, int coordDir, int coordCsys, double angle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f61, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x0003\x0005", entitySET, method, &vecDIR, coordDir, coordCsys, angle);
    return _result;
}

#pragma implementation_key(9060)
inline enum femap::zReturnCode femap::Imodel::feModifyElemReverse ( int entitySET, int method, const _variant_t & vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f62, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c", entitySET, method, &vecDIR);
    return _result;
}

#pragma implementation_key(9061)
inline enum femap::zReturnCode femap::Imodel::feModifyElemRelease ( int entitySET, const _variant_t & rel1, const _variant_t & rel2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f63, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c", entitySET, &rel1, &rel2);
    return _result;
}

#pragma implementation_key(9062)
inline enum femap::zReturnCode femap::Imodel::feModifyElemOrder ( int entitySET, VARIANT_BOOL makeParabolic, VARIANT_BOOL ontoGeom, double maxANGLE ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f64, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x0005", entitySET, makeParabolic, ontoGeom, maxANGLE);
    return _result;
}

#pragma implementation_key(9063)
inline enum femap::zReturnCode femap::Imodel::feModifyMidside ( int elemSET, int nodeSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f65, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", elemSET, nodeSET);
    return _result;
}

#pragma implementation_key(9064)
inline enum femap::zReturnCode femap::Imodel::feModifyFormulation ( int elemSET, int form1, int form2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f66, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", elemSET, form1, form2);
    return _result;
}

#pragma implementation_key(9065)
inline enum femap::zReturnCode femap::Imodel::feModifySplitQuads ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f67, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(9066)
inline enum femap::zReturnCode femap::Imodel::feModifyOffsets ( int entitySET, VARIANT_BOOL endA, VARIANT_BOOL endB, VARIANT_BOOL radial, const _variant_t & off1, const _variant_t & off2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f68, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000c\x000c", entitySET, endA, endB, radial, &off1, &off2);
    return _result;
}

#pragma implementation_key(9067)
inline enum femap::zReturnCode femap::Imodel::feModifyOrient ( int entitySET, int method, int NodeID, const _variant_t & orVec ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f69, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", entitySET, method, NodeID, &orVec);
    return _result;
}

#pragma implementation_key(9068)
inline enum femap::zReturnCode femap::Imodel::feModifyElemType ( int entitySET, int propID, int method, int NodeID, const _variant_t & orVec ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f6a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c", entitySET, propID, method, NodeID, &orVec);
    return _result;
}

#pragma implementation_key(9069)
inline int femap::Imodel::feAppLockExit ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4f6b, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9070)
inline int femap::Imodel::feAppUnlockExit ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4f6c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9071)
inline int femap::Imodel::feAppLockModel ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4f6d, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9072)
inline int femap::Imodel::feAppUnlockModel ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4f6e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9073)
inline enum femap::zReturnCode femap::Imodel::feAppEmbed ( int windowID, int x, int y, int cx, int cy ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f6f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003", windowID, x, y, cx, cy);
    return _result;
}

#pragma implementation_key(9074)
inline enum femap::zReturnCode femap::Imodel::feAppVisible ( VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f70, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", Visible);
    return _result;
}

#pragma implementation_key(9075)
inline enum femap::zReturnCode femap::Imodel::feAppRegisterMessageHandler ( VARIANT_BOOL regster, int windowID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f71, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", regster, windowID);
    return _result;
}

#pragma implementation_key(9076)
inline enum femap::zReturnCode femap::Imodel::feModifySuperelementID ( int entitySET, int nSEID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f72, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entitySET, nSEID);
    return _result;
}

#pragma implementation_key(9077)
inline enum femap::zReturnCode femap::Imodel::feModifyOffsetsToRefPt ( int entitySET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f73, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", entitySET);
    return _result;
}

#pragma implementation_key(9078)
inline enum femap::zReturnCode femap::Imodel::feModifyBeamWarping ( int entitySET, int method, enum zNodeType nodeType, int autoENDA, int autoENDB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f74, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003", entitySET, method, nodeType, autoENDA, autoENDB);
    return _result;
}

#pragma implementation_key(9079)
inline enum femap::zReturnCode femap::Imodel::feGroupEvaluate ( int groupSET, VARIANT_BOOL forceEval ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f75, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", groupSET, forceEval);
    return _result;
}

#pragma implementation_key(9080)
inline enum femap::zReturnCode femap::Imodel::feLoadCombine ( int fromSET, int toSET, double Scale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f76, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", fromSET, toSET, Scale);
    return _result;
}

#pragma implementation_key(9081)
inline enum femap::zReturnCode femap::Imodel::feBCCombine ( int fromSET, int toSET, VARIANT_BOOL overwrite ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f77, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", fromSET, toSET, overwrite);
    return _result;
}

#pragma implementation_key(9082)
inline enum femap::zReturnCode femap::Imodel::feAppGetModelName ( __int64 nModelID, BSTR * ModelName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f78, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014\x4008", nModelID, ModelName);
    return _result;
}

#pragma implementation_key(9083)
inline enum femap::zReturnCode femap::Imodel::feFileClose ( VARIANT_BOOL bSaveChanges ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f79, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bSaveChanges);
    return _result;
}

#pragma implementation_key(9084)
inline enum femap::zReturnCode femap::Imodel::feAppSetModel ( __int64 nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f7a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0014", nModelID);
    return _result;
}

#pragma implementation_key(9085)
inline enum femap::zReturnCode femap::Imodel::feAppGetModel ( __int64 * nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f7b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4014", nModelID);
    return _result;
}

#pragma implementation_key(9086)
inline enum femap::zReturnCode femap::Imodel::feAppSetModelByName ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f7c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(9087)
inline enum femap::zReturnCode femap::Imodel::feAppCountModels ( int * numModels ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f7d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", numModels);
    return _result;
}

#pragma implementation_key(9088)
inline enum femap::zReturnCode femap::Imodel::feAppGetAllModels ( int * numModels, VARIANT * nModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f7e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numModels, nModelID);
    return _result;
}

#pragma implementation_key(9089)
inline enum femap::zReturnCode femap::Imodel::feAppRegisterAddInPane ( VARIANT_BOOL regster, int windowID, int messageID, VARIANT_BOOL bPreventClose, VARIANT_BOOL bPreventHide, int location, int neighborID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f7f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000b\x000b\x0003\x0003", regster, windowID, messageID, bPreventClose, bPreventHide, location, neighborID);
    return _result;
}

#pragma implementation_key(9090)
inline enum femap::zReturnCode femap::Imodel::feAppManageToolbars ( _bstr_t BarName, VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f80, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)BarName, Visible);
    return _result;
}

#pragma implementation_key(9091)
inline enum femap::zReturnCode femap::Imodel::feAppManagePanes ( _bstr_t PaneName, int action ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f81, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)PaneName, action);
    return _result;
}

#pragma implementation_key(9092)
inline enum femap::zReturnCode femap::Imodel::feAppManageStatusBar ( VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f82, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", Visible);
    return _result;
}

#pragma implementation_key(9093)
inline enum femap::zReturnCode femap::Imodel::feAppManageGraphicsTabs ( VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f83, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", Visible);
    return _result;
}

#pragma implementation_key(9094)
inline enum femap::zReturnCode femap::Imodel::feGetToolbars ( int * numBars, VARIANT * barID, VARIANT * barVisible, VARIANT * barTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f84, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c", numBars, barID, barVisible, barTitle);
    return _result;
}

#pragma implementation_key(9095)
inline enum femap::zReturnCode femap::Imodel::feGetToolbarCommands ( _bstr_t BarName, int * numCmds, VARIANT * cmdID, VARIANT * cmdVisible, VARIANT * cmdSubmenu, VARIANT * cmdTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f85, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003\x400c\x400c\x400c\x400c", (BSTR)BarName, numCmds, cmdID, cmdVisible, cmdSubmenu, cmdTitle);
    return _result;
}

#pragma implementation_key(9096)
inline enum femap::zReturnCode femap::Imodel::feGetToolbarSubCommands ( int cmdID, int * numSubCmds, VARIANT * subcmdID, VARIANT * subcmdVisible, VARIANT * subcmdTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f86, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c\x400c", cmdID, numSubCmds, subcmdID, subcmdVisible, subcmdTitle);
    return _result;
}

#pragma implementation_key(9097)
inline enum femap::zReturnCode femap::Imodel::feAddUserCommand ( _bstr_t strTitle, _bstr_t strCmd, _bstr_t strArg, _bstr_t strStartDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f87, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x0008", (BSTR)strTitle, (BSTR)strCmd, (BSTR)strArg, (BSTR)strStartDir);
    return _result;
}

#pragma implementation_key(9098)
inline enum femap::zReturnCode femap::Imodel::feGetUserCommands ( int * numCmd, VARIANT * strTitle, VARIANT * strCmd, VARIANT * strArg, VARIANT * strStartDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f88, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c\x400c\x400c\x400c", numCmd, strTitle, strCmd, strArg, strStartDir);
    return _result;
}

#pragma implementation_key(9099)
inline enum femap::zReturnCode femap::Imodel::feDeleteUserCommand ( _bstr_t strTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f89, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)strTitle);
    return _result;
}

#pragma implementation_key(9100)
inline enum femap::zReturnCode femap::Imodel::feGetMenuCommands ( _bstr_t menuName1, _bstr_t menuName2, int * numCmds, VARIANT * cmdID, VARIANT * cmdTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f8a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x4003\x400c\x400c", (BSTR)menuName1, (BSTR)menuName2, numCmds, cmdID, cmdTitle);
    return _result;
}

#pragma implementation_key(9101)
inline enum femap::zReturnCode femap::Imodel::feGetMenuCommand ( _bstr_t menuName1, _bstr_t menuName2, _bstr_t menuName3, int * cmdID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f8b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x0008\x4003", (BSTR)menuName1, (BSTR)menuName2, (BSTR)menuName3, cmdID);
    return _result;
}

#pragma implementation_key(9102)
inline enum femap::zReturnCode femap::Imodel::feSetToolbarVisible ( _bstr_t BarName, VARIANT_BOOL bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f8c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)BarName, bVisible);
    return _result;
}

#pragma implementation_key(9103)
inline enum femap::zReturnCode femap::Imodel::feSetToolbarCommandVisible ( _bstr_t BarName, int cmdID, VARIANT_BOOL bVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f8d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b", (BSTR)BarName, cmdID, bVisible);
    return _result;
}

#pragma implementation_key(9104)
inline enum femap::zReturnCode femap::Imodel::feSetToolbarCommandTitle ( _bstr_t BarName, int cmdID, _bstr_t cmdTitle, _bstr_t cmdToolTip, _bstr_t cmdDescription ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f8e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008\x0008\x0008", (BSTR)BarName, cmdID, (BSTR)cmdTitle, (BSTR)cmdToolTip, (BSTR)cmdDescription);
    return _result;
}

#pragma implementation_key(9105)
inline enum femap::zReturnCode femap::Imodel::feResetToolbar ( _bstr_t BarName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f8f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)BarName);
    return _result;
}

#pragma implementation_key(9106)
inline enum femap::zReturnCode femap::Imodel::feAddToolbar ( _bstr_t BarName, int barLocation ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f90, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)BarName, barLocation);
    return _result;
}

#pragma implementation_key(9107)
inline enum femap::zReturnCode femap::Imodel::feDeleteToolbar ( _bstr_t BarName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f91, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)BarName);
    return _result;
}

#pragma implementation_key(9108)
inline enum femap::zReturnCode femap::Imodel::feAddToolbarCommand ( _bstr_t BarName, int cmdIndex, int cmdID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f92, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)BarName, cmdIndex, cmdID);
    return _result;
}

#pragma implementation_key(9109)
inline enum femap::zReturnCode femap::Imodel::feAddToolbarUserCommand ( _bstr_t BarName, int cmdIndex, _bstr_t cmdTitle, _bstr_t cmdBitmap, int * cmdID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f93, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008\x0008\x4003", (BSTR)BarName, cmdIndex, (BSTR)cmdTitle, (BSTR)cmdBitmap, cmdID);
    return _result;
}

#pragma implementation_key(9110)
inline enum femap::zReturnCode femap::Imodel::feSaveToolbarLayout ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f94, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(9111)
inline enum femap::zReturnCode femap::Imodel::feLoadToolbarLayout ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f95, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(9112)
inline enum femap::zReturnCode femap::Imodel::feGetToolbarCommand ( _bstr_t BarName, int cmdIndex, int * cmdID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f96, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003", (BSTR)BarName, cmdIndex, cmdID);
    return _result;
}

#pragma implementation_key(9113)
inline enum femap::zReturnCode femap::Imodel::feSetToolbarCommandBitmap ( int cmdID, _bstr_t cmdBitmap ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f97, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", cmdID, (BSTR)cmdBitmap);
    return _result;
}

#pragma implementation_key(9114)
inline enum femap::zReturnCode femap::Imodel::feAppGetActiveView ( int * nViewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f98, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", nViewID);
    return _result;
}

#pragma implementation_key(9115)
inline enum femap::zReturnCode femap::Imodel::feAppSetActiveView ( int nViewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f99, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nViewID);
    return _result;
}

#pragma implementation_key(9116)
inline enum femap::zReturnCode femap::Imodel::feAppGetAllViews ( int * numViews, VARIANT * nViewID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f9a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x400c", numViews, nViewID);
    return _result;
}

#pragma implementation_key(9117)
inline enum femap::zReturnCode femap::Imodel::feSEGetEntityMap ( int nEntity, int * numID, VARIANT * nFemapID, VARIANT * nSEdgeID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f9b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x400c\x400c", nEntity, numID, nFemapID, nSEdgeID);
    return _result;
}

#pragma implementation_key(9118)
inline enum femap::zReturnCode femap::Imodel::feModifyNoMergeCurve ( int entitySET, VARIANT_BOOL bNoMerge ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f9c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", entitySET, bNoMerge);
    return _result;
}

#pragma implementation_key(9119)
inline enum femap::zReturnCode femap::Imodel::feLicenseExpiration ( int * nDays ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f9d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", nDays);
    return _result;
}

#pragma implementation_key(9120)
inline enum femap::zReturnCode femap::Imodel::feRunCommand ( int nCmdID, VARIANT_BOOL bWaitForCompletion ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f9e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", nCmdID, bWaitForCompletion);
    return _result;
}

#pragma implementation_key(9121)
inline enum femap::zReturnCode femap::Imodel::feCoordArrayTransform2 ( int Count, int fromCSYS, int toCSYS, const _variant_t & inXYZ, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4f9f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x400c", Count, fromCSYS, toCSYS, &inXYZ, xyz);
    return _result;
}

#pragma implementation_key(9122)
inline enum femap::zReturnCode femap::Imodel::feRenumberOpt ( enum zDataType entityTYPE, int entitySET, int startID, int renumMethod, int renumCSys, VARIANT_BOOL renumAbs, VARIANT_BOOL renumDescend, VARIANT_BOOL renumConstOff ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000b\x000b\x000b", entityTYPE, entitySET, startID, renumMethod, renumCSys, renumAbs, renumDescend, renumConstOff);
    return _result;
}

#pragma implementation_key(9123)
inline enum femap::zReturnCode femap::Imodel::feFileWriteSEPost ( _bstr_t fName, VARIANT_BOOL bOutputSurfaceMap ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)fName, bOutputSurfaceMap);
    return _result;
}

#pragma implementation_key(9124)
inline enum femap::zReturnCode femap::Imodel::feCurveProjectOntoSurfaces ( VARIANT_BOOL projectNormal, const _variant_t & along, int faceSET, int curveSET, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x0003\x0003\x000b", projectNormal, &along, faceSET, curveSET, messages);
    return _result;
}

#pragma implementation_key(9125)
inline enum femap::zReturnCode femap::Imodel::feAppUpdatePanes ( VARIANT_BOOL bFullRefresh ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bFullRefresh);
    return _result;
}

#pragma implementation_key(9126)
inline enum femap::zReturnCode femap::Imodel::feAppMessageBox ( int msgmode, _bstr_t message ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", msgmode, (BSTR)message);
    return _result;
}

#pragma implementation_key(9127)
inline enum femap::zReturnCode femap::Imodel::feFileProgramRunning ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa5, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9128)
inline enum femap::zReturnCode femap::Imodel::feWindowMinimize ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(9129)
inline enum femap::zReturnCode femap::Imodel::feWindowMaximize ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(9130)
inline enum femap::zReturnCode femap::Imodel::feWindowRestore ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(9131)
inline enum femap::zReturnCode femap::Imodel::feAppLockDraw ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fa9, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9132)
inline enum femap::zReturnCode femap::Imodel::feAppUnlockDraw ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4faa, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9133)
inline enum femap::zReturnCode femap::Imodel::feWindowRedraw ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fab, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(9134)
inline enum femap::zReturnCode femap::Imodel::feWindowRegenerate ( int vuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fac, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", vuID);
    return _result;
}

#pragma implementation_key(9135)
inline enum femap::zReturnCode femap::Imodel::feWindowShow ( enum zDataType dTYPE, int ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fad, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", dTYPE, ID);
    return _result;
}

#pragma implementation_key(9136)
inline enum femap::zReturnCode femap::Imodel::feWindowVisible ( int vuID, VARIANT_BOOL Visible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fae, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", vuID, Visible);
    return _result;
}

#pragma implementation_key(9137)
inline enum femap::zReturnCode femap::Imodel::feWindowTile ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4faf, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9138)
inline enum femap::zReturnCode femap::Imodel::feWindowCascade ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb0, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9139)
inline enum femap::zReturnCode femap::Imodel::feSplineBlend ( int curve1, const _variant_t & near1, int curve2, const _variant_t & near2, double factor, VARIANT_BOOL messages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x0003\x000c\x0005\x000b", curve1, &near1, curve2, &near2, factor, messages);
    return _result;
}

#pragma implementation_key(9140)
inline enum femap::zReturnCode femap::Imodel::feWindowTileHorz ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb2, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9141)
inline enum femap::zReturnCode femap::Imodel::feAppColorPalette ( enum zColor nDefault, enum zColor * nColor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nDefault, nColor);
    return _result;
}

#pragma implementation_key(9142)
inline enum femap::zReturnCode femap::Imodel::feAddToolbarSubmenu ( _bstr_t BarName, int cmdIndex, _bstr_t menuName, int * menuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008\x4003", (BSTR)BarName, cmdIndex, (BSTR)menuName, menuID);
    return _result;
}

#pragma implementation_key(9143)
inline enum femap::zReturnCode femap::Imodel::feAddToolbarSubmenuCommand ( int menuID, int cmdIndex, int cmdID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", menuID, cmdIndex, cmdID);
    return _result;
}

#pragma implementation_key(9144)
inline enum femap::zReturnCode femap::Imodel::feAddToolbarSubmenuUserCommand ( int menuID, int cmdIndex, _bstr_t cmdTitle, _bstr_t cmdBitmap, int * cmdID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008\x0008\x4003", menuID, cmdIndex, (BSTR)cmdTitle, (BSTR)cmdBitmap, cmdID);
    return _result;
}

#pragma implementation_key(9145)
inline enum femap::zReturnCode femap::Imodel::feProjectAlongVector ( enum zDataType entityTYPE, int entitySET, int surfaceSET, const _variant_t & vecAlong ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", entityTYPE, entitySET, surfaceSET, &vecAlong);
    return _result;
}

#pragma implementation_key(9146)
inline enum femap::zReturnCode femap::Imodel::feWindowSetRect ( int vuID, double pctLeft, double pctTop, double pctRight, double pctBottom ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0005\x0005", vuID, pctLeft, pctTop, pctRight, pctBottom);
    return _result;
}

#pragma implementation_key(9147)
inline enum femap::zReturnCode femap::Imodel::feWindowTitle ( int vuID, _bstr_t sTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fb9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", vuID, (BSTR)sTitle);
    return _result;
}

#pragma implementation_key(9148)
inline enum femap::zReturnCode femap::Imodel::feGFXSelect ( int nSetID, VARIANT_BOOL bEnableAll, VARIANT_BOOL bRedraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fba, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b", nSetID, bEnableAll, bRedraw);
    return _result;
}

#pragma implementation_key(9149)
inline enum femap::zReturnCode femap::Imodel::feGFXReset ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fbb, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9150)
inline enum femap::zReturnCode femap::Imodel::feGFXEnableView ( VARIANT_BOOL bEnableAll, int nVuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fbc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bEnableAll, nVuID);
    return _result;
}

#pragma implementation_key(9151)
inline enum femap::zReturnCode femap::Imodel::feGFXDelete ( VARIANT_BOOL bAllSets, int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fbd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003", bAllSets, nSetID);
    return _result;
}

#pragma implementation_key(9152)
inline enum femap::zReturnCode femap::Imodel::feGFXLoad ( int nSetID, int nxyz, const _variant_t & xyz, int npoly, const _variant_t & poly, enum zColor color, enum zColor edgecolor, enum zGFXPointSymbol symbol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fbe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x000c\x0003\x0003\x0003", nSetID, nxyz, &xyz, npoly, &poly, color, edgecolor, symbol);
    return _result;
}

#pragma implementation_key(9153)
inline int femap::Imodel::feOutputConvertV92VectorID ( int oldVecID ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4fbf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", oldVecID);
    return _result;
}

#pragma implementation_key(9154)
inline enum femap::zReturnCode femap::Imodel::feProjectOntoVector ( enum zDataType entityTYPE, int entitySET, const _variant_t & vecLoc, const _variant_t & vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", entityTYPE, entitySET, &vecLoc, &vecDIR);
    return _result;
}

#pragma implementation_key(9155)
inline enum femap::zReturnCode femap::Imodel::feProjectOntoPlane ( enum zDataType entityTYPE, int entitySET, const _variant_t & planeLoc, const _variant_t & planeNormal ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c", entityTYPE, entitySET, &planeLoc, &planeNormal);
    return _result;
}

#pragma implementation_key(9156)
inline enum femap::zReturnCode femap::Imodel::feAppEventCallback ( enum zEventCode eventID, _bstr_t callback ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008", eventID, (BSTR)callback);
    return _result;
}

#pragma implementation_key(9157)
inline enum femap::zReturnCode femap::Imodel::feGroupCombine ( int groupSET, int * groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", groupSET, groupID);
    return _result;
}

#pragma implementation_key(9158)
inline enum femap::zReturnCode femap::Imodel::feFileWriteNeutral2 ( int brand, _bstr_t fName, VARIANT_BOOL write_geometry_model, VARIANT_BOOL write_analysis_model, VARIANT_BOOL write_output, VARIANT_BOOL write_selector, VARIANT_BOOL write_palette, VARIANT_BOOL write_groups, VARIANT_BOOL write_views, VARIANT_BOOL write_addl_info, VARIANT_BOOL expand_geometric, VARIANT_BOOL minimize_size, int digits, double version, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0003\x0005\x0003", brand, (BSTR)fName, write_geometry_model, write_analysis_model, write_output, write_selector, write_palette, write_groups, write_views, write_addl_info, expand_geometric, minimize_size, digits, version, groupID);
    return _result;
}

#pragma implementation_key(9159)
inline enum femap::zReturnCode femap::Imodel::feVectorPerpendicular ( const _variant_t & vecIN, VARIANT * vecPERP ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x400c", &vecIN, vecPERP);
    return _result;
}

#pragma implementation_key(9160)
inline enum femap::zReturnCode femap::Imodel::feGetElementFaces ( _bstr_t title, int orig_nCount, const _variant_t & orig_elemID, const _variant_t & orig_faceID, int * nCount, VARIANT * elemID, VARIANT * faceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000c\x000c\x4003\x400c\x400c", (BSTR)title, orig_nCount, &orig_elemID, &orig_faceID, nCount, elemID, faceID);
    return _result;
}

#pragma implementation_key(9161)
inline enum femap::zReturnCode femap::Imodel::feMeshAttachNodes ( int nNodes, const _variant_t & NodeID, const _variant_t & attachTYPE, const _variant_t & attachID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c", nNodes, &NodeID, &attachTYPE, &attachID);
    return _result;
}

#pragma implementation_key(9162)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessConvert ( int approach, int from_setID, int from_vectorID, int to_setID, int to_vectorID, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003", approach, from_setID, from_vectorID, to_setID, to_vectorID, groupID);
    return _result;
}

#pragma implementation_key(9163)
inline enum femap::zReturnCode femap::Imodel::feConnectAuto ( int solidSET, double linearTolerance, double angleTolerance, int strategy, VARIANT_BOOL bSelfConnect, VARIANT_BOOL bCombineAll, int nConnectProp, VARIANT_BOOL bGlued ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fc9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0005\x0003\x000b\x000b\x0003\x000b", solidSET, linearTolerance, angleTolerance, strategy, bSelfConnect, bCombineAll, nConnectProp, bGlued);
    return _result;
}

#pragma implementation_key(9164)
inline enum femap::zReturnCode femap::Imodel::feSelectOutput ( _bstr_t title, int nBaseOutputSetID, enum zOutputType limitOutputType, enum zOutputComplex limitComplex, enum zDataType limitToEntity, VARIANT_BOOL includeCorner, IDispatch * * pOutputSets, IDispatch * * pOutputVecs ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fca, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003\x0003\x0003\x000b\x4009\x4009", (BSTR)title, nBaseOutputSetID, limitOutputType, limitComplex, limitToEntity, includeCorner, pOutputSets, pOutputVecs);
    return _result;
}

#pragma implementation_key(9165)
inline enum femap::zReturnCode femap::Imodel::feCoordPickByMethod ( enum zPointDefinition method, _bstr_t dlgTITLE, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fcb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x400c", method, (BSTR)dlgTITLE, xyz);
    return _result;
}

#pragma implementation_key(9166)
inline enum femap::zReturnCode femap::Imodel::feVectorPickByMethod ( enum zVectorDefinition method, _bstr_t dlgTITLE, VARIANT_BOOL unitVector, double * vecLength, VARIANT * vecBASE, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fcc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b\x4005\x400c\x400c", method, (BSTR)dlgTITLE, unitVector, vecLength, vecBASE, vecDIR);
    return _result;
}

#pragma implementation_key(9167)
inline enum femap::zReturnCode femap::Imodel::fePlanePickByMethod ( enum zPlaneDefinition method, _bstr_t dlgTITLE, VARIANT * plBase, VARIANT * plNormal, VARIANT * plAxis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fcd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x400c\x400c\x400c", method, (BSTR)dlgTITLE, plBase, plNormal, plAxis);
    return _result;
}

#pragma implementation_key(9168)
inline enum femap::zReturnCode femap::Imodel::feLicenseIsAvailable ( enum zFeatureType nFeature ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fce, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nFeature);
    return _result;
}

#pragma implementation_key(9169)
inline enum femap::zReturnCode femap::Imodel::feLicenseMethod ( int * nLicenseType ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fcf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003", nLicenseType);
    return _result;
}

#pragma implementation_key(9170)
inline enum femap::zReturnCode femap::Imodel::feOutputForceBalance ( int outSETS, int boundarynodeSET, int boundaryelemSET, int csysID, const _variant_t & aroundXYZ, int * numSETS, VARIANT * resultant ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd0, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x4003\x400c", outSETS, boundarynodeSET, boundaryelemSET, csysID, &aroundXYZ, numSETS, resultant);
    return _result;
}

#pragma implementation_key(9171)
inline enum femap::zReturnCode femap::Imodel::feAppModelContents ( VARIANT_BOOL bReport, int * emptyBlocks, VARIANT * entityBlocks ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x4003\x400c", bReport, emptyBlocks, entityBlocks);
    return _result;
}

#pragma implementation_key(9172)
inline enum femap::zReturnCode femap::Imodel::feFileCurrentDirectory ( _bstr_t sCurDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)sCurDir);
    return _result;
}

#pragma implementation_key(9173)
inline enum femap::zReturnCode femap::Imodel::feFileReadNeutral2 ( int brand, _bstr_t fName, VARIANT_BOOL read_geometry, VARIANT_BOOL read_model, VARIANT_BOOL read_output, VARIANT_BOOL read_groups, VARIANT_BOOL read_views, VARIANT_BOOL status_messages, int offsetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x0003", brand, (BSTR)fName, read_geometry, read_model, read_output, read_groups, read_views, status_messages, offsetID);
    return _result;
}

#pragma implementation_key(9174)
inline enum femap::zReturnCode femap::Imodel::feAppModelDefragment ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd4, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9175)
inline enum femap::zReturnCode femap::Imodel::feGetElementEdges ( _bstr_t title, int orig_nCount, const _variant_t & orig_elemID, const _variant_t & orig_faceID, int * nCount, VARIANT * elemID, VARIANT * faceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000c\x000c\x4003\x400c\x400c", (BSTR)title, orig_nCount, &orig_elemID, &orig_faceID, nCount, elemID, faceID);
    return _result;
}

#pragma implementation_key(9176)
inline enum femap::zReturnCode femap::Imodel::feElementFreeEdge ( int elemSetID, VARIANT_BOOL bParabolicEdges, VARIANT_BOOL bLineElem, int * nFreeCount, VARIANT * nFreeData ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x4003\x400c", elemSetID, bParabolicEdges, bLineElem, nFreeCount, nFreeData);
    return _result;
}

#pragma implementation_key(9177)
inline enum femap::zReturnCode femap::Imodel::feElementFreeFace ( int elemSetID, VARIANT_BOOL bParabolicEdges, VARIANT_BOOL bPlaneElem, int * nFreeCount, VARIANT * nFreeData ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x4003\x400c", elemSetID, bParabolicEdges, bPlaneElem, nFreeCount, nFreeData);
    return _result;
}

#pragma implementation_key(9178)
inline enum femap::zReturnCode femap::Imodel::feSurfaceNormalDeviation ( int surfaceSetID, VARIANT * dAvgNormal, double * dMaxAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x4005", surfaceSetID, dAvgNormal, dMaxAngle);
    return _result;
}

#pragma implementation_key(9179)
inline enum femap::zReturnCode femap::Imodel::feAddToolbarSubmenuSubmenu ( int menuID, int ctrlIndex, _bstr_t menuName, int * submenuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fd9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008\x4003", menuID, ctrlIndex, (BSTR)menuName, submenuID);
    return _result;
}

#pragma implementation_key(9180)
inline enum femap::zReturnCode femap::Imodel::feBoundaryAddSurfaces ( int nBoundaryID, int surfaceSET, VARIANT_BOOL bAddToExisting ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fda, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", nBoundaryID, surfaceSET, bAddToExisting);
    return _result;
}

#pragma implementation_key(9181)
inline enum femap::zReturnCode femap::Imodel::feCoordVectorPlaneIntersect ( const _variant_t & xyz, const _variant_t & projDir, const _variant_t & planePt, const _variant_t & planeNorm, VARIANT * xyzPlane ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fdb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x000c\x400c", &xyz, &projDir, &planePt, &planeNorm, xyzPlane);
    return _result;
}

#pragma implementation_key(9182)
inline enum femap::zReturnCode femap::Imodel::feSurfaceConvert ( int surfaceSET, VARIANT_BOOL bDelete ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fdc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", surfaceSET, bDelete);
    return _result;
}

#pragma implementation_key(9183)
inline enum femap::zReturnCode femap::Imodel::feGroupMoveToLayer ( int nGroupID, int nLayerID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fdd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nGroupID, nLayerID);
    return _result;
}

#pragma implementation_key(9184)
inline enum femap::zReturnCode femap::Imodel::feBoundaryFromPoints ( int nCSys, int nPoints, const _variant_t & pXYZ, int * nBoundaryID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fde, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x4003", nCSys, nPoints, &pXYZ, nBoundaryID);
    return _result;
}

#pragma implementation_key(9185)
inline enum femap::zReturnCode femap::Imodel::feAutoMeshAssociativity ( int elemSetID, int solidSetID, double dTolerance, VARIANT_BOOL bClearPrevious, VARIANT_BOOL bCheckContainment, VARIANT_BOOL bAttachMidside, VARIANT_BOOL bGroupExtra, VARIANT_BOOL bMessages, int * nUnattachedGroup ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fdf, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x000b\x000b\x000b\x000b\x000b\x4003", elemSetID, solidSetID, dTolerance, bClearPrevious, bCheckContainment, bAttachMidside, bGroupExtra, bMessages, nUnattachedGroup);
    return _result;
}

#pragma implementation_key(9186)
inline int femap::Imodel::feAppVersion ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4fe0, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9187)
inline enum femap::zReturnCode femap::Imodel::feSolidStitchNoCleanup ( int surfaceSET, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", surfaceSET, tolerance);
    return _result;
}

#pragma implementation_key(9188)
inline enum femap::zReturnCode femap::Imodel::feSurfaceNonManifoldAdd ( int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", solidSET);
    return _result;
}

#pragma implementation_key(9189)
inline enum femap::zReturnCode femap::Imodel::feSurfaceRecoverManifold ( int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", solidSET);
    return _result;
}

#pragma implementation_key(9190)
inline enum femap::zReturnCode femap::Imodel::feModifySolidFacetting ( int entitySET, int sDiv, int tDiv, double dAngleTol, double dChordTol, double dCurveFactor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0005\x0005\x0005", entitySET, sDiv, tDiv, dAngleTol, dChordTol, dCurveFactor);
    return _result;
}

#pragma implementation_key(9191)
inline enum femap::zReturnCode femap::Imodel::feSolidRemoveFace ( int surfaceSET, VARIANT_BOOL agressive, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b", surfaceSET, agressive, Redraw);
    return _result;
}

#pragma implementation_key(9192)
inline enum femap::zReturnCode femap::Imodel::feSurfaceRemoveHole ( int curveSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", curveSET);
    return _result;
}

#pragma implementation_key(9193)
inline enum femap::zReturnCode femap::Imodel::feMeshSurface2 ( int surfaceSET, int propID, enum zTopologyType elemShape, VARIANT_BOOL bAllowMapped, VARIANT_BOOL bResetDefaults ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b", surfaceSET, propID, elemShape, bAllowMapped, bResetDefaults);
    return _result;
}

#pragma implementation_key(9194)
inline enum femap::zReturnCode femap::Imodel::feAppRegisterAddInPaneWithFrame ( VARIANT_BOOL regster, int windowID, int messageID, VARIANT_BOOL bPreventClose, VARIANT_BOOL bPreventHide, int location, int neighborID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000b\x000b\x0003\x0003", regster, windowID, messageID, bPreventClose, bPreventHide, location, neighborID);
    return _result;
}

#pragma implementation_key(9195)
inline enum femap::zReturnCode femap::Imodel::feVectorAxisOfSurface ( int suID, VARIANT * baseXYZ, VARIANT * vecDIR ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fe9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c", suID, baseXYZ, vecDIR);
    return _result;
}

#pragma implementation_key(9196)
inline enum femap::zReturnCode femap::Imodel::feMeshSurfaceByAttributes ( int surfaceSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fea, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", surfaceSET);
    return _result;
}

#pragma implementation_key(9197)
inline enum femap::zReturnCode femap::Imodel::feEntityVisibility ( enum zVisibilityType visType, int visID, VARIANT_BOOL bIsVisible, VARIANT_BOOL bRedraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4feb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b", visType, visID, bIsVisible, bRedraw);
    return _result;
}

#pragma implementation_key(9198)
inline enum femap::zReturnCode femap::Imodel::feDeleteMesh ( enum zDataType enNodeOrElem, int elemSET, VARIANT_BOOL bDeleteUnused ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fec, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", enNodeOrElem, elemSET, bDeleteUnused);
    return _result;
}

#pragma implementation_key(9199)
inline enum femap::zReturnCode femap::Imodel::feFormatReal ( double dValue, int nWidth, int nDecimal, enum zRealFormat nFormat, BSTR * strValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fed, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x0003\x0003\x4008", dValue, nWidth, nDecimal, nFormat, strValue);
    return _result;
}

#pragma implementation_key(9200)
inline enum femap::zReturnCode femap::Imodel::feTruncateReal ( double dValue, int nWidth, int nDecimal, enum zRealFormat nFormat, double * truncValue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fee, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0005\x0003\x0003\x0003\x4005", dValue, nWidth, nDecimal, nFormat, truncValue);
    return _result;
}

#pragma implementation_key(9201)
inline enum femap::zReturnCode femap::Imodel::feAppMessageStartListing ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fef, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9202)
inline enum femap::zReturnCode femap::Imodel::feAppMessageEndListing ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff0, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9203)
inline enum femap::zReturnCode femap::Imodel::feModifyRadialOffsets ( int entitySET, VARIANT_BOOL bAroundVector, double dRadialOffset, const _variant_t & orig, const _variant_t & Axis ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff1, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x000c\x000c", entitySET, bAroundVector, dRadialOffset, &orig, &Axis);
    return _result;
}

#pragma implementation_key(9204)
inline enum femap::zReturnCode femap::Imodel::feFilePrint2 ( VARIANT_BOOL useDlg, enum zPrintSource source, _bstr_t toFile ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff2, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0008", useDlg, source, (BSTR)toFile);
    return _result;
}

#pragma implementation_key(9205)
inline enum femap::zReturnCode femap::Imodel::feAppUpdateModelBox ( VARIANT_BOOL bForceUpdate ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff3, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bForceUpdate);
    return _result;
}

#pragma implementation_key(9206)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessCopy ( VARIANT_BOOL bFullSet, int from_setID, int from_vectorID, int to_setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff4, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x0003", bFullSet, from_setID, from_vectorID, to_setID);
    return _result;
}

#pragma implementation_key(9207)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessMerge ( VARIANT_BOOL bFullSet, VARIANT_BOOL bOverwrite, int nCount, const _variant_t & from_setID, const _variant_t & from_vectorID, int to_setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff5, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x000c\x000c\x0003", bFullSet, bOverwrite, nCount, &from_setID, &from_vectorID, to_setID);
    return _result;
}

#pragma implementation_key(9208)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessLinearCombination ( VARIANT_BOOL bFullSet, enum zOutputProcessCombine nApproach, int nCount, const _variant_t & dScaleFactor, const _variant_t & from_setID, const _variant_t & from_vectorID, int to_setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff6, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000c\x000c\x000c\x0003", bFullSet, nApproach, nCount, &dScaleFactor, &from_setID, &from_vectorID, to_setID);
    return _result;
}

#pragma implementation_key(9209)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessRSSCombination ( VARIANT_BOOL bFullSet, enum zOutputProcessCombine nApproach, int nCount, const _variant_t & dScaleFactor, const _variant_t & from_setID, const _variant_t & from_vectorID, int to_setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff7, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000c\x000c\x000c\x0003", bFullSet, nApproach, nCount, &dScaleFactor, &from_setID, &from_vectorID, to_setID);
    return _result;
}

#pragma implementation_key(9210)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessEnvelope ( VARIANT_BOOL bFullSet, enum zOutputProcessEnvType ntype, enum zOutputProcessEnvApproach nApproach, VARIANT_BOOL bEnvelopeInSets, VARIANT_BOOL bEnvelopeAcrossSets, VARIANT_BOOL bSetInfo, int nCount, const _variant_t & from_setID, const _variant_t & from_vectorID, int to_setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff8, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000b\x000b\x000b\x0003\x000c\x000c\x0003", bFullSet, ntype, nApproach, bEnvelopeInSets, bEnvelopeAcrossSets, bSetInfo, nCount, &from_setID, &from_vectorID, to_setID);
    return _result;
}

#pragma implementation_key(9211)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessErrorEstimate ( enum zOutputProcessErrorMethod nMethod, int from_setID, int from_vectorID, int groupID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ff9, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", nMethod, from_setID, from_vectorID, groupID);
    return _result;
}

#pragma implementation_key(9212)
inline enum femap::zReturnCode femap::Imodel::feTextMultiPut ( VARIANT_BOOL DrawPointer, VARIANT_BOOL DrawBorder, VARIANT_BOOL modelPos, int horzJust, int vertJust, int visView, int layer, int fontID, enum zColor BackColor, enum zColor bordColor, enum zColor textColor, int nCount, const _variant_t & textLoc, const _variant_t & pointerLoc, const _variant_t & tText ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ffa, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x000c", DrawPointer, DrawBorder, modelPos, horzJust, vertJust, visView, layer, fontID, BackColor, bordColor, textColor, nCount, &textLoc, &pointerLoc, &tText);
    return _result;
}

#pragma implementation_key(9213)
inline enum femap::zReturnCode femap::Imodel::feFileReadPatran ( _bstr_t fName, VARIANT_BOOL bSaveZeroDispAsBC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ffb, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x000b", (BSTR)fName, bSaveZeroDispAsBC);
    return _result;
}

#pragma implementation_key(9214)
inline enum femap::zReturnCode femap::Imodel::feFileReadNeutral3 ( int brand, _bstr_t fName, VARIANT_BOOL read_geometry, VARIANT_BOOL read_model, VARIANT_BOOL read_output, VARIANT_BOOL read_groups, VARIANT_BOOL read_views, VARIANT_BOOL status_messages, int offsetID, VARIANT_BOOL renumber_layers, VARIANT_BOOL renumber_load_bc, VARIANT_BOOL always_new_output_sets ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ffc, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x0003\x000b\x000b\x000b", brand, (BSTR)fName, read_geometry, read_model, read_output, read_groups, read_views, status_messages, offsetID, renumber_layers, renumber_load_bc, always_new_output_sets);
    return _result;
}

#pragma implementation_key(9215)
inline enum femap::zReturnCode femap::Imodel::feCheckElemDistortion2 ( int elemSET, VARIANT_BOOL doLIST, VARIANT_BOOL makeGROUP, VARIANT_BOOL chkASPECT, VARIANT_BOOL chkTAPER, VARIANT_BOOL chkANGLE, VARIANT_BOOL chkWARP, VARIANT_BOOL chkNasWARP, VARIANT_BOOL chkALTTAPER, VARIANT_BOOL chkTET, VARIANT_BOOL chkJDet, VARIANT_BOOL chkComb, VARIANT_BOOL chkExpTime, double maxASPECT, double maxTAPER, double maxANGLE, double maxWARP, double maxNasWARP, double maxALTTAPER, double maxTET, double minJDet, double minComb, double minExpTime ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ffd, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005\x0005", elemSET, doLIST, makeGROUP, chkASPECT, chkTAPER, chkANGLE, chkWARP, chkNasWARP, chkALTTAPER, chkTET, chkJDet, chkComb, chkExpTime, maxASPECT, maxTAPER, maxANGLE, maxWARP, maxNasWARP, maxALTTAPER, maxTET, minJDet, minComb, minExpTime);
    return _result;
}

#pragma implementation_key(9216)
inline enum femap::zReturnCode femap::Imodel::feGetElemDistortion2 ( int elemID, double * valASPECT, double * valTAPER, double * valANGLE, double * valWARP, double * valNasWARP, double * valALTTAPER, double * valTET, double * valJDet, double * valComb, double * valExpTime ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4ffe, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005\x4005", elemID, valASPECT, valTAPER, valANGLE, valWARP, valNasWARP, valALTTAPER, valTET, valJDet, valComb, valExpTime);
    return _result;
}

#pragma implementation_key(9217)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentNode2 ( int mergeSET, double tolerance, VARIANT_BOOL merge, int nMergeMode, int nMergeLoc, VARIANT_BOOL bMergeAcrossConnections, int nMessageMode, VARIANT_BOOL bSaveGroups ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x4fff, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000b\x0003\x0003\x000b\x0003\x000b", mergeSET, tolerance, merge, nMergeMode, nMergeLoc, bMergeAcrossConnections, nMessageMode, bSaveGroups);
    return _result;
}

#pragma implementation_key(9218)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistanceBetweenNodes ( int nFrom, int nTo, int nOutSetID, int nOutVecID, int nCSysID, VARIANT * vecBASE, VARIANT * vecDist, double * magDist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5000, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x400c\x400c\x4005", nFrom, nTo, nOutSetID, nOutVecID, nCSysID, vecBASE, vecDist, magDist);
    return _result;
}

#pragma implementation_key(9219)
inline enum femap::zReturnCode femap::Imodel::feMeasureAngleBetweenNodes ( int nVertex, int nFrom, int nTo, int nOutSetID, int nOutVecID, int nCSysID, VARIANT * vecBASE, VARIANT * vecNormal, double * magAngle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5001, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x400c\x400c\x4005", nVertex, nFrom, nTo, nOutSetID, nOutVecID, nCSysID, vecBASE, vecNormal, magAngle);
    return _result;
}

#pragma implementation_key(9220)
inline enum femap::zReturnCode femap::Imodel::feScreenPctPick ( double * x, double * y ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5002, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4005\x4005", x, y);
    return _result;
}

#pragma implementation_key(9221)
inline enum femap::zReturnCode femap::Imodel::feCurveOffsetCurveWasher ( int curveSET, int faceID, int nMode, VARIANT_BOOL bAutoSelect, VARIANT_BOOL bSaveSplit, VARIANT_BOOL bExtend, double dOffset ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5003, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x000b\x0005", curveSET, faceID, nMode, bAutoSelect, bSaveSplit, bExtend, dOffset);
    return _result;
}

#pragma implementation_key(9222)
inline enum femap::zReturnCode femap::Imodel::feCurveSplitPointToPoint ( int nPtA, int nPtB ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5004, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nPtA, nPtB);
    return _result;
}

#pragma implementation_key(9223)
inline enum femap::zReturnCode femap::Imodel::feCurveSplitPointToEdge ( int nPtA, int nCuID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5005, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nPtA, nCuID);
    return _result;
}

#pragma implementation_key(9224)
inline enum femap::zReturnCode femap::Imodel::feCurveSplitEdgeToEdge ( int nLongEdge, int nShortEdgeSet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5006, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nLongEdge, nShortEdgeSet);
    return _result;
}

#pragma implementation_key(9225)
inline enum femap::zReturnCode femap::Imodel::feConnectAuto2 ( int solidSET, int connectTYPE, double linearTolerance, double angleTolerance, int strategy, VARIANT_BOOL bSelfConnect, VARIANT_BOOL bCombineAll, int nConnectProp, VARIANT_BOOL bGlued ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5007, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005\x0005\x0003\x000b\x000b\x0003\x000b", solidSET, connectTYPE, linearTolerance, angleTolerance, strategy, bSelfConnect, bCombineAll, nConnectProp, bGlued);
    return _result;
}

#pragma implementation_key(9226)
inline enum femap::zReturnCode femap::Imodel::feSetToolbarSeparator ( _bstr_t BarName, int cmdID, VARIANT_BOOL bAddSep ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5008, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x000b", (BSTR)BarName, cmdID, bAddSep);
    return _result;
}

#pragma implementation_key(9227)
inline enum femap::zReturnCode femap::Imodel::feSolidCleanupAdvanced ( int solidSET, VARIANT_BOOL RepairEdges, double RepairEdgesVal, VARIANT_BOOL CleanSmoothDiscont, double CleanSmoothDiscontVal, VARIANT_BOOL RemoveSelfInt, VARIANT_BOOL AllowSurfMod, VARIANT_BOOL RemoveSpikes, double RemoveSpikesVal, VARIANT_BOOL RemoveSmallEdges, double RemoveSmallEdgesVal, VARIANT_BOOL RemoveSmallFaces, double RemoveSmallFacesVal, VARIANT_BOOL RemoveSliverFaces, double RemoveSliverFacesVal, VARIANT_BOOL ConvertToAnalytic, double ConvertToAnalyticVal, VARIANT_BOOL RecalcEdges, double RecalcEdgesVal, VARIANT_BOOL MergeEdges, VARIANT_BOOL HealSurfaces, double HealSurfacesVal, VARIANT_BOOL HealSmoothDiscont, double HealSmoothDiscontVal, VARIANT_BOOL ReplaceMissing ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5009, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x000b\x0005\x000b\x000b\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x0005\x000b\x000b\x0005\x000b\x0005\x000b", solidSET, RepairEdges, RepairEdgesVal, CleanSmoothDiscont, CleanSmoothDiscontVal, RemoveSelfInt, AllowSurfMod, RemoveSpikes, RemoveSpikesVal, RemoveSmallEdges, RemoveSmallEdgesVal, RemoveSmallFaces, RemoveSmallFacesVal, RemoveSliverFaces, RemoveSliverFacesVal, ConvertToAnalytic, ConvertToAnalyticVal, RecalcEdges, RecalcEdgesVal, MergeEdges, HealSurfaces, HealSurfacesVal, HealSmoothDiscont, HealSmoothDiscontVal, ReplaceMissing);
    return _result;
}

#pragma implementation_key(9228)
inline enum femap::zReturnCode femap::Imodel::feRunIOTest ( _bstr_t sPath, int * nMethod ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x500a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4003", (BSTR)sPath, nMethod);
    return _result;
}

#pragma implementation_key(9229)
inline enum femap::zReturnCode femap::Imodel::feGroupBoolean2 ( int GroupsToProcessSetID, int GroupToSubtractFromID, enum zGroupBooleanOp opperation, int GroupToCreateID, _bstr_t GroupTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x500b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0008", GroupsToProcessSetID, GroupToSubtractFromID, opperation, GroupToCreateID, (BSTR)GroupTitle);
    return _result;
}

#pragma implementation_key(9230)
inline enum femap::zReturnCode femap::Imodel::feFileIsModified ( ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x500c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9231)
inline enum femap::zReturnCode femap::Imodel::feBoundaryFromSurfaces2 ( int surfaceSET, VARIANT_BOOL bMessages ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x500d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", surfaceSET, bMessages);
    return _result;
}

#pragma implementation_key(9232)
inline enum femap::zReturnCode femap::Imodel::feFileJTName ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x500e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(9233)
inline enum femap::zReturnCode femap::Imodel::feFileJTVersion ( int iVersion ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x500f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iVersion);
    return _result;
}

#pragma implementation_key(9234)
inline enum femap::zReturnCode femap::Imodel::feFileJTUnits ( int iUnits ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5010, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", iUnits);
    return _result;
}

#pragma implementation_key(9235)
inline enum femap::zReturnCode femap::Imodel::feFileJTHierarchy ( int iHier1, int iHier2, int iHier3, int iHier4, int iHier5, int iHier6, int iHier7 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5011, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x0003", iHier1, iHier2, iHier3, iHier4, iHier5, iHier6, iHier7);
    return _result;
}

#pragma implementation_key(9236)
inline enum femap::zReturnCode femap::Imodel::feSurfaceExtend ( int curveSET, int shape, int ExtendTo, int ExtendToSolidID, const _variant_t & ExtendToLoc, double ExtendDist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5012, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000c\x0005", curveSET, shape, ExtendTo, ExtendToSolidID, &ExtendToLoc, ExtendDist);
    return _result;
}

#pragma implementation_key(9237)
inline enum femap::zReturnCode femap::Imodel::feOutputCompare ( VARIANT_BOOL bList, VARIANT_BOOL bFullCase, int fromSET, int toSETS, int ifromVEC, int itoVEC, double dMaxDiff ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5013, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x0003\x0003\x0003\x0003\x0005", bList, bFullCase, fromSET, toSETS, ifromVEC, itoVEC, dMaxDiff);
    return _result;
}

#pragma implementation_key(9238)
inline enum femap::zReturnCode femap::Imodel::feVectorNormalizedDotProduct ( const _variant_t & VecA, const _variant_t & VecB, double * dot ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5014, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x4005", &VecA, &VecB, dot);
    return _result;
}

#pragma implementation_key(9239)
inline enum femap::zReturnCode femap::Imodel::feCoordCenterOfPoints ( const _variant_t & vXYZ1, const _variant_t & vXYZ2, const _variant_t & vXYZ3, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5015, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x400c", &vXYZ1, &vXYZ2, &vXYZ3, xyz);
    return _result;
}

#pragma implementation_key(9240)
inline int femap::Imodel::feMaxInt ( int Int1, int Int2 ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5016, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", Int1, Int2);
    return _result;
}

#pragma implementation_key(9241)
inline int femap::Imodel::feMinInt ( int Int1, int Int2 ) {
    int _result = 0;
    _com_dispatch_method(this, 0x5017, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", Int1, Int2);
    return _result;
}

#pragma implementation_key(9242)
inline double femap::Imodel::feMaxReal ( double Real1, double Real2 ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5018, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0005\x0005", Real1, Real2);
    return _result;
}

#pragma implementation_key(9243)
inline double femap::Imodel::feMinReal ( double Real1, double Real2 ) {
    double _result = 0;
    _com_dispatch_method(this, 0x5019, DISPATCH_METHOD, VT_R8, (void*)&_result, 
        L"\x0005\x0005", Real1, Real2);
    return _result;
}

#pragma implementation_key(9244)
inline int femap::Imodel::feOutputForceBalance2 ( int freebodyID, int outSetID, VARIANT_BOOL toDataTable, VARIANT_BOOL printSummation, VARIANT_BOOL printDetails ) {
    int _result = 0;
    _com_dispatch_method(this, 0x501a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x000b", freebodyID, outSetID, toDataTable, printSummation, printDetails);
    return _result;
}

#pragma implementation_key(9245)
inline int femap::Imodel::feLoadFromFreebody ( int freebodyID, int nodeSetID, int outSetID, int loadSetID, VARIANT_BOOL doSummation, VARIANT_BOOL doNodes, VARIANT_BOOL overrideNodeCheck ) {
    int _result = 0;
    _com_dispatch_method(this, 0x501b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000b\x000b\x000b", freebodyID, nodeSetID, outSetID, loadSetID, doSummation, doNodes, overrideNodeCheck);
    return _result;
}

#pragma implementation_key(9246)
inline enum femap::zReturnCode femap::Imodel::feFileRecoverDBData ( VARIANT_BOOL useDlg, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x501c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008", useDlg, (BSTR)fName);
    return _result;
}

#pragma implementation_key(9247)
inline enum femap::zReturnCode femap::Imodel::feModifyColorMultiple ( enum zDataType entityTYPE, int entitySET, enum zColor color, int method, int match_range, int limit_to_groupSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x501d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003", entityTYPE, entitySET, color, method, match_range, limit_to_groupSET);
    return _result;
}

#pragma implementation_key(9248)
inline enum femap::zReturnCode femap::Imodel::feSelectOutputSets ( _bstr_t title, IDispatch * * pOutputSets ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x501e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4009", (BSTR)title, pOutputSets);
    return _result;
}

#pragma implementation_key(9249)
inline enum femap::zReturnCode femap::Imodel::feSurfaceFromMesh ( int elemSetID, VARIANT_BOOL bDeleteMesh, VARIANT_BOOL bWireframeOnly, double tolerance, VARIANT_BOOL bLengthCutoff, double len_cut_val ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x501f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x0005\x000b\x0005", elemSetID, bDeleteMesh, bWireframeOnly, tolerance, bLengthCutoff, len_cut_val);
    return _result;
}

#pragma implementation_key(9250)
inline enum femap::zReturnCode femap::Imodel::feModifyElemReverse2 ( int entitySET, int method, const _variant_t & vecDIR, int csysID, int csysDir, VARIANT_BOOL bPreserveMatlDir ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5020, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x0003\x000b", entitySET, method, &vecDIR, csysID, csysDir, bPreserveMatlDir);
    return _result;
}

#pragma implementation_key(9251)
inline enum femap::zReturnCode femap::Imodel::feFileReadCatia2 ( VARIANT_BOOL useDlg, _bstr_t fName, VARIANT_BOOL rdAnalytical, VARIANT_BOOL rdTopology, VARIANT_BOOL rdCurves, VARIANT_BOOL rdNoShow, VARIANT_BOOL rdNoPick, VARIANT_BOOL rdWorkplanes, VARIANT_BOOL stitch, VARIANT_BOOL heal, VARIANT_BOOL check ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5022, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", useDlg, (BSTR)fName, rdAnalytical, rdTopology, rdCurves, rdNoShow, rdNoPick, rdWorkplanes, stitch, heal, check);
    return _result;
}

#pragma implementation_key(9252)
inline enum femap::zReturnCode femap::Imodel::feFileAttachResults ( enum zAnalysisProgram analysis_program, _bstr_t fName, VARIANT_BOOL bMmf ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5023, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0008\x000b", analysis_program, (BSTR)fName, bMmf);
    return _result;
}

#pragma implementation_key(9253)
inline enum femap::zReturnCode femap::Imodel::feFileAttachManage ( int nSetID, enum zManageResultsAttach opt, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5024, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0008", nSetID, opt, (BSTR)fName);
    return _result;
}

#pragma implementation_key(9254)
inline enum femap::zReturnCode femap::Imodel::feFileAttachInfo ( int nID, enum zAttachStatus * status, BSTR * ModelName, IDispatch * * pOutSets ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5025, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4008\x4009", nID, status, ModelName, pOutSets);
    return _result;
}

#pragma implementation_key(9255)
inline enum femap::zReturnCode femap::Imodel::feFileAttachSave ( int nID, int outSET, int outVec, int ndSet, int elSet ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5026, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003", nID, outSET, outVec, ndSet, elSet);
    return _result;
}

#pragma implementation_key(9256)
inline enum femap::zReturnCode femap::Imodel::feFileAttachByOutset ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5027, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(9257)
inline enum femap::zReturnCode femap::Imodel::feMeshEdgeSplit ( int nNode1, int nNode2, int nNodeSetorZero ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5028, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", nNode1, nNode2, nNodeSetorZero);
    return _result;
}

#pragma implementation_key(9258)
inline enum femap::zReturnCode femap::Imodel::feFileWriteSTAAD ( _bstr_t fName, enum zAnalysisType AnalysisType, _bstr_t sStructType, _bstr_t sLengthUnits, _bstr_t sForceUnits, _bstr_t sPropUnits, double dGravConstant, VARIANT_BOOL bModalCalc, double dModalCutOffFreq, int nModalCutOffMode, VARIANT_BOOL bPrintModel, VARIANT_BOOL bPrintDisp, VARIANT_BOOL bPrintReactions, VARIANT_BOOL bPrintMemberForces, VARIANT_BOOL bPrintMemberStresses, VARIANT_BOOL bPrintElemForces, VARIANT_BOOL bPrintJointForces, VARIANT_BOOL bPostDisp, VARIANT_BOOL bPostSectionDisp, VARIANT_BOOL bPostMemberForces, VARIANT_BOOL bPostStresses ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x502a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0008\x0008\x0008\x0008\x0005\x000b\x0005\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", (BSTR)fName, AnalysisType, (BSTR)sStructType, (BSTR)sLengthUnits, (BSTR)sForceUnits, (BSTR)sPropUnits, dGravConstant, bModalCalc, dModalCutOffFreq, nModalCutOffMode, bPrintModel, bPrintDisp, bPrintReactions, bPrintMemberForces, bPrintMemberStresses, bPrintElemForces, bPrintJointForces, bPostDisp, bPostSectionDisp, bPostMemberForces, bPostStresses);
    return _result;
}

#pragma implementation_key(9259)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistanceBetweenSolids ( int solidID1, int solidID2, double * dist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x502b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x4005", solidID1, solidID2, dist);
    return _result;
}

#pragma implementation_key(9260)
inline enum femap::zReturnCode femap::Imodel::feSurfaceNonManifoldAdd2 ( int solidSET, double dTolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x502c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", solidSET, dTolerance);
    return _result;
}

#pragma implementation_key(9261)
inline enum femap::zReturnCode femap::Imodel::feFileWriteFNO ( int nSetSet, int nVectorSet, int nGroup, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x502d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0008", nSetSet, nVectorSet, nGroup, (BSTR)fName);
    return _result;
}

#pragma implementation_key(9262)
inline int femap::Imodel::feChartPaneGetDisplayed ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x502e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9263)
inline enum femap::zReturnCode femap::Imodel::feChartPaneSetDisplayed ( int nChartID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x502f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nChartID);
    return _result;
}

#pragma implementation_key(9264)
inline enum femap::zReturnCode femap::Imodel::feSetFree ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5030, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(9265)
inline enum femap::zReturnCode femap::Imodel::feSetFreeNotInSet ( int nSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5031, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", nSetID);
    return _result;
}

#pragma implementation_key(9266)
inline enum femap::zReturnCode femap::Imodel::feGroupGenerate2 ( int elemSET, VARIANT_BOOL planer, int brkPropMatl, int brkLayer, enum zColor brkColor, double brkAngle, VARIANT_BOOL brkMatchNormal, VARIANT_BOOL brkNonManifold, VARIANT_BOOL addLayers, int nExpandGroup ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5032, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0003\x0003\x0003\x0005\x000b\x000b\x000b\x0003", elemSET, planer, brkPropMatl, brkLayer, brkColor, brkAngle, brkMatchNormal, brkNonManifold, addLayers, nExpandGroup);
    return _result;
}

#pragma implementation_key(9267)
inline enum femap::zReturnCode femap::Imodel::feSurfaceNonManifoldAdd3 ( int solidSET, double dTolerance, VARIANT_BOOL bIntermediateCheck ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5033, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000b", solidSET, dTolerance, bIntermediateCheck);
    return _result;
}

#pragma implementation_key(9268)
inline enum femap::zReturnCode femap::Imodel::feProjectOnto ( enum zDataType entityTYPE, int entitySET, enum zProjectOnto projOnto, enum zProjectAlong projAlong, int ontoSET, const _variant_t & vOntoLocation, const _variant_t & vOntoVector, const _variant_t & vAlongVector, VARIANT_BOOL bExtendCurves, VARIANT_BOOL bVectorBothDirections ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5034, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x000c\x000b\x000b", entityTYPE, entitySET, projOnto, projAlong, ontoSET, &vOntoLocation, &vOntoVector, &vAlongVector, bExtendCurves, bVectorBothDirections);
    return _result;
}

#pragma implementation_key(9269)
inline enum femap::zReturnCode femap::Imodel::feFileWriteIdeas ( _bstr_t fName, _bstr_t PartName, VARIANT_BOOL WriteGroups, VARIANT_BOOL AbsoluteTempScale, int UnitSystem, double UserLengthFactor, VARIANT_BOOL UserForceOrMass, double UserForceOrMassFactor, double UserTempFactor, double UserTempOffset ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5035, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0008\x000b\x000b\x0003\x0005\x000b\x0005\x0005\x0005", (BSTR)fName, (BSTR)PartName, WriteGroups, AbsoluteTempScale, UnitSystem, UserLengthFactor, UserForceOrMass, UserForceOrMassFactor, UserTempFactor, UserTempOffset);
    return _result;
}

#pragma implementation_key(9270)
inline enum femap::zReturnCode femap::Imodel::feViewAutoscaleVisible ( int vuID, VARIANT_BOOL redoBox ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5036, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", vuID, redoBox);
    return _result;
}

#pragma implementation_key(9271)
inline enum femap::zReturnCode femap::Imodel::feViewAutoscaleAll ( int vuID, VARIANT_BOOL redoBox ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5037, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b", vuID, redoBox);
    return _result;
}

#pragma implementation_key(9272)
inline enum femap::zReturnCode femap::Imodel::feMeshSmooth2 ( int elemSET, int fixednodeSET, VARIANT_BOOL laplaceSmooth, int iter, double tolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5038, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x0003\x0005", elemSET, fixednodeSET, laplaceSmooth, iter, tolerance);
    return _result;
}

#pragma implementation_key(9273)
inline enum femap::zReturnCode femap::Imodel::feSurfaceOffsetTangent ( int nSeedSurface, double dTolerance, VARIANT_BOOL bAutoOffset, double dOffset, VARIANT_BOOL bDeleteOriginal, VARIANT_BOOL bCreateGroup ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5039, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000b\x0005\x000b\x000b", nSeedSurface, dTolerance, bAutoOffset, dOffset, bDeleteOriginal, bCreateGroup);
    return _result;
}

#pragma implementation_key(9274)
inline enum femap::zReturnCode femap::Imodel::feMeshExtrudeElem2 ( int elemSET, double axisLEN, const _variant_t & axisOrig, const _variant_t & axisVEC, int propID, int NumElem, int method, VARIANT_BOOL radialspherical, int ontoSurfSetID, VARIANT_BOOL matchCurrent, VARIANT_BOOL deleteOrig ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x503a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000c\x000c\x0003\x0003\x0003\x000b\x0003\x000b\x000b", elemSET, axisLEN, &axisOrig, &axisVEC, propID, NumElem, method, radialspherical, ontoSurfSetID, matchCurrent, deleteOrig);
    return _result;
}

#pragma implementation_key(9275)
inline enum femap::zReturnCode femap::Imodel::feWindowSetSize ( int vuID, int left, int top, int horz, int vert ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x503b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003", vuID, left, top, horz, vert);
    return _result;
}

#pragma implementation_key(9276)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistanceBetweenGeometry ( enum zDataType enFromType, int nFromSet, enum zDataType enToType, int nToSet, VARIANT_BOOL bMinimum, int * nFromID, int * nToID, VARIANT * vFrom, VARIANT * vTo, double * dDistance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x503c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x000b\x4003\x4003\x400c\x400c\x4005", enFromType, nFromSet, enToType, nToSet, bMinimum, nFromID, nToID, vFrom, vTo, dDistance);
    return _result;
}

#pragma implementation_key(9277)
inline enum femap::zReturnCode femap::Imodel::feOutputProcessEnvelopeFromSets ( VARIANT_BOOL bFullSet, enum zOutputProcessEnvType ntype, enum zOutputProcessEnvApproach nApproach, VARIANT_BOOL bEnvelopeInSets, VARIANT_BOOL bEnvelopeAcrossSets, VARIANT_BOOL bSetInfo, int nSetSet, int nVectorSet, int to_setID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x503d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x000b\x000b\x000b\x0003\x0003\x0003", bFullSet, ntype, nApproach, bEnvelopeInSets, bEnvelopeAcrossSets, bSetInfo, nSetSet, nVectorSet, to_setID);
    return _result;
}

#pragma implementation_key(9278)
inline enum femap::zReturnCode femap::Imodel::feFileAttachSave2 ( int nID, int outSET, int outVec, int ndSet, int elSet, VARIANT_BOOL bDetach ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x503e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000b", nID, outSET, outVec, ndSet, elSet, bDetach);
    return _result;
}

#pragma implementation_key(9279)
inline enum femap::zReturnCode femap::Imodel::feRenumberOpt2 ( enum zDataType entityTYPE, int entitySET, int startID, int renumMethod, int renumCSys, VARIANT_BOOL renumAbs, VARIANT_BOOL renumDescend, VARIANT_BOOL renumConstOff, const _variant_t & xyzSortOrder ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x503f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000b\x000b\x000b\x000c", entityTYPE, entitySET, startID, renumMethod, renumCSys, renumAbs, renumDescend, renumConstOff, &xyzSortOrder);
    return _result;
}

#pragma implementation_key(9280)
inline enum femap::zReturnCode femap::Imodel::feFileWriteFNO2 ( int nSetSet, int nVectorSet, int nOutputOnGroup, int nElementConnectivityGroup, _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5040, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0008", nSetSet, nVectorSet, nOutputOnGroup, nElementConnectivityGroup, (BSTR)fName);
    return _result;
}

#pragma implementation_key(9281)
inline enum femap::zReturnCode femap::Imodel::feSolidSweepBetween ( int nSurfID1, int nSurfID2, int nPtID1, int nPtID2, double blendFactor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5041, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0005", nSurfID1, nSurfID2, nPtID1, nPtID2, blendFactor);
    return _result;
}

#pragma implementation_key(9282)
inline enum femap::zReturnCode femap::Imodel::feSolidSweep ( int surfaceSET, int curveSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5042, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", surfaceSET, curveSET);
    return _result;
}

#pragma implementation_key(9283)
inline enum femap::zReturnCode femap::Imodel::feElemCountOnProp ( int nPropSetID, VARIANT * vPropID, VARIANT * vElemCount ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5043, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x400c\x400c", nPropSetID, vPropID, vElemCount);
    return _result;
}

#pragma implementation_key(9284)
inline enum femap::zReturnCode femap::Imodel::feSurfaceMidAuto2 ( int suSetID, double dTargetThickness, VARIANT_BOOL bCombineTangent, double dAngleTolerance, VARIANT_BOOL bAutoAdd, VARIANT_BOOL bReversePairs ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5044, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000b\x0005\x000b\x000b", suSetID, dTargetThickness, bCombineTangent, dAngleTolerance, bAutoAdd, bReversePairs);
    return _result;
}

#pragma implementation_key(9285)
inline enum femap::zReturnCode femap::Imodel::feCheckSumForces2 ( VARIANT_BOOL useBodyLoad, VARIANT_BOOL expandGEOM, VARIANT_BOOL doLIST, VARIANT_BOOL useSETS, int nodeSET, int elemSET, int loaddefSET, const _variant_t & basePOINT, int csysID, VARIANT * summedFORCES ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5045, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000b\x000b\x000b\x0003\x0003\x0003\x000c\x0003\x400c", useBodyLoad, expandGEOM, doLIST, useSETS, nodeSET, elemSET, loaddefSET, &basePOINT, csysID, summedFORCES);
    return _result;
}

#pragma implementation_key(9286)
inline enum femap::zReturnCode femap::Imodel::feCompute3DInvariants ( VARIANT_BOOL bStress, const _variant_t & dTensor, VARIANT * dInvariant ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5046, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x400c", bStress, &dTensor, dInvariant);
    return _result;
}

#pragma implementation_key(9287)
inline enum femap::zReturnCode femap::Imodel::feCompute2DInvariants ( VARIANT_BOOL bStress, const _variant_t & dTensor, VARIANT * dInvariant ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5047, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x000c\x400c", bStress, &dTensor, dInvariant);
    return _result;
}

#pragma implementation_key(9288)
inline enum femap::zReturnCode femap::Imodel::feMeshTetSolid2 ( enum zDataType entityTYPE, int entitySET, int propID, VARIANT_BOOL surfaceMeshOnly, VARIANT_BOOL makeMidside, double tetGrowth, VARIANT_BOOL checkSurfElem, VARIANT_BOOL deleteSurfElem, VARIANT_BOOL midsideGeom, double midsideAngle, VARIANT_BOOL multiThruThickness, VARIANT_BOOL sliverRemoval, int tetOptimization ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5048, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x0005\x000b\x000b\x000b\x0005\x000b\x000b\x0003", entityTYPE, entitySET, propID, surfaceMeshOnly, makeMidside, tetGrowth, checkSurfElem, deleteSurfElem, midsideGeom, midsideAngle, multiThruThickness, sliverRemoval, tetOptimization);
    return _result;
}

#pragma implementation_key(9289)
inline enum femap::zReturnCode femap::Imodel::feAppColorCreate ( enum zColor enColor, enum zColor enPattern, enum zColor enLinestyle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5049, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", enColor, enPattern, enLinestyle);
    return _result;
}

#pragma implementation_key(9290)
inline enum femap::zReturnCode femap::Imodel::feAppColorGetBaseColor ( int nColor, enum zColor * penColor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x504a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nColor, penColor);
    return _result;
}

#pragma implementation_key(9291)
inline enum femap::zReturnCode femap::Imodel::feAppColorGetPattern ( int nColor, enum zColor * penPattern ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x504b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nColor, penPattern);
    return _result;
}

#pragma implementation_key(9292)
inline enum femap::zReturnCode femap::Imodel::feAppColorGetLinestyle ( int nColor, enum zColor * penLinestyle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x504c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003", nColor, penLinestyle);
    return _result;
}

#pragma implementation_key(9293)
inline enum femap::zReturnCode femap::Imodel::feAppColorGetRGB ( int nColor, int * pnRed, int * pnGreen, int * pnBlue ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x504d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x4003\x4003\x4003", nColor, pnRed, pnGreen, pnBlue);
    return _result;
}

#pragma implementation_key(9294)
inline enum femap::zReturnCode femap::Imodel::feCheckCoincidentNode3 ( int mergeSET, double tolerance, VARIANT_BOOL merge, int nMergeMode, int nMergeLoc, VARIANT_BOOL bMergeAcrossConnections, VARIANT_BOOL nMergeAcrossOutputCSys, int nMergeAcrossCSysID, int nMessageMode, VARIANT_BOOL bSaveGroups ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x504e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x000b\x0003\x0003\x000b\x000b\x0003\x0003\x000b", mergeSET, tolerance, merge, nMergeMode, nMergeLoc, bMergeAcrossConnections, nMergeAcrossOutputCSys, nMergeAcrossCSysID, nMessageMode, bSaveGroups);
    return _result;
}

#pragma implementation_key(9295)
inline enum femap::zReturnCode femap::Imodel::feVectorRotate ( const _variant_t & baseXYZ, const _variant_t & vecXYZ, double angle, const _variant_t & origin, const _variant_t & Axis, VARIANT * baseROT, VARIANT * vecROT ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x504f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x0005\x000c\x000c\x400c\x400c", &baseXYZ, &vecXYZ, angle, &origin, &Axis, baseROT, vecROT);
    return _result;
}

#pragma implementation_key(9296)
inline enum femap::zReturnCode femap::Imodel::fePlaneRotate ( const _variant_t & baseXYZ, const _variant_t & vecXXYZ, const _variant_t & vecZXYZ, double angle, const _variant_t & origin, const _variant_t & Axis, VARIANT * baseROT, VARIANT * vecXROT, VARIANT * vecYROT, VARIANT * vecZROT ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5050, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000c\x000c\x000c\x0005\x000c\x000c\x400c\x400c\x400c\x400c", &baseXYZ, &vecXXYZ, &vecZXYZ, angle, &origin, &Axis, baseROT, vecXROT, vecYROT, vecZROT);
    return _result;
}

#pragma implementation_key(9297)
inline enum femap::zReturnCode femap::Imodel::feSolidFillCavity ( int curveID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5051, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", curveID);
    return _result;
}

#pragma implementation_key(9298)
inline enum femap::zReturnCode femap::Imodel::feOutputTransform2 ( int setSET, int vecSET, int nodeSET, int elemSET, enum zOutputDestination nodalMode, int nodalCSysID, VARIANT_BOOL nodalGlobalComp, enum zOutputDestination plateMode, int plateCSysID, int plateDOF, const _variant_t & plateVEC, double plateAngle, enum zOutputDestination solidMode, int solidCSysID, VARIANT_BOOL engrShearStrain ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5052, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0003\x000b\x0003\x0003\x0003\x000c\x0005\x0003\x0003\x000b", setSET, vecSET, nodeSET, elemSET, nodalMode, nodalCSysID, nodalGlobalComp, plateMode, plateCSysID, plateDOF, &plateVEC, plateAngle, solidMode, solidCSysID, engrShearStrain);
    return _result;
}

#pragma implementation_key(9299)
inline enum femap::zReturnCode femap::Imodel::feSolidEmbedMultiple ( int baseID, int toolSetID, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5053, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", baseID, toolSetID, Redraw);
    return _result;
}

#pragma implementation_key(9300)
inline enum femap::zReturnCode femap::Imodel::feAlignBetweenCSys ( enum zDataType entityTYPE, int entitySET, int nFromCSysID, int nToCSysID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5054, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", entityTYPE, entitySET, nFromCSysID, nToCSysID);
    return _result;
}

#pragma implementation_key(9301)
inline enum femap::zReturnCode femap::Imodel::feMeshSizeCurveMatchNodes ( int nCurveSet, int nNodeSet, double dTolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5055, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0005", nCurveSet, nNodeSet, dTolerance);
    return _result;
}

#pragma implementation_key(9302)
inline enum femap::zReturnCode femap::Imodel::feMeshSizeCurveMatchXYZ ( int nCurveSet, int nNumXYZ, const _variant_t & vecXYZ, double dTolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5056, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0005", nCurveSet, nNumXYZ, &vecXYZ, dTolerance);
    return _result;
}

#pragma implementation_key(9303)
inline enum femap::zReturnCode femap::Imodel::feSurfaceNonManifoldAddExpress ( int solidSetID, double dTolerance ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5057, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", solidSetID, dTolerance);
    return _result;
}

#pragma implementation_key(9304)
inline enum femap::zReturnCode femap::Imodel::feCurveOffsetCurveWasher2 ( int curveSET, int faceID, int nMode, VARIANT_BOOL bAutoSelect, VARIANT_BOOL bSaveSplit, VARIANT_BOOL bExtend, double dOffset, int nOffsetmode ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5058, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x000b\x0005\x0003", curveSET, faceID, nMode, bAutoSelect, bSaveSplit, bExtend, dOffset, nOffsetmode);
    return _result;
}

#pragma implementation_key(9305)
inline enum femap::zReturnCode femap::Imodel::feCurvePad ( int nCurve, double dValue, enum zPadOffsetType enPadOffsetType, enum zPadAlignment enPadAlignment, VARIANT_BOOL bPadAddWasher, int nPadAlignCurve, VARIANT_BOOL bSetupMappedMeshing, const _variant_t & alignVEC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5059, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005\x0003\x0003\x000b\x0003\x000b\x000c", nCurve, dValue, enPadOffsetType, enPadAlignment, bPadAddWasher, nPadAlignCurve, bSetupMappedMeshing, &alignVEC);
    return _result;
}

#pragma implementation_key(9306)
inline enum femap::zReturnCode femap::Imodel::feFileReadStepOpt2 ( VARIANT_BOOL useDlg, _bstr_t fName, int layer, int color, VARIANT_BOOL increment_layer, VARIANT_BOOL increment_color, VARIANT_BOOL assign_color, VARIANT_BOOL bodies, VARIANT_BOOL faceted, VARIANT_BOOL Surfaces, VARIANT_BOOL Curves, VARIANT_BOOL Points, VARIANT_BOOL optimize, VARIANT_BOOL simplify ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x505a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", useDlg, (BSTR)fName, layer, color, increment_layer, increment_color, assign_color, bodies, faceted, Surfaces, Curves, Points, optimize, simplify);
    return _result;
}

#pragma implementation_key(9307)
inline enum femap::zReturnCode femap::Imodel::feFileWriteStep2 ( _bstr_t fName, int solidSET, int format ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x505b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x0003", (BSTR)fName, solidSET, format);
    return _result;
}

#pragma implementation_key(9308)
inline int femap::Imodel::feAppMessageClear ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x505c, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9309)
inline enum femap::zReturnCode femap::Imodel::feGetRealLength ( _bstr_t title, double * value ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x505d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x4005", (BSTR)title, value);
    return _result;
}

#pragma implementation_key(9310)
inline enum femap::zReturnCode femap::Imodel::feModifySurfaceNormal ( enum zDataType entityTYPE, int entitySET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x505e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", entityTYPE, entitySET);
    return _result;
}

#pragma implementation_key(9311)
inline enum femap::zReturnCode femap::Imodel::feMeshEdgeSplit2 ( int nNode1, int nNode2, int nNumSplits, int nBiasType, int nBiasLocation, double dBias, int nNodeSetorZero ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x505f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x0005\x0003", nNode1, nNode2, nNumSplits, nBiasType, nBiasLocation, dBias, nNodeSetorZero);
    return _result;
}

#pragma implementation_key(9312)
inline enum femap::zReturnCode femap::Imodel::feCurveProjectCurvesOntoSurfaces ( int cuSetID, int suSetID, int extendMode, VARIANT_BOOL attrib_trans ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5060, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", cuSetID, suSetID, extendMode, attrib_trans);
    return _result;
}

#pragma implementation_key(9313)
inline enum femap::zReturnCode femap::Imodel::feSolidExtendEdgesToSurfaces ( int cuSetID, int suSetID, int nExtendShape, VARIANT_BOOL bEdgeAuto ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5061, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", cuSetID, suSetID, nExtendShape, bEdgeAuto);
    return _result;
}

#pragma implementation_key(9314)
inline enum femap::zReturnCode femap::Imodel::feSolidRemoveRedundantPoint ( int ptID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5062, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", ptID);
    return _result;
}

#pragma implementation_key(9315)
inline enum femap::zReturnCode femap::Imodel::feSolidRemoveBlendsBelowRadius ( int soSetID, double max_rad ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5063, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", soSetID, max_rad);
    return _result;
}

#pragma implementation_key(9316)
inline enum femap::zReturnCode femap::Imodel::feSolidMovePointOntoGeometry ( int ptSetID, int geomID, enum zDataType geomTYPE, VARIANT_BOOL bAlongEdge ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5064, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b", ptSetID, geomID, geomTYPE, bAlongEdge);
    return _result;
}

#pragma implementation_key(9317)
inline enum femap::zReturnCode femap::Imodel::feSolidRayFire ( int soSetID, int nNumRay, const _variant_t & vRayLoc, const _variant_t & vRayDir, VARIANT * nHitSurface, VARIANT * vHitLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5065, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x400c\x400c", soSetID, nNumRay, &vRayLoc, &vRayDir, nHitSurface, vHitLoc);
    return _result;
}

#pragma implementation_key(9318)
inline enum femap::zReturnCode femap::Imodel::feSurfaceRayFire ( int suSetID, int nNumRay, const _variant_t & vRayLoc, const _variant_t & vRayDir, VARIANT * nHitSurface, VARIANT * vHitLoc ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5066, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x400c\x400c", suSetID, nNumRay, &vRayLoc, &vRayDir, nHitSurface, vHitLoc);
    return _result;
}

#pragma implementation_key(9319)
inline enum femap::zReturnCode femap::Imodel::feSolidExtendToSurface ( int suID1, int suID2 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5067, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", suID1, suID2);
    return _result;
}

#pragma implementation_key(9320)
inline enum femap::zReturnCode femap::Imodel::feSolidMidSurfaceManualInput ( int suSet1_ID, int suSet2_ID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5068, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", suSet1_ID, suSet2_ID);
    return _result;
}

#pragma implementation_key(9321)
inline enum femap::zReturnCode femap::Imodel::feGroupsContaining ( enum zDataType enDataType, int nEntityID, int nGroupSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5069, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003", enDataType, nEntityID, nGroupSetID);
    return _result;
}

#pragma implementation_key(9322)
inline enum femap::zReturnCode femap::Imodel::feMeasureDistanceBetweenNodes2 ( int nFrom, int nTo, int nOutSetID, int nOutVecID, int nCSysID, VARIANT * vecBASE, VARIANT * vecTip, VARIANT * vecDist, double * magDist ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x506a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x400c\x400c\x400c\x4005", nFrom, nTo, nOutSetID, nOutVecID, nCSysID, vecBASE, vecTip, vecDist, magDist);
    return _result;
}

#pragma implementation_key(9323)
inline enum femap::zReturnCode femap::Imodel::feMeshUnzip2 ( int fromSET, int toSET, int connectWith, int orientMode, int orientID, const _variant_t & orientVector, const _variant_t & dof, VARIANT_BOOL rigidReverse ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x506b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003\x0003\x000c\x000c\x000b", fromSET, toSET, connectWith, orientMode, orientID, &orientVector, &dof, rigidReverse);
    return _result;
}

#pragma implementation_key(9324)
inline enum femap::zReturnCode femap::Imodel::feAppSetModel32 ( int nHiModelID, int nLoModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x506c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", nHiModelID, nLoModelID);
    return _result;
}

#pragma implementation_key(9325)
inline enum femap::zReturnCode femap::Imodel::feAppGetModel32 ( int * nHiModelID, int * nLoModelID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x506d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x4003\x4003", nHiModelID, nLoModelID);
    return _result;
}

#pragma implementation_key(9326)
inline enum femap::zReturnCode femap::Imodel::feAppUndoCheckpoint ( _bstr_t undoTitle ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x506e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)undoTitle);
    return _result;
}

#pragma implementation_key(9327)
inline enum femap::zReturnCode femap::Imodel::feSurfaceGetUnderlying ( int nSurfaceID, VARIANT_BOOL bAutoOffset, double dOffset, double dSizeFactor ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x506f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0005\x0005", nSurfaceID, bAutoOffset, dOffset, dSizeFactor);
    return _result;
}

#pragma implementation_key(9328)
inline enum femap::zReturnCode femap::Imodel::feGroupGenElemShape ( int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5070, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", elemSET);
    return _result;
}

#pragma implementation_key(9329)
inline enum femap::zReturnCode femap::Imodel::feEntitySetVisibility ( enum zVisibilityType visType, int visID, VARIANT_BOOL bIsVisible, VARIANT_BOOL bRedraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5071, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b", visType, visID, bIsVisible, bRedraw);
    return _result;
}

#pragma implementation_key(9330)
inline enum femap::zReturnCode femap::Imodel::feEntityGetVisibility ( enum zVisibilityType visType, int visSetID, VARIANT_BOOL bIsVisible ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5072, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", visType, visSetID, bIsVisible);
    return _result;
}

#pragma implementation_key(9331)
inline enum femap::zReturnCode femap::Imodel::feVectorArrayTransform ( int Count, int fromCSYS, int toCSYS, const _variant_t & baseXYZ, const _variant_t & fromxyz, VARIANT * xyz ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5073, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c\x000c\x400c", Count, fromCSYS, toCSYS, &baseXYZ, &fromxyz, xyz);
    return _result;
}

#pragma implementation_key(9332)
inline enum femap::zReturnCode femap::Imodel::feSurfaceFromMesh2 ( int elemSetID, VARIANT_BOOL bDeleteMesh, VARIANT_BOOL bWireframeOnly, double tolerance, VARIANT_BOOL bLengthCutoff, double len_cut_val, double ang_tol ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5074, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x0005\x000b\x0005\x0005", elemSetID, bDeleteMesh, bWireframeOnly, tolerance, bLengthCutoff, len_cut_val, ang_tol);
    return _result;
}

#pragma implementation_key(9333)
inline enum femap::zReturnCode femap::Imodel::feSolidRemoveCurve ( int cuSetID, enum zCurveRemoveOption nRemoveOption ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5075, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", cuSetID, nRemoveOption);
    return _result;
}

#pragma implementation_key(9334)
inline enum femap::zReturnCode femap::Imodel::feSurfaceOffset ( int surfID, double dOffset ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5076, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0005", surfID, dOffset);
    return _result;
}

#pragma implementation_key(9335)
inline enum femap::zReturnCode femap::Imodel::feCrossSectionReport ( int nPropID, VARIANT_BOOL bDoEndA, VARIANT_BOOL bCopyToClipboard, _bstr_t fName, enum zPictFormat2 nFileFormat ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5077, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x0008\x0003", nPropID, bDoEndA, bCopyToClipboard, (BSTR)fName, nFileFormat);
    return _result;
}

#pragma implementation_key(9336)
inline enum femap::zReturnCode femap::Imodel::feGroupGenVisible ( int nGroupID, VARIANT_BOOL bIncludePropAndMatl, _bstr_t title ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5078, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x0008", nGroupID, bIncludePropAndMatl, (BSTR)title);
    return _result;
}

#pragma implementation_key(9337)
inline enum femap::zReturnCode femap::Imodel::feCurveSolidToFEMAP ( int cuSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5079, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", cuSetID);
    return _result;
}

#pragma implementation_key(9338)
inline enum femap::zReturnCode femap::Imodel::feResultsRankingToDataTable ( VARIANT_BOOL bOverrideLock, enum zDataType nRankByEntity, enum zRankingMethod nMethod, enum zRankingApproach nApproach, enum zRankingType ntype, int nNumberToRank, int nEntitySetID, int nResultsSetSetID, int nResultsVectorSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x507a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x0003\x0003\x0003\x0003\x0003\x0003\x0003", bOverrideLock, nRankByEntity, nMethod, nApproach, ntype, nNumberToRank, nEntitySetID, nResultsSetSetID, nResultsVectorSetID);
    return _result;
}

#pragma implementation_key(9339)
inline enum femap::zReturnCode femap::Imodel::feResultsToDataTable ( VARIANT_BOOL bOverrideLock, int nCSysID, VARIANT_BOOL bSetInColumns, VARIANT_BOOL bVecInColumns, VARIANT_BOOL bEntInColumns, VARIANT_BOOL bAltColumnOrder, int nResultsSetSetID, int nResultsVectorSetID, int nEntitySetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x507b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0003\x000b\x000b\x000b\x000b\x0003\x0003\x0003", bOverrideLock, nCSysID, bSetInColumns, bVecInColumns, bEntInColumns, bAltColumnOrder, nResultsSetSetID, nResultsVectorSetID, nEntitySetID);
    return _result;
}

#pragma implementation_key(9340)
inline enum femap::zReturnCode femap::Imodel::feDeleteOutputEntry ( int setSET, int vectorSET, int nodeSET, int elemSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x507c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x0003", setSET, vectorSET, nodeSET, elemSET);
    return _result;
}

#pragma implementation_key(9341)
inline enum femap::zReturnCode femap::Imodel::feDeleteOutput2 ( int outputSetSET, int vectorSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x507d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003", outputSetSET, vectorSET);
    return _result;
}

#pragma implementation_key(9342)
inline enum femap::zReturnCode femap::Imodel::feGetElementFacesFromSet ( _bstr_t title, int nElemSetID, int * nCount, VARIANT * elemID, VARIANT * faceID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x507e, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003\x4003\x400c\x400c", (BSTR)title, nElemSetID, nCount, elemID, faceID);
    return _result;
}

#pragma implementation_key(9343)
inline enum femap::zReturnCode femap::Imodel::feFileReadCSVResults ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x507f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(9344)
inline enum femap::zReturnCode femap::Imodel::feFileReadJT ( _bstr_t fName ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5080, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008", (BSTR)fName);
    return _result;
}

#pragma implementation_key(9345)
inline enum femap::zReturnCode femap::Imodel::feFileWriteJT ( _bstr_t fName, int solidSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5081, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0008\x0003", (BSTR)fName, solidSET);
    return _result;
}

#pragma implementation_key(9346)
inline enum femap::zReturnCode femap::Imodel::feSurfaceCornersMultiple ( int NumberOfSurfaces, const _variant_t & fourCorners, const _variant_t & c1, const _variant_t & c2, const _variant_t & c3, const _variant_t & c4 ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5082, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000c\x000c\x000c", NumberOfSurfaces, &fourCorners, &c1, &c2, &c3, &c4);
    return _result;
}

#pragma implementation_key(9347)
inline enum femap::zReturnCode femap::Imodel::feCurvesBreakAtIntersections ( int curveSET ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5083, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", curveSET);
    return _result;
}

#pragma implementation_key(9348)
inline enum femap::zReturnCode femap::Imodel::feSurfaceExtract ( int suSetID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5084, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003", suSetID);
    return _result;
}

#pragma implementation_key(9349)
inline enum femap::zReturnCode femap::Imodel::feGenerateCopy2 ( enum zDataType entityTYPE, int entitySET, const _variant_t & alongVEC, int nodeINC, VARIANT_BOOL Match, VARIANT_BOOL matchColorLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5085, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x0003\x000b\x000b", entityTYPE, entitySET, &alongVEC, nodeINC, Match, matchColorLayer);
    return _result;
}

#pragma implementation_key(9350)
inline enum femap::zReturnCode femap::Imodel::feGenerateScale2 ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, const _variant_t & scaleVEC, int csysID, VARIANT_BOOL Match, VARIANT_BOOL matchColorLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5086, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0003\x000b\x000b", entityTYPE, entitySET, &origVEC, &scaleVEC, csysID, Match, matchColorLayer);
    return _result;
}

#pragma implementation_key(9351)
inline enum femap::zReturnCode femap::Imodel::feGenerateRadialCopy2 ( enum zDataType entityTYPE, int entitySET, const _variant_t & origXYZ, const _variant_t & aroundVEC, double Length, VARIANT_BOOL bScaleAroundVec, VARIANT_BOOL Match, VARIANT_BOOL matchColorLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5087, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x000b\x000b\x000b", entityTYPE, entitySET, &origXYZ, &aroundVEC, Length, bScaleAroundVec, Match, matchColorLayer);
    return _result;
}

#pragma implementation_key(9352)
inline enum femap::zReturnCode femap::Imodel::feGenerateRotate2 ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, const _variant_t & axisVEC, double rotANGLE, double transDIST, VARIANT_BOOL Match, VARIANT_BOOL matchColorLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5088, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x0005\x000b\x000b", entityTYPE, entitySET, &origVEC, &axisVEC, rotANGLE, transDIST, Match, matchColorLayer);
    return _result;
}

#pragma implementation_key(9353)
inline enum femap::zReturnCode femap::Imodel::feGenerateReflect2 ( enum zDataType entityTYPE, int entitySET, const _variant_t & origVEC, const _variant_t & normVEC, double trapWIDTH, VARIANT_BOOL Match, VARIANT_BOOL matchColorLayer ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5089, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000c\x000c\x0005\x000b\x000b", entityTYPE, entitySET, &origVEC, &normVEC, trapWIDTH, Match, matchColorLayer);
    return _result;
}

#pragma implementation_key(9354)
inline enum femap::zReturnCode femap::Imodel::feSolidExtractCenterlines ( int soSetID, int inMatID, VARIANT_BOOL bTubularOnly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x508a, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", soSetID, inMatID, bTubularOnly);
    return _result;
}

#pragma implementation_key(9355)
inline enum femap::zReturnCode femap::Imodel::feViewShow2 ( enum zDataType dTYPE, int ID, VARIANT_BOOL qAutoscale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x508b, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", dTYPE, ID, qAutoscale);
    return _result;
}

#pragma implementation_key(9356)
inline enum femap::zReturnCode femap::Imodel::feWindowShow2 ( enum zDataType dTYPE, int ID, VARIANT_BOOL qAutoscale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x508c, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b", dTYPE, ID, qAutoscale);
    return _result;
}

#pragma implementation_key(9357)
inline enum femap::zReturnCode femap::Imodel::feCreateFunction ( int nNumAvailableTypes, const _variant_t & AvailableTypes, int * nID ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x508d, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x4003", nNumAvailableTypes, &AvailableTypes, nID);
    return _result;
}

#pragma implementation_key(9358)
inline int femap::Imodel::feAppModelInfoShow ( ) {
    int _result = 0;
    _com_dispatch_method(this, 0x508e, DISPATCH_METHOD, VT_I4, (void*)&_result, NULL);
    return _result;
}

#pragma implementation_key(9359)
inline int femap::Imodel::feAppSetModelInfoShow ( VARIANT_BOOL bEnable ) {
    int _result = 0;
    _com_dispatch_method(this, 0x508f, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b", bEnable);
    return _result;
}

#pragma implementation_key(9360)
inline enum femap::zReturnCode femap::Imodel::feSolidSlice2 ( int solidSET, const _variant_t & planeBase, const _variant_t & planeNormal, VARIANT_BOOL bSliceOrSection, VARIANT_BOOL bMatchAcrossSlice, int nNumberOfPlanes, double dMultiPlaneOffset, enum zColor nSliceColor, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5090, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000b\x000b\x0003\x0005\x0003\x000b", solidSET, &planeBase, &planeNormal, bSliceOrSection, bMatchAcrossSlice, nNumberOfPlanes, dMultiPlaneOffset, nSliceColor, Redraw);
    return _result;
}

#pragma implementation_key(9361)
inline enum femap::zReturnCode femap::Imodel::feSolidSliceAlongFace2 ( int surfaceID, VARIANT_BOOL bSliceOrSection, VARIANT_BOOL bMatchAcrossSlice, enum zColor nSliceColor, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5091, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000b\x000b\x0003\x000b", surfaceID, bSliceOrSection, bMatchAcrossSlice, nSliceColor, Redraw);
    return _result;
}

#pragma implementation_key(9362)
inline enum femap::zReturnCode femap::Imodel::feSolidSliceWithSheet2 ( int solidSET, int sheetSET, VARIANT_BOOL bSliceOrSection, VARIANT_BOOL bMatchAcrossSlice, enum zColor nSliceColor, VARIANT_BOOL deleteTool, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5092, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x0003\x000b\x000b", solidSET, sheetSET, bSliceOrSection, bMatchAcrossSlice, nSliceColor, deleteTool, Redraw);
    return _result;
}

#pragma implementation_key(9363)
inline enum femap::zReturnCode femap::Imodel::feSolidSliceWithCurve2 ( int solidSET, int curveSET, VARIANT_BOOL bSliceOrSection, VARIANT_BOOL bMatchAcrossSlice, enum zColor nSliceColor, VARIANT_BOOL bAlongCurveNormal, VARIANT_BOOL bVectorDirectionOnly, const _variant_t & vectorBase, const _variant_t & vectorDirection, VARIANT_BOOL deleteTool, VARIANT_BOOL Redraw ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5093, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x000b\x000b\x0003\x000b\x000b\x000c\x000c\x000b\x000b", solidSET, curveSET, bSliceOrSection, bMatchAcrossSlice, nSliceColor, bAlongCurveNormal, bVectorDirectionOnly, &vectorBase, &vectorDirection, deleteTool, Redraw);
    return _result;
}

#pragma implementation_key(9364)
inline enum femap::zReturnCode femap::Imodel::feViewShowMultiple ( int nSets, const _variant_t & piTYPEs, const _variant_t & piSetIDs, VARIANT_BOOL qAutoscale ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5094, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x000c\x000c\x000b", nSets, &piTYPEs, &piSetIDs, qAutoscale);
    return _result;
}

#pragma implementation_key(9365)
inline enum femap::zReturnCode femap::Imodel::feOutputGlobalPly ( int nSetSet, int nVectorSet, int nGlobalPlySET, VARIANT_BOOL bTop, VARIANT_BOOL bBottom, VARIANT_BOOL bGlobalPly ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5095, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000b\x000b\x000b", nSetSet, nVectorSet, nGlobalPlySET, bTop, bBottom, bGlobalPly);
    return _result;
}

#pragma implementation_key(9366)
inline enum femap::zReturnCode femap::Imodel::feSolidAlignSplits ( enum zDataType entityTYPE, int setID, enum zSolidAlignVecMode vecMode, const _variant_t & axisVEC ) {
    enum zReturnCode _result;
    _com_dispatch_method(this, 0x5096, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x0003\x0003\x0003\x000c", entityTYPE, setID, vecMode, &axisVEC);
    return _result;
}

#pragma implementation_key(9367)
inline int femap::Imodel::feFileReadStepOpt ( VARIANT_BOOL useDlg, _bstr_t fName, _bstr_t title, int layer, int color, VARIANT_BOOL increment_layer, VARIANT_BOOL increment_color, VARIANT_BOOL assign_color, VARIANT_BOOL class_VI, VARIANT_BOOL class_V, VARIANT_BOOL class_IV, VARIANT_BOOL class_III, VARIANT_BOOL class_II_wf, VARIANT_BOOL class_II_curv, VARIANT_BOOL class_II_rect, VARIANT_BOOL class_II_2d, VARIANT_BOOL smooth_g1, VARIANT_BOOL explode, VARIANT_BOOL analytics, VARIANT_BOOL stitch, VARIANT_BOOL closed_orient, VARIANT_BOOL pro_e, VARIANT_BOOL check_input, VARIANT_BOOL check_output ) {
    int _result = 0;
    _com_dispatch_method(this, 0x4e35, DISPATCH_METHOD, VT_I4, (void*)&_result, 
        L"\x000b\x0008\x0008\x0003\x0003\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b\x000b", useDlg, (BSTR)fName, (BSTR)title, layer, color, increment_layer, increment_color, assign_color, class_VI, class_V, class_IV, class_III, class_II_wf, class_II_curv, class_II_rect, class_II_2d, smooth_g1, explode, analytics, stitch, closed_orient, pro_e, check_input, check_output);
    return _result;
}

#pragma implementation_key(9368)
inline femap::ISetPtr femap::Imodel::GetfeSet ( ) {
    struct ISet * _result = 0;
    _com_dispatch_propget(this, 0x2710, VT_DISPATCH, (void*)&_result);
    return ISetPtr(_result, false);
}

#pragma implementation_key(9369)
inline void femap::Imodel::PutfeSet ( struct ISet * _val ) {
    _com_dispatch_propput(this, 0x2710, VT_DISPATCH, _val);
}

#pragma implementation_key(9370)
inline femap::IReadPtr femap::Imodel::GetfeRead ( ) {
    struct IRead * _result = 0;
    _com_dispatch_propget(this, 0x2711, VT_DISPATCH, (void*)&_result);
    return IReadPtr(_result, false);
}

#pragma implementation_key(9371)
inline void femap::Imodel::PutfeRead ( struct IRead * _val ) {
    _com_dispatch_propput(this, 0x2711, VT_DISPATCH, _val);
}

#pragma implementation_key(9372)
inline femap::IMatlPtr femap::Imodel::GetfeMatl ( ) {
    struct IMatl * _result = 0;
    _com_dispatch_propget(this, 0x2712, VT_DISPATCH, (void*)&_result);
    return IMatlPtr(_result, false);
}

#pragma implementation_key(9373)
inline void femap::Imodel::PutfeMatl ( struct IMatl * _val ) {
    _com_dispatch_propput(this, 0x2712, VT_DISPATCH, _val);
}

#pragma implementation_key(9374)
inline femap::IPropPtr femap::Imodel::GetfeProp ( ) {
    struct IProp * _result = 0;
    _com_dispatch_propget(this, 0x2713, VT_DISPATCH, (void*)&_result);
    return IPropPtr(_result, false);
}

#pragma implementation_key(9375)
inline void femap::Imodel::PutfeProp ( struct IProp * _val ) {
    _com_dispatch_propput(this, 0x2713, VT_DISPATCH, _val);
}

#pragma implementation_key(9376)
inline femap::INodePtr femap::Imodel::GetfeNode ( ) {
    struct INode * _result = 0;
    _com_dispatch_propget(this, 0x2714, VT_DISPATCH, (void*)&_result);
    return INodePtr(_result, false);
}

#pragma implementation_key(9377)
inline void femap::Imodel::PutfeNode ( struct INode * _val ) {
    _com_dispatch_propput(this, 0x2714, VT_DISPATCH, _val);
}

#pragma implementation_key(9378)
inline femap::IElemPtr femap::Imodel::GetfeElem ( ) {
    struct IElem * _result = 0;
    _com_dispatch_propget(this, 0x2715, VT_DISPATCH, (void*)&_result);
    return IElemPtr(_result, false);
}

#pragma implementation_key(9379)
inline void femap::Imodel::PutfeElem ( struct IElem * _val ) {
    _com_dispatch_propput(this, 0x2715, VT_DISPATCH, _val);
}

#pragma implementation_key(9380)
inline femap::ICSysPtr femap::Imodel::GetfeCSys ( ) {
    struct ICSys * _result = 0;
    _com_dispatch_propget(this, 0x2716, VT_DISPATCH, (void*)&_result);
    return ICSysPtr(_result, false);
}

#pragma implementation_key(9381)
inline void femap::Imodel::PutfeCSys ( struct ICSys * _val ) {
    _com_dispatch_propput(this, 0x2716, VT_DISPATCH, _val);
}

#pragma implementation_key(9382)
inline femap::IBCSetPtr femap::Imodel::GetfeBCSet ( ) {
    struct IBCSet * _result = 0;
    _com_dispatch_propget(this, 0x2717, VT_DISPATCH, (void*)&_result);
    return IBCSetPtr(_result, false);
}

#pragma implementation_key(9383)
inline void femap::Imodel::PutfeBCSet ( struct IBCSet * _val ) {
    _com_dispatch_propput(this, 0x2717, VT_DISPATCH, _val);
}

#pragma implementation_key(9384)
inline femap::IBCNodePtr femap::Imodel::GetfeBCNode ( ) {
    struct IBCNode * _result = 0;
    _com_dispatch_propget(this, 0x2718, VT_DISPATCH, (void*)&_result);
    return IBCNodePtr(_result, false);
}

#pragma implementation_key(9385)
inline void femap::Imodel::PutfeBCNode ( struct IBCNode * _val ) {
    _com_dispatch_propput(this, 0x2718, VT_DISPATCH, _val);
}

#pragma implementation_key(9386)
inline femap::IBCGeomPtr femap::Imodel::GetfeBCGeom ( ) {
    struct IBCGeom * _result = 0;
    _com_dispatch_propget(this, 0x2719, VT_DISPATCH, (void*)&_result);
    return IBCGeomPtr(_result, false);
}

#pragma implementation_key(9387)
inline void femap::Imodel::PutfeBCGeom ( struct IBCGeom * _val ) {
    _com_dispatch_propput(this, 0x2719, VT_DISPATCH, _val);
}

#pragma implementation_key(9388)
inline femap::IBCEqnPtr femap::Imodel::GetfeBCEqn ( ) {
    struct IBCEqn * _result = 0;
    _com_dispatch_propget(this, 0x271a, VT_DISPATCH, (void*)&_result);
    return IBCEqnPtr(_result, false);
}

#pragma implementation_key(9389)
inline void femap::Imodel::PutfeBCEqn ( struct IBCEqn * _val ) {
    _com_dispatch_propput(this, 0x271a, VT_DISPATCH, _val);
}

#pragma implementation_key(9390)
inline femap::ILoadSetPtr femap::Imodel::GetfeLoadSet ( ) {
    struct ILoadSet * _result = 0;
    _com_dispatch_propget(this, 0x271b, VT_DISPATCH, (void*)&_result);
    return ILoadSetPtr(_result, false);
}

#pragma implementation_key(9391)
inline void femap::Imodel::PutfeLoadSet ( struct ILoadSet * _val ) {
    _com_dispatch_propput(this, 0x271b, VT_DISPATCH, _val);
}

#pragma implementation_key(9392)
inline femap::ILoadNTempPtr femap::Imodel::GetfeLoadNTemp ( ) {
    struct ILoadNTemp * _result = 0;
    _com_dispatch_propget(this, 0x271c, VT_DISPATCH, (void*)&_result);
    return ILoadNTempPtr(_result, false);
}

#pragma implementation_key(9393)
inline void femap::Imodel::PutfeLoadNTemp ( struct ILoadNTemp * _val ) {
    _com_dispatch_propput(this, 0x271c, VT_DISPATCH, _val);
}

#pragma implementation_key(9394)
inline femap::ILoadETempPtr femap::Imodel::GetfeLoadETemp ( ) {
    struct ILoadETemp * _result = 0;
    _com_dispatch_propget(this, 0x271d, VT_DISPATCH, (void*)&_result);
    return ILoadETempPtr(_result, false);
}

#pragma implementation_key(9395)
inline void femap::Imodel::PutfeLoadETemp ( struct ILoadETemp * _val ) {
    _com_dispatch_propput(this, 0x271d, VT_DISPATCH, _val);
}

#pragma implementation_key(9396)
inline femap::ILoadMeshPtr femap::Imodel::GetfeLoadMesh ( ) {
    struct ILoadMesh * _result = 0;
    _com_dispatch_propget(this, 0x271e, VT_DISPATCH, (void*)&_result);
    return ILoadMeshPtr(_result, false);
}

#pragma implementation_key(9397)
inline void femap::Imodel::PutfeLoadMesh ( struct ILoadMesh * _val ) {
    _com_dispatch_propput(this, 0x271e, VT_DISPATCH, _val);
}

#pragma implementation_key(9398)
inline femap::ILoadGeomPtr femap::Imodel::GetfeLoadGeom ( ) {
    struct ILoadGeom * _result = 0;
    _com_dispatch_propget(this, 0x271f, VT_DISPATCH, (void*)&_result);
    return ILoadGeomPtr(_result, false);
}

#pragma implementation_key(9399)
inline void femap::Imodel::PutfeLoadGeom ( struct ILoadGeom * _val ) {
    _com_dispatch_propput(this, 0x271f, VT_DISPATCH, _val);
}

#pragma implementation_key(9400)
inline femap::IGroupPtr femap::Imodel::GetfeGroup ( ) {
    struct IGroup * _result = 0;
    _com_dispatch_propget(this, 0x2720, VT_DISPATCH, (void*)&_result);
    return IGroupPtr(_result, false);
}

#pragma implementation_key(9401)
inline void femap::Imodel::PutfeGroup ( struct IGroup * _val ) {
    _com_dispatch_propput(this, 0x2720, VT_DISPATCH, _val);
}

#pragma implementation_key(9402)
inline femap::IViewPtr femap::Imodel::GetfeView ( ) {
    struct IView * _result = 0;
    _com_dispatch_propget(this, 0x2721, VT_DISPATCH, (void*)&_result);
    return IViewPtr(_result, false);
}

#pragma implementation_key(9403)
inline void femap::Imodel::PutfeView ( struct IView * _val ) {
    _com_dispatch_propput(this, 0x2721, VT_DISPATCH, _val);
}

#pragma implementation_key(9404)
inline femap::IViewOrientPtr femap::Imodel::GetfeViewOrient ( ) {
    struct IViewOrient * _result = 0;
    _com_dispatch_propget(this, 0x2968, VT_DISPATCH, (void*)&_result);
    return IViewOrientPtr(_result, false);
}

#pragma implementation_key(9405)
inline void femap::Imodel::PutfeViewOrient ( struct IViewOrient * _val ) {
    _com_dispatch_propput(this, 0x2968, VT_DISPATCH, _val);
}

#pragma implementation_key(9406)
inline femap::IVarPtr femap::Imodel::GetfeVar ( ) {
    struct IVar * _result = 0;
    _com_dispatch_propget(this, 0x2722, VT_DISPATCH, (void*)&_result);
    return IVarPtr(_result, false);
}

#pragma implementation_key(9407)
inline void femap::Imodel::PutfeVar ( struct IVar * _val ) {
    _com_dispatch_propput(this, 0x2722, VT_DISPATCH, _val);
}

#pragma implementation_key(9408)
inline femap::IReportPtr femap::Imodel::GetfeReport ( ) {
    struct IReport * _result = 0;
    _com_dispatch_propget(this, 0x2723, VT_DISPATCH, (void*)&_result);
    return IReportPtr(_result, false);
}

#pragma implementation_key(9409)
inline void femap::Imodel::PutfeReport ( struct IReport * _val ) {
    _com_dispatch_propput(this, 0x2723, VT_DISPATCH, _val);
}

#pragma implementation_key(9410)
inline femap::ILayerPtr femap::Imodel::GetfeLayer ( ) {
    struct ILayer * _result = 0;
    _com_dispatch_propget(this, 0x2724, VT_DISPATCH, (void*)&_result);
    return ILayerPtr(_result, false);
}

#pragma implementation_key(9411)
inline void femap::Imodel::PutfeLayer ( struct ILayer * _val ) {
    _com_dispatch_propput(this, 0x2724, VT_DISPATCH, _val);
}

#pragma implementation_key(9412)
inline femap::IContactPtr femap::Imodel::GetfeContact ( ) {
    struct IContact * _result = 0;
    _com_dispatch_propget(this, 0x2725, VT_DISPATCH, (void*)&_result);
    return IContactPtr(_result, false);
}

#pragma implementation_key(9413)
inline void femap::Imodel::PutfeContact ( struct IContact * _val ) {
    _com_dispatch_propput(this, 0x2725, VT_DISPATCH, _val);
}

#pragma implementation_key(9414)
inline femap::IFunctionPtr femap::Imodel::GetfeFunction ( ) {
    struct IFunction * _result = 0;
    _com_dispatch_propget(this, 0x2726, VT_DISPATCH, (void*)&_result);
    return IFunctionPtr(_result, false);
}

#pragma implementation_key(9415)
inline void femap::Imodel::PutfeFunction ( struct IFunction * _val ) {
    _com_dispatch_propput(this, 0x2726, VT_DISPATCH, _val);
}

#pragma implementation_key(9416)
inline femap::IOptimPtr femap::Imodel::GetfeOptim ( ) {
    struct IOptim * _result = 0;
    _com_dispatch_propget(this, 0x2727, VT_DISPATCH, (void*)&_result);
    return IOptimPtr(_result, false);
}

#pragma implementation_key(9417)
inline void femap::Imodel::PutfeOptim ( struct IOptim * _val ) {
    _com_dispatch_propput(this, 0x2727, VT_DISPATCH, _val);
}

#pragma implementation_key(9418)
inline femap::IOutputSetPtr femap::Imodel::GetfeOutputSet ( ) {
    struct IOutputSet * _result = 0;
    _com_dispatch_propget(this, 0x2728, VT_DISPATCH, (void*)&_result);
    return IOutputSetPtr(_result, false);
}

#pragma implementation_key(9419)
inline void femap::Imodel::PutfeOutputSet ( struct IOutputSet * _val ) {
    _com_dispatch_propput(this, 0x2728, VT_DISPATCH, _val);
}

#pragma implementation_key(9420)
inline femap::IOutputPtr femap::Imodel::GetfeOutput ( ) {
    struct IOutput * _result = 0;
    _com_dispatch_propget(this, 0x2729, VT_DISPATCH, (void*)&_result);
    return IOutputPtr(_result, false);
}

#pragma implementation_key(9421)
inline void femap::Imodel::PutfeOutput ( struct IOutput * _val ) {
    _com_dispatch_propput(this, 0x2729, VT_DISPATCH, _val);
}

#pragma implementation_key(9422)
inline femap::ITmgBCPtr femap::Imodel::GetfeTMGBC ( ) {
    struct ITmgBC * _result = 0;
    _com_dispatch_propget(this, 0x272a, VT_DISPATCH, (void*)&_result);
    return ITmgBCPtr(_result, false);
}

#pragma implementation_key(9423)
inline void femap::Imodel::PutfeTMGBC ( struct ITmgBC * _val ) {
    _com_dispatch_propput(this, 0x272a, VT_DISPATCH, _val);
}

#pragma implementation_key(9424)
inline femap::ITmgCtlPtr femap::Imodel::GetfeTMGCtrl ( ) {
    struct ITmgCtl * _result = 0;
    _com_dispatch_propget(this, 0x272b, VT_DISPATCH, (void*)&_result);
    return ITmgCtlPtr(_result, false);
}

#pragma implementation_key(9425)
inline void femap::Imodel::PutfeTMGCtrl ( struct ITmgCtl * _val ) {
    _com_dispatch_propput(this, 0x272b, VT_DISPATCH, _val);
}

#pragma implementation_key(9426)
inline femap::ITmgIntPtr femap::Imodel::GetfeTMGInt ( ) {
    struct ITmgInt * _result = 0;
    _com_dispatch_propget(this, 0x272c, VT_DISPATCH, (void*)&_result);
    return ITmgIntPtr(_result, false);
}

#pragma implementation_key(9427)
inline void femap::Imodel::PutfeTMGInt ( struct ITmgInt * _val ) {
    _com_dispatch_propput(this, 0x272c, VT_DISPATCH, _val);
}

#pragma implementation_key(9428)
inline femap::ITmgOptPtr femap::Imodel::GetfeTMGOpt ( ) {
    struct ITmgOpt * _result = 0;
    _com_dispatch_propget(this, 0x272d, VT_DISPATCH, (void*)&_result);
    return ITmgOptPtr(_result, false);
}

#pragma implementation_key(9429)
inline void femap::Imodel::PutfeTMGOpt ( struct ITmgOpt * _val ) {
    _com_dispatch_propput(this, 0x272d, VT_DISPATCH, _val);
}

#pragma implementation_key(9430)
inline femap::ITmgRealPtr femap::Imodel::GetfeTMGReal ( ) {
    struct ITmgReal * _result = 0;
    _com_dispatch_propget(this, 0x272e, VT_DISPATCH, (void*)&_result);
    return ITmgRealPtr(_result, false);
}

#pragma implementation_key(9431)
inline void femap::Imodel::PutfeTMGReal ( struct ITmgReal * _val ) {
    _com_dispatch_propput(this, 0x272e, VT_DISPATCH, _val);
}

#pragma implementation_key(9432)
inline femap::IPointPtr femap::Imodel::GetfePoint ( ) {
    struct IPoint * _result = 0;
    _com_dispatch_propget(this, 0x272f, VT_DISPATCH, (void*)&_result);
    return IPointPtr(_result, false);
}

#pragma implementation_key(9433)
inline void femap::Imodel::PutfePoint ( struct IPoint * _val ) {
    _com_dispatch_propput(this, 0x272f, VT_DISPATCH, _val);
}

#pragma implementation_key(9434)
inline femap::ICurvePtr femap::Imodel::GetfeCurve ( ) {
    struct ICurve * _result = 0;
    _com_dispatch_propget(this, 0x2730, VT_DISPATCH, (void*)&_result);
    return ICurvePtr(_result, false);
}

#pragma implementation_key(9435)
inline void femap::Imodel::PutfeCurve ( struct ICurve * _val ) {
    _com_dispatch_propput(this, 0x2730, VT_DISPATCH, _val);
}

#pragma implementation_key(9436)
inline femap::ISurfacePtr femap::Imodel::GetfeSurface ( ) {
    struct ISurface * _result = 0;
    _com_dispatch_propget(this, 0x2731, VT_DISPATCH, (void*)&_result);
    return ISurfacePtr(_result, false);
}

#pragma implementation_key(9437)
inline void femap::Imodel::PutfeSurface ( struct ISurface * _val ) {
    _com_dispatch_propput(this, 0x2731, VT_DISPATCH, _val);
}

#pragma implementation_key(9438)
inline femap::ISolidPtr femap::Imodel::GetfeSolid ( ) {
    struct ISolid * _result = 0;
    _com_dispatch_propget(this, 0x2732, VT_DISPATCH, (void*)&_result);
    return ISolidPtr(_result, false);
}

#pragma implementation_key(9439)
inline void femap::Imodel::PutfeSolid ( struct ISolid * _val ) {
    _com_dispatch_propput(this, 0x2732, VT_DISPATCH, _val);
}

#pragma implementation_key(9440)
inline femap::IAnalysisMgrPtr femap::Imodel::GetfeAnalysisSet ( ) {
    struct IAnalysisMgr * _result = 0;
    _com_dispatch_propget(this, 0x2733, VT_DISPATCH, (void*)&_result);
    return IAnalysisMgrPtr(_result, false);
}

#pragma implementation_key(9441)
inline void femap::Imodel::PutfeAnalysisSet ( struct IAnalysisMgr * _val ) {
    _com_dispatch_propput(this, 0x2733, VT_DISPATCH, _val);
}

#pragma implementation_key(9442)
inline femap::IAnalysisCasePtr femap::Imodel::GetfeAnalysisCase ( ) {
    struct IAnalysisCase * _result = 0;
    _com_dispatch_propget(this, 0x2734, VT_DISPATCH, (void*)&_result);
    return IAnalysisCasePtr(_result, false);
}

#pragma implementation_key(9443)
inline void femap::Imodel::PutfeAnalysisCase ( struct IAnalysisCase * _val ) {
    _com_dispatch_propput(this, 0x2734, VT_DISPATCH, _val);
}

#pragma implementation_key(9444)
inline femap::IUserDataPtr femap::Imodel::GetfeUserData ( ) {
    struct IUserData * _result = 0;
    _com_dispatch_propget(this, 0x2735, VT_DISPATCH, (void*)&_result);
    return IUserDataPtr(_result, false);
}

#pragma implementation_key(9445)
inline void femap::Imodel::PutfeUserData ( struct IUserData * _val ) {
    _com_dispatch_propput(this, 0x2735, VT_DISPATCH, _val);
}

#pragma implementation_key(9446)
inline femap::ITextPtr femap::Imodel::GetfeText ( ) {
    struct IText * _result = 0;
    _com_dispatch_propget(this, 0x2845, VT_DISPATCH, (void*)&_result);
    return ITextPtr(_result, false);
}

#pragma implementation_key(9447)
inline void femap::Imodel::PutfeText ( struct IText * _val ) {
    _com_dispatch_propput(this, 0x2845, VT_DISPATCH, _val);
}

#pragma implementation_key(9448)
inline femap::IAnalysisMgrPtr femap::Imodel::GetfeAnalysisMgr ( ) {
    struct IAnalysisMgr * _result = 0;
    _com_dispatch_propget(this, 0x2846, VT_DISPATCH, (void*)&_result);
    return IAnalysisMgrPtr(_result, false);
}

#pragma implementation_key(9449)
inline void femap::Imodel::PutfeAnalysisMgr ( struct IAnalysisMgr * _val ) {
    _com_dispatch_propput(this, 0x2846, VT_DISPATCH, _val);
}

#pragma implementation_key(9450)
inline femap::IConnectionPropPtr femap::Imodel::GetfeConnectionProp ( ) {
    struct IConnectionProp * _result = 0;
    _com_dispatch_propget(this, 0x2848, VT_DISPATCH, (void*)&_result);
    return IConnectionPropPtr(_result, false);
}

#pragma implementation_key(9451)
inline void femap::Imodel::PutfeConnectionProp ( struct IConnectionProp * _val ) {
    _com_dispatch_propput(this, 0x2848, VT_DISPATCH, _val);
}

#pragma implementation_key(9452)
inline femap::IConnectionPtr femap::Imodel::GetfeConnection ( ) {
    struct IConnection * _result = 0;
    _com_dispatch_propget(this, 0x2849, VT_DISPATCH, (void*)&_result);
    return IConnectionPtr(_result, false);
}

#pragma implementation_key(9453)
inline void femap::Imodel::PutfeConnection ( struct IConnection * _val ) {
    _com_dispatch_propput(this, 0x2849, VT_DISPATCH, _val);
}

#pragma implementation_key(9454)
inline femap::ISortSetPtr femap::Imodel::GetfeSort ( ) {
    struct ISortSet * _result = 0;
    _com_dispatch_propget(this, 0x284a, VT_DISPATCH, (void*)&_result);
    return ISortSetPtr(_result, false);
}

#pragma implementation_key(9455)
inline void femap::Imodel::PutfeSort ( struct ISortSet * _val ) {
    _com_dispatch_propput(this, 0x284a, VT_DISPATCH, _val);
}

#pragma implementation_key(9456)
inline femap::IScratchPtr femap::Imodel::GetfeScratch ( ) {
    struct IScratch * _result = 0;
    _com_dispatch_propget(this, 0x286c, VT_DISPATCH, (void*)&_result);
    return IScratchPtr(_result, false);
}

#pragma implementation_key(9457)
inline void femap::Imodel::PutfeScratch ( struct IScratch * _val ) {
    _com_dispatch_propput(this, 0x286c, VT_DISPATCH, _val);
}

#pragma implementation_key(9458)
inline femap::ISelectorPtr femap::Imodel::GetfeSelector ( ) {
    struct ISelector * _result = 0;
    _com_dispatch_propget(this, 0x286d, VT_DISPATCH, (void*)&_result);
    return ISelectorPtr(_result, false);
}

#pragma implementation_key(9459)
inline void femap::Imodel::PutfeSelector ( struct ISelector * _val ) {
    _com_dispatch_propput(this, 0x286d, VT_DISPATCH, _val);
}

#pragma implementation_key(9460)
inline femap::ILoadDefinitionPtr femap::Imodel::GetfeLoadDefinition ( ) {
    struct ILoadDefinition * _result = 0;
    _com_dispatch_propget(this, 0x286e, VT_DISPATCH, (void*)&_result);
    return ILoadDefinitionPtr(_result, false);
}

#pragma implementation_key(9461)
inline void femap::Imodel::PutfeLoadDefinition ( struct ILoadDefinition * _val ) {
    _com_dispatch_propput(this, 0x286e, VT_DISPATCH, _val);
}

#pragma implementation_key(9462)
inline femap::IGFXPointPtr femap::Imodel::GetfeGFXPoint ( ) {
    struct IGFXPoint * _result = 0;
    _com_dispatch_propget(this, 0x286f, VT_DISPATCH, (void*)&_result);
    return IGFXPointPtr(_result, false);
}

#pragma implementation_key(9463)
inline void femap::Imodel::PutfeGFXPoint ( struct IGFXPoint * _val ) {
    _com_dispatch_propput(this, 0x286f, VT_DISPATCH, _val);
}

#pragma implementation_key(9464)
inline femap::IGFXLinePtr femap::Imodel::GetfeGFXLine ( ) {
    struct IGFXLine * _result = 0;
    _com_dispatch_propget(this, 0x2870, VT_DISPATCH, (void*)&_result);
    return IGFXLinePtr(_result, false);
}

#pragma implementation_key(9465)
inline void femap::Imodel::PutfeGFXLine ( struct IGFXLine * _val ) {
    _com_dispatch_propput(this, 0x2870, VT_DISPATCH, _val);
}

#pragma implementation_key(9466)
inline femap::IGFXArrowPtr femap::Imodel::GetfeGFXArrow ( ) {
    struct IGFXArrow * _result = 0;
    _com_dispatch_propget(this, 0x2871, VT_DISPATCH, (void*)&_result);
    return IGFXArrowPtr(_result, false);
}

#pragma implementation_key(9467)
inline void femap::Imodel::PutfeGFXArrow ( struct IGFXArrow * _val ) {
    _com_dispatch_propput(this, 0x2871, VT_DISPATCH, _val);
}

#pragma implementation_key(9468)
inline femap::IGFXTria3Ptr femap::Imodel::GetfeGFXTria3 ( ) {
    struct IGFXTria3 * _result = 0;
    _com_dispatch_propget(this, 0x2872, VT_DISPATCH, (void*)&_result);
    return IGFXTria3Ptr(_result, false);
}

#pragma implementation_key(9469)
inline void femap::Imodel::PutfeGFXTria3 ( struct IGFXTria3 * _val ) {
    _com_dispatch_propput(this, 0x2872, VT_DISPATCH, _val);
}

#pragma implementation_key(9470)
inline femap::IGFXQuad4Ptr femap::Imodel::GetfeGFXQuad4 ( ) {
    struct IGFXQuad4 * _result = 0;
    _com_dispatch_propget(this, 0x2873, VT_DISPATCH, (void*)&_result);
    return IGFXQuad4Ptr(_result, false);
}

#pragma implementation_key(9471)
inline void femap::Imodel::PutfeGFXQuad4 ( struct IGFXQuad4 * _val ) {
    _com_dispatch_propput(this, 0x2873, VT_DISPATCH, _val);
}

#pragma implementation_key(9472)
inline femap::IBCDefinitionPtr femap::Imodel::GetfeBCDefinition ( ) {
    struct IBCDefinition * _result = 0;
    _com_dispatch_propget(this, 0x2874, VT_DISPATCH, (void*)&_result);
    return IBCDefinitionPtr(_result, false);
}

#pragma implementation_key(9473)
inline void femap::Imodel::PutfeBCDefinition ( struct IBCDefinition * _val ) {
    _com_dispatch_propput(this, 0x2874, VT_DISPATCH, _val);
}

#pragma implementation_key(9474)
inline femap::ILayupPtr femap::Imodel::GetfeLayup ( ) {
    struct ILayup * _result = 0;
    _com_dispatch_propget(this, 0x2875, VT_DISPATCH, (void*)&_result);
    return ILayupPtr(_result, false);
}

#pragma implementation_key(9475)
inline void femap::Imodel::PutfeLayup ( struct ILayup * _val ) {
    _com_dispatch_propput(this, 0x2875, VT_DISPATCH, _val);
}

#pragma implementation_key(9476)
inline femap::IGlobalPlyPtr femap::Imodel::GetfeGlobalPly ( ) {
    struct IGlobalPly * _result = 0;
    _com_dispatch_propget(this, 0x2876, VT_DISPATCH, (void*)&_result);
    return IGlobalPlyPtr(_result, false);
}

#pragma implementation_key(9477)
inline void femap::Imodel::PutfeGlobalPly ( struct IGlobalPly * _val ) {
    _com_dispatch_propput(this, 0x2876, VT_DISPATCH, _val);
}

#pragma implementation_key(9478)
inline femap::IContactPtr femap::Imodel::GetfeConnectionRegion ( ) {
    struct IContact * _result = 0;
    _com_dispatch_propget(this, 0x2877, VT_DISPATCH, (void*)&_result);
    return IContactPtr(_result, false);
}

#pragma implementation_key(9479)
inline void femap::Imodel::PutfeConnectionRegion ( struct IContact * _val ) {
    _com_dispatch_propput(this, 0x2877, VT_DISPATCH, _val);
}

#pragma implementation_key(9480)
inline femap::ILoadBoltPtr femap::Imodel::GetfeLoadBolt ( ) {
    struct ILoadBolt * _result = 0;
    _com_dispatch_propget(this, 0x2878, VT_DISPATCH, (void*)&_result);
    return ILoadBoltPtr(_result, false);
}

#pragma implementation_key(9481)
inline void femap::Imodel::PutfeLoadBolt ( struct ILoadBolt * _val ) {
    _com_dispatch_propput(this, 0x2878, VT_DISPATCH, _val);
}

#pragma implementation_key(9482)
inline femap::IMapOutputPtr femap::Imodel::GetfeMapOutput ( ) {
    struct IMapOutput * _result = 0;
    _com_dispatch_propget(this, 0x2879, VT_DISPATCH, (void*)&_result);
    return IMapOutputPtr(_result, false);
}

#pragma implementation_key(9483)
inline void femap::Imodel::PutfeMapOutput ( struct IMapOutput * _val ) {
    _com_dispatch_propput(this, 0x2879, VT_DISPATCH, _val);
}

#pragma implementation_key(9484)
inline femap::IDataSurfPtr femap::Imodel::GetfeDataSurf ( ) {
    struct IDataSurf * _result = 0;
    _com_dispatch_propget(this, 0x287b, VT_DISPATCH, (void*)&_result);
    return IDataSurfPtr(_result, false);
}

#pragma implementation_key(9485)
inline void femap::Imodel::PutfeDataSurf ( struct IDataSurf * _val ) {
    _com_dispatch_propput(this, 0x287b, VT_DISPATCH, _val);
}

#pragma implementation_key(9486)
inline femap::IDataTablePtr femap::Imodel::GetfeDataTable ( ) {
    struct IDataTable * _result = 0;
    _com_dispatch_propget(this, 0x287c, VT_DISPATCH, (void*)&_result);
    return IDataTablePtr(_result, false);
}

#pragma implementation_key(9487)
inline void femap::Imodel::PutfeDataTable ( struct IDataTable * _val ) {
    _com_dispatch_propput(this, 0x287c, VT_DISPATCH, _val);
}

#pragma implementation_key(9488)
inline femap::IReferencePtr femap::Imodel::GetfeReference ( ) {
    struct IReference * _result = 0;
    _com_dispatch_propget(this, 0x2880, VT_DISPATCH, (void*)&_result);
    return IReferencePtr(_result, false);
}

#pragma implementation_key(9489)
inline void femap::Imodel::PutfeReference ( struct IReference * _val ) {
    _com_dispatch_propput(this, 0x2880, VT_DISPATCH, _val);
}

#pragma implementation_key(9490)
inline femap::IAeroPanelPtr femap::Imodel::GetfeAeroPanel ( ) {
    struct IAeroPanel * _result = 0;
    _com_dispatch_propget(this, 0x28c1, VT_DISPATCH, (void*)&_result);
    return IAeroPanelPtr(_result, false);
}

#pragma implementation_key(9491)
inline void femap::Imodel::PutfeAeroPanel ( struct IAeroPanel * _val ) {
    _com_dispatch_propput(this, 0x28c1, VT_DISPATCH, _val);
}

#pragma implementation_key(9492)
inline femap::IAeroPropPtr femap::Imodel::GetfeAeroProp ( ) {
    struct IAeroProp * _result = 0;
    _com_dispatch_propget(this, 0x28c2, VT_DISPATCH, (void*)&_result);
    return IAeroPropPtr(_result, false);
}

#pragma implementation_key(9493)
inline void femap::Imodel::PutfeAeroProp ( struct IAeroProp * _val ) {
    _com_dispatch_propput(this, 0x28c2, VT_DISPATCH, _val);
}

#pragma implementation_key(9494)
inline femap::IAeroSplinePtr femap::Imodel::GetfeAeroSpline ( ) {
    struct IAeroSpline * _result = 0;
    _com_dispatch_propget(this, 0x28c3, VT_DISPATCH, (void*)&_result);
    return IAeroSplinePtr(_result, false);
}

#pragma implementation_key(9495)
inline void femap::Imodel::PutfeAeroSpline ( struct IAeroSpline * _val ) {
    _com_dispatch_propput(this, 0x28c3, VT_DISPATCH, _val);
}

#pragma implementation_key(9496)
inline femap::IFreebodyPtr femap::Imodel::GetfeFreebody ( ) {
    struct IFreebody * _result = 0;
    _com_dispatch_propget(this, 0x28c5, VT_DISPATCH, (void*)&_result);
    return IFreebodyPtr(_result, false);
}

#pragma implementation_key(9497)
inline void femap::Imodel::PutfeFreebody ( struct IFreebody * _val ) {
    _com_dispatch_propput(this, 0x28c5, VT_DISPATCH, _val);
}

#pragma implementation_key(9498)
inline femap::IMesherPtr femap::Imodel::GetfeMesher ( ) {
    struct IMesher * _result = 0;
    _com_dispatch_propget(this, 0x28c6, VT_DISPATCH, (void*)&_result);
    return IMesherPtr(_result, false);
}

#pragma implementation_key(9499)
inline void femap::Imodel::PutfeMesher ( struct IMesher * _val ) {
    _com_dispatch_propput(this, 0x28c6, VT_DISPATCH, _val);
}

#pragma implementation_key(9500)
inline femap::IElementQualityPtr femap::Imodel::GetfeElementQuality ( ) {
    struct IElementQuality * _result = 0;
    _com_dispatch_propget(this, 0x28c9, VT_DISPATCH, (void*)&_result);
    return IElementQualityPtr(_result, false);
}

#pragma implementation_key(9501)
inline void femap::Imodel::PutfeElementQuality ( struct IElementQuality * _val ) {
    _com_dispatch_propput(this, 0x28c9, VT_DISPATCH, _val);
}

#pragma implementation_key(9502)
inline femap::IAeroSurfPtr femap::Imodel::GetfeAeroSurf ( ) {
    struct IAeroSurf * _result = 0;
    _com_dispatch_propget(this, 0x28ca, VT_DISPATCH, (void*)&_result);
    return IAeroSurfPtr(_result, false);
}

#pragma implementation_key(9503)
inline void femap::Imodel::PutfeAeroSurf ( struct IAeroSurf * _val ) {
    _com_dispatch_propput(this, 0x28ca, VT_DISPATCH, _val);
}

#pragma implementation_key(9504)
inline femap::IStressLinearPtr femap::Imodel::GetfeStressLinear ( ) {
    struct IStressLinear * _result = 0;
    _com_dispatch_propget(this, 0x2908, VT_DISPATCH, (void*)&_result);
    return IStressLinearPtr(_result, false);
}

#pragma implementation_key(9505)
inline void femap::Imodel::PutfeStressLinear ( struct IStressLinear * _val ) {
    _com_dispatch_propput(this, 0x2908, VT_DISPATCH, _val);
}

#pragma implementation_key(9506)
inline femap::ISEReferencePtr femap::Imodel::GetfeSEReference ( ) {
    struct ISEReference * _result = 0;
    _com_dispatch_propget(this, 0x2909, VT_DISPATCH, (void*)&_result);
    return ISEReferencePtr(_result, false);
}

#pragma implementation_key(9507)
inline void femap::Imodel::PutfeSEReference ( struct ISEReference * _val ) {
    _com_dispatch_propput(this, 0x2909, VT_DISPATCH, _val);
}

#pragma implementation_key(9508)
inline femap::IChartPtr femap::Imodel::GetfeChart ( ) {
    struct IChart * _result = 0;
    _com_dispatch_propget(this, 0x290a, VT_DISPATCH, (void*)&_result);
    return IChartPtr(_result, false);
}

#pragma implementation_key(9509)
inline void femap::Imodel::PutfeChart ( struct IChart * _val ) {
    _com_dispatch_propput(this, 0x290a, VT_DISPATCH, _val);
}

#pragma implementation_key(9510)
inline femap::IChartSeriesPtr femap::Imodel::GetfeChartSeries ( ) {
    struct IChartSeries * _result = 0;
    _com_dispatch_propget(this, 0x290b, VT_DISPATCH, (void*)&_result);
    return IChartSeriesPtr(_result, false);
}

#pragma implementation_key(9511)
inline void femap::Imodel::PutfeChartSeries ( struct IChartSeries * _val ) {
    _com_dispatch_propput(this, 0x290b, VT_DISPATCH, _val);
}

#pragma implementation_key(9512)
inline femap::IResultsPtr femap::Imodel::GetfeResults ( ) {
    struct IResults * _result = 0;
    _com_dispatch_propget(this, 0x2918, VT_DISPATCH, (void*)&_result);
    return IResultsPtr(_result, false);
}

#pragma implementation_key(9513)
inline void femap::Imodel::PutfeResults ( struct IResults * _val ) {
    _com_dispatch_propput(this, 0x2918, VT_DISPATCH, _val);
}

#pragma implementation_key(9514)
inline femap::ITableDataPtr femap::Imodel::GetfeTableData ( ) {
    struct ITableData * _result = 0;
    _com_dispatch_propget(this, 0x291f, VT_DISPATCH, (void*)&_result);
    return ITableDataPtr(_result, false);
}

#pragma implementation_key(9515)
inline void femap::Imodel::PutfeTableData ( struct ITableData * _val ) {
    _com_dispatch_propput(this, 0x291f, VT_DISPATCH, _val);
}

#pragma implementation_key(9516)
inline femap::IInterpolatePtr femap::Imodel::GetfeInterpolate ( ) {
    struct IInterpolate * _result = 0;
    _com_dispatch_propget(this, 0x2920, VT_DISPATCH, (void*)&_result);
    return IInterpolatePtr(_result, false);
}

#pragma implementation_key(9517)
inline void femap::Imodel::PutfeInterpolate ( struct IInterpolate * _val ) {
    _com_dispatch_propput(this, 0x2920, VT_DISPATCH, _val);
}

#pragma implementation_key(9518)
inline femap::IMapDataPtr femap::Imodel::GetfeMapData ( ) {
    struct IMapData * _result = 0;
    _com_dispatch_propget(this, 0x2926, VT_DISPATCH, (void*)&_result);
    return IMapDataPtr(_result, false);
}

#pragma implementation_key(9519)
inline void femap::Imodel::PutfeMapData ( struct IMapData * _val ) {
    _com_dispatch_propput(this, 0x2926, VT_DISPATCH, _val);
}

#pragma implementation_key(9520)
inline femap::ITrackDataPtr femap::Imodel::GetfeTrackData ( ) {
    struct ITrackData * _result = 0;
    _com_dispatch_propget(this, 0x2929, VT_DISPATCH, (void*)&_result);
    return ITrackDataPtr(_result, false);
}

#pragma implementation_key(9521)
inline void femap::Imodel::PutfeTrackData ( struct ITrackData * _val ) {
    _com_dispatch_propput(this, 0x2929, VT_DISPATCH, _val);
}

#pragma implementation_key(9522)
inline femap::IBeamCalculatorPtr femap::Imodel::GetfeBeamCalculator ( ) {
    struct IBeamCalculator * _result = 0;
    _com_dispatch_propget(this, 0x292a, VT_DISPATCH, (void*)&_result);
    return IBeamCalculatorPtr(_result, false);
}

#pragma implementation_key(9523)
inline void femap::Imodel::PutfeBeamCalculator ( struct IBeamCalculator * _val ) {
    _com_dispatch_propput(this, 0x292a, VT_DISPATCH, _val);
}

#pragma implementation_key(9524)
inline femap::IAnalysisStudyPtr femap::Imodel::GetfeAnalysisStudy ( ) {
    struct IAnalysisStudy * _result = 0;
    _com_dispatch_propget(this, 0x2934, VT_DISPATCH, (void*)&_result);
    return IAnalysisStudyPtr(_result, false);
}

#pragma implementation_key(9525)
inline void femap::Imodel::PutfeAnalysisStudy ( struct IAnalysisStudy * _val ) {
    _com_dispatch_propput(this, 0x2934, VT_DISPATCH, _val);
}

#pragma implementation_key(9526)
inline femap::IDrawErasePtr femap::Imodel::GetfeDrawErase ( ) {
    struct IDrawErase * _result = 0;
    _com_dispatch_propget(this, 0x2967, VT_DISPATCH, (void*)&_result);
    return IDrawErasePtr(_result, false);
}

#pragma implementation_key(9527)
inline void femap::Imodel::PutfeDrawErase ( struct IDrawErase * _val ) {
    _com_dispatch_propput(this, 0x2967, VT_DISPATCH, _val);
}

#pragma implementation_key(9528)
inline femap::IFreqPtr femap::Imodel::GetfeFreq ( ) {
    struct IFreq * _result = 0;
    _com_dispatch_propget(this, 0x296d, VT_DISPATCH, (void*)&_result);
    return IFreqPtr(_result, false);
}

#pragma implementation_key(9529)
inline void femap::Imodel::PutfeFreq ( struct IFreq * _val ) {
    _com_dispatch_propput(this, 0x296d, VT_DISPATCH, _val);
}

#pragma implementation_key(9530)
inline femap::IMidFaceCentroidModelPtr femap::Imodel::GetfeMidFaceCentroidModel ( ) {
    struct IMidFaceCentroidModel * _result = 0;
    _com_dispatch_propget(this, 0x298a, VT_DISPATCH, (void*)&_result);
    return IMidFaceCentroidModelPtr(_result, false);
}

#pragma implementation_key(9531)
inline void femap::Imodel::PutfeMidFaceCentroidModel ( struct IMidFaceCentroidModel * _val ) {
    _com_dispatch_propput(this, 0x298a, VT_DISPATCH, _val);
}

#pragma implementation_key(9532)
inline femap::IUserDefinedGraphicsPtr femap::Imodel::GetfeUserDefinedGraphics ( ) {
    struct IUserDefinedGraphics * _result = 0;
    _com_dispatch_propget(this, 0x2996, VT_DISPATCH, (void*)&_result);
    return IUserDefinedGraphicsPtr(_result, false);
}

#pragma implementation_key(9533)
inline void femap::Imodel::PutfeUserDefinedGraphics ( struct IUserDefinedGraphics * _val ) {
    _com_dispatch_propput(this, 0x2996, VT_DISPATCH, _val);
}

#pragma implementation_key(9534)
inline femap::IVectorPtr femap::Imodel::GetfeVector ( ) {
    struct IVector * _result = 0;
    _com_dispatch_propget(this, 0x299c, VT_DISPATCH, (void*)&_result);
    return IVectorPtr(_result, false);
}

#pragma implementation_key(9535)
inline void femap::Imodel::PutfeVector ( struct IVector * _val ) {
    _com_dispatch_propput(this, 0x299c, VT_DISPATCH, _val);
}

#pragma implementation_key(9536)
inline femap::IPlanePtr femap::Imodel::GetfePlane ( ) {
    struct IPlane * _result = 0;
    _com_dispatch_propget(this, 0x299d, VT_DISPATCH, (void*)&_result);
    return IPlanePtr(_result, false);
}

#pragma implementation_key(9537)
inline void femap::Imodel::PutfePlane ( struct IPlane * _val ) {
    _com_dispatch_propput(this, 0x299d, VT_DISPATCH, _val);
}

#pragma implementation_key(9538)
inline _bstr_t femap::Imodel::GetPgSetup_HdrFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2736, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9539)
inline void femap::Imodel::PutPgSetup_HdrFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2736, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9540)
inline _bstr_t femap::Imodel::GetPgSetup_TextFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2737, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9541)
inline void femap::Imodel::PutPgSetup_TextFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2737, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9542)
inline _bstr_t femap::Imodel::GetPgSetup_Header ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2738, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9543)
inline void femap::Imodel::PutPgSetup_Header ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2738, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9544)
inline _bstr_t femap::Imodel::GetPgSetup_Footer ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2739, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9545)
inline void femap::Imodel::PutPgSetup_Footer ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2739, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9546)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_DefaultHdrFont ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9547)
inline void femap::Imodel::PutPgSetup_DefaultHdrFont ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273a, VT_BOOL, _val);
}

#pragma implementation_key(9548)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_DefaultTextFont ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9549)
inline void femap::Imodel::PutPgSetup_DefaultTextFont ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273b, VT_BOOL, _val);
}

#pragma implementation_key(9550)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_FillMargins ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9551)
inline void femap::Imodel::PutPgSetup_FillMargins ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273c, VT_BOOL, _val);
}

#pragma implementation_key(9552)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_MaintainAspect ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9553)
inline void femap::Imodel::PutPgSetup_MaintainAspect ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273d, VT_BOOL, _val);
}

#pragma implementation_key(9554)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_IntegerScaling ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9555)
inline void femap::Imodel::PutPgSetup_IntegerScaling ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273e, VT_BOOL, _val);
}

#pragma implementation_key(9556)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_PrintBorder ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x273f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9557)
inline void femap::Imodel::PutPgSetup_PrintBorder ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x273f, VT_BOOL, _val);
}

#pragma implementation_key(9558)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_SwapBW ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2740, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9559)
inline void femap::Imodel::PutPgSetup_SwapBW ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2740, VT_BOOL, _val);
}

#pragma implementation_key(9560)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_TransparentBkgd ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2741, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9561)
inline void femap::Imodel::PutPgSetup_TransparentBkgd ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2741, VT_BOOL, _val);
}

#pragma implementation_key(9562)
inline VARIANT_BOOL femap::Imodel::GetPgSetup_Monochrome ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2742, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9563)
inline void femap::Imodel::PutPgSetup_Monochrome ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2742, VT_BOOL, _val);
}

#pragma implementation_key(9564)
inline int femap::Imodel::GetPgSetup_HdrFontSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2744, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9565)
inline void femap::Imodel::PutPgSetup_HdrFontSize ( int _val ) {
    _com_dispatch_propput(this, 0x2744, VT_I4, _val);
}

#pragma implementation_key(9566)
inline int femap::Imodel::GetPgSetup_TextFontSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2745, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9567)
inline void femap::Imodel::PutPgSetup_TextFontSize ( int _val ) {
    _com_dispatch_propput(this, 0x2745, VT_I4, _val);
}

#pragma implementation_key(9568)
inline int femap::Imodel::GetPgSetup_PenScale ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2746, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9569)
inline void femap::Imodel::PutPgSetup_PenScale ( int _val ) {
    _com_dispatch_propput(this, 0x2746, VT_I4, _val);
}

#pragma implementation_key(9570)
inline int femap::Imodel::GetPgSetup_VertAlign ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2747, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9571)
inline void femap::Imodel::PutPgSetup_VertAlign ( int _val ) {
    _com_dispatch_propput(this, 0x2747, VT_I4, _val);
}

#pragma implementation_key(9572)
inline int femap::Imodel::GetPgSetup_HorzAlign ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2748, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9573)
inline void femap::Imodel::PutPgSetup_HorzAlign ( int _val ) {
    _com_dispatch_propput(this, 0x2748, VT_I4, _val);
}

#pragma implementation_key(9574)
inline double femap::Imodel::GetPgSetup_CustomHeight ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2749, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9575)
inline void femap::Imodel::PutPgSetup_CustomHeight ( double _val ) {
    _com_dispatch_propput(this, 0x2749, VT_R8, _val);
}

#pragma implementation_key(9576)
inline double femap::Imodel::GetPgSetup_CustomWidth ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9577)
inline void femap::Imodel::PutPgSetup_CustomWidth ( double _val ) {
    _com_dispatch_propput(this, 0x274a, VT_R8, _val);
}

#pragma implementation_key(9578)
inline double femap::Imodel::GetPgSetup_LeftMargin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9579)
inline void femap::Imodel::PutPgSetup_LeftMargin ( double _val ) {
    _com_dispatch_propput(this, 0x274b, VT_R8, _val);
}

#pragma implementation_key(9580)
inline double femap::Imodel::GetPgSetup_RightMargin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9581)
inline void femap::Imodel::PutPgSetup_RightMargin ( double _val ) {
    _com_dispatch_propput(this, 0x274c, VT_R8, _val);
}

#pragma implementation_key(9582)
inline double femap::Imodel::GetPgSetup_TopMargin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9583)
inline void femap::Imodel::PutPgSetup_TopMargin ( double _val ) {
    _com_dispatch_propput(this, 0x274d, VT_R8, _val);
}

#pragma implementation_key(9584)
inline double femap::Imodel::GetPgSetup_BottomMargin ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9585)
inline void femap::Imodel::PutPgSetup_BottomMargin ( double _val ) {
    _com_dispatch_propput(this, 0x274e, VT_R8, _val);
}

#pragma implementation_key(9586)
inline double femap::Imodel::GetPgSetup_RenderScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x274f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9587)
inline void femap::Imodel::PutPgSetup_RenderScale ( double _val ) {
    _com_dispatch_propput(this, 0x274f, VT_R8, _val);
}

#pragma implementation_key(9588)
inline _bstr_t femap::Imodel::GetPref_LibAnalysis ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2750, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9589)
inline void femap::Imodel::PutPref_LibAnalysis ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2750, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9590)
inline _bstr_t femap::Imodel::GetPref_LibProp ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2751, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9591)
inline void femap::Imodel::PutPref_LibProp ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2751, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9592)
inline _bstr_t femap::Imodel::GetPref_LibReport ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2752, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9593)
inline void femap::Imodel::PutPref_LibReport ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2752, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9594)
inline _bstr_t femap::Imodel::GetPref_LibContPal ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2755, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9595)
inline void femap::Imodel::PutPref_LibContPal ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2755, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9596)
inline _bstr_t femap::Imodel::GetPref_LibFunction ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2756, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9597)
inline void femap::Imodel::PutPref_LibFunction ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2756, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9598)
inline _bstr_t femap::Imodel::GetPref_LibMatl ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2757, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9599)
inline void femap::Imodel::PutPref_LibMatl ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2757, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9600)
inline _bstr_t femap::Imodel::GetPref_LibMatlDef ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2758, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9601)
inline void femap::Imodel::PutPref_LibMatlDef ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2758, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9602)
inline _bstr_t femap::Imodel::GetPref_LibView ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2759, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9603)
inline void femap::Imodel::PutPref_LibView ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2759, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9604)
inline _bstr_t femap::Imodel::GetPref_LibPalette ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x275a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9605)
inline void femap::Imodel::PutPref_LibPalette ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x275a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9606)
inline _bstr_t femap::Imodel::GetPref_ViewDimetric ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x275b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9607)
inline void femap::Imodel::PutPref_ViewDimetric ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x275b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9608)
inline _bstr_t femap::Imodel::GetPref_ViewIsometric ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x275c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9609)
inline void femap::Imodel::PutPref_ViewIsometric ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x275c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9610)
inline _bstr_t femap::Imodel::GetPref_ViewTrimetric ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x275d, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9611)
inline void femap::Imodel::PutPref_ViewTrimetric ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x275d, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9612)
inline _bstr_t femap::Imodel::GetPref_StartupProg ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x275e, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9613)
inline void femap::Imodel::PutPref_StartupProg ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x275e, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9614)
inline _bstr_t femap::Imodel::GetPref_CustomToolsPath ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x275f, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9615)
inline void femap::Imodel::PutPref_CustomToolsPath ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x275f, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9616)
inline _bstr_t femap::Imodel::GetPref_DBScratch ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2760, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9617)
inline void femap::Imodel::PutPref_DBScratch ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2760, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9618)
inline int femap::Imodel::GetPref_LengthBasedMeshSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2761, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9619)
inline void femap::Imodel::PutPref_LengthBasedMeshSize ( int _val ) {
    _com_dispatch_propput(this, 0x2761, VT_I4, _val);
}

#pragma implementation_key(9620)
inline _bstr_t femap::Imodel::GetPref_MsgWndFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2762, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9621)
inline void femap::Imodel::PutPref_MsgWndFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2762, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9622)
inline _bstr_t femap::Imodel::GetPref_NetKeyDir ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2763, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9623)
inline void femap::Imodel::PutPref_NetKeyDir ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2763, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9624)
inline VARIANT_BOOL femap::Imodel::GetPref_PictureCopyTextForXY ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2767, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9625)
inline void femap::Imodel::PutPref_PictureCopyTextForXY ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2767, VT_BOOL, _val);
}

#pragma implementation_key(9626)
inline VARIANT_BOOL femap::Imodel::GetPref_WorkplaneNotVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2769, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9627)
inline void femap::Imodel::PutPref_WorkplaneNotVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2769, VT_BOOL, _val);
}

#pragma implementation_key(9628)
inline int femap::Imodel::GetPref_DefContourPalette ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x276a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9629)
inline void femap::Imodel::PutPref_DefContourPalette ( int _val ) {
    _com_dispatch_propput(this, 0x276a, VT_I4, _val);
}

#pragma implementation_key(9630)
inline VARIANT_BOOL femap::Imodel::GetPref_MetafileToClip ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9631)
inline void femap::Imodel::PutPref_MetafileToClip ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276d, VT_BOOL, _val);
}

#pragma implementation_key(9632)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderHW ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9633)
inline void femap::Imodel::PutPref_RenderHW ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276e, VT_BOOL, _val);
}

#pragma implementation_key(9634)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderMidside ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x276f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9635)
inline void femap::Imodel::PutPref_RenderMidside ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x276f, VT_BOOL, _val);
}

#pragma implementation_key(9636)
inline VARIANT_BOOL femap::Imodel::GetPref_RepeateCreate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2773, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9637)
inline void femap::Imodel::PutPref_RepeateCreate ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2773, VT_BOOL, _val);
}

#pragma implementation_key(9638)
inline int femap::Imodel::GetPref_TooltipDelay ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2774, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9639)
inline void femap::Imodel::PutPref_TooltipDelay ( int _val ) {
    _com_dispatch_propput(this, 0x2774, VT_I4, _val);
}

#pragma implementation_key(9640)
inline int femap::Imodel::GetPref_TooltipDuration ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2775, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9641)
inline void femap::Imodel::PutPref_TooltipDuration ( int _val ) {
    _com_dispatch_propput(this, 0x2775, VT_I4, _val);
}

#pragma implementation_key(9642)
inline VARIANT_BOOL femap::Imodel::GetPref_TrackMousePick ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2776, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9643)
inline void femap::Imodel::PutPref_TrackMousePick ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2776, VT_BOOL, _val);
}

#pragma implementation_key(9644)
inline VARIANT_BOOL femap::Imodel::GetPref_PickAllInside ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2777, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9645)
inline void femap::Imodel::PutPref_PickAllInside ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2777, VT_BOOL, _val);
}

#pragma implementation_key(9646)
inline int femap::Imodel::GetPref_NastranMemory ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2778, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9647)
inline void femap::Imodel::PutPref_NastranMemory ( int _val ) {
    _com_dispatch_propput(this, 0x2778, VT_I4, _val);
}

#pragma implementation_key(9648)
inline int femap::Imodel::GetPref_NastranOutputTo ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2779, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9649)
inline void femap::Imodel::PutPref_NastranOutputTo ( int _val ) {
    _com_dispatch_propput(this, 0x2779, VT_I4, _val);
}

#pragma implementation_key(9650)
inline _bstr_t femap::Imodel::GetPref_NastranOutputPath ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x277a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9651)
inline void femap::Imodel::PutPref_NastranOutputPath ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x277a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9652)
inline VARIANT_BOOL femap::Imodel::GetPref_BackupModel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9653)
inline void femap::Imodel::PutPref_BackupModel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277b, VT_BOOL, _val);
}

#pragma implementation_key(9654)
inline VARIANT_BOOL femap::Imodel::GetPref_AutomaticTitles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9655)
inline void femap::Imodel::PutPref_AutomaticTitles ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277c, VT_BOOL, _val);
}

#pragma implementation_key(9656)
inline VARIANT_BOOL femap::Imodel::GetPref_DeleteScratchFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9657)
inline void femap::Imodel::PutPref_DeleteScratchFile ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277d, VT_BOOL, _val);
}

#pragma implementation_key(9658)
inline VARIANT_BOOL femap::Imodel::GetPref_RunProgNewModels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9659)
inline void femap::Imodel::PutPref_RunProgNewModels ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277e, VT_BOOL, _val);
}

#pragma implementation_key(9660)
inline VARIANT_BOOL femap::Imodel::GetPref_MeshInMemory ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x277f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9661)
inline void femap::Imodel::PutPref_MeshInMemory ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x277f, VT_BOOL, _val);
}

#pragma implementation_key(9662)
inline VARIANT_BOOL femap::Imodel::GetPref_FastTriMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2780, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9663)
inline void femap::Imodel::PutPref_FastTriMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2780, VT_BOOL, _val);
}

#pragma implementation_key(9664)
inline VARIANT_BOOL femap::Imodel::GetPref_TimedSaveNotify ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2781, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9665)
inline void femap::Imodel::PutPref_TimedSaveNotify ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2781, VT_BOOL, _val);
}

#pragma implementation_key(9666)
inline VARIANT_BOOL femap::Imodel::GetPref_TimedSaveOn ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2782, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9667)
inline void femap::Imodel::PutPref_TimedSaveOn ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2782, VT_BOOL, _val);
}

#pragma implementation_key(9668)
inline VARIANT_BOOL femap::Imodel::GetPref_GeomLogFile ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2783, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9669)
inline void femap::Imodel::PutPref_GeomLogFile ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2783, VT_BOOL, _val);
}

#pragma implementation_key(9670)
inline VARIANT_BOOL femap::Imodel::GetPref_AdjMidsideGeomLoad ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2784, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9671)
inline void femap::Imodel::PutPref_AdjMidsideGeomLoad ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2784, VT_BOOL, _val);
}

#pragma implementation_key(9672)
inline VARIANT_BOOL femap::Imodel::GetPref_ReadComments ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2785, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9673)
inline void femap::Imodel::PutPref_ReadComments ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2785, VT_BOOL, _val);
}

#pragma implementation_key(9674)
inline VARIANT_BOOL femap::Imodel::GetPref_WriteComments ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2786, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9675)
inline void femap::Imodel::PutPref_WriteComments ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2786, VT_BOOL, _val);
}

#pragma implementation_key(9676)
inline VARIANT_BOOL femap::Imodel::GetPref_ComputePrincipal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2787, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9677)
inline void femap::Imodel::PutPref_ComputePrincipal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2787, VT_BOOL, _val);
}

#pragma implementation_key(9678)
inline VARIANT_BOOL femap::Imodel::GetPref_AssumeEngrStrain ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2788, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9679)
inline void femap::Imodel::PutPref_AssumeEngrStrain ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2788, VT_BOOL, _val);
}

#pragma implementation_key(9680)
inline VARIANT_BOOL femap::Imodel::GetPref_ReadDirCos ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2789, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9681)
inline void femap::Imodel::PutPref_ReadDirCos ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2789, VT_BOOL, _val);
}

#pragma implementation_key(9682)
inline VARIANT_BOOL femap::Imodel::GetPref_UseVisQ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9683)
inline void femap::Imodel::PutPref_UseVisQ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278a, VT_BOOL, _val);
}

#pragma implementation_key(9684)
inline VARIANT_BOOL femap::Imodel::GetPref_KeepSolverWindow ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9685)
inline void femap::Imodel::PutPref_KeepSolverWindow ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278b, VT_BOOL, _val);
}

#pragma implementation_key(9686)
inline VARIANT_BOOL femap::Imodel::GetPref_MinimizeDuringSolve ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x278c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9687)
inline void femap::Imodel::PutPref_MinimizeDuringSolve ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x278c, VT_BOOL, _val);
}

#pragma implementation_key(9688)
inline int femap::Imodel::GetPref_DBCacheBlocksPerPage ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x278d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9689)
inline void femap::Imodel::PutPref_DBCacheBlocksPerPage ( int _val ) {
    _com_dispatch_propput(this, 0x278d, VT_I4, _val);
}

#pragma implementation_key(9690)
inline int femap::Imodel::GetPref_DBCacheMaxMemoryPct ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x278e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9691)
inline void femap::Imodel::PutPref_DBCacheMaxMemoryPct ( int _val ) {
    _com_dispatch_propput(this, 0x278e, VT_I4, _val);
}

#pragma implementation_key(9692)
inline int femap::Imodel::GetPref_DBCacheMaxLabel ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x278f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9693)
inline void femap::Imodel::PutPref_DBCacheMaxLabel ( int _val ) {
    _com_dispatch_propput(this, 0x278f, VT_I4, _val);
}

#pragma implementation_key(9694)
inline int femap::Imodel::GetPref_DBUndoLevels ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2790, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9695)
inline void femap::Imodel::PutPref_DBUndoLevels ( int _val ) {
    _com_dispatch_propput(this, 0x2790, VT_I4, _val);
}

#pragma implementation_key(9696)
inline int femap::Imodel::GetPref_DBLowDiskWarning ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2791, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9697)
inline void femap::Imodel::PutPref_DBLowDiskWarning ( int _val ) {
    _com_dispatch_propput(this, 0x2791, VT_I4, _val);
}

#pragma implementation_key(9698)
inline int femap::Imodel::GetPref_TimedSaveCommands ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2792, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9699)
inline void femap::Imodel::PutPref_TimedSaveCommands ( int _val ) {
    _com_dispatch_propput(this, 0x2792, VT_I4, _val);
}

#pragma implementation_key(9700)
inline int femap::Imodel::GetPref_TimedSaveInterval ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2793, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9701)
inline void femap::Imodel::PutPref_TimedSaveInterval ( int _val ) {
    _com_dispatch_propput(this, 0x2793, VT_I4, _val);
}

#pragma implementation_key(9702)
inline int femap::Imodel::GetPref_GeomEngine ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2794, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9703)
inline void femap::Imodel::PutPref_GeomEngine ( int _val ) {
    _com_dispatch_propput(this, 0x2794, VT_I4, _val);
}

#pragma implementation_key(9704)
inline enum femap::zAnalysisTranslator femap::Imodel::GetPref_AnalysisProg ( ) {
    enum zAnalysisTranslator _result;
    _com_dispatch_propget(this, 0x2795, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9705)
inline void femap::Imodel::PutPref_AnalysisProg ( enum zAnalysisTranslator _val ) {
    _com_dispatch_propput(this, 0x2795, VT_I4, _val);
}

#pragma implementation_key(9706)
inline enum femap::zAnalysisType femap::Imodel::GetPref_AnalysisType ( ) {
    enum zAnalysisType _result;
    _com_dispatch_propget(this, 0x2796, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9707)
inline void femap::Imodel::PutPref_AnalysisType ( enum zAnalysisType _val ) {
    _com_dispatch_propput(this, 0x2796, VT_I4, _val);
}

#pragma implementation_key(9708)
inline int femap::Imodel::GetPref_InterfaceStyle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2797, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9709)
inline void femap::Imodel::PutPref_InterfaceStyle ( int _val ) {
    _com_dispatch_propput(this, 0x2797, VT_I4, _val);
}

#pragma implementation_key(9710)
inline int femap::Imodel::GetPref_NeutralDigits ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2798, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9711)
inline void femap::Imodel::PutPref_NeutralDigits ( int _val ) {
    _com_dispatch_propput(this, 0x2798, VT_I4, _val);
}

#pragma implementation_key(9712)
inline int femap::Imodel::GetPref_SolverMemory ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2799, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9713)
inline void femap::Imodel::PutPref_SolverMemory ( int _val ) {
    _com_dispatch_propput(this, 0x2799, VT_I4, _val);
}

#pragma implementation_key(9714)
inline VARIANT_BOOL femap::Imodel::GetPref_LoadModifyRotate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x279a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9715)
inline void femap::Imodel::PutPref_LoadModifyRotate ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x279a, VT_BOOL, _val);
}

#pragma implementation_key(9716)
inline int femap::Imodel::GetPref_RecentlyUsedFiles ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x279c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9717)
inline void femap::Imodel::PutPref_RecentlyUsedFiles ( int _val ) {
    _com_dispatch_propput(this, 0x279c, VT_I4, _val);
}

#pragma implementation_key(9718)
inline int femap::Imodel::GetPref_LibViewNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x279d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9719)
inline void femap::Imodel::PutPref_LibViewNumber ( int _val ) {
    _com_dispatch_propput(this, 0x279d, VT_I4, _val);
}

#pragma implementation_key(9720)
inline int femap::Imodel::GetPref_ViewDynamicMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x279e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9721)
inline void femap::Imodel::PutPref_ViewDynamicMode ( int _val ) {
    _com_dispatch_propput(this, 0x279e, VT_I4, _val);
}

#pragma implementation_key(9722)
inline int femap::Imodel::GetPref_MsgWndFontSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x279f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9723)
inline void femap::Imodel::PutPref_MsgWndFontSize ( int _val ) {
    _com_dispatch_propput(this, 0x279f, VT_I4, _val);
}

#pragma implementation_key(9724)
inline enum femap::zColor femap::Imodel::GetPref_MsgWndBackColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27a1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9725)
inline void femap::Imodel::PutPref_MsgWndBackColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27a1, VT_I4, _val);
}

#pragma implementation_key(9726)
inline enum femap::zColor femap::Imodel::GetPref_MsgWndErrorColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27a2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9727)
inline void femap::Imodel::PutPref_MsgWndErrorColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27a2, VT_I4, _val);
}

#pragma implementation_key(9728)
inline enum femap::zColor femap::Imodel::GetPref_MsgWndHighColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27a3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9729)
inline void femap::Imodel::PutPref_MsgWndHighColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27a3, VT_I4, _val);
}

#pragma implementation_key(9730)
inline enum femap::zColor femap::Imodel::GetPref_MsgWndTextColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27a4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9731)
inline void femap::Imodel::PutPref_MsgWndTextColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27a4, VT_I4, _val);
}

#pragma implementation_key(9732)
inline enum femap::zColor femap::Imodel::GetPref_MsgWndWarnColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27a5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9733)
inline void femap::Imodel::PutPref_MsgWndWarnColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27a5, VT_I4, _val);
}

#pragma implementation_key(9734)
inline int femap::Imodel::GetPref_ScrollBackLines ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27a6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9735)
inline void femap::Imodel::PutPref_ScrollBackLines ( int _val ) {
    _com_dispatch_propput(this, 0x27a6, VT_I4, _val);
}

#pragma implementation_key(9736)
inline double femap::Imodel::GetPref_AspectRatio ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27aa, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9737)
inline void femap::Imodel::PutPref_AspectRatio ( double _val ) {
    _com_dispatch_propput(this, 0x27aa, VT_R8, _val);
}

#pragma implementation_key(9738)
inline double femap::Imodel::GetPref_DeltaAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ab, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9739)
inline void femap::Imodel::PutPref_DeltaAngle ( double _val ) {
    _com_dispatch_propput(this, 0x27ab, VT_R8, _val);
}

#pragma implementation_key(9740)
inline double femap::Imodel::GetPref_GeometryScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ac, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9741)
inline void femap::Imodel::PutPref_GeometryScale ( double _val ) {
    _com_dispatch_propput(this, 0x27ac, VT_R8, _val);
}

#pragma implementation_key(9742)
inline double femap::Imodel::GetPref_GeomLoadEdgeFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ad, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9743)
inline void femap::Imodel::PutPref_GeomLoadEdgeFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27ad, VT_R8, _val);
}

#pragma implementation_key(9744)
inline double femap::Imodel::GetPref_GeomLoadQuadFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ae, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9745)
inline void femap::Imodel::PutPref_GeomLoadQuadFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27ae, VT_R8, _val);
}

#pragma implementation_key(9746)
inline double femap::Imodel::GetPref_GeomLoadTriFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27af, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9747)
inline void femap::Imodel::PutPref_GeomLoadTriFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27af, VT_R8, _val);
}

#pragma implementation_key(9748)
inline double femap::Imodel::GetPref_NeutralVersion ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27b0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9749)
inline void femap::Imodel::PutPref_NeutralVersion ( double _val ) {
    _com_dispatch_propput(this, 0x27b0, VT_R8, _val);
}

#pragma implementation_key(9750)
inline double femap::Imodel::GetPref_ViewDynamSpeed ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27b1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9751)
inline void femap::Imodel::PutPref_ViewDynamSpeed ( double _val ) {
    _com_dispatch_propput(this, 0x27b1, VT_R8, _val);
}

#pragma implementation_key(9752)
inline double femap::Imodel::GetPref_WtmassFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27b2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9753)
inline void femap::Imodel::PutPref_WtmassFactor ( double _val ) {
    _com_dispatch_propput(this, 0x27b2, VT_R8, _val);
}

#pragma implementation_key(9754)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderBeamEdges ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27b6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9755)
inline void femap::Imodel::PutPref_RenderBeamEdges ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27b6, VT_BOOL, _val);
}

#pragma implementation_key(9756)
inline int femap::Imodel::GetPref_RenderBitmapAlignment ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27b7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9757)
inline void femap::Imodel::PutPref_RenderBitmapAlignment ( int _val ) {
    _com_dispatch_propput(this, 0x27b7, VT_I4, _val);
}

#pragma implementation_key(9758)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderMemoryOpt ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27b8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9759)
inline void femap::Imodel::PutPref_RenderMemoryOpt ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27b8, VT_BOOL, _val);
}

#pragma implementation_key(9760)
inline int femap::Imodel::GetPref_RenderPixelFormat ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27b9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9761)
inline void femap::Imodel::PutPref_RenderPixelFormat ( int _val ) {
    _com_dispatch_propput(this, 0x27b9, VT_I4, _val);
}

#pragma implementation_key(9762)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderTex2D ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27bc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9763)
inline void femap::Imodel::PutPref_RenderTex2D ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27bc, VT_BOOL, _val);
}

#pragma implementation_key(9764)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderTexAllTri ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27bd, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9765)
inline void femap::Imodel::PutPref_RenderTexAllTri ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27bd, VT_BOOL, _val);
}

#pragma implementation_key(9766)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderTexSmooth ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27be, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9767)
inline void femap::Imodel::PutPref_RenderTexSmooth ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27be, VT_BOOL, _val);
}

#pragma implementation_key(9768)
inline int femap::Imodel::GetPref_RenderTexNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27bf, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9769)
inline void femap::Imodel::PutPref_RenderTexNumber ( int _val ) {
    _com_dispatch_propput(this, 0x27bf, VT_I4, _val);
}

#pragma implementation_key(9770)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderTiming ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9771)
inline void femap::Imodel::PutPref_RenderTiming ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c0, VT_BOOL, _val);
}

#pragma implementation_key(9772)
inline int femap::Imodel::GetPref_RenderTDRProtect ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27c1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9773)
inline void femap::Imodel::PutPref_RenderTDRProtect ( int _val ) {
    _com_dispatch_propput(this, 0x27c1, VT_I4, _val);
}

#pragma implementation_key(9774)
inline VARIANT_BOOL femap::Imodel::GetInfo_WorkplaneModelAdjust ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9775)
inline void femap::Imodel::PutInfo_WorkplaneModelAdjust ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c2, VT_BOOL, _val);
}

#pragma implementation_key(9776)
inline VARIANT_BOOL femap::Imodel::GetInfo_WorkplaneSurfaceAdjust ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9777)
inline void femap::Imodel::PutInfo_WorkplaneSurfaceAdjust ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c3, VT_BOOL, _val);
}

#pragma implementation_key(9778)
inline VARIANT_BOOL femap::Imodel::GetInfo_ModelNeedBox ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9779)
inline void femap::Imodel::PutInfo_ModelNeedBox ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c4, VT_BOOL, _val);
}

#pragma implementation_key(9780)
inline VARIANT_BOOL femap::Imodel::GetInfo_UpdateAllViews ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9781)
inline void femap::Imodel::PutInfo_UpdateAllViews ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c5, VT_BOOL, _val);
}

#pragma implementation_key(9782)
inline VARIANT_BOOL femap::Imodel::GetInfo_TranslateNotes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9783)
inline void femap::Imodel::PutInfo_TranslateNotes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c6, VT_BOOL, _val);
}

#pragma implementation_key(9784)
inline VARIANT_BOOL femap::Imodel::GetInfo_SnapFullPrecision ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9785)
inline void femap::Imodel::PutInfo_SnapFullPrecision ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c7, VT_BOOL, _val);
}

#pragma implementation_key(9786)
inline VARIANT_BOOL femap::Imodel::GetInfo_SnapCoordOnly ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9787)
inline void femap::Imodel::PutInfo_SnapCoordOnly ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c8, VT_BOOL, _val);
}

#pragma implementation_key(9788)
inline VARIANT_BOOL femap::Imodel::GetInfo_ViewShowErase ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27c9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9789)
inline void femap::Imodel::PutInfo_ViewShowErase ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27c9, VT_BOOL, _val);
}

#pragma implementation_key(9790)
inline VARIANT_BOOL femap::Imodel::GetInfo_ViewShowUseColor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x27ca, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9791)
inline void femap::Imodel::PutInfo_ViewShowUseColor ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x27ca, VT_BOOL, _val);
}

#pragma implementation_key(9792)
inline int femap::Imodel::GetInfo_CommandNumber ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27cd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9793)
inline void femap::Imodel::PutInfo_CommandNumber ( int _val ) {
    _com_dispatch_propput(this, 0x27cd, VT_I4, _val);
}

#pragma implementation_key(9794)
inline int femap::Imodel::GetInfo_OutputCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9795)
inline void femap::Imodel::PutInfo_OutputCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27d6, VT_I4, _val);
}

#pragma implementation_key(9796)
inline enum femap::zNodeType femap::Imodel::GetInfo_NodeType ( ) {
    enum zNodeType _result;
    _com_dispatch_propget(this, 0x27d7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9797)
inline void femap::Imodel::PutInfo_NodeType ( enum zNodeType _val ) {
    _com_dispatch_propput(this, 0x27d7, VT_I4, _val);
}

#pragma implementation_key(9798)
inline enum femap::zColor femap::Imodel::GetInfo_TextBorderColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27d8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9799)
inline void femap::Imodel::PutInfo_TextBorderColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27d8, VT_I4, _val);
}

#pragma implementation_key(9800)
inline int femap::Imodel::GetInfo_WorkplaneOnSurface ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27d9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9801)
inline void femap::Imodel::PutInfo_WorkplaneOnSurface ( int _val ) {
    _com_dispatch_propput(this, 0x27d9, VT_I4, _val);
}

#pragma implementation_key(9802)
inline int femap::Imodel::GetInfo_WorkplaneOnSurfacePrev ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27da, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9803)
inline void femap::Imodel::PutInfo_WorkplaneOnSurfacePrev ( int _val ) {
    _com_dispatch_propput(this, 0x27da, VT_I4, _val);
}

#pragma implementation_key(9804)
inline int femap::Imodel::GetInfo_SnapTo ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27db, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9805)
inline void femap::Imodel::PutInfo_SnapTo ( int _val ) {
    _com_dispatch_propput(this, 0x27db, VT_I4, _val);
}

#pragma implementation_key(9806)
inline int femap::Imodel::GetInfo_SnapStyle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27dc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9807)
inline void femap::Imodel::PutInfo_SnapStyle ( int _val ) {
    _com_dispatch_propput(this, 0x27dc, VT_I4, _val);
}

#pragma implementation_key(9808)
inline int femap::Imodel::GetInfo_SnapSpacingMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27dd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9809)
inline void femap::Imodel::PutInfo_SnapSpacingMode ( int _val ) {
    _com_dispatch_propput(this, 0x27dd, VT_I4, _val);
}

#pragma implementation_key(9810)
inline int femap::Imodel::GetInfo_WorkplaneTics ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27de, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9811)
inline void femap::Imodel::PutInfo_WorkplaneTics ( int _val ) {
    _com_dispatch_propput(this, 0x27de, VT_I4, _val);
}

#pragma implementation_key(9812)
inline int femap::Imodel::GetInfo_MatlAngleMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9813)
inline void femap::Imodel::PutInfo_MatlAngleMethod ( int _val ) {
    _com_dispatch_propput(this, 0x27e0, VT_I4, _val);
}

#pragma implementation_key(9814)
inline int femap::Imodel::GetInfo_MatlAngleDir ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e1, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9815)
inline void femap::Imodel::PutInfo_MatlAngleDir ( int _val ) {
    _com_dispatch_propput(this, 0x27e1, VT_I4, _val);
}

#pragma implementation_key(9816)
inline int femap::Imodel::GetInfo_MatlAngleCSys ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e2, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9817)
inline void femap::Imodel::PutInfo_MatlAngleCSys ( int _val ) {
    _com_dispatch_propput(this, 0x27e2, VT_I4, _val);
}

#pragma implementation_key(9818)
inline int femap::Imodel::GetInfo_MeshSizeMinElem ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9819)
inline void femap::Imodel::PutInfo_MeshSizeMinElem ( int _val ) {
    _com_dispatch_propput(this, 0x27e3, VT_I4, _val);
}

#pragma implementation_key(9820)
inline enum femap::zColor femap::Imodel::GetInfo_ViewShowColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x27e6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9821)
inline void femap::Imodel::PutInfo_ViewShowColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x27e6, VT_I4, _val);
}

#pragma implementation_key(9822)
inline enum femap::zDataType femap::Imodel::GetInfo_ViewShowEntity ( ) {
    enum zDataType _result;
    _com_dispatch_propget(this, 0x27e7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9823)
inline void femap::Imodel::PutInfo_ViewShowEntity ( enum zDataType _val ) {
    _com_dispatch_propput(this, 0x27e7, VT_I4, _val);
}

#pragma implementation_key(9824)
inline int femap::Imodel::GetInfo_ViewShowLabel ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9825)
inline void femap::Imodel::PutInfo_ViewShowLabel ( int _val ) {
    _com_dispatch_propput(this, 0x27e8, VT_I4, _val);
}

#pragma implementation_key(9826)
inline int femap::Imodel::GetInfo_GroupAutomaticAdd ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27e9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9827)
inline void femap::Imodel::PutInfo_GroupAutomaticAdd ( int _val ) {
    _com_dispatch_propput(this, 0x27e9, VT_I4, _val);
}

#pragma implementation_key(9828)
inline int femap::Imodel::GetInfo_SplineOrder ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ea, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9829)
inline void femap::Imodel::PutInfo_SplineOrder ( int _val ) {
    _com_dispatch_propput(this, 0x27ea, VT_I4, _val);
}

#pragma implementation_key(9830)
inline int femap::Imodel::GetInfo_LayerNoPick ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27eb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9831)
inline void femap::Imodel::PutInfo_LayerNoPick ( int _val ) {
    _com_dispatch_propput(this, 0x27eb, VT_I4, _val);
}

#pragma implementation_key(9832)
inline int femap::Imodel::GetInfo_MatlUserType ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x27ec, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9833)
inline void femap::Imodel::PutInfo_MatlUserType ( int _val ) {
    _com_dispatch_propput(this, 0x27ec, VT_I4, _val);
}

#pragma implementation_key(9834)
inline double femap::Imodel::GetInfo_Version ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ef, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9835)
inline void femap::Imodel::PutInfo_Version ( double _val ) {
    _com_dispatch_propput(this, 0x27ef, VT_R8, _val);
}

#pragma implementation_key(9836)
inline double femap::Imodel::GetInfo_WorkplaneLabels ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fb, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9837)
inline void femap::Imodel::PutInfo_WorkplaneLabels ( double _val ) {
    _com_dispatch_propput(this, 0x27fb, VT_R8, _val);
}

#pragma implementation_key(9838)
inline double femap::Imodel::GetInfo_DefaultX ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fc, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9839)
inline void femap::Imodel::PutInfo_DefaultX ( double _val ) {
    _com_dispatch_propput(this, 0x27fc, VT_R8, _val);
}

#pragma implementation_key(9840)
inline double femap::Imodel::GetInfo_DefaultY ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fd, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9841)
inline void femap::Imodel::PutInfo_DefaultY ( double _val ) {
    _com_dispatch_propput(this, 0x27fd, VT_R8, _val);
}

#pragma implementation_key(9842)
inline double femap::Imodel::GetInfo_DefaultZ ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27fe, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9843)
inline void femap::Imodel::PutInfo_DefaultZ ( double _val ) {
    _com_dispatch_propput(this, 0x27fe, VT_R8, _val);
}

#pragma implementation_key(9844)
inline double femap::Imodel::GetInfo_LineLength ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x27ff, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9845)
inline void femap::Imodel::PutInfo_LineLength ( double _val ) {
    _com_dispatch_propput(this, 0x27ff, VT_R8, _val);
}

#pragma implementation_key(9846)
inline double femap::Imodel::GetInfo_MatlAngle ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2804, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9847)
inline void femap::Imodel::PutInfo_MatlAngle ( double _val ) {
    _com_dispatch_propput(this, 0x2804, VT_R8, _val);
}

#pragma implementation_key(9848)
inline double femap::Imodel::GetInfo_MeshSizeDefault ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2805, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9849)
inline void femap::Imodel::PutInfo_MeshSizeDefault ( double _val ) {
    _com_dispatch_propput(this, 0x2805, VT_R8, _val);
}

#pragma implementation_key(9850)
inline double femap::Imodel::GetInfo_GeometryScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2806, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9851)
inline void femap::Imodel::PutInfo_GeometryScale ( double _val ) {
    _com_dispatch_propput(this, 0x2806, VT_R8, _val);
}

#pragma implementation_key(9852)
inline VARIANT_BOOL femap::Imodel::GetTool_CursorSingle ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2807, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9853)
inline void femap::Imodel::PutTool_CursorSingle ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2807, VT_BOOL, _val);
}

#pragma implementation_key(9854)
inline double femap::Imodel::GetTool_MergeTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2809, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9855)
inline void femap::Imodel::PutTool_MergeTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x2809, VT_R8, _val);
}

#pragma implementation_key(9856)
inline int femap::Imodel::GetPrint_Copies ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x280a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9857)
inline void femap::Imodel::PutPrint_Copies ( int _val ) {
    _com_dispatch_propput(this, 0x280a, VT_I4, _val);
}

#pragma implementation_key(9858)
inline VARIANT_BOOL femap::Imodel::GetTool_MergeToleranceAuto ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x280b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9859)
inline void femap::Imodel::PutTool_MergeToleranceAuto ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x280b, VT_BOOL, _val);
}

#pragma implementation_key(9860)
inline VARIANT_BOOL femap::Imodel::GetSolid_UpdateActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x280c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9861)
inline void femap::Imodel::PutSolid_UpdateActive ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x280c, VT_BOOL, _val);
}

#pragma implementation_key(9862)
inline VARIANT_BOOL femap::Imodel::GetSolid_UpdateDelete ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x280d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9863)
inline void femap::Imodel::PutSolid_UpdateDelete ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x280d, VT_BOOL, _val);
}

#pragma implementation_key(9864)
inline int femap::Imodel::GetSolid_UpdateResizeMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x280e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9865)
inline void femap::Imodel::PutSolid_UpdateResizeMode ( int _val ) {
    _com_dispatch_propput(this, 0x280e, VT_I4, _val);
}

#pragma implementation_key(9866)
inline double femap::Imodel::GetSolid_UpdateResizeTol ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x280f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9867)
inline void femap::Imodel::PutSolid_UpdateResizeTol ( double _val ) {
    _com_dispatch_propput(this, 0x280f, VT_R8, _val);
}

#pragma implementation_key(9868)
inline __int64 femap::Imodel::GethMainWnd ( ) {
    __int64 _result = 0;
    _com_dispatch_propget(this, 0x2810, VT_I8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9869)
inline void femap::Imodel::PuthMainWnd ( __int64 _val ) {
    _com_dispatch_propput(this, 0x2810, VT_I8, _val);
}

#pragma implementation_key(9870)
inline __int64 femap::Imodel::GethListWnd ( ) {
    __int64 _result = 0;
    _com_dispatch_propget(this, 0x2811, VT_I8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9871)
inline void femap::Imodel::PuthListWnd ( __int64 _val ) {
    _com_dispatch_propput(this, 0x2811, VT_I8, _val);
}

#pragma implementation_key(9872)
inline _bstr_t femap::Imodel::GetModelName ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2812, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9873)
inline void femap::Imodel::PutModelName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2812, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9874)
inline _bstr_t femap::Imodel::GetScratchName ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2813, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9875)
inline void femap::Imodel::PutScratchName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2813, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9876)
inline _bstr_t femap::Imodel::GetFullScratchName ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2814, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9877)
inline void femap::Imodel::PutFullScratchName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2814, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9878)
inline _bstr_t femap::Imodel::GetExePath ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2815, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9879)
inline void femap::Imodel::PutExePath ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2815, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9880)
inline _bstr_t femap::Imodel::GetSerialNumber ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2816, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9881)
inline void femap::Imodel::PutSerialNumber ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2816, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9882)
inline __int64 femap::Imodel::GetEventLParam ( ) {
    __int64 _result = 0;
    _com_dispatch_propget(this, 0x2817, VT_I8, (void*)&_result);
    return _result;
}

#pragma implementation_key(9883)
inline void femap::Imodel::PutEventLParam ( __int64 _val ) {
    _com_dispatch_propput(this, 0x2817, VT_I8, _val);
}

#pragma implementation_key(9884)
inline _variant_t femap::Imodel::GetvPref_AngleDimetric ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2818, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9885)
inline void femap::Imodel::PutvPref_AngleDimetric ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2818, VT_VARIANT, &_val);
}

#pragma implementation_key(9886)
inline _variant_t femap::Imodel::GetvPref_AngleIsometric ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2819, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9887)
inline void femap::Imodel::PutvPref_AngleIsometric ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2819, VT_VARIANT, &_val);
}

#pragma implementation_key(9888)
inline _variant_t femap::Imodel::GetvPref_AngleTrimetric ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x281a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9889)
inline void femap::Imodel::PutvPref_AngleTrimetric ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x281a, VT_VARIANT, &_val);
}

#pragma implementation_key(9890)
inline _variant_t femap::Imodel::GetvPref_RenderRotate ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x281b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9891)
inline void femap::Imodel::PutvPref_RenderRotate ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x281b, VT_VARIANT, &_val);
}

#pragma implementation_key(9892)
inline _variant_t femap::Imodel::GetvInfo_PermBC ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x281c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9893)
inline void femap::Imodel::PutvInfo_PermBC ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x281c, VT_VARIANT, &_val);
}

#pragma implementation_key(9894)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneRuler ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x281d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9895)
inline void femap::Imodel::PutvInfo_WorkplaneRuler ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x281d, VT_VARIANT, &_val);
}

#pragma implementation_key(9896)
inline _variant_t femap::Imodel::GetvInfo_MaxID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x281e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9897)
inline void femap::Imodel::PutvInfo_MaxID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x281e, VT_VARIANT, &_val);
}

#pragma implementation_key(9898)
inline _variant_t femap::Imodel::GetvInfo_MinID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x281f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9899)
inline void femap::Imodel::PutvInfo_MinID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x281f, VT_VARIANT, &_val);
}

#pragma implementation_key(9900)
inline _variant_t femap::Imodel::GetvInfo_Count ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2820, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9901)
inline void femap::Imodel::PutvInfo_Count ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2820, VT_VARIANT, &_val);
}

#pragma implementation_key(9902)
inline _variant_t femap::Imodel::GetvInfo_ElemFormulation1 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2821, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9903)
inline void femap::Imodel::PutvInfo_ElemFormulation1 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2821, VT_VARIANT, &_val);
}

#pragma implementation_key(9904)
inline _variant_t femap::Imodel::GetvInfo_ElemFormulation2 ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2822, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9905)
inline void femap::Imodel::PutvInfo_ElemFormulation2 ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2822, VT_VARIANT, &_val);
}

#pragma implementation_key(9906)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneOrigin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2823, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9907)
inline void femap::Imodel::PutvInfo_WorkplaneOrigin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2823, VT_VARIANT, &_val);
}

#pragma implementation_key(9908)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneX ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2824, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9909)
inline void femap::Imodel::PutvInfo_WorkplaneX ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2824, VT_VARIANT, &_val);
}

#pragma implementation_key(9910)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneY ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2825, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9911)
inline void femap::Imodel::PutvInfo_WorkplaneY ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2825, VT_VARIANT, &_val);
}

#pragma implementation_key(9912)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2826, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9913)
inline void femap::Imodel::PutvInfo_WorkplaneZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2826, VT_VARIANT, &_val);
}

#pragma implementation_key(9914)
inline _variant_t femap::Imodel::GetvInfo_WorkplanePrevOrigin ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2827, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9915)
inline void femap::Imodel::PutvInfo_WorkplanePrevOrigin ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2827, VT_VARIANT, &_val);
}

#pragma implementation_key(9916)
inline _variant_t femap::Imodel::GetvInfo_WorkplanePrevX ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2828, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9917)
inline void femap::Imodel::PutvInfo_WorkplanePrevX ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2828, VT_VARIANT, &_val);
}

#pragma implementation_key(9918)
inline _variant_t femap::Imodel::GetvInfo_WorkplanePrevY ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2829, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9919)
inline void femap::Imodel::PutvInfo_WorkplanePrevY ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2829, VT_VARIANT, &_val);
}

#pragma implementation_key(9920)
inline _variant_t femap::Imodel::GetvInfo_WorkplanePrevZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9921)
inline void femap::Imodel::PutvInfo_WorkplanePrevZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282a, VT_VARIANT, &_val);
}

#pragma implementation_key(9922)
inline _variant_t femap::Imodel::GetvInfo_SnapSpacing ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9923)
inline void femap::Imodel::PutvInfo_SnapSpacing ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282b, VT_VARIANT, &_val);
}

#pragma implementation_key(9924)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneSizeX ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9925)
inline void femap::Imodel::PutvInfo_WorkplaneSizeX ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282c, VT_VARIANT, &_val);
}

#pragma implementation_key(9926)
inline _variant_t femap::Imodel::GetvInfo_WorkplaneSizeY ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282d, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9927)
inline void femap::Imodel::PutvInfo_WorkplaneSizeY ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282d, VT_VARIANT, &_val);
}

#pragma implementation_key(9928)
inline _variant_t femap::Imodel::GetvInfo_MatlAngleVec ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9929)
inline void femap::Imodel::PutvInfo_MatlAngleVec ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282e, VT_VARIANT, &_val);
}

#pragma implementation_key(9930)
inline _variant_t femap::Imodel::GetvTool_CursorXYZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x282f, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9931)
inline void femap::Imodel::PutvTool_CursorXYZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x282f, VT_VARIANT, &_val);
}

#pragma implementation_key(9932)
inline _variant_t femap::Imodel::GetvInfo_ModelSizeX ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2830, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9933)
inline void femap::Imodel::PutvInfo_ModelSizeX ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2830, VT_VARIANT, &_val);
}

#pragma implementation_key(9934)
inline _variant_t femap::Imodel::GetvInfo_ModelSizeY ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2831, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9935)
inline void femap::Imodel::PutvInfo_ModelSizeY ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2831, VT_VARIANT, &_val);
}

#pragma implementation_key(9936)
inline _variant_t femap::Imodel::GetvInfo_ModelSizeZ ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2832, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9937)
inline void femap::Imodel::PutvInfo_ModelSizeZ ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2832, VT_VARIANT, &_val);
}

#pragma implementation_key(9938)
inline _variant_t femap::Imodel::GetvPref_EntityColor ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2833, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9939)
inline void femap::Imodel::PutvPref_EntityColor ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2833, VT_VARIANT, &_val);
}

#pragma implementation_key(9940)
inline _variant_t femap::Imodel::GetvInfo_Increment ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2836, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9941)
inline void femap::Imodel::PutvInfo_Increment ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2836, VT_VARIANT, &_val);
}

#pragma implementation_key(9942)
inline _variant_t femap::Imodel::GetvInfo_NextID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2837, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9943)
inline void femap::Imodel::PutvInfo_NextID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2837, VT_VARIANT, &_val);
}

#pragma implementation_key(9944)
inline _variant_t femap::Imodel::GetvInfo_ActiveID ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2838, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9945)
inline void femap::Imodel::PutvInfo_ActiveID ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2838, VT_VARIANT, &_val);
}

#pragma implementation_key(9946)
inline _variant_t femap::Imodel::GetvInfo_ActiveType ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2839, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9947)
inline void femap::Imodel::PutvInfo_ActiveType ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2839, VT_VARIANT, &_val);
}

#pragma implementation_key(9948)
inline _variant_t femap::Imodel::GetvInfo_Color ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x283a, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9949)
inline void femap::Imodel::PutvInfo_Color ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x283a, VT_VARIANT, &_val);
}

#pragma implementation_key(9950)
inline _variant_t femap::Imodel::GetvInfo_SurfDivisionsLinear ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x283b, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9951)
inline void femap::Imodel::PutvInfo_SurfDivisionsLinear ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x283b, VT_VARIANT, &_val);
}

#pragma implementation_key(9952)
inline _variant_t femap::Imodel::GetvInfo_SurfDivisionsCurved ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x283c, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(9953)
inline void femap::Imodel::PutvInfo_SurfDivisionsCurved ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x283c, VT_VARIANT, &_val);
}

#pragma implementation_key(9954)
inline VARIANT_BOOL femap::Imodel::GetPref_ReverseMouseWheel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9955)
inline void femap::Imodel::PutPref_ReverseMouseWheel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283d, VT_BOOL, _val);
}

#pragma implementation_key(9956)
inline VARIANT_BOOL femap::Imodel::GetPref_ReversePanZoom ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9957)
inline void femap::Imodel::PutPref_ReversePanZoom ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283e, VT_BOOL, _val);
}

#pragma implementation_key(9958)
inline VARIANT_BOOL femap::Imodel::GetPref_AltAccelerator ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x283f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9959)
inline void femap::Imodel::PutPref_AltAccelerator ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x283f, VT_BOOL, _val);
}

#pragma implementation_key(9960)
inline VARIANT_BOOL femap::Imodel::GetPref_AltTheme ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2840, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9961)
inline void femap::Imodel::PutPref_AltTheme ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2840, VT_BOOL, _val);
}

#pragma implementation_key(9962)
inline VARIANT_BOOL femap::Imodel::GetPref_ViewLogoScreenRes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2841, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9963)
inline void femap::Imodel::PutPref_ViewLogoScreenRes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2841, VT_BOOL, _val);
}

#pragma implementation_key(9964)
inline _bstr_t femap::Imodel::GetPref_ViewBkgdBitmap ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2842, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9965)
inline void femap::Imodel::PutPref_ViewBkgdBitmap ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2842, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9966)
inline _bstr_t femap::Imodel::GetPref_ViewLogo ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2843, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9967)
inline void femap::Imodel::PutPref_ViewLogo ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2843, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9968)
inline int femap::Imodel::GetDialogAutoAnswer ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2844, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9969)
inline void femap::Imodel::PutDialogAutoAnswer ( int _val ) {
    _com_dispatch_propput(this, 0x2844, VT_I4, _val);
}

#pragma implementation_key(9970)
inline _bstr_t femap::Imodel::GetPref_MessageFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x284b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9971)
inline void femap::Imodel::PutPref_MessageFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x284b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9972)
inline _bstr_t femap::Imodel::GetPref_ListingFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x284c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9973)
inline void femap::Imodel::PutPref_ListingFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x284c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9974)
inline _bstr_t femap::Imodel::GetPref_ProgramFont ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x284d, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(9975)
inline void femap::Imodel::PutPref_ProgramFont ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x284d, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(9976)
inline int femap::Imodel::GetPref_ProgramFontSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x284e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9977)
inline void femap::Imodel::PutPref_ProgramFontSize ( int _val ) {
    _com_dispatch_propput(this, 0x284e, VT_I4, _val);
}

#pragma implementation_key(9978)
inline enum femap::zColor femap::Imodel::GetPref_MsgWndCmdColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x284f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(9979)
inline void femap::Imodel::PutPref_MsgWndCmdColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x284f, VT_I4, _val);
}

#pragma implementation_key(9980)
inline VARIANT_BOOL femap::Imodel::GetPref_MsgWndTextBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2850, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9981)
inline void femap::Imodel::PutPref_MsgWndTextBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2850, VT_BOOL, _val);
}

#pragma implementation_key(9982)
inline VARIANT_BOOL femap::Imodel::GetPref_MsgWndCmdBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2851, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9983)
inline void femap::Imodel::PutPref_MsgWndCmdBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2851, VT_BOOL, _val);
}

#pragma implementation_key(9984)
inline VARIANT_BOOL femap::Imodel::GetPref_MsgWndHighBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2852, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9985)
inline void femap::Imodel::PutPref_MsgWndHighBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2852, VT_BOOL, _val);
}

#pragma implementation_key(9986)
inline VARIANT_BOOL femap::Imodel::GetPref_MsgWndWarnBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2853, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9987)
inline void femap::Imodel::PutPref_MsgWndWarnBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2853, VT_BOOL, _val);
}

#pragma implementation_key(9988)
inline VARIANT_BOOL femap::Imodel::GetPref_MsgWndErrorBold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2854, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9989)
inline void femap::Imodel::PutPref_MsgWndErrorBold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2854, VT_BOOL, _val);
}

#pragma implementation_key(9990)
inline VARIANT_BOOL femap::Imodel::GetPref_AltSectionProp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2856, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9991)
inline void femap::Imodel::PutPref_AltSectionProp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2856, VT_BOOL, _val);
}

#pragma implementation_key(9992)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderSmoothLines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2857, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9993)
inline void femap::Imodel::PutPref_RenderSmoothLines ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2857, VT_BOOL, _val);
}

#pragma implementation_key(9994)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderFastPick ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2858, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9995)
inline void femap::Imodel::PutPref_RenderFastPick ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2858, VT_BOOL, _val);
}

#pragma implementation_key(9996)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderEdgesAsLines ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2859, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9997)
inline void femap::Imodel::PutPref_RenderEdgesAsLines ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2859, VT_BOOL, _val);
}

#pragma implementation_key(9998)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderAutoRegen ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x285a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(9999)
inline void femap::Imodel::PutPref_RenderAutoRegen ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x285a, VT_BOOL, _val);
}

#pragma implementation_key(10000)
inline int femap::Imodel::GetPref_RenderVertexArrays ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10001)
inline void femap::Imodel::PutPref_RenderVertexArrays ( int _val ) {
    _com_dispatch_propput(this, 0x285b, VT_I4, _val);
}

#pragma implementation_key(10002)
inline int femap::Imodel::GetPref_RenderBitBltDelay ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10003)
inline void femap::Imodel::PutPref_RenderBitBltDelay ( int _val ) {
    _com_dispatch_propput(this, 0x285c, VT_I4, _val);
}

#pragma implementation_key(10004)
inline int femap::Imodel::GetPref_RenderSearchDepth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10005)
inline void femap::Imodel::PutPref_RenderSearchDepth ( int _val ) {
    _com_dispatch_propput(this, 0x285d, VT_I4, _val);
}

#pragma implementation_key(10006)
inline VARIANT_BOOL femap::Imodel::GetPref_GeomScaleAdjust ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x285e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10007)
inline void femap::Imodel::PutPref_GeomScaleAdjust ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x285e, VT_BOOL, _val);
}

#pragma implementation_key(10008)
inline int femap::Imodel::GetPref_ModelInfoMaxEntity ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x285f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10009)
inline void femap::Imodel::PutPref_ModelInfoMaxEntity ( int _val ) {
    _com_dispatch_propput(this, 0x285f, VT_I4, _val);
}

#pragma implementation_key(10010)
inline VARIANT_BOOL femap::Imodel::GetPref_AnimatePanes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2860, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10011)
inline void femap::Imodel::PutPref_AnimatePanes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2860, VT_BOOL, _val);
}

#pragma implementation_key(10012)
inline VARIANT_BOOL femap::Imodel::GetPref_RememberDialogPos ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2861, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10013)
inline void femap::Imodel::PutPref_RememberDialogPos ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2861, VT_BOOL, _val);
}

#pragma implementation_key(10014)
inline VARIANT_BOOL femap::Imodel::GetPref_UseMSCNastran2004 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2862, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10015)
inline void femap::Imodel::PutPref_UseMSCNastran2004 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2862, VT_BOOL, _val);
}

#pragma implementation_key(10016)
inline VARIANT_BOOL femap::Imodel::GetPref_FileRefCheck ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2863, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10017)
inline void femap::Imodel::PutPref_FileRefCheck ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2863, VT_BOOL, _val);
}

#pragma implementation_key(10018)
inline VARIANT_BOOL femap::Imodel::GetPref_FileRefGeometry ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2864, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10019)
inline void femap::Imodel::PutPref_FileRefGeometry ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2864, VT_BOOL, _val);
}

#pragma implementation_key(10020)
inline VARIANT_BOOL femap::Imodel::GetPref_FileRefModel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2865, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10021)
inline void femap::Imodel::PutPref_FileRefModel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2865, VT_BOOL, _val);
}

#pragma implementation_key(10022)
inline VARIANT_BOOL femap::Imodel::GetPref_FileRefResults ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2866, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10023)
inline void femap::Imodel::PutPref_FileRefResults ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2866, VT_BOOL, _val);
}

#pragma implementation_key(10024)
inline VARIANT_BOOL femap::Imodel::GetPref_AnalysisMonAutoLoad ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2867, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10025)
inline void femap::Imodel::PutPref_AnalysisMonAutoLoad ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2867, VT_BOOL, _val);
}

#pragma implementation_key(10026)
inline int femap::Imodel::GetPref_AnalysisMonMaxLines ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2868, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10027)
inline void femap::Imodel::PutPref_AnalysisMonMaxLines ( int _val ) {
    _com_dispatch_propput(this, 0x2868, VT_I4, _val);
}

#pragma implementation_key(10028)
inline int femap::Imodel::GetPref_OutputSetTitles ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2869, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10029)
inline void femap::Imodel::PutPref_OutputSetTitles ( int _val ) {
    _com_dispatch_propput(this, 0x2869, VT_I4, _val);
}

#pragma implementation_key(10030)
inline _bstr_t femap::Imodel::GetPref_LibConnectionProp ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x286a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10031)
inline void femap::Imodel::PutPref_LibConnectionProp ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x286a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10032)
inline VARIANT_BOOL femap::Imodel::GetPref_UseOldAnalysisInterfaces ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x286b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10033)
inline void femap::Imodel::PutPref_UseOldAnalysisInterfaces ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x286b, VT_BOOL, _val);
}

#pragma implementation_key(10034)
inline int femap::Imodel::GetInfo_SuperelementID ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x287a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10035)
inline void femap::Imodel::PutInfo_SuperelementID ( int _val ) {
    _com_dispatch_propput(this, 0x287a, VT_I4, _val);
}

#pragma implementation_key(10036)
inline enum femap::zPointDefinition femap::Imodel::GetCoordDialogMethod ( ) {
    enum zPointDefinition _result;
    _com_dispatch_propget(this, 0x287d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10037)
inline void femap::Imodel::PutCoordDialogMethod ( enum zPointDefinition _val ) {
    _com_dispatch_propput(this, 0x287d, VT_I4, _val);
}

#pragma implementation_key(10038)
inline enum femap::zVectorDefinition femap::Imodel::GetVectorDialogMethod ( ) {
    enum zVectorDefinition _result;
    _com_dispatch_propget(this, 0x287e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10039)
inline void femap::Imodel::PutVectorDialogMethod ( enum zVectorDefinition _val ) {
    _com_dispatch_propput(this, 0x287e, VT_I4, _val);
}

#pragma implementation_key(10040)
inline enum femap::zPlaneDefinition femap::Imodel::GetPlaneDialogMethod ( ) {
    enum zPlaneDefinition _result;
    _com_dispatch_propget(this, 0x287f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10041)
inline void femap::Imodel::PutPlaneDialogMethod ( enum zPlaneDefinition _val ) {
    _com_dispatch_propput(this, 0x287f, VT_I4, _val);
}

#pragma implementation_key(10042)
inline int femap::Imodel::GetInfo_OrientSolidIsoOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2881, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10043)
inline void femap::Imodel::PutInfo_OrientSolidIsoOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2881, VT_I4, _val);
}

#pragma implementation_key(10044)
inline int femap::Imodel::GetInfo_OrientSolidAnisoOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2882, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10045)
inline void femap::Imodel::PutInfo_OrientSolidAnisoOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2882, VT_I4, _val);
}

#pragma implementation_key(10046)
inline int femap::Imodel::GetInfo_OrientSolidHyperOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2883, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10047)
inline void femap::Imodel::PutInfo_OrientSolidHyperOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2883, VT_I4, _val);
}

#pragma implementation_key(10048)
inline int femap::Imodel::GetInfo_OrientTria3StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2884, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10049)
inline void femap::Imodel::PutInfo_OrientTria3StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2884, VT_I4, _val);
}

#pragma implementation_key(10050)
inline int femap::Imodel::GetInfo_OrientTria3StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2885, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10051)
inline void femap::Imodel::PutInfo_OrientTria3StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2885, VT_I4, _val);
}

#pragma implementation_key(10052)
inline int femap::Imodel::GetInfo_OrientTria3ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2886, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10053)
inline void femap::Imodel::PutInfo_OrientTria3ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2886, VT_I4, _val);
}

#pragma implementation_key(10054)
inline int femap::Imodel::GetInfo_OrientTria6StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2887, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10055)
inline void femap::Imodel::PutInfo_OrientTria6StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2887, VT_I4, _val);
}

#pragma implementation_key(10056)
inline int femap::Imodel::GetInfo_OrientTria6StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2888, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10057)
inline void femap::Imodel::PutInfo_OrientTria6StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2888, VT_I4, _val);
}

#pragma implementation_key(10058)
inline int femap::Imodel::GetInfo_OrientTria6ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2889, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10059)
inline void femap::Imodel::PutInfo_OrientTria6ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2889, VT_I4, _val);
}

#pragma implementation_key(10060)
inline int femap::Imodel::GetInfo_OrientQuad4StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x288a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10061)
inline void femap::Imodel::PutInfo_OrientQuad4StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x288a, VT_I4, _val);
}

#pragma implementation_key(10062)
inline int femap::Imodel::GetInfo_OrientQuad4StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x288b, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10063)
inline void femap::Imodel::PutInfo_OrientQuad4StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x288b, VT_I4, _val);
}

#pragma implementation_key(10064)
inline int femap::Imodel::GetInfo_OrientQuad4ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x288c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10065)
inline void femap::Imodel::PutInfo_OrientQuad4ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x288c, VT_I4, _val);
}

#pragma implementation_key(10066)
inline int femap::Imodel::GetInfo_OrientQuad8StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x288d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10067)
inline void femap::Imodel::PutInfo_OrientQuad8StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x288d, VT_I4, _val);
}

#pragma implementation_key(10068)
inline int femap::Imodel::GetInfo_OrientQuad8StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x288e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10069)
inline void femap::Imodel::PutInfo_OrientQuad8StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x288e, VT_I4, _val);
}

#pragma implementation_key(10070)
inline int femap::Imodel::GetInfo_OrientQuad8ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x288f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10071)
inline void femap::Imodel::PutInfo_OrientQuad8ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x288f, VT_I4, _val);
}

#pragma implementation_key(10072)
inline int femap::Imodel::GetPref_ReadTabSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2890, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10073)
inline void femap::Imodel::PutPref_ReadTabSize ( int _val ) {
    _com_dispatch_propput(this, 0x2890, VT_I4, _val);
}

#pragma implementation_key(10074)
inline int femap::Imodel::GetPickBoundaryInternalMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2891, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10075)
inline void femap::Imodel::PutPickBoundaryInternalMode ( int _val ) {
    _com_dispatch_propput(this, 0x2891, VT_I4, _val);
}

#pragma implementation_key(10076)
inline int femap::Imodel::GetPickCombinedCurveInternalMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2892, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10077)
inline void femap::Imodel::PutPickCombinedCurveInternalMode ( int _val ) {
    _com_dispatch_propput(this, 0x2892, VT_I4, _val);
}

#pragma implementation_key(10078)
inline VARIANT_BOOL femap::Imodel::GetPref_NastranUseILP64 ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2893, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10079)
inline void femap::Imodel::PutPref_NastranUseILP64 ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2893, VT_BOOL, _val);
}

#pragma implementation_key(10080)
inline int femap::Imodel::GetPref_ConstructionGeometry ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2894, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10081)
inline void femap::Imodel::PutPref_ConstructionGeometry ( int _val ) {
    _com_dispatch_propput(this, 0x2894, VT_I4, _val);
}

#pragma implementation_key(10082)
inline VARIANT_BOOL femap::Imodel::GetPref_NastranWriteAllLdbcSets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2895, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10083)
inline void femap::Imodel::PutPref_NastranWriteAllLdbcSets ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2895, VT_BOOL, _val);
}

#pragma implementation_key(10084)
inline enum femap::zListDestination femap::Imodel::GetList_Destination ( ) {
    enum zListDestination _result;
    _com_dispatch_propget(this, 0x2896, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10085)
inline void femap::Imodel::PutList_Destination ( enum zListDestination _val ) {
    _com_dispatch_propput(this, 0x2896, VT_I4, _val);
}

#pragma implementation_key(10086)
inline _bstr_t femap::Imodel::GetList_FileName ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2897, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10087)
inline void femap::Imodel::PutList_FileName ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2897, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10088)
inline VARIANT_BOOL femap::Imodel::GetPref_DeleteRdScratchLdSets ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2898, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10089)
inline void femap::Imodel::PutPref_DeleteRdScratchLdSets ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2898, VT_BOOL, _val);
}

#pragma implementation_key(10090)
inline VARIANT_BOOL femap::Imodel::GetPref_ImproveSinglePrecision ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x289a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10091)
inline void femap::Imodel::PutPref_ImproveSinglePrecision ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x289a, VT_BOOL, _val);
}

#pragma implementation_key(10092)
inline VARIANT_BOOL femap::Imodel::GetPref_PaneCaptionsOnTop ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x289b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10093)
inline void femap::Imodel::PutPref_PaneCaptionsOnTop ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x289b, VT_BOOL, _val);
}

#pragma implementation_key(10094)
inline enum femap::zPrefPictureFormat femap::Imodel::GetPref_PictureFormat ( ) {
    enum zPrefPictureFormat _result;
    _com_dispatch_propget(this, 0x289c, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10095)
inline void femap::Imodel::PutPref_PictureFormat ( enum zPrefPictureFormat _val ) {
    _com_dispatch_propput(this, 0x289c, VT_I4, _val);
}

#pragma implementation_key(10096)
inline enum femap::zPrefAnimateFormat femap::Imodel::GetPref_AnimationFormat ( ) {
    enum zPrefAnimateFormat _result;
    _com_dispatch_propget(this, 0x289d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10097)
inline void femap::Imodel::PutPref_AnimationFormat ( enum zPrefAnimateFormat _val ) {
    _com_dispatch_propput(this, 0x289d, VT_I4, _val);
}

#pragma implementation_key(10098)
inline enum femap::zGifColorOpt femap::Imodel::GetPref_GIFColorOpt ( ) {
    enum zGifColorOpt _result;
    _com_dispatch_propget(this, 0x289e, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10099)
inline void femap::Imodel::PutPref_GIFColorOpt ( enum zGifColorOpt _val ) {
    _com_dispatch_propput(this, 0x289e, VT_I4, _val);
}

#pragma implementation_key(10100)
inline int femap::Imodel::GetPref_GIFAnimationDelay ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x289f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10101)
inline void femap::Imodel::PutPref_GIFAnimationDelay ( int _val ) {
    _com_dispatch_propput(this, 0x289f, VT_I4, _val);
}

#pragma implementation_key(10102)
inline VARIANT_BOOL femap::Imodel::GetPref_GIFFrameSeries ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28a0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10103)
inline void femap::Imodel::PutPref_GIFFrameSeries ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28a0, VT_BOOL, _val);
}

#pragma implementation_key(10104)
inline VARIANT_BOOL femap::Imodel::GetPref_CompressBitmaps ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28a1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10105)
inline void femap::Imodel::PutPref_CompressBitmaps ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28a1, VT_BOOL, _val);
}

#pragma implementation_key(10106)
inline _variant_t femap::Imodel::GetvPref_NasQstOn ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28a2, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10107)
inline void femap::Imodel::PutvPref_NasQstOn ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28a2, VT_VARIANT, &_val);
}

#pragma implementation_key(10108)
inline _variant_t femap::Imodel::GetvPref_NasQstVal ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28a3, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10109)
inline void femap::Imodel::PutvPref_NasQstVal ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28a3, VT_VARIANT, &_val);
}

#pragma implementation_key(10110)
inline VARIANT_BOOL femap::Imodel::GetPref_TbxExpandActive ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28a4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10111)
inline void femap::Imodel::PutPref_TbxExpandActive ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28a4, VT_BOOL, _val);
}

#pragma implementation_key(10112)
inline int femap::Imodel::GetPref_TbxAutomesh ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28a5, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10113)
inline void femap::Imodel::PutPref_TbxAutomesh ( int _val ) {
    _com_dispatch_propput(this, 0x28a5, VT_I4, _val);
}

#pragma implementation_key(10114)
inline int femap::Imodel::GetPref_ResPrintMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28a6, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10115)
inline void femap::Imodel::PutPref_ResPrintMethod ( int _val ) {
    _com_dispatch_propput(this, 0x28a6, VT_I4, _val);
}

#pragma implementation_key(10116)
inline double femap::Imodel::GetPref_ResPrintScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28a7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10117)
inline void femap::Imodel::PutPref_ResPrintScale ( double _val ) {
    _com_dispatch_propput(this, 0x28a7, VT_R8, _val);
}

#pragma implementation_key(10118)
inline int femap::Imodel::GetPref_ResCopySaveMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28a8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10119)
inline void femap::Imodel::PutPref_ResCopySaveMethod ( int _val ) {
    _com_dispatch_propput(this, 0x28a8, VT_I4, _val);
}

#pragma implementation_key(10120)
inline double femap::Imodel::GetPref_ResCopySaveScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28a9, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10121)
inline void femap::Imodel::PutPref_ResCopySaveScale ( double _val ) {
    _com_dispatch_propput(this, 0x28a9, VT_R8, _val);
}

#pragma implementation_key(10122)
inline int femap::Imodel::GetPref_ResScaleWithWidth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28aa, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10123)
inline void femap::Imodel::PutPref_ResScaleWithWidth ( int _val ) {
    _com_dispatch_propput(this, 0x28aa, VT_I4, _val);
}

#pragma implementation_key(10124)
inline int femap::Imodel::GetPref_ResScaleWithHeight ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ab, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10125)
inline void femap::Imodel::PutPref_ResScaleWithHeight ( int _val ) {
    _com_dispatch_propput(this, 0x28ab, VT_I4, _val);
}

#pragma implementation_key(10126)
inline int femap::Imodel::GetPref_ResFixedWidth ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ac, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10127)
inline void femap::Imodel::PutPref_ResFixedWidth ( int _val ) {
    _com_dispatch_propput(this, 0x28ac, VT_I4, _val);
}

#pragma implementation_key(10128)
inline int femap::Imodel::GetPref_ResFixedHeight ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ad, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10129)
inline void femap::Imodel::PutPref_ResFixedHeight ( int _val ) {
    _com_dispatch_propput(this, 0x28ad, VT_I4, _val);
}

#pragma implementation_key(10130)
inline double femap::Imodel::GetInfo_FacetAngleTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28ae, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10131)
inline void femap::Imodel::PutInfo_FacetAngleTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x28ae, VT_R8, _val);
}

#pragma implementation_key(10132)
inline double femap::Imodel::GetInfo_FacetChordTolerance ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28af, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10133)
inline void femap::Imodel::PutInfo_FacetChordTolerance ( double _val ) {
    _com_dispatch_propput(this, 0x28af, VT_R8, _val);
}

#pragma implementation_key(10134)
inline double femap::Imodel::GetInfo_FacetCurveFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10135)
inline void femap::Imodel::PutInfo_FacetCurveFactor ( double _val ) {
    _com_dispatch_propput(this, 0x28b0, VT_R8, _val);
}

#pragma implementation_key(10136)
inline VARIANT_BOOL femap::Imodel::GetSolid_UpdateMaterialData ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28b1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10137)
inline void femap::Imodel::PutSolid_UpdateMaterialData ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28b1, VT_BOOL, _val);
}

#pragma implementation_key(10138)
inline VARIANT_BOOL femap::Imodel::GetSolid_UpdateUseParasolidIdent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28b2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10139)
inline void femap::Imodel::PutSolid_UpdateUseParasolidIdent ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28b2, VT_BOOL, _val);
}

#pragma implementation_key(10140)
inline int femap::Imodel::GetPref_ResPenMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b3, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10141)
inline void femap::Imodel::PutPref_ResPenMethod ( int _val ) {
    _com_dispatch_propput(this, 0x28b3, VT_I4, _val);
}

#pragma implementation_key(10142)
inline int femap::Imodel::GetPref_ResPenScale ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b4, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10143)
inline void femap::Imodel::PutPref_ResPenScale ( int _val ) {
    _com_dispatch_propput(this, 0x28b4, VT_I4, _val);
}

#pragma implementation_key(10144)
inline double femap::Imodel::GetPref_ResScreenLogoScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10145)
inline void femap::Imodel::PutPref_ResScreenLogoScale ( double _val ) {
    _com_dispatch_propput(this, 0x28b5, VT_R8, _val);
}

#pragma implementation_key(10146)
inline double femap::Imodel::GetPref_ResPrintLogoScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10147)
inline void femap::Imodel::PutPref_ResPrintLogoScale ( double _val ) {
    _com_dispatch_propput(this, 0x28b6, VT_R8, _val);
}

#pragma implementation_key(10148)
inline double femap::Imodel::GetPref_ResCopySaveLogoScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28b7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10149)
inline void femap::Imodel::PutPref_ResCopySaveLogoScale ( double _val ) {
    _com_dispatch_propput(this, 0x28b7, VT_R8, _val);
}

#pragma implementation_key(10150)
inline int femap::Imodel::GetDialogAutoSkip ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28b8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10151)
inline void femap::Imodel::PutDialogAutoSkip ( int _val ) {
    _com_dispatch_propput(this, 0x28b8, VT_I4, _val);
}

#pragma implementation_key(10152)
inline enum femap::zColor femap::Imodel::GetInfo_SuppressedCurveColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x28b9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10153)
inline void femap::Imodel::PutInfo_SuppressedCurveColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x28b9, VT_I4, _val);
}

#pragma implementation_key(10154)
inline enum femap::zColor femap::Imodel::GetInfo_SuppressedSurfaceColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x28ba, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10155)
inline void femap::Imodel::PutInfo_SuppressedSurfaceColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x28ba, VT_I4, _val);
}

#pragma implementation_key(10156)
inline int femap::Imodel::GetPref_MsgWndRepeatedErrors ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28bb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10157)
inline void femap::Imodel::PutPref_MsgWndRepeatedErrors ( int _val ) {
    _com_dispatch_propput(this, 0x28bb, VT_I4, _val);
}

#pragma implementation_key(10158)
inline VARIANT_BOOL femap::Imodel::GetPref_PaneAltDockSymbols ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28bc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10159)
inline void femap::Imodel::PutPref_PaneAltDockSymbols ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28bc, VT_BOOL, _val);
}

#pragma implementation_key(10160)
inline int femap::Imodel::GetPref_FastOutputDelete ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28bd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10161)
inline void femap::Imodel::PutPref_FastOutputDelete ( int _val ) {
    _com_dispatch_propput(this, 0x28bd, VT_I4, _val);
}

#pragma implementation_key(10162)
inline VARIANT_BOOL femap::Imodel::GetPref_GroupIncludeFiles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28be, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10163)
inline void femap::Imodel::PutPref_GroupIncludeFiles ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28be, VT_BOOL, _val);
}

#pragma implementation_key(10164)
inline int femap::Imodel::GetPref_OpenSaveMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28bf, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10165)
inline void femap::Imodel::PutPref_OpenSaveMethod ( int _val ) {
    _com_dispatch_propput(this, 0x28bf, VT_I4, _val);
}

#pragma implementation_key(10166)
inline VARIANT_BOOL femap::Imodel::GetErrorHasBeenCalled ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c0, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10167)
inline void femap::Imodel::PutErrorHasBeenCalled ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c0, VT_BOOL, _val);
}

#pragma implementation_key(10168)
inline VARIANT_BOOL femap::Imodel::GetPref_Enable_Aeroelasticity ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10169)
inline void femap::Imodel::PutPref_Enable_Aeroelasticity ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c4, VT_BOOL, _val);
}

#pragma implementation_key(10170)
inline VARIANT_BOOL femap::Imodel::GetPref_NasAlternateContinue ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10171)
inline void femap::Imodel::PutPref_NasAlternateContinue ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c7, VT_BOOL, _val);
}

#pragma implementation_key(10172)
inline VARIANT_BOOL femap::Imodel::GetPref_NasDballScratch ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28c8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10173)
inline void femap::Imodel::PutPref_NasDballScratch ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28c8, VT_BOOL, _val);
}

#pragma implementation_key(10174)
inline int femap::Imodel::GetPref_JTFileVersion ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28cb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10175)
inline void femap::Imodel::PutPref_JTFileVersion ( int _val ) {
    _com_dispatch_propput(this, 0x28cb, VT_I4, _val);
}

#pragma implementation_key(10176)
inline VARIANT_BOOL femap::Imodel::GetPref_GIFOptimized ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28cc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10177)
inline void femap::Imodel::PutPref_GIFOptimized ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28cc, VT_BOOL, _val);
}

#pragma implementation_key(10178)
inline VARIANT_BOOL femap::Imodel::GetPref_PreV10SurfaceMesh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28cf, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10179)
inline void femap::Imodel::PutPref_PreV10SurfaceMesh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28cf, VT_BOOL, _val);
}

#pragma implementation_key(10180)
inline int femap::Imodel::GetPref_PickMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28d0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10181)
inline void femap::Imodel::PutPref_PickMethod ( int _val ) {
    _com_dispatch_propput(this, 0x28d0, VT_I4, _val);
}

#pragma implementation_key(10182)
inline VARIANT_BOOL femap::Imodel::GetPref_ConfirmDelete ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10183)
inline void femap::Imodel::PutPref_ConfirmDelete ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d1, VT_BOOL, _val);
}

#pragma implementation_key(10184)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderXORPicking ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10185)
inline void femap::Imodel::PutPref_RenderXORPicking ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d2, VT_BOOL, _val);
}

#pragma implementation_key(10186)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderMultiModelMem ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10187)
inline void femap::Imodel::PutPref_RenderMultiModelMem ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d3, VT_BOOL, _val);
}

#pragma implementation_key(10188)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderDebugElapsedTime ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10189)
inline void femap::Imodel::PutPref_RenderDebugElapsedTime ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d4, VT_BOOL, _val);
}

#pragma implementation_key(10190)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderDebugAllTime ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10191)
inline void femap::Imodel::PutPref_RenderDebugAllTime ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d5, VT_BOOL, _val);
}

#pragma implementation_key(10192)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderDebugOGLErrors ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10193)
inline void femap::Imodel::PutPref_RenderDebugOGLErrors ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d6, VT_BOOL, _val);
}

#pragma implementation_key(10194)
inline int femap::Imodel::GetPref_RenderBlockSize ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28d7, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10195)
inline void femap::Imodel::PutPref_RenderBlockSize ( int _val ) {
    _com_dispatch_propput(this, 0x28d7, VT_I4, _val);
}

#pragma implementation_key(10196)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderDialogRefresh ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28d8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10197)
inline void femap::Imodel::PutPref_RenderDialogRefresh ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28d8, VT_BOOL, _val);
}

#pragma implementation_key(10198)
inline int femap::Imodel::GetPref_ShowMode ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28d9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10199)
inline void femap::Imodel::PutPref_ShowMode ( int _val ) {
    _com_dispatch_propput(this, 0x28d9, VT_I4, _val);
}

#pragma implementation_key(10200)
inline VARIANT_BOOL femap::Imodel::GetPref_ShowLabels ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28da, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10201)
inline void femap::Imodel::PutPref_ShowLabels ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28da, VT_BOOL, _val);
}

#pragma implementation_key(10202)
inline VARIANT_BOOL femap::Imodel::GetPref_ShowNormals ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28db, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10203)
inline void femap::Imodel::PutPref_ShowNormals ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28db, VT_BOOL, _val);
}

#pragma implementation_key(10204)
inline VARIANT_BOOL femap::Imodel::GetPref_PreserveNextID ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28dc, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10205)
inline void femap::Imodel::PutPref_PreserveNextID ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28dc, VT_BOOL, _val);
}

#pragma implementation_key(10206)
inline int femap::Imodel::GetPref_NastranScratchLocation ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28dd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10207)
inline void femap::Imodel::PutPref_NastranScratchLocation ( int _val ) {
    _com_dispatch_propput(this, 0x28dd, VT_I4, _val);
}

#pragma implementation_key(10208)
inline _bstr_t femap::Imodel::GetPref_LibLayup ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x28de, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10209)
inline void femap::Imodel::PutPref_LibLayup ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x28de, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10210)
inline _variant_t femap::Imodel::GetvPref_SpaceballFactors ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x28df, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10211)
inline void femap::Imodel::PutvPref_SpaceballFactors ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x28df, VT_VARIANT, &_val);
}

#pragma implementation_key(10212)
inline int femap::Imodel::GetPref_SpaceballSensitivity ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28e0, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10213)
inline void femap::Imodel::PutPref_SpaceballSensitivity ( int _val ) {
    _com_dispatch_propput(this, 0x28e0, VT_I4, _val);
}

#pragma implementation_key(10214)
inline VARIANT_BOOL femap::Imodel::GetPref_SpaceballDebug ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e1, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10215)
inline void femap::Imodel::PutPref_SpaceballDebug ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e1, VT_BOOL, _val);
}

#pragma implementation_key(10216)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e2, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10217)
inline void femap::Imodel::PutPref_ElemQualAspectRatio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e2, VT_BOOL, _val);
}

#pragma implementation_key(10218)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTaper ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e3, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10219)
inline void femap::Imodel::PutPref_ElemQualTaper ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e3, VT_BOOL, _val);
}

#pragma implementation_key(10220)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualAltTaper ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e4, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10221)
inline void femap::Imodel::PutPref_ElemQualAltTaper ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e4, VT_BOOL, _val);
}

#pragma implementation_key(10222)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualIntAngles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e5, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10223)
inline void femap::Imodel::PutPref_ElemQualIntAngles ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e5, VT_BOOL, _val);
}

#pragma implementation_key(10224)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualSkew ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e6, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10225)
inline void femap::Imodel::PutPref_ElemQualSkew ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e6, VT_BOOL, _val);
}

#pragma implementation_key(10226)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualWarping ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e7, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10227)
inline void femap::Imodel::PutPref_ElemQualWarping ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e7, VT_BOOL, _val);
}

#pragma implementation_key(10228)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualNastranWarping ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e8, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10229)
inline void femap::Imodel::PutPref_ElemQualNastranWarping ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e8, VT_BOOL, _val);
}

#pragma implementation_key(10230)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTetCollapse ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28e9, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10231)
inline void femap::Imodel::PutPref_ElemQualTetCollapse ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28e9, VT_BOOL, _val);
}

#pragma implementation_key(10232)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualJacobian ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ea, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10233)
inline void femap::Imodel::PutPref_ElemQualJacobian ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ea, VT_BOOL, _val);
}

#pragma implementation_key(10234)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualCombined ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28eb, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10235)
inline void femap::Imodel::PutPref_ElemQualCombined ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28eb, VT_BOOL, _val);
}

#pragma implementation_key(10236)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualExplicitTime ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x28ec, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10237)
inline void femap::Imodel::PutPref_ElemQualExplicitTime ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x28ec, VT_BOOL, _val);
}

#pragma implementation_key(10238)
inline double femap::Imodel::GetPref_ElemQualAspectRatioVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28ed, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10239)
inline void femap::Imodel::PutPref_ElemQualAspectRatioVal ( double _val ) {
    _com_dispatch_propput(this, 0x28ed, VT_R8, _val);
}

#pragma implementation_key(10240)
inline double femap::Imodel::GetPref_ElemQualTaperVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28ee, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10241)
inline void femap::Imodel::PutPref_ElemQualTaperVal ( double _val ) {
    _com_dispatch_propput(this, 0x28ee, VT_R8, _val);
}

#pragma implementation_key(10242)
inline double femap::Imodel::GetPref_ElemQualAltTaperVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28ef, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10243)
inline void femap::Imodel::PutPref_ElemQualAltTaperVal ( double _val ) {
    _com_dispatch_propput(this, 0x28ef, VT_R8, _val);
}

#pragma implementation_key(10244)
inline double femap::Imodel::GetPref_ElemQualIntAnglesVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f0, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10245)
inline void femap::Imodel::PutPref_ElemQualIntAnglesVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f0, VT_R8, _val);
}

#pragma implementation_key(10246)
inline double femap::Imodel::GetPref_ElemQualSkewVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f1, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10247)
inline void femap::Imodel::PutPref_ElemQualSkewVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f1, VT_R8, _val);
}

#pragma implementation_key(10248)
inline double femap::Imodel::GetPref_ElemQualWarpingVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f2, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10249)
inline void femap::Imodel::PutPref_ElemQualWarpingVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f2, VT_R8, _val);
}

#pragma implementation_key(10250)
inline double femap::Imodel::GetPref_ElemQualNastranWarpingVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f3, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10251)
inline void femap::Imodel::PutPref_ElemQualNastranWarpingVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f3, VT_R8, _val);
}

#pragma implementation_key(10252)
inline double femap::Imodel::GetPref_ElemQualTetCollapseVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f4, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10253)
inline void femap::Imodel::PutPref_ElemQualTetCollapseVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f4, VT_R8, _val);
}

#pragma implementation_key(10254)
inline double femap::Imodel::GetPref_ElemQualJacobianVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f5, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10255)
inline void femap::Imodel::PutPref_ElemQualJacobianVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f5, VT_R8, _val);
}

#pragma implementation_key(10256)
inline double femap::Imodel::GetPref_ElemQualCombinedVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f6, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10257)
inline void femap::Imodel::PutPref_ElemQualCombinedVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f6, VT_R8, _val);
}

#pragma implementation_key(10258)
inline double femap::Imodel::GetPref_ElemQualExplicitTimeVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x28f7, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10259)
inline void femap::Imodel::PutPref_ElemQualExplicitTimeVal ( double _val ) {
    _com_dispatch_propput(this, 0x28f7, VT_R8, _val);
}

#pragma implementation_key(10260)
inline enum femap::zColor femap::Imodel::GetPref_ShowColor ( ) {
    enum zColor _result;
    _com_dispatch_propget(this, 0x28f8, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10261)
inline void femap::Imodel::PutPref_ShowColor ( enum zColor _val ) {
    _com_dispatch_propput(this, 0x28f8, VT_I4, _val);
}

#pragma implementation_key(10262)
inline int femap::Imodel::GetPref_OrientSolidIsoOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28f9, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10263)
inline void femap::Imodel::PutPref_OrientSolidIsoOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28f9, VT_I4, _val);
}

#pragma implementation_key(10264)
inline int femap::Imodel::GetPref_OrientSolidAnisoOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fa, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10265)
inline void femap::Imodel::PutPref_OrientSolidAnisoOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28fa, VT_I4, _val);
}

#pragma implementation_key(10266)
inline int femap::Imodel::GetPref_OrientSolidHyperOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fb, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10267)
inline void femap::Imodel::PutPref_OrientSolidHyperOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28fb, VT_I4, _val);
}

#pragma implementation_key(10268)
inline int femap::Imodel::GetPref_OrientTria3StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fc, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10269)
inline void femap::Imodel::PutPref_OrientTria3StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28fc, VT_I4, _val);
}

#pragma implementation_key(10270)
inline int femap::Imodel::GetPref_OrientTria3StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fd, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10271)
inline void femap::Imodel::PutPref_OrientTria3StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28fd, VT_I4, _val);
}

#pragma implementation_key(10272)
inline int femap::Imodel::GetPref_OrientTria3ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28fe, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10273)
inline void femap::Imodel::PutPref_OrientTria3ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28fe, VT_I4, _val);
}

#pragma implementation_key(10274)
inline int femap::Imodel::GetPref_OrientTria6StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x28ff, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10275)
inline void femap::Imodel::PutPref_OrientTria6StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x28ff, VT_I4, _val);
}

#pragma implementation_key(10276)
inline int femap::Imodel::GetPref_OrientTria6StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2900, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10277)
inline void femap::Imodel::PutPref_OrientTria6StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2900, VT_I4, _val);
}

#pragma implementation_key(10278)
inline int femap::Imodel::GetPref_OrientTria6ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2901, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10279)
inline void femap::Imodel::PutPref_OrientTria6ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2901, VT_I4, _val);
}

#pragma implementation_key(10280)
inline int femap::Imodel::GetPref_OrientQuad4StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2902, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10281)
inline void femap::Imodel::PutPref_OrientQuad4StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2902, VT_I4, _val);
}

#pragma implementation_key(10282)
inline int femap::Imodel::GetPref_OrientQuad4StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2903, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10283)
inline void femap::Imodel::PutPref_OrientQuad4StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2903, VT_I4, _val);
}

#pragma implementation_key(10284)
inline int femap::Imodel::GetPref_OrientQuad4ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2904, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10285)
inline void femap::Imodel::PutPref_OrientQuad4ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2904, VT_I4, _val);
}

#pragma implementation_key(10286)
inline int femap::Imodel::GetPref_OrientQuad8StressOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2905, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10287)
inline void femap::Imodel::PutPref_OrientQuad8StressOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2905, VT_I4, _val);
}

#pragma implementation_key(10288)
inline int femap::Imodel::GetPref_OrientQuad8StrainOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2906, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10289)
inline void femap::Imodel::PutPref_OrientQuad8StrainOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2906, VT_I4, _val);
}

#pragma implementation_key(10290)
inline int femap::Imodel::GetPref_OrientQuad8ForceOutput ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2907, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10291)
inline void femap::Imodel::PutPref_OrientQuad8ForceOutput ( int _val ) {
    _com_dispatch_propput(this, 0x2907, VT_I4, _val);
}

#pragma implementation_key(10292)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderTrailingZeroes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x290c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10293)
inline void femap::Imodel::PutPref_RenderTrailingZeroes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x290c, VT_BOOL, _val);
}

#pragma implementation_key(10294)
inline int femap::Imodel::GetPref_RenderMaxVBOMB ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x290d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10295)
inline void femap::Imodel::PutPref_RenderMaxVBOMB ( int _val ) {
    _com_dispatch_propput(this, 0x290d, VT_I4, _val);
}

#pragma implementation_key(10296)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderDebugFrameRate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x290e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10297)
inline void femap::Imodel::PutPref_RenderDebugFrameRate ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x290e, VT_BOOL, _val);
}

#pragma implementation_key(10298)
inline int femap::Imodel::GetPref_RenderVBOUsage ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x290f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10299)
inline void femap::Imodel::PutPref_RenderVBOUsage ( int _val ) {
    _com_dispatch_propput(this, 0x290f, VT_I4, _val);
}

#pragma implementation_key(10300)
inline VARIANT_BOOL femap::Imodel::GetPref_PreserveIncludes ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2910, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10301)
inline void femap::Imodel::PutPref_PreserveIncludes ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2910, VT_BOOL, _val);
}

#pragma implementation_key(10302)
inline VARIANT_BOOL femap::Imodel::GetPref_MemoryMappedFiles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2911, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10303)
inline void femap::Imodel::PutPref_MemoryMappedFiles ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2911, VT_BOOL, _val);
}

#pragma implementation_key(10304)
inline VARIANT_BOOL femap::Imodel::GetPref_AutoAttachResults ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2912, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10305)
inline void femap::Imodel::PutPref_AutoAttachResults ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2912, VT_BOOL, _val);
}

#pragma implementation_key(10306)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderCaptureIconified ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2913, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10307)
inline void femap::Imodel::PutPref_RenderCaptureIconified ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2913, VT_BOOL, _val);
}

#pragma implementation_key(10308)
inline int femap::Imodel::GetPref_RenderMinVBOB ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2914, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10309)
inline void femap::Imodel::PutPref_RenderMinVBOB ( int _val ) {
    _com_dispatch_propput(this, 0x2914, VT_I4, _val);
}

#pragma implementation_key(10310)
inline VARIANT_BOOL femap::Imodel::GetInfo_MeshSizeAutoDefault ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2915, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10311)
inline void femap::Imodel::PutInfo_MeshSizeAutoDefault ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2915, VT_BOOL, _val);
}

#pragma implementation_key(10312)
inline VARIANT_BOOL femap::Imodel::GetPref_AttachResultsDebug ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2916, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10313)
inline void femap::Imodel::PutPref_AttachResultsDebug ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2916, VT_BOOL, _val);
}

#pragma implementation_key(10314)
inline VARIANT_BOOL femap::Imodel::GetPref_AttachResultsTiming ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2917, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10315)
inline void femap::Imodel::PutPref_AttachResultsTiming ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2917, VT_BOOL, _val);
}

#pragma implementation_key(10316)
inline VARIANT_BOOL femap::Imodel::GetPref_ViewPostDynamicMaxMin ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2919, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10317)
inline void femap::Imodel::PutPref_ViewPostDynamicMaxMin ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2919, VT_BOOL, _val);
}

#pragma implementation_key(10318)
inline int femap::Imodel::GetDialogAutoSkipMsg ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x291a, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10319)
inline void femap::Imodel::PutDialogAutoSkipMsg ( int _val ) {
    _com_dispatch_propput(this, 0x291a, VT_I4, _val);
}

#pragma implementation_key(10320)
inline VARIANT_BOOL femap::Imodel::GetPref_CleanupModel ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x291b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10321)
inline void femap::Imodel::PutPref_CleanupModel ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x291b, VT_BOOL, _val);
}

#pragma implementation_key(10322)
inline VARIANT_BOOL femap::Imodel::GetPref_LegacyXYPlotting ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x291c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10323)
inline void femap::Imodel::PutPref_LegacyXYPlotting ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x291c, VT_BOOL, _val);
}

#pragma implementation_key(10324)
inline _bstr_t femap::Imodel::GetPref_LibChart ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x291d, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10325)
inline void femap::Imodel::PutPref_LibChart ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x291d, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10326)
inline VARIANT_BOOL femap::Imodel::GetPref_Show0To360Angles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2921, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10327)
inline void femap::Imodel::PutPref_Show0To360Angles ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2921, VT_BOOL, _val);
}

#pragma implementation_key(10328)
inline double femap::Imodel::GetPref_PlaneWheelFactor ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2922, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10329)
inline void femap::Imodel::PutPref_PlaneWheelFactor ( double _val ) {
    _com_dispatch_propput(this, 0x2922, VT_R8, _val);
}

#pragma implementation_key(10330)
inline VARIANT_BOOL femap::Imodel::GetPref_MiddleMouseButtonOK ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2923, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10331)
inline void femap::Imodel::PutPref_MiddleMouseButtonOK ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2923, VT_BOOL, _val);
}

#pragma implementation_key(10332)
inline VARIANT_BOOL femap::Imodel::GetPref_GeomOptimize ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2924, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10333)
inline void femap::Imodel::PutPref_GeomOptimize ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2924, VT_BOOL, _val);
}

#pragma implementation_key(10334)
inline VARIANT_BOOL femap::Imodel::GetPref_UseRegionDecimalChar ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2925, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10335)
inline void femap::Imodel::PutPref_UseRegionDecimalChar ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2925, VT_BOOL, _val);
}

#pragma implementation_key(10336)
inline double femap::Imodel::GetPref_ResFontScale ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2927, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10337)
inline void femap::Imodel::PutPref_ResFontScale ( double _val ) {
    _com_dispatch_propput(this, 0x2927, VT_R8, _val);
}

#pragma implementation_key(10338)
inline VARIANT_BOOL femap::Imodel::GetPref_PerformanceGraphics ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2928, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10339)
inline void femap::Imodel::PutPref_PerformanceGraphics ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2928, VT_BOOL, _val);
}

#pragma implementation_key(10340)
inline VARIANT_BOOL femap::Imodel::GetSolidAllowNonManifold ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x292b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10341)
inline void femap::Imodel::PutSolidAllowNonManifold ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x292b, VT_BOOL, _val);
}

#pragma implementation_key(10342)
inline VARIANT_BOOL femap::Imodel::GetPref_CreateResultStudy ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x292c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10343)
inline void femap::Imodel::PutPref_CreateResultStudy ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x292c, VT_BOOL, _val);
}

#pragma implementation_key(10344)
inline int femap::Imodel::GetPref_ResultStudyTitle ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x292d, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10345)
inline void femap::Imodel::PutPref_ResultStudyTitle ( int _val ) {
    _com_dispatch_propput(this, 0x292d, VT_I4, _val);
}

#pragma implementation_key(10346)
inline VARIANT_BOOL femap::Imodel::GetInfo_ViewShowNormal ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x292e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10347)
inline void femap::Imodel::PutInfo_ViewShowNormal ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x292e, VT_BOOL, _val);
}

#pragma implementation_key(10348)
inline VARIANT_BOOL femap::Imodel::GetInfo_ViewShowTransparent ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x292f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10349)
inline void femap::Imodel::PutInfo_ViewShowTransparent ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x292f, VT_BOOL, _val);
}

#pragma implementation_key(10350)
inline int femap::Imodel::GetInfo_ComplexSyncMethod ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2930, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10351)
inline void femap::Imodel::PutInfo_ComplexSyncMethod ( int _val ) {
    _com_dispatch_propput(this, 0x2930, VT_I4, _val);
}

#pragma implementation_key(10352)
inline double femap::Imodel::GetInfo_ComplexSyncPhase ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2931, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10353)
inline void femap::Imodel::PutInfo_ComplexSyncPhase ( double _val ) {
    _com_dispatch_propput(this, 0x2931, VT_R8, _val);
}

#pragma implementation_key(10354)
inline double femap::Imodel::GetInfo_ComplexSyncIncrement ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2932, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10355)
inline void femap::Imodel::PutInfo_ComplexSyncIncrement ( double _val ) {
    _com_dispatch_propput(this, 0x2932, VT_R8, _val);
}

#pragma implementation_key(10356)
inline VARIANT_BOOL femap::Imodel::GetPref_TabPasteIgnoreDelimeter ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2933, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10357)
inline void femap::Imodel::PutPref_TabPasteIgnoreDelimeter ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2933, VT_BOOL, _val);
}

#pragma implementation_key(10358)
inline int femap::Imodel::GetPref_SnapTo ( ) {
    int _result = 0;
    _com_dispatch_propget(this, 0x2935, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10359)
inline void femap::Imodel::PutPref_SnapTo ( int _val ) {
    _com_dispatch_propput(this, 0x2935, VT_I4, _val);
}

#pragma implementation_key(10360)
inline double femap::Imodel::GetPref_RenderMaxMagnification ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2936, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10361)
inline void femap::Imodel::PutPref_RenderMaxMagnification ( double _val ) {
    _com_dispatch_propput(this, 0x2936, VT_R8, _val);
}

#pragma implementation_key(10362)
inline VARIANT_BOOL femap::Imodel::GetPref_StudyAppendFemapTitles ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2937, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10363)
inline void femap::Imodel::PutPref_StudyAppendFemapTitles ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2937, VT_BOOL, _val);
}

#pragma implementation_key(10364)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualQuadSkew ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2938, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10365)
inline void femap::Imodel::PutPref_ElemQualQuadSkew ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2938, VT_BOOL, _val);
}

#pragma implementation_key(10366)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualQuadTaper ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2939, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10367)
inline void femap::Imodel::PutPref_ElemQualQuadTaper ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2939, VT_BOOL, _val);
}

#pragma implementation_key(10368)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualQuadWarp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x293a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10369)
inline void femap::Imodel::PutPref_ElemQualQuadWarp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x293a, VT_BOOL, _val);
}

#pragma implementation_key(10370)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualQuadIAMin ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x293b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10371)
inline void femap::Imodel::PutPref_ElemQualQuadIAMin ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x293b, VT_BOOL, _val);
}

#pragma implementation_key(10372)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualQuadIAMax ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x293c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10373)
inline void femap::Imodel::PutPref_ElemQualQuadIAMax ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x293c, VT_BOOL, _val);
}

#pragma implementation_key(10374)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTriaSkew ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x293d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10375)
inline void femap::Imodel::PutPref_ElemQualTriaSkew ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x293d, VT_BOOL, _val);
}

#pragma implementation_key(10376)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTriaIAMax ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x293e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10377)
inline void femap::Imodel::PutPref_ElemQualTriaIAMax ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x293e, VT_BOOL, _val);
}

#pragma implementation_key(10378)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTetAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x293f, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10379)
inline void femap::Imodel::PutPref_ElemQualTetAspectRatio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x293f, VT_BOOL, _val);
}

#pragma implementation_key(10380)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTetEPLR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2940, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10381)
inline void femap::Imodel::PutPref_ElemQualTetEPLR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2940, VT_BOOL, _val);
}

#pragma implementation_key(10382)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTetDetJ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2941, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10383)
inline void femap::Imodel::PutPref_ElemQualTetDetJ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2941, VT_BOOL, _val);
}

#pragma implementation_key(10384)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualHexAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2942, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10385)
inline void femap::Imodel::PutPref_ElemQualHexAspectRatio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2942, VT_BOOL, _val);
}

#pragma implementation_key(10386)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualHexEPLR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2943, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10387)
inline void femap::Imodel::PutPref_ElemQualHexEPLR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2943, VT_BOOL, _val);
}

#pragma implementation_key(10388)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualHexDetJ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2944, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10389)
inline void femap::Imodel::PutPref_ElemQualHexDetJ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2944, VT_BOOL, _val);
}

#pragma implementation_key(10390)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualHexWarp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2945, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10391)
inline void femap::Imodel::PutPref_ElemQualHexWarp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2945, VT_BOOL, _val);
}

#pragma implementation_key(10392)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPenAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2946, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10393)
inline void femap::Imodel::PutPref_ElemQualPenAspectRatio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2946, VT_BOOL, _val);
}

#pragma implementation_key(10394)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPenEPLR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2947, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10395)
inline void femap::Imodel::PutPref_ElemQualPenEPLR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2947, VT_BOOL, _val);
}

#pragma implementation_key(10396)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPenDetJ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2948, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10397)
inline void femap::Imodel::PutPref_ElemQualPenDetJ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2948, VT_BOOL, _val);
}

#pragma implementation_key(10398)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPenWarp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2949, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10399)
inline void femap::Imodel::PutPref_ElemQualPenWarp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2949, VT_BOOL, _val);
}

#pragma implementation_key(10400)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPyrAspectRatio ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x294a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10401)
inline void femap::Imodel::PutPref_ElemQualPyrAspectRatio ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x294a, VT_BOOL, _val);
}

#pragma implementation_key(10402)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPyrEPLR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x294b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10403)
inline void femap::Imodel::PutPref_ElemQualPyrEPLR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x294b, VT_BOOL, _val);
}

#pragma implementation_key(10404)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPyrWarp ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x294c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10405)
inline void femap::Imodel::PutPref_ElemQualPyrWarp ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x294c, VT_BOOL, _val);
}

#pragma implementation_key(10406)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPyrDetJ ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x294d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10407)
inline void femap::Imodel::PutPref_ElemQualPyrDetJ ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x294d, VT_BOOL, _val);
}

#pragma implementation_key(10408)
inline double femap::Imodel::GetPref_ElemQualQuadSkewVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x294e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10409)
inline void femap::Imodel::PutPref_ElemQualQuadSkewVal ( double _val ) {
    _com_dispatch_propput(this, 0x294e, VT_R8, _val);
}

#pragma implementation_key(10410)
inline double femap::Imodel::GetPref_ElemQualQuadTaperVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x294f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10411)
inline void femap::Imodel::PutPref_ElemQualQuadTaperVal ( double _val ) {
    _com_dispatch_propput(this, 0x294f, VT_R8, _val);
}

#pragma implementation_key(10412)
inline double femap::Imodel::GetPref_ElemQualQuadWarpVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2950, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10413)
inline void femap::Imodel::PutPref_ElemQualQuadWarpVal ( double _val ) {
    _com_dispatch_propput(this, 0x2950, VT_R8, _val);
}

#pragma implementation_key(10414)
inline double femap::Imodel::GetPref_ElemQualQuadIAMinVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2951, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10415)
inline void femap::Imodel::PutPref_ElemQualQuadIAMinVal ( double _val ) {
    _com_dispatch_propput(this, 0x2951, VT_R8, _val);
}

#pragma implementation_key(10416)
inline double femap::Imodel::GetPref_ElemQualQuadIAMaxVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2952, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10417)
inline void femap::Imodel::PutPref_ElemQualQuadIAMaxVal ( double _val ) {
    _com_dispatch_propput(this, 0x2952, VT_R8, _val);
}

#pragma implementation_key(10418)
inline double femap::Imodel::GetPref_ElemQualTriaSkewVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2953, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10419)
inline void femap::Imodel::PutPref_ElemQualTriaSkewVal ( double _val ) {
    _com_dispatch_propput(this, 0x2953, VT_R8, _val);
}

#pragma implementation_key(10420)
inline double femap::Imodel::GetPref_ElemQualTriaIAMaxVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2954, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10421)
inline void femap::Imodel::PutPref_ElemQualTriaIAMaxVal ( double _val ) {
    _com_dispatch_propput(this, 0x2954, VT_R8, _val);
}

#pragma implementation_key(10422)
inline double femap::Imodel::GetPref_ElemQualTetAspectRatioVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2955, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10423)
inline void femap::Imodel::PutPref_ElemQualTetAspectRatioVal ( double _val ) {
    _com_dispatch_propput(this, 0x2955, VT_R8, _val);
}

#pragma implementation_key(10424)
inline double femap::Imodel::GetPref_ElemQualTetEPLRVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2956, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10425)
inline void femap::Imodel::PutPref_ElemQualTetEPLRVal ( double _val ) {
    _com_dispatch_propput(this, 0x2956, VT_R8, _val);
}

#pragma implementation_key(10426)
inline double femap::Imodel::GetPref_ElemQualTetDetJVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2957, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10427)
inline void femap::Imodel::PutPref_ElemQualTetDetJVal ( double _val ) {
    _com_dispatch_propput(this, 0x2957, VT_R8, _val);
}

#pragma implementation_key(10428)
inline double femap::Imodel::GetPref_ElemQualHexAspectRatioVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2958, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10429)
inline void femap::Imodel::PutPref_ElemQualHexAspectRatioVal ( double _val ) {
    _com_dispatch_propput(this, 0x2958, VT_R8, _val);
}

#pragma implementation_key(10430)
inline double femap::Imodel::GetPref_ElemQualHexEPLRVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2959, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10431)
inline void femap::Imodel::PutPref_ElemQualHexEPLRVal ( double _val ) {
    _com_dispatch_propput(this, 0x2959, VT_R8, _val);
}

#pragma implementation_key(10432)
inline double femap::Imodel::GetPref_ElemQualHexDetJVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x295a, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10433)
inline void femap::Imodel::PutPref_ElemQualHexDetJVal ( double _val ) {
    _com_dispatch_propput(this, 0x295a, VT_R8, _val);
}

#pragma implementation_key(10434)
inline double femap::Imodel::GetPref_ElemQualHexWarpVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x295b, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10435)
inline void femap::Imodel::PutPref_ElemQualHexWarpVal ( double _val ) {
    _com_dispatch_propput(this, 0x295b, VT_R8, _val);
}

#pragma implementation_key(10436)
inline double femap::Imodel::GetPref_ElemQualPenAspectRatioVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x295c, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10437)
inline void femap::Imodel::PutPref_ElemQualPenAspectRatioVal ( double _val ) {
    _com_dispatch_propput(this, 0x295c, VT_R8, _val);
}

#pragma implementation_key(10438)
inline double femap::Imodel::GetPref_ElemQualPenEPLRVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x295d, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10439)
inline void femap::Imodel::PutPref_ElemQualPenEPLRVal ( double _val ) {
    _com_dispatch_propput(this, 0x295d, VT_R8, _val);
}

#pragma implementation_key(10440)
inline double femap::Imodel::GetPref_ElemQualPenDetJVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x295e, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10441)
inline void femap::Imodel::PutPref_ElemQualPenDetJVal ( double _val ) {
    _com_dispatch_propput(this, 0x295e, VT_R8, _val);
}

#pragma implementation_key(10442)
inline double femap::Imodel::GetPref_ElemQualPenWarpVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x295f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10443)
inline void femap::Imodel::PutPref_ElemQualPenWarpVal ( double _val ) {
    _com_dispatch_propput(this, 0x295f, VT_R8, _val);
}

#pragma implementation_key(10444)
inline double femap::Imodel::GetPref_ElemQualPyrAspectRatioVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2960, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10445)
inline void femap::Imodel::PutPref_ElemQualPyrAspectRatioVal ( double _val ) {
    _com_dispatch_propput(this, 0x2960, VT_R8, _val);
}

#pragma implementation_key(10446)
inline double femap::Imodel::GetPref_ElemQualPyrEPLRVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2961, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10447)
inline void femap::Imodel::PutPref_ElemQualPyrEPLRVal ( double _val ) {
    _com_dispatch_propput(this, 0x2961, VT_R8, _val);
}

#pragma implementation_key(10448)
inline double femap::Imodel::GetPref_ElemQualPyrWarpVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2962, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10449)
inline void femap::Imodel::PutPref_ElemQualPyrWarpVal ( double _val ) {
    _com_dispatch_propput(this, 0x2962, VT_R8, _val);
}

#pragma implementation_key(10450)
inline double femap::Imodel::GetPref_ElemQualPyrDetJVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2963, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10451)
inline void femap::Imodel::PutPref_ElemQualPyrDetJVal ( double _val ) {
    _com_dispatch_propput(this, 0x2963, VT_R8, _val);
}

#pragma implementation_key(10452)
inline _bstr_t femap::Imodel::GetPref_UserToolsPath ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2964, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10453)
inline void femap::Imodel::PutPref_UserToolsPath ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2964, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10454)
inline VARIANT_BOOL femap::Imodel::GetPref_NonmanifoldBooleans ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2965, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10455)
inline void femap::Imodel::PutPref_NonmanifoldBooleans ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2965, VT_BOOL, _val);
}

#pragma implementation_key(10456)
inline VARIANT_BOOL femap::Imodel::GetPref_RepeatCreate ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2966, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10457)
inline void femap::Imodel::PutPref_RepeatCreate ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2966, VT_BOOL, _val);
}

#pragma implementation_key(10458)
inline VARIANT_BOOL femap::Imodel::GetPref_ZoomAroundCursor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2969, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10459)
inline void femap::Imodel::PutPref_ZoomAroundCursor ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2969, VT_BOOL, _val);
}

#pragma implementation_key(10460)
inline VARIANT_BOOL femap::Imodel::GetPref_UseSubcaseIdForOutput ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x296a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10461)
inline void femap::Imodel::PutPref_UseSubcaseIdForOutput ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x296a, VT_BOOL, _val);
}

#pragma implementation_key(10462)
inline VARIANT_BOOL femap::Imodel::GetPref_AutoConvertOdb ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x296b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10463)
inline void femap::Imodel::PutPref_AutoConvertOdb ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x296b, VT_BOOL, _val);
}

#pragma implementation_key(10464)
inline VARIANT_BOOL femap::Imodel::GetPref_RenderFastPickVisible ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x296c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10465)
inline void femap::Imodel::PutPref_RenderFastPickVisible ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x296c, VT_BOOL, _val);
}

#pragma implementation_key(10466)
inline _variant_t femap::Imodel::GetvPref_FBDefContributions ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x296e, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10467)
inline void femap::Imodel::PutvPref_FBDefContributions ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x296e, VT_VARIANT, &_val);
}

#pragma implementation_key(10468)
inline enum femap::zFbdDisplayMode femap::Imodel::GetPref_FBDefDispMode ( ) {
    enum zFbdDisplayMode _result;
    _com_dispatch_propget(this, 0x296f, VT_I4, (void*)&_result);
    return _result;
}

#pragma implementation_key(10469)
inline void femap::Imodel::PutPref_FBDefDispMode ( enum zFbdDisplayMode _val ) {
    _com_dispatch_propput(this, 0x296f, VT_I4, _val);
}

#pragma implementation_key(10470)
inline _variant_t femap::Imodel::GetvPref_FBDefNodalVectorMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2970, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10471)
inline void femap::Imodel::PutvPref_FBDefNodalVectorMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2970, VT_VARIANT, &_val);
}

#pragma implementation_key(10472)
inline _variant_t femap::Imodel::GetvPref_FBDefTotalVectorMode ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2971, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10473)
inline void femap::Imodel::PutvPref_FBDefTotalVectorMode ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2971, VT_VARIANT, &_val);
}

#pragma implementation_key(10474)
inline _variant_t femap::Imodel::GetvPref_FBDefComponents ( ) {
    VARIANT _result;
    _com_dispatch_propget(this, 0x2972, VT_VARIANT, (void*)&_result);
    return _variant_t(_result, false);
}

#pragma implementation_key(10475)
inline void femap::Imodel::PutvPref_FBDefComponents ( const _variant_t & _val ) {
    _com_dispatch_propput(this, 0x2972, VT_VARIANT, &_val);
}

#pragma implementation_key(10476)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualQuadAR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2973, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10477)
inline void femap::Imodel::PutPref_ElemQualQuadAR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2973, VT_BOOL, _val);
}

#pragma implementation_key(10478)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTriaAR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2974, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10479)
inline void femap::Imodel::PutPref_ElemQualTriaAR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2974, VT_BOOL, _val);
}

#pragma implementation_key(10480)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTriaEPLR ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2975, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10481)
inline void femap::Imodel::PutPref_ElemQualTriaEPLR ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2975, VT_BOOL, _val);
}

#pragma implementation_key(10482)
inline double femap::Imodel::GetPref_ElemQualQuadARVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2976, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10483)
inline void femap::Imodel::PutPref_ElemQualQuadARVal ( double _val ) {
    _com_dispatch_propput(this, 0x2976, VT_R8, _val);
}

#pragma implementation_key(10484)
inline double femap::Imodel::GetPref_ElemQualTriaARVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2977, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10485)
inline void femap::Imodel::PutPref_ElemQualTriaARVal ( double _val ) {
    _com_dispatch_propput(this, 0x2977, VT_R8, _val);
}

#pragma implementation_key(10486)
inline double femap::Imodel::GetPref_ElemQualTriaEPLRVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2978, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10487)
inline void femap::Imodel::PutPref_ElemQualTriaEPLRVal ( double _val ) {
    _com_dispatch_propput(this, 0x2978, VT_R8, _val);
}

#pragma implementation_key(10488)
inline VARIANT_BOOL femap::Imodel::GetPref_ResetNextID ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2979, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10489)
inline void femap::Imodel::PutPref_ResetNextID ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2979, VT_BOOL, _val);
}

#pragma implementation_key(10490)
inline _bstr_t femap::Imodel::GetPref_SolNXNastProgram ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x297a, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10491)
inline void femap::Imodel::PutPref_SolNXNastProgram ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x297a, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10492)
inline _bstr_t femap::Imodel::GetPref_SolMSCNastProgram ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x297b, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10493)
inline void femap::Imodel::PutPref_SolMSCNastProgram ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x297b, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10494)
inline _bstr_t femap::Imodel::GetPref_SolNEINastProgram ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x297c, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10495)
inline void femap::Imodel::PutPref_SolNEINastProgram ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x297c, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10496)
inline _bstr_t femap::Imodel::GetPref_SolAnsysProgram ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x297d, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10497)
inline void femap::Imodel::PutPref_SolAnsysProgram ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x297d, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10498)
inline _bstr_t femap::Imodel::GetPref_SolAbaqusProgram ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x297e, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10499)
inline void femap::Imodel::PutPref_SolAbaqusProgram ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x297e, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10500)
inline _bstr_t femap::Imodel::GetPref_SolLSDynaProgram ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x297f, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10501)
inline void femap::Imodel::PutPref_SolLSDynaProgram ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x297f, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10502)
inline _bstr_t femap::Imodel::GetPref_SolNXNastCmd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2980, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10503)
inline void femap::Imodel::PutPref_SolNXNastCmd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2980, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10504)
inline _bstr_t femap::Imodel::GetPref_SolMSCNastCmd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2981, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10505)
inline void femap::Imodel::PutPref_SolMSCNastCmd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2981, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10506)
inline _bstr_t femap::Imodel::GetPref_SolNEINastCmd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2982, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10507)
inline void femap::Imodel::PutPref_SolNEINastCmd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2982, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10508)
inline _bstr_t femap::Imodel::GetPref_SolAnsysCmd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2983, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10509)
inline void femap::Imodel::PutPref_SolAnsysCmd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2983, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10510)
inline _bstr_t femap::Imodel::GetPref_SolAbaqusCmd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2984, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10511)
inline void femap::Imodel::PutPref_SolAbaqusCmd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2984, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10512)
inline _bstr_t femap::Imodel::GetPref_SolLSDynaCmd ( ) {
    BSTR _result = 0;
    _com_dispatch_propget(this, 0x2985, VT_BSTR, (void*)&_result);
    return _bstr_t(_result, false);
}

#pragma implementation_key(10513)
inline void femap::Imodel::PutPref_SolLSDynaCmd ( _bstr_t _val ) {
    _com_dispatch_propput(this, 0x2985, VT_BSTR, (BSTR)_val);
}

#pragma implementation_key(10514)
inline VARIANT_BOOL femap::Imodel::GetPref_SolEchoCmd ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2986, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10515)
inline void femap::Imodel::PutPref_SolEchoCmd ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2986, VT_BOOL, _val);
}

#pragma implementation_key(10516)
inline VARIANT_BOOL femap::Imodel::GetPref_NasResTrackRevsion ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2987, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10517)
inline void femap::Imodel::PutPref_NasResTrackRevsion ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2987, VT_BOOL, _val);
}

#pragma implementation_key(10518)
inline VARIANT_BOOL femap::Imodel::GetPref_RotateAroundCursor ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2988, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10519)
inline void femap::Imodel::PutPref_RotateAroundCursor ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2988, VT_BOOL, _val);
}

#pragma implementation_key(10520)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualTetEPIA ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x298b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10521)
inline void femap::Imodel::PutPref_ElemQualTetEPIA ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x298b, VT_BOOL, _val);
}

#pragma implementation_key(10522)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualHexEPIA ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x298c, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10523)
inline void femap::Imodel::PutPref_ElemQualHexEPIA ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x298c, VT_BOOL, _val);
}

#pragma implementation_key(10524)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPenEPIA ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x298d, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10525)
inline void femap::Imodel::PutPref_ElemQualPenEPIA ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x298d, VT_BOOL, _val);
}

#pragma implementation_key(10526)
inline VARIANT_BOOL femap::Imodel::GetPref_ElemQualPyrEPIA ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x298e, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10527)
inline void femap::Imodel::PutPref_ElemQualPyrEPIA ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x298e, VT_BOOL, _val);
}

#pragma implementation_key(10528)
inline double femap::Imodel::GetPref_ElemQualTetEPIAVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x298f, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10529)
inline void femap::Imodel::PutPref_ElemQualTetEPIAVal ( double _val ) {
    _com_dispatch_propput(this, 0x298f, VT_R8, _val);
}

#pragma implementation_key(10530)
inline double femap::Imodel::GetPref_ElemQualHexEPIAVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2990, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10531)
inline void femap::Imodel::PutPref_ElemQualHexEPIAVal ( double _val ) {
    _com_dispatch_propput(this, 0x2990, VT_R8, _val);
}

#pragma implementation_key(10532)
inline double femap::Imodel::GetPref_ElemQualPenEPIAVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2991, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10533)
inline void femap::Imodel::PutPref_ElemQualPenEPIAVal ( double _val ) {
    _com_dispatch_propput(this, 0x2991, VT_R8, _val);
}

#pragma implementation_key(10534)
inline double femap::Imodel::GetPref_ElemQualPyrEPIAVal ( ) {
    double _result = 0;
    _com_dispatch_propget(this, 0x2992, VT_R8, (void*)&_result);
    return _result;
}

#pragma implementation_key(10535)
inline void femap::Imodel::PutPref_ElemQualPyrEPIAVal ( double _val ) {
    _com_dispatch_propput(this, 0x2992, VT_R8, _val);
}

#pragma implementation_key(10536)
inline VARIANT_BOOL femap::Imodel::GetInfo_ViewShowAutoscale ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2997, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10537)
inline void femap::Imodel::PutInfo_ViewShowAutoscale ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2997, VT_BOOL, _val);
}

#pragma implementation_key(10538)
inline VARIANT_BOOL femap::Imodel::GetPref_ShowAutoscale ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2998, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10539)
inline void femap::Imodel::PutPref_ShowAutoscale ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2998, VT_BOOL, _val);
}

#pragma implementation_key(10540)
inline VARIANT_BOOL femap::Imodel::GetPref_SynchronizedRotation ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x2999, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10541)
inline void femap::Imodel::PutPref_SynchronizedRotation ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x2999, VT_BOOL, _val);
}

#pragma implementation_key(10542)
inline VARIANT_BOOL femap::Imodel::GetInfo_FreebodyReverse ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x299a, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10543)
inline void femap::Imodel::PutInfo_FreebodyReverse ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x299a, VT_BOOL, _val);
}

#pragma implementation_key(10544)
inline VARIANT_BOOL femap::Imodel::GetPref_DefaultFreebodyReverse ( ) {
    VARIANT_BOOL _result = 0;
    _com_dispatch_propget(this, 0x299b, VT_BOOL, (void*)&_result);
    return _result;
}

#pragma implementation_key(10545)
inline void femap::Imodel::PutPref_DefaultFreebodyReverse ( VARIANT_BOOL _val ) {
    _com_dispatch_propput(this, 0x299b, VT_BOOL, _val);
}
